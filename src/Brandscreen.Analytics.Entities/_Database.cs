

// This file was automatically generated.
// Do not make changes directly to this file - edit the template instead.
// 
// The following connection settings were used to generate this file
// 
//     Configuration file:     "src\Brandscreen.Analytics.Entities\App.config"
//     Connection String Name: "BrandscreenAnalyticsContext"
//     Connection String:      "Data Source=.;Initial Catalog=Brandscreen_Analytics;Integrated Security=True;MultipleActiveResultSets=True"

// Database Edition: Developer Edition (64-bit)
// Database Engine Edition: Enterprise

// ReSharper disable RedundantUsingDirective
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable InconsistentNaming
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable RedundantNameQualifier
// TargetFrameworkVersion = 4.6
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning

using System;
using Repository.Pattern.Ef6;
using System.CodeDom.Compiler;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Data.Entity.Infrastructure;
using System.Linq.Expressions;
using System.ComponentModel.DataAnnotations.Schema;
using System.Data.Entity;
using System.Data;
using System.Data.SqlClient;
using System.Data.SqlTypes;
using System.Data.Entity.ModelConfiguration;
using System.Threading;
//using DatabaseGeneratedOption = System.ComponentModel.DataAnnotations.DatabaseGeneratedOption;

namespace Brandscreen.Analytics.Entities
{
    // ************************************************************************
    // Unit of work
    public interface IBrandscreenAnalyticsContext : IDisposable
    {
        DbSet<ActiveCpcAndCpaAdGroupsLookup> ActiveCpcAndCpaAdGroupsLookups { get; set; } // ActiveCPCAndCPAAdGroupsLookup
        DbSet<AdAnalyticsReportId> AdAnalyticsReportIds { get; set; } // AdAnalyticsReportID
        DbSet<AdDirectBuy> AdDirectBuys { get; set; } // AdDirectBuy
        DbSet<AdDirectBuyAnalyticsReportId> AdDirectBuyAnalyticsReportIds { get; set; } // AdDirectBuyAnalyticsReportID
        DbSet<AdDirectBuyCombined> AdDirectBuyCombineds { get; set; } // AdDirectBuyCombined
        DbSet<AdDirectBuyImport> AdDirectBuyImports { get; set; } // AdDirectBuyImport
        DbSet<AdDirectBuyImportReportId> AdDirectBuyImportReportIds { get; set; } // AdDirectBuyImportReportID
        DbSet<AdDirectBuyReportId> AdDirectBuyReportIds { get; set; } // AdDirectBuyReportID
        DbSet<AdGroupAbsRegionTargetingReportId> AdGroupAbsRegionTargetingReportIds { get; set; } // AdGroupAbsRegionTargetingReportID
        DbSet<AdGroupAnalyticsFilterData> AdGroupAnalyticsFilterDatas { get; set; } // AdGroupAnalytics_FilterData
        DbSet<AdGroupAnalyticsGeoCityLookup> AdGroupAnalyticsGeoCityLookups { get; set; } // AdGroupAnalytics_GeoCityLookup
        DbSet<AdGroupAnalyticsGeoCountryLookup> AdGroupAnalyticsGeoCountryLookups { get; set; } // AdGroupAnalytics_GeoCountryLookup
        DbSet<AdGroupAnalyticsGeoRegionLookup> AdGroupAnalyticsGeoRegionLookups { get; set; } // AdGroupAnalytics_GeoRegionLookup
        DbSet<AdGroupAnalyticsOptimizationModel> AdGroupAnalyticsOptimizationModels { get; set; } // AdGroupAnalytics_OptimizationModel
        DbSet<AdGroupAnalyticsPartnerLookup> AdGroupAnalyticsPartnerLookups { get; set; } // AdGroupAnalytics_PartnerLookup
        DbSet<AdGroupAnalyticsVerticalOneLookup> AdGroupAnalyticsVerticalOneLookups { get; set; } // AdGroupAnalytics_VerticalOneLookup
        DbSet<AdGroupAnalyticsVerticalThreeLookup> AdGroupAnalyticsVerticalThreeLookups { get; set; } // AdGroupAnalytics_VerticalThreeLookup
        DbSet<AdGroupAnalyticsVerticalTwoLookup> AdGroupAnalyticsVerticalTwoLookups { get; set; } // AdGroupAnalytics_VerticalTwoLookup
        DbSet<AdGroupBiLookup> AdGroupBiLookups { get; set; } // AdGroupBILookup
        DbSet<AdGroupCityTargetingReportId> AdGroupCityTargetingReportIds { get; set; } // AdGroupCityTargetingReportID
        DbSet<AdGroupConversionSegmentLookup> AdGroupConversionSegmentLookups { get; set; } // AdGroupConversionSegmentLookup
        DbSet<AdGroupCountryTargetingReportId> AdGroupCountryTargetingReportIds { get; set; } // AdGroupCountryTargetingReportID
        DbSet<AdGroupDayPart> AdGroupDayParts { get; set; } // AdGroupDayPart
        DbSet<AdGroupDayPartAnalyticsReportId> AdGroupDayPartAnalyticsReportIds { get; set; } // AdGroupDayPartAnalyticsReportID
        DbSet<AdGroupDayPartCombined> AdGroupDayPartCombineds { get; set; } // AdGroupDayPartCombined
        DbSet<AdGroupDayPartException> AdGroupDayPartExceptions { get; set; } // AdGroupDayPartException
        DbSet<AdGroupDayPartImport> AdGroupDayPartImports { get; set; } // AdGroupDayPartImport
        DbSet<AdGroupDayPartImportReportId> AdGroupDayPartImportReportIds { get; set; } // AdGroupDayPartImportReportID
        DbSet<AdGroupDayPartReportId> AdGroupDayPartReportIds { get; set; } // AdGroupDayPartReportID
        DbSet<AdGroupDayPartTargetingReportId> AdGroupDayPartTargetingReportIds { get; set; } // AdGroupDayPartTargetingReportID
        DbSet<AdGroupDeal> AdGroupDeals { get; set; } // AdGroupDeal
        DbSet<AdGroupDealAnalyticsReportId> AdGroupDealAnalyticsReportIds { get; set; } // AdGroupDealAnalyticsReportID
        DbSet<AdGroupDealCombined> AdGroupDealCombineds { get; set; } // AdGroupDealCombined
        DbSet<AdGroupDealDomain> AdGroupDealDomains { get; set; } // AdGroupDealDomain
        DbSet<AdGroupDealDomainImport> AdGroupDealDomainImports { get; set; } // AdGroupDealDomainImport
        DbSet<AdGroupDealDomainNew> AdGroupDealDomainNews { get; set; } // AdGroupDealDomainNew
        DbSet<AdGroupDealException> AdGroupDealExceptions { get; set; } // AdGroupDealException
        DbSet<AdGroupDealImport> AdGroupDealImports { get; set; } // AdGroupDealImport
        DbSet<AdGroupDealImportReportId> AdGroupDealImportReportIds { get; set; } // AdGroupDealImportReportID
        DbSet<AdGroupDealReportId> AdGroupDealReportIds { get; set; } // AdGroupDealReportID
        DbSet<AdGroupDealSite> AdGroupDealSites { get; set; } // AdGroupDealSite
        DbSet<AdGroupDealSiteImport> AdGroupDealSiteImports { get; set; } // AdGroupDealSiteImport
        DbSet<AdGroupDealSiteInventoryOnly> AdGroupDealSiteInventoryOnlies { get; set; } // AdGroupDealSiteInventoryOnly
        DbSet<AdGroupDealSiteNew> AdGroupDealSiteNews { get; set; } // AdGroupDealSiteNew
        DbSet<AdGroupDealSitePerformanceAndTargetingOnly> AdGroupDealSitePerformanceAndTargetingOnlies { get; set; } // AdGroupDealSitePerformanceAndTargetingOnly
        DbSet<AdGroupDealTargetingReportId> AdGroupDealTargetingReportIds { get; set; } // AdGroupDealTargetingReportID
        DbSet<AdGroupDevice> AdGroupDevices { get; set; } // AdGroupDevice
        DbSet<AdGroupDeviceAnalyticsReportId> AdGroupDeviceAnalyticsReportIds { get; set; } // AdGroupDeviceAnalyticsReportID
        DbSet<AdGroupDeviceCombined> AdGroupDeviceCombineds { get; set; } // AdGroupDeviceCombined
        DbSet<AdGroupDeviceException> AdGroupDeviceExceptions { get; set; } // AdGroupDeviceException
        DbSet<AdGroupDeviceImport> AdGroupDeviceImports { get; set; } // AdGroupDeviceImport
        DbSet<AdGroupDeviceImportReportId> AdGroupDeviceImportReportIds { get; set; } // AdGroupDeviceImportReportID
        DbSet<AdGroupDeviceReportId> AdGroupDeviceReportIds { get; set; } // AdGroupDeviceReportID
        DbSet<AdGroupDeviceTargetingReportId> AdGroupDeviceTargetingReportIds { get; set; } // AdGroupDeviceTargetingReportID
        DbSet<AdGroupDomain> AdGroupDomains { get; set; } // AdGroupDomain
        DbSet<AdGroupDomainAnalytic> AdGroupDomainAnalytics { get; set; } // AdGroupDomainAnalytics
        DbSet<AdGroupDomainCombined> AdGroupDomainCombineds { get; set; } // AdGroupDomainCombined
        DbSet<AdGroupDomainDaily> AdGroupDomainDailies { get; set; } // AdGroupDomainDaily
        DbSet<AdGroupDomainDailyAlternate> AdGroupDomainDailyAlternates { get; set; } // AdGroupDomainDailyAlternate
        DbSet<AdGroupDomainException> AdGroupDomainExceptions { get; set; } // AdGroupDomainException
        DbSet<AdGroupDomainImport> AdGroupDomainImports { get; set; } // AdGroupDomainImport
        DbSet<AdGroupDomainNew> AdGroupDomainNews { get; set; } // AdGroupDomainNew
        DbSet<AdGroupDomainNewAlternate> AdGroupDomainNewAlternates { get; set; } // AdGroupDomainNewAlternate
        DbSet<AdGroupDomainNewToDailyRollupBuffer> AdGroupDomainNewToDailyRollupBuffers { get; set; } // AdGroupDomainNewToDaily_RollupBuffer
        DbSet<AdGroupDomainPerformanceOnly> AdGroupDomainPerformanceOnlies { get; set; } // AdGroupDomainPerformanceOnly
        DbSet<AdGroupDoohGeoLocationGroupTargetingReportId> AdGroupDoohGeoLocationGroupTargetingReportIds { get; set; } // AdGroupDoohGeoLocationGroupTargetingReportID
        DbSet<AdGroupDoohPanelLocation> AdGroupDoohPanelLocations { get; set; } // AdGroupDoohPanelLocation
        DbSet<AdGroupGeoLocation> AdGroupGeoLocations { get; set; } // AdGroupGeoLocation
        DbSet<AdGroupGeoLocationAnalyticsReportId> AdGroupGeoLocationAnalyticsReportIds { get; set; } // AdGroupGeoLocationAnalyticsReportID
        DbSet<AdGroupGeoLocationCombined> AdGroupGeoLocationCombineds { get; set; } // AdGroupGeoLocationCombined
        DbSet<AdGroupGeoLocationException> AdGroupGeoLocationExceptions { get; set; } // AdGroupGeoLocationException
        DbSet<AdGroupGeoLocationImport> AdGroupGeoLocationImports { get; set; } // AdGroupGeoLocationImport
        DbSet<AdGroupGeoLocationImportReportId> AdGroupGeoLocationImportReportIds { get; set; } // AdGroupGeoLocationImportReportID
        DbSet<AdGroupGeoLocationPointRadiu> AdGroupGeoLocationPointRadius { get; set; } // AdGroupGeoLocationPointRadius
        DbSet<AdGroupGeoLocationPointRadiusCombined> AdGroupGeoLocationPointRadiusCombineds { get; set; } // AdGroupGeoLocationPointRadiusCombined
        DbSet<AdGroupGeoLocationPointRadiusException> AdGroupGeoLocationPointRadiusExceptions { get; set; } // AdGroupGeoLocationPointRadiusException
        DbSet<AdGroupGeoLocationPointRadiusImport> AdGroupGeoLocationPointRadiusImports { get; set; } // AdGroupGeoLocationPointRadiusImport
        DbSet<AdGroupGeoLocationPointRadiusImportReportId> AdGroupGeoLocationPointRadiusImportReportIds { get; set; } // AdGroupGeoLocationPointRadiusImportReportID
        DbSet<AdGroupGeoLocationPointRadiusReportId> AdGroupGeoLocationPointRadiusReportIds { get; set; } // AdGroupGeoLocationPointRadiusReportID
        DbSet<AdGroupGeoLocationReportId> AdGroupGeoLocationReportIds { get; set; } // AdGroupGeoLocationReportID
        DbSet<AdGroupGeoPostcode> AdGroupGeoPostcodes { get; set; } // AdGroupGeoPostcode
        DbSet<AdGroupGeoPostcodeAnalyticsReportId> AdGroupGeoPostcodeAnalyticsReportIds { get; set; } // AdGroupGeoPostcodeAnalyticsReportID
        DbSet<AdGroupGeoPostcodeCombined> AdGroupGeoPostcodeCombineds { get; set; } // AdGroupGeoPostcodeCombined
        DbSet<AdGroupGeoPostcodeException> AdGroupGeoPostcodeExceptions { get; set; } // AdGroupGeoPostcodeException
        DbSet<AdGroupGeoPostcodeImport> AdGroupGeoPostcodeImports { get; set; } // AdGroupGeoPostcodeImport
        DbSet<AdGroupGeoPostcodeImportReportId> AdGroupGeoPostcodeImportReportIds { get; set; } // AdGroupGeoPostcodeImportReportID
        DbSet<AdGroupGeoPostcodeReportId> AdGroupGeoPostcodeReportIds { get; set; } // AdGroupGeoPostcodeReportID
        DbSet<AdGroupGeoPostcodeTargetingReportId> AdGroupGeoPostcodeTargetingReportIds { get; set; } // AdGroupGeoPostcodeTargetingReportID
        DbSet<AdGroupIabVerticalImportReportId> AdGroupIabVerticalImportReportIds { get; set; } // AdGroupIABVerticalImportReportID
        DbSet<AdGroupLanguage> AdGroupLanguages { get; set; } // AdGroupLanguage
        DbSet<AdGroupLanguageAnalyticsReportId> AdGroupLanguageAnalyticsReportIds { get; set; } // AdGroupLanguageAnalyticsReportID
        DbSet<AdGroupLanguageCombined> AdGroupLanguageCombineds { get; set; } // AdGroupLanguageCombined
        DbSet<AdGroupLanguageException> AdGroupLanguageExceptions { get; set; } // AdGroupLanguageException
        DbSet<AdGroupLanguageImport> AdGroupLanguageImports { get; set; } // AdGroupLanguageImport
        DbSet<AdGroupLanguageImportReportId> AdGroupLanguageImportReportIds { get; set; } // AdGroupLanguageImportReportID
        DbSet<AdGroupLanguageReportId> AdGroupLanguageReportIds { get; set; } // AdGroupLanguageReportID
        DbSet<AdGroupLanguageTargetingReportId> AdGroupLanguageTargetingReportIds { get; set; } // AdGroupLanguageTargetingReportID
        DbSet<AdGroupLookup> AdGroupLookups { get; set; } // AdGroupLookup
        DbSet<AdGroupMobileCarrier> AdGroupMobileCarriers { get; set; } // AdGroupMobileCarrier
        DbSet<AdGroupMobileCarrierAnalyticsReportId> AdGroupMobileCarrierAnalyticsReportIds { get; set; } // AdGroupMobileCarrierAnalyticsReportID
        DbSet<AdGroupMobileCarrierCombined> AdGroupMobileCarrierCombineds { get; set; } // AdGroupMobileCarrierCombined
        DbSet<AdGroupMobileCarrierException> AdGroupMobileCarrierExceptions { get; set; } // AdGroupMobileCarrierException
        DbSet<AdGroupMobileCarrierImport> AdGroupMobileCarrierImports { get; set; } // AdGroupMobileCarrierImport
        DbSet<AdGroupMobileCarrierImportReportId> AdGroupMobileCarrierImportReportIds { get; set; } // AdGroupMobileCarrierImportReportID
        DbSet<AdGroupMobileCarrierReportId> AdGroupMobileCarrierReportIds { get; set; } // AdGroupMobileCarrierReportID
        DbSet<AdGroupMobileCarrierTargetingReportId> AdGroupMobileCarrierTargetingReportIds { get; set; } // AdGroupMobileCarrierTargetingReportID
        DbSet<AdGroupPagePosition> AdGroupPagePositions { get; set; } // AdGroupPagePosition
        DbSet<AdGroupPagePositionAnalyticsReportId> AdGroupPagePositionAnalyticsReportIds { get; set; } // AdGroupPagePositionAnalyticsReportID
        DbSet<AdGroupPagePositionCombined> AdGroupPagePositionCombineds { get; set; } // AdGroupPagePositionCombined
        DbSet<AdGroupPagePositionException> AdGroupPagePositionExceptions { get; set; } // AdGroupPagePositionException
        DbSet<AdGroupPagePositionImport> AdGroupPagePositionImports { get; set; } // AdGroupPagePositionImport
        DbSet<AdGroupPagePositionImportReportId> AdGroupPagePositionImportReportIds { get; set; } // AdGroupPagePositionImportReportID
        DbSet<AdGroupPagePositionReportId> AdGroupPagePositionReportIds { get; set; } // AdGroupPagePositionReportID
        DbSet<AdGroupPagePositionTargetingReportId> AdGroupPagePositionTargetingReportIds { get; set; } // AdGroupPagePositionTargetingReportID
        DbSet<AdGroupPublisher> AdGroupPublishers { get; set; } // AdGroupPublisher
        DbSet<AdGroupPublisherAnalyticsReportId> AdGroupPublisherAnalyticsReportIds { get; set; } // AdGroupPublisherAnalyticsReportID
        DbSet<AdGroupPublisherCombined> AdGroupPublisherCombineds { get; set; } // AdGroupPublisherCombined
        DbSet<AdGroupPublisherException> AdGroupPublisherExceptions { get; set; } // AdGroupPublisherException
        DbSet<AdGroupPublisherImport> AdGroupPublisherImports { get; set; } // AdGroupPublisherImport
        DbSet<AdGroupPublisherImportReportId> AdGroupPublisherImportReportIds { get; set; } // AdGroupPublisherImportReportID
        DbSet<AdGroupPublisherReportId> AdGroupPublisherReportIds { get; set; } // AdGroupPublisherReportID
        DbSet<AdGroupPublisherTargetingReportId> AdGroupPublisherTargetingReportIds { get; set; } // AdGroupPublisherTargetingReportID
        DbSet<AdGroupRegionTargetingReportId> AdGroupRegionTargetingReportIds { get; set; } // AdGroupRegionTargetingReportID
        DbSet<AdGroupSegment> AdGroupSegments { get; set; } // AdGroupSegment
        DbSet<AdGroupSegmentAnalytic> AdGroupSegmentAnalytics { get; set; } // AdGroupSegmentAnalytics
        DbSet<AdGroupSegmentException> AdGroupSegmentExceptions { get; set; } // AdGroupSegmentException
        DbSet<AdGroupSegmentImport> AdGroupSegmentImports { get; set; } // AdGroupSegmentImport
        DbSet<AdGroupSegmentTargeting> AdGroupSegmentTargetings { get; set; } // AdGroupSegmentTargeting
        DbSet<AdGroupVertical> AdGroupVerticals { get; set; } // AdGroupVertical
        DbSet<AdGroupVertical1IabMappedTargetingReportId> AdGroupVertical1IabMappedTargetingReportId { get; set; } // AdGroupVertical1IABMappedTargetingReportID
        DbSet<AdGroupVertical1TargetingReportId> AdGroupVertical1TargetingReportId { get; set; } // AdGroupVertical1TargetingReportID
        DbSet<AdGroupVertical2IabMappedTargetingReportId> AdGroupVertical2IabMappedTargetingReportId { get; set; } // AdGroupVertical2IABMappedTargetingReportID
        DbSet<AdGroupVertical2TargetingReportId> AdGroupVertical2TargetingReportId { get; set; } // AdGroupVertical2TargetingReportID
        DbSet<AdGroupVertical3TargetingReportId> AdGroupVertical3TargetingReportId { get; set; } // AdGroupVertical3TargetingReportID
        DbSet<AdGroupVerticalAnalyticsReportId> AdGroupVerticalAnalyticsReportIds { get; set; } // AdGroupVerticalAnalyticsReportID
        DbSet<AdGroupVerticalCombined> AdGroupVerticalCombineds { get; set; } // AdGroupVerticalCombined
        DbSet<AdGroupVerticalException> AdGroupVerticalExceptions { get; set; } // AdGroupVerticalException
        DbSet<AdGroupVerticalIabMappedAnalyticsReportId> AdGroupVerticalIabMappedAnalyticsReportIds { get; set; } // AdGroupVerticalIABMappedAnalyticsReportID
        DbSet<AdGroupVerticalIabMappedCombined> AdGroupVerticalIabMappedCombineds { get; set; } // AdGroupVerticalIABMappedCombined
        DbSet<AdGroupVerticalImport> AdGroupVerticalImports { get; set; } // AdGroupVerticalImport
        DbSet<AdGroupVerticalImportReportId> AdGroupVerticalImportReportIds { get; set; } // AdGroupVerticalImportReportID
        DbSet<AdGroupVerticalReportId> AdGroupVerticalReportIds { get; set; } // AdGroupVerticalReportID
        DbSet<AdGroupVideoActivity> AdGroupVideoActivities { get; set; } // AdGroupVideoActivity
        DbSet<AdGroupVideoActivityCombined> AdGroupVideoActivityCombineds { get; set; } // AdGroupVideoActivityCombined
        DbSet<AdGroupVideoActivityException> AdGroupVideoActivityExceptions { get; set; } // AdGroupVideoActivityException
        DbSet<AdGroupVideoActivityExceptionReportId> AdGroupVideoActivityExceptionReportIds { get; set; } // AdGroupVideoActivityExceptionReportID
        DbSet<AdGroupVideoActivityImport> AdGroupVideoActivityImports { get; set; } // AdGroupVideoActivityImport
        DbSet<AdGroupVideoActivityImportReportId> AdGroupVideoActivityImportReportIds { get; set; } // AdGroupVideoActivityImportReportID
        DbSet<AdGroupVideoActivityReportId> AdGroupVideoActivityReportIds { get; set; } // AdGroupVideoActivityReportID
        DbSet<AdGroupWebsite> AdGroupWebsites { get; set; } // AdGroupWebsite
        DbSet<AdGroupWebsiteAnalytic> AdGroupWebsiteAnalytics { get; set; } // AdGroupWebsiteAnalytics
        DbSet<AdGroupWebsiteException> AdGroupWebsiteExceptions { get; set; } // AdGroupWebsiteException
        DbSet<AdGroupWebsiteImport> AdGroupWebsiteImports { get; set; } // AdGroupWebsiteImport
        DbSet<AdGroupWebsiteInventoryOnly> AdGroupWebsiteInventoryOnlies { get; set; } // AdGroupWebsiteInventoryOnly
        DbSet<AdGroupWebsiteNew> AdGroupWebsiteNews { get; set; } // AdGroupWebsiteNew
        DbSet<AdGroupWebsitePerformanceAndTargetingOnly> AdGroupWebsitePerformanceAndTargetingOnlies { get; set; } // AdGroupWebsitePerformanceAndTargetingOnly
        DbSet<AdGroupWebsiteTargeting> AdGroupWebsiteTargetings { get; set; } // AdGroupWebsiteTargeting
        DbSet<AdLookup> AdLookups { get; set; } // AdLookup
        DbSet<AdPartner> AdPartners { get; set; } // AdPartner
        DbSet<AdPartnerCombined> AdPartnerCombineds { get; set; } // AdPartnerCombined
        DbSet<AdPartnerCombinedValidOnly> AdPartnerCombinedValidOnlies { get; set; } // AdPartnerCombinedValidOnly
        DbSet<AdPartnerException> AdPartnerExceptions { get; set; } // AdPartnerException
        DbSet<AdPartnerExceptionReportId> AdPartnerExceptionReportIds { get; set; } // AdPartnerExceptionReportID
        DbSet<AdPartnerImport> AdPartnerImports { get; set; } // AdPartnerImport
        DbSet<AdPartnerImportReportId> AdPartnerImportReportIds { get; set; } // AdPartnerImportReportID
        DbSet<AdPartnerPerformance> AdPartnerPerformances { get; set; } // AdPartnerPerformance
        DbSet<AdPartnerReconciliation> AdPartnerReconciliations { get; set; } // AdPartnerReconciliation
        DbSet<AdPartnerReportId> AdPartnerReportIds { get; set; } // AdPartnerReportID
        DbSet<AdSlotLookup> AdSlotLookups { get; set; } // AdSlotLookup
        DbSet<AdvertiserBiLookup> AdvertiserBiLookups { get; set; } // AdvertiserBILookup
        DbSet<AdvertiserProductBiLookup> AdvertiserProductBiLookups { get; set; } // AdvertiserProductBILookup
        DbSet<BrandSafetyLookup> BrandSafetyLookups { get; set; } // BrandSafetyLookup
        DbSet<BrandSafetySiteCount> BrandSafetySiteCounts { get; set; } // BrandSafetySiteCounts
        DbSet<BuyerAccountBiLookup> BuyerAccountBiLookups { get; set; } // BuyerAccountBILookup
        DbSet<BuyerAccountCreditLimitLookup> BuyerAccountCreditLimitLookups { get; set; } // BuyerAccountCreditLimitLookup
        DbSet<BuyerAccountLookup> BuyerAccountLookups { get; set; } // BuyerAccountLookup
        DbSet<BuyerAccountRecentAdGroupLookup> BuyerAccountRecentAdGroupLookups { get; set; } // BuyerAccountRecentAdGroupLookup
        DbSet<BuyerAccountShardLookup> BuyerAccountShardLookups { get; set; } // BuyerAccountShardLookup
        DbSet<CampaignBiLookup> CampaignBiLookups { get; set; } // CampaignBILookup
        DbSet<CampaignLookup> CampaignLookups { get; set; } // CampaignLookup
        DbSet<Conversion> Conversions { get; set; } // Conversion
        DbSet<ConversionCombined> ConversionCombineds { get; set; } // ConversionCombined
        DbSet<ConversionException> ConversionExceptions { get; set; } // ConversionException
        DbSet<ConversionExceptionReportId> ConversionExceptionReportIds { get; set; } // ConversionExceptionReportID
        DbSet<ConversionImport> ConversionImports { get; set; } // ConversionImport
        DbSet<ConversionImportReportId> ConversionImportReportIds { get; set; } // ConversionImportReportID
        DbSet<ConversionReportId> ConversionReportIds { get; set; } // ConversionReportID
        DbSet<CountrySalesRegionLookup> CountrySalesRegionLookups { get; set; } // CountrySalesRegionLookup
        DbSet<CreativeBiLookup> CreativeBiLookups { get; set; } // CreativeBILookup
        DbSet<DateLookup> DateLookups { get; set; } // DateLookup
        DbSet<DealBiLookup> DealBiLookups { get; set; } // DealBILookup
        DbSet<DirectBuyDefaultImpression> DirectBuyDefaultImpressions { get; set; } // DirectBuyDefaultImpression
        DbSet<DirectBuyDefaultImpressionImport> DirectBuyDefaultImpressionImports { get; set; } // DirectBuyDefaultImpressionImport
        DbSet<DirectBuyDefaultImpressionImportReportId> DirectBuyDefaultImpressionImportReportIds { get; set; } // DirectBuyDefaultImpressionImportReportID
        DbSet<DirectBuyDefaultImpressionReportId> DirectBuyDefaultImpressionReportIds { get; set; } // DirectBuyDefaultImpressionReportID
        DbSet<DomainStat> DomainStats { get; set; } // DomainStats
        DbSet<DomainStatsAlternate> DomainStatsAlternates { get; set; } // DomainStats_Alternate
        DbSet<DomainStatsImport> DomainStatsImports { get; set; } // DomainStats_Import
        DbSet<ExchangeSpendSummaryLookup> ExchangeSpendSummaryLookups { get; set; } // ExchangeSpendSummaryLookup
        DbSet<GeoCityLookup> GeoCityLookups { get; set; } // GeoCityLookup
        DbSet<GeoCountryLookup> GeoCountryLookups { get; set; } // GeoCountryLookup
        DbSet<GeoMetroLookup> GeoMetroLookups { get; set; } // GeoMetroLookup
        DbSet<GeoRegionLookup> GeoRegionLookups { get; set; } // GeoRegionLookup
        DbSet<ImportSummary> ImportSummaries { get; set; } // ImportSummary
        DbSet<ImportSummaryReportId> ImportSummaryReportIds { get; set; } // ImportSummaryReportID
        DbSet<InventoryLookup> InventoryLookups { get; set; } // InventoryLookup
        DbSet<InventoryLookupException> InventoryLookupExceptions { get; set; } // InventoryLookupException
        DbSet<InventoryLookupImport> InventoryLookupImports { get; set; } // InventoryLookupImport
        DbSet<JobHistory> JobHistories { get; set; } // JobHistory
        DbSet<LanguageLookup> LanguageLookups { get; set; } // LanguageLookup
        DbSet<PacingAndPricingHealth> PacingAndPricingHealths { get; set; } // PacingAndPricingHealth
        DbSet<PartnerBiLookup> PartnerBiLookups { get; set; } // PartnerBILookup
        DbSet<PartnerLookup> PartnerLookups { get; set; } // PartnerLookup
        DbSet<PlacementBiLookup> PlacementBiLookups { get; set; } // PlacementBILookup
        DbSet<PublisherBiLookup> PublisherBiLookups { get; set; } // PublisherBILookup
        DbSet<PublisherLookup> PublisherLookups { get; set; } // PublisherLookup
        DbSet<SalesRegionLookup> SalesRegionLookups { get; set; } // SalesRegionLookup
        DbSet<SchemaMigration> SchemaMigrations { get; set; } // SchemaMigration
        DbSet<Segment> Segments { get; set; } // Segment
        DbSet<SegmentCombined> SegmentCombineds { get; set; } // SegmentCombined
        DbSet<SegmentExceptionReportId> SegmentExceptionReportIds { get; set; } // SegmentExceptionReportID
        DbSet<SegmentImport> SegmentImports { get; set; } // SegmentImport
        DbSet<SegmentImportReportId> SegmentImportReportIds { get; set; } // SegmentImportReportID
        DbSet<SegmentLookup> SegmentLookups { get; set; } // SegmentLookup
        DbSet<SegmentLookupNew> SegmentLookupNews { get; set; } // SegmentLookup_new
        DbSet<SegmentReportId> SegmentReportIds { get; set; } // SegmentReportID
        DbSet<ThirdPartyPlacementLookup> ThirdPartyPlacementLookups { get; set; } // ThirdPartyPlacementLookup
        DbSet<VideoCreativeAnalyticsReportId> VideoCreativeAnalyticsReportIds { get; set; } // VideoCreativeAnalyticsReportID
        DbSet<WebsiteLookup> WebsiteLookups { get; set; } // WebsiteLookup
        DbSet<WeeklyLocationBid> WeeklyLocationBids { get; set; } // WeeklyLocationBids
        DbSet<WeeklyLocationBidsAlternate> WeeklyLocationBidsAlternates { get; set; } // WeeklyLocationBidsAlternate
        DbSet<WhiteListForecast> WhiteListForecasts { get; set; } // WhiteListForecast

        int SaveChanges();
        System.Threading.Tasks.Task<int> SaveChangesAsync();
        System.Threading.Tasks.Task<int> SaveChangesAsync(CancellationToken cancellationToken);
        
        // Stored Procedures
        int CreateNewSegmentEntriesForDiscoveredThirdPartySegments();
        int GetAdGroupReportsByDay(int? adGroupId, DateTime? localStartDate, DateTime? localEndDate);
        int GetAdGroupReportsByHour(int? adGroupId, DateTime? localStartDate, DateTime? localEndDate);
        int GetAdGroupReportsForecast(int? campaignId, int? adGroupId, int? localTimeZoneId, int? goalType, int? pacingType, long? targetAmount);
        int GetAdGroupReportsTotal(int? adGroupId, DateTime? localStartDate);
        List<GetAnalyticsDataSegmentsTotalReturnModel> GetAnalyticsDataSegmentsTotal(string rtbSegmentId, out int procResult);
        int GetAnalyticsReportsTotal(int? adGroupId);
        int GetAnalyticsReportsTotalThisHour(int? adGroupId);
        int GetAnalyticsReportsTotalThisMonth(int? adGroupId);
        int GetAnalyticsReportsTotalThisWeek(int? adGroupId);
        int GetAnalyticsReportsTotalToday(int? adGroupId);
        List<GetAnalyticsSummaryTopLevelReturnModel> GetAnalyticsSummaryTopLevel(DateTime? localStartDate, DateTime? localEndDate, out int procResult);
        List<GetAnalyticsSummaryTopLevelByAdvertiserReturnModel> GetAnalyticsSummaryTopLevelByAdvertiser(int? buyerAccountId, int? advertiserId, DateTime? localStartDate, DateTime? localEndDate, out int procResult);
        int GetAnalyticsWebsite(int? websiteId);
        int GetAnalyticsWebsitesTotal(int? campaignId, int? adGroupId);
        List<GetConversionReportReturnModel> GetConversionReport(int? buyerAccountId, out int procResult);
        List<GetConversionReportReportIdReturnModel> GetConversionReportReportId(int? buyerAccountId, out int procResult);
        int GetDomainPerformance(int? adGroupId, int? pageSize, string orderby, string searchText);
        int GetDomainPerformanceTotals(int? adGroupId, int? costView, string searchText);
        int GetLastAdGroupWebsiteTimestamp(out DateTime? timestamp);
        int GetLastAdPartnerTimestamp(out DateTime? timestamp);
        int GetLastJobHistoryTimestamp(out DateTime? timestamp);
        int GetLastSegmentTimestamp(out DateTime? timestamp);
        List<GetLiveStrategiesReportReturnModel> GetLiveStrategiesReport(int? buyerAccountId, DateTime? utcNow, DateTime? localNow, out int procResult);
        List<GetPrivateMarketsPublishersTotalReturnModel> GetPrivateMarketsPublishersTotal(int? buyerAccountId, out int procResult);
        int ImportAnalyticsData(string tableName, string jobId, string filePath, string fieldTerminator);
        int PopulateAdGroupReportsForecast(int? placementId);
        List<PromoteAdGroupWebsiteReturnModel> PromoteAdGroupWebsite(DateTime? utcNow, out int procResult);
        int RefreshAdPerformanceData(int? buyerAccountId);
        List<RefreshDateIndexesReturnModel> RefreshDateIndexes(string indexNameBase, int? lookbackDays, string tableName, string dateColumn, DateTime? utcNow, out int procResult);
        int RefreshDealPerformanceData(int? buyerAccountId);
        int RefreshPrivateMarketPerformanceData(int? buyerAccountId);
        int RefreshSegmentPerformanceData(int? buyerAccountId);
        List<RefreshSystemSpendLimitReturnModel> RefreshSystemSpendLimit(int? lookbackDays, DateTime? todayUtc, out int procResult);
        List<RollAdAnalyticsReportsHourlyToDailyReportIdReturnModel> RollAdAnalyticsReportsHourlyToDailyReportId(int? rollupNumberOfDaysBefore, out int procResult);
        List<RollAdAnalyticsReportsReportIdReturnModel> RollAdAnalyticsReportsReportId( out int procResult);
        List<RollAdDirectBuyReportsReportIdReturnModel> RollAdDirectBuyReportsReportId( out int procResult);
        List<RollAdGroupAnalyticsReportsHourlyToDailyReportIdReturnModel> RollAdGroupAnalyticsReportsHourlyToDailyReportId(int? rollupNumberOfDaysBefore, string analyticsTableName, out int procResult);
        List<RollAdGroupAnalyticsReportsReportIdReturnModel> RollAdGroupAnalyticsReportsReportId( out int procResult);
        List<RollAdGroupDealReportsHourlyToDailyReportIdReturnModel> RollAdGroupDealReportsHourlyToDailyReportId(int? rollupNumberOfDaysBefore, out int procResult);
        List<RollAdGroupDealReportsReportIdReturnModel> RollAdGroupDealReportsReportId( out int procResult);
        int RollAdGroupDealSiteReports();
        List<RollAdGroupVideoActivityReportsReportIdReturnModel> RollAdGroupVideoActivityReportsReportId( out int procResult);
        int RollBrandSafetyCountryBids();
        List<RollConversionReportsReportIdReturnModel> RollConversionReportsReportId( out int procResult);
        List<RollDirectBuyDefaultImpressionReportsReportIdReturnModel> RollDirectBuyDefaultImpressionReportsReportId( out int procResult);
        int RollDomainAnalyticsReports();
        int RollDomainForecast();
        List<RollInventoryLookupReturnModel> RollInventoryLookup( out int procResult);
        List<RollReconciliationAnalyticsReportsReturnModel> RollReconciliationAnalyticsReports( out int procResult);
        List<RollSegmentAnalyticsReportsReportIdReturnModel> RollSegmentAnalyticsReportsReportId( out int procResult);
        int RollWebsiteAnalyticsReports();
        int RollWebsiteAnalyticsReportsReportId();
        int RollWeeklyLocationBids();
        List<RunBillingReturnModel> RunBilling(int? billingPeriodId, bool? reprocess, int? buyerAccountId, bool? dryRun, out int procResult);
        List<SafetyCheckHourlyIntegrityCheckReturnModel> SafetyCheckHourlyIntegrityCheck(DateTime? latestAdPartner, int? auditHours, out int procResult);
        List<SafetyCheckReportIdDailyDealIntegrityCheckReturnModel> SafetyCheckReportIdDailyDealIntegrityCheck(DateTime? latestAdPartner, int? auditDays, out int procResult);
        List<SafetyCheckReportIdDailyIntegrityCheckReturnModel> SafetyCheckReportIdDailyIntegrityCheck(DateTime? latestAdPartner, int? auditDays, out int procResult);
        List<SafetyCheckReportIdDirectBuyHourlyIntegrityCheckReturnModel> SafetyCheckReportIdDirectBuyHourlyIntegrityCheck(DateTime? latestAdPartner, int? auditHours, out int procResult);
        List<SafetyCheckReportIdDomainDailyIntegrityCheckReturnModel> SafetyCheckReportIdDomainDailyIntegrityCheck(DateTime? latestAdPartner, int? auditDays, out int procResult);
        List<SafetyCheckReportIdHourlyDirectBuyIntegrityCheckReturnModel> SafetyCheckReportIdHourlyDirectBuyIntegrityCheck(DateTime? latestAdPartner, int? auditHours, out int procResult);
        List<SafetyCheckReportIdHourlyIntegrityCheckReturnModel> SafetyCheckReportIdHourlyIntegrityCheck(DateTime? latestAdPartner, int? auditHours, out int procResult);
        List<SafetyCheckReportIdIntegrityCheckReturnModel> SafetyCheckReportIdIntegrityCheck(long? reportId, out int procResult);
        int SaveImportSummary(string tableName);
        int SaveImportSummaryReportId(string tableName);
        int SearchAnalyticsWebsites(int? adGroupId, int? pageNum, int? pageSize, string sortColumnName, int? sortDirection, string searchString, out int? totalRecords);
        int SearchWeeklyLocationBidsUrl(int? pageNum, int? pageSize, string searchString, int? geoCountryId, out int? totalRecords);
        int UpdateBrandSafetySiteCounts();
        int UpdatePacingAndPricingHealth();
        int UpdatePrivateMarketPerformance();
        int UpdatePrivateMarketSitePerformance();
        List<CheckImpressionAndSpendRatioForDealsReturnModel> CheckImpressionAndSpendRatioForDeals(DateTime? refDateTime, int? numHours, out int procResult);
        int RollupAdPartnerReportIdIntoAdPartner(string computer, string @operator, string source, Guid? sourceid, Guid? executionid, int? lookBackDays);
        int SpGetDomainStatsGrid(int? pageNumber, int? pageSize, string orderBy, string searchText, out int? totalRecords);
    }

    // ************************************************************************
    // Database context
    public partial class BrandscreenAnalyticsContext : DataContext, IBrandscreenAnalyticsContext
    {
        public DbSet<ActiveCpcAndCpaAdGroupsLookup> ActiveCpcAndCpaAdGroupsLookups { get; set; } // ActiveCPCAndCPAAdGroupsLookup
        public DbSet<AdAnalyticsReportId> AdAnalyticsReportIds { get; set; } // AdAnalyticsReportID
        public DbSet<AdDirectBuy> AdDirectBuys { get; set; } // AdDirectBuy
        public DbSet<AdDirectBuyAnalyticsReportId> AdDirectBuyAnalyticsReportIds { get; set; } // AdDirectBuyAnalyticsReportID
        public DbSet<AdDirectBuyCombined> AdDirectBuyCombineds { get; set; } // AdDirectBuyCombined
        public DbSet<AdDirectBuyImport> AdDirectBuyImports { get; set; } // AdDirectBuyImport
        public DbSet<AdDirectBuyImportReportId> AdDirectBuyImportReportIds { get; set; } // AdDirectBuyImportReportID
        public DbSet<AdDirectBuyReportId> AdDirectBuyReportIds { get; set; } // AdDirectBuyReportID
        public DbSet<AdGroupAbsRegionTargetingReportId> AdGroupAbsRegionTargetingReportIds { get; set; } // AdGroupAbsRegionTargetingReportID
        public DbSet<AdGroupAnalyticsFilterData> AdGroupAnalyticsFilterDatas { get; set; } // AdGroupAnalytics_FilterData
        public DbSet<AdGroupAnalyticsGeoCityLookup> AdGroupAnalyticsGeoCityLookups { get; set; } // AdGroupAnalytics_GeoCityLookup
        public DbSet<AdGroupAnalyticsGeoCountryLookup> AdGroupAnalyticsGeoCountryLookups { get; set; } // AdGroupAnalytics_GeoCountryLookup
        public DbSet<AdGroupAnalyticsGeoRegionLookup> AdGroupAnalyticsGeoRegionLookups { get; set; } // AdGroupAnalytics_GeoRegionLookup
        public DbSet<AdGroupAnalyticsOptimizationModel> AdGroupAnalyticsOptimizationModels { get; set; } // AdGroupAnalytics_OptimizationModel
        public DbSet<AdGroupAnalyticsPartnerLookup> AdGroupAnalyticsPartnerLookups { get; set; } // AdGroupAnalytics_PartnerLookup
        public DbSet<AdGroupAnalyticsVerticalOneLookup> AdGroupAnalyticsVerticalOneLookups { get; set; } // AdGroupAnalytics_VerticalOneLookup
        public DbSet<AdGroupAnalyticsVerticalThreeLookup> AdGroupAnalyticsVerticalThreeLookups { get; set; } // AdGroupAnalytics_VerticalThreeLookup
        public DbSet<AdGroupAnalyticsVerticalTwoLookup> AdGroupAnalyticsVerticalTwoLookups { get; set; } // AdGroupAnalytics_VerticalTwoLookup
        public DbSet<AdGroupBiLookup> AdGroupBiLookups { get; set; } // AdGroupBILookup
        public DbSet<AdGroupCityTargetingReportId> AdGroupCityTargetingReportIds { get; set; } // AdGroupCityTargetingReportID
        public DbSet<AdGroupConversionSegmentLookup> AdGroupConversionSegmentLookups { get; set; } // AdGroupConversionSegmentLookup
        public DbSet<AdGroupCountryTargetingReportId> AdGroupCountryTargetingReportIds { get; set; } // AdGroupCountryTargetingReportID
        public DbSet<AdGroupDayPart> AdGroupDayParts { get; set; } // AdGroupDayPart
        public DbSet<AdGroupDayPartAnalyticsReportId> AdGroupDayPartAnalyticsReportIds { get; set; } // AdGroupDayPartAnalyticsReportID
        public DbSet<AdGroupDayPartCombined> AdGroupDayPartCombineds { get; set; } // AdGroupDayPartCombined
        public DbSet<AdGroupDayPartException> AdGroupDayPartExceptions { get; set; } // AdGroupDayPartException
        public DbSet<AdGroupDayPartImport> AdGroupDayPartImports { get; set; } // AdGroupDayPartImport
        public DbSet<AdGroupDayPartImportReportId> AdGroupDayPartImportReportIds { get; set; } // AdGroupDayPartImportReportID
        public DbSet<AdGroupDayPartReportId> AdGroupDayPartReportIds { get; set; } // AdGroupDayPartReportID
        public DbSet<AdGroupDayPartTargetingReportId> AdGroupDayPartTargetingReportIds { get; set; } // AdGroupDayPartTargetingReportID
        public DbSet<AdGroupDeal> AdGroupDeals { get; set; } // AdGroupDeal
        public DbSet<AdGroupDealAnalyticsReportId> AdGroupDealAnalyticsReportIds { get; set; } // AdGroupDealAnalyticsReportID
        public DbSet<AdGroupDealCombined> AdGroupDealCombineds { get; set; } // AdGroupDealCombined
        public DbSet<AdGroupDealDomain> AdGroupDealDomains { get; set; } // AdGroupDealDomain
        public DbSet<AdGroupDealDomainImport> AdGroupDealDomainImports { get; set; } // AdGroupDealDomainImport
        public DbSet<AdGroupDealDomainNew> AdGroupDealDomainNews { get; set; } // AdGroupDealDomainNew
        public DbSet<AdGroupDealException> AdGroupDealExceptions { get; set; } // AdGroupDealException
        public DbSet<AdGroupDealImport> AdGroupDealImports { get; set; } // AdGroupDealImport
        public DbSet<AdGroupDealImportReportId> AdGroupDealImportReportIds { get; set; } // AdGroupDealImportReportID
        public DbSet<AdGroupDealReportId> AdGroupDealReportIds { get; set; } // AdGroupDealReportID
        public DbSet<AdGroupDealSite> AdGroupDealSites { get; set; } // AdGroupDealSite
        public DbSet<AdGroupDealSiteImport> AdGroupDealSiteImports { get; set; } // AdGroupDealSiteImport
        public DbSet<AdGroupDealSiteInventoryOnly> AdGroupDealSiteInventoryOnlies { get; set; } // AdGroupDealSiteInventoryOnly
        public DbSet<AdGroupDealSiteNew> AdGroupDealSiteNews { get; set; } // AdGroupDealSiteNew
        public DbSet<AdGroupDealSitePerformanceAndTargetingOnly> AdGroupDealSitePerformanceAndTargetingOnlies { get; set; } // AdGroupDealSitePerformanceAndTargetingOnly
        public DbSet<AdGroupDealTargetingReportId> AdGroupDealTargetingReportIds { get; set; } // AdGroupDealTargetingReportID
        public DbSet<AdGroupDevice> AdGroupDevices { get; set; } // AdGroupDevice
        public DbSet<AdGroupDeviceAnalyticsReportId> AdGroupDeviceAnalyticsReportIds { get; set; } // AdGroupDeviceAnalyticsReportID
        public DbSet<AdGroupDeviceCombined> AdGroupDeviceCombineds { get; set; } // AdGroupDeviceCombined
        public DbSet<AdGroupDeviceException> AdGroupDeviceExceptions { get; set; } // AdGroupDeviceException
        public DbSet<AdGroupDeviceImport> AdGroupDeviceImports { get; set; } // AdGroupDeviceImport
        public DbSet<AdGroupDeviceImportReportId> AdGroupDeviceImportReportIds { get; set; } // AdGroupDeviceImportReportID
        public DbSet<AdGroupDeviceReportId> AdGroupDeviceReportIds { get; set; } // AdGroupDeviceReportID
        public DbSet<AdGroupDeviceTargetingReportId> AdGroupDeviceTargetingReportIds { get; set; } // AdGroupDeviceTargetingReportID
        public DbSet<AdGroupDomain> AdGroupDomains { get; set; } // AdGroupDomain
        public DbSet<AdGroupDomainAnalytic> AdGroupDomainAnalytics { get; set; } // AdGroupDomainAnalytics
        public DbSet<AdGroupDomainCombined> AdGroupDomainCombineds { get; set; } // AdGroupDomainCombined
        public DbSet<AdGroupDomainDaily> AdGroupDomainDailies { get; set; } // AdGroupDomainDaily
        public DbSet<AdGroupDomainDailyAlternate> AdGroupDomainDailyAlternates { get; set; } // AdGroupDomainDailyAlternate
        public DbSet<AdGroupDomainException> AdGroupDomainExceptions { get; set; } // AdGroupDomainException
        public DbSet<AdGroupDomainImport> AdGroupDomainImports { get; set; } // AdGroupDomainImport
        public DbSet<AdGroupDomainNew> AdGroupDomainNews { get; set; } // AdGroupDomainNew
        public DbSet<AdGroupDomainNewAlternate> AdGroupDomainNewAlternates { get; set; } // AdGroupDomainNewAlternate
        public DbSet<AdGroupDomainNewToDailyRollupBuffer> AdGroupDomainNewToDailyRollupBuffers { get; set; } // AdGroupDomainNewToDaily_RollupBuffer
        public DbSet<AdGroupDomainPerformanceOnly> AdGroupDomainPerformanceOnlies { get; set; } // AdGroupDomainPerformanceOnly
        public DbSet<AdGroupDoohGeoLocationGroupTargetingReportId> AdGroupDoohGeoLocationGroupTargetingReportIds { get; set; } // AdGroupDoohGeoLocationGroupTargetingReportID
        public DbSet<AdGroupDoohPanelLocation> AdGroupDoohPanelLocations { get; set; } // AdGroupDoohPanelLocation
        public DbSet<AdGroupGeoLocation> AdGroupGeoLocations { get; set; } // AdGroupGeoLocation
        public DbSet<AdGroupGeoLocationAnalyticsReportId> AdGroupGeoLocationAnalyticsReportIds { get; set; } // AdGroupGeoLocationAnalyticsReportID
        public DbSet<AdGroupGeoLocationCombined> AdGroupGeoLocationCombineds { get; set; } // AdGroupGeoLocationCombined
        public DbSet<AdGroupGeoLocationException> AdGroupGeoLocationExceptions { get; set; } // AdGroupGeoLocationException
        public DbSet<AdGroupGeoLocationImport> AdGroupGeoLocationImports { get; set; } // AdGroupGeoLocationImport
        public DbSet<AdGroupGeoLocationImportReportId> AdGroupGeoLocationImportReportIds { get; set; } // AdGroupGeoLocationImportReportID
        public DbSet<AdGroupGeoLocationPointRadiu> AdGroupGeoLocationPointRadius { get; set; } // AdGroupGeoLocationPointRadius
        public DbSet<AdGroupGeoLocationPointRadiusCombined> AdGroupGeoLocationPointRadiusCombineds { get; set; } // AdGroupGeoLocationPointRadiusCombined
        public DbSet<AdGroupGeoLocationPointRadiusException> AdGroupGeoLocationPointRadiusExceptions { get; set; } // AdGroupGeoLocationPointRadiusException
        public DbSet<AdGroupGeoLocationPointRadiusImport> AdGroupGeoLocationPointRadiusImports { get; set; } // AdGroupGeoLocationPointRadiusImport
        public DbSet<AdGroupGeoLocationPointRadiusImportReportId> AdGroupGeoLocationPointRadiusImportReportIds { get; set; } // AdGroupGeoLocationPointRadiusImportReportID
        public DbSet<AdGroupGeoLocationPointRadiusReportId> AdGroupGeoLocationPointRadiusReportIds { get; set; } // AdGroupGeoLocationPointRadiusReportID
        public DbSet<AdGroupGeoLocationReportId> AdGroupGeoLocationReportIds { get; set; } // AdGroupGeoLocationReportID
        public DbSet<AdGroupGeoPostcode> AdGroupGeoPostcodes { get; set; } // AdGroupGeoPostcode
        public DbSet<AdGroupGeoPostcodeAnalyticsReportId> AdGroupGeoPostcodeAnalyticsReportIds { get; set; } // AdGroupGeoPostcodeAnalyticsReportID
        public DbSet<AdGroupGeoPostcodeCombined> AdGroupGeoPostcodeCombineds { get; set; } // AdGroupGeoPostcodeCombined
        public DbSet<AdGroupGeoPostcodeException> AdGroupGeoPostcodeExceptions { get; set; } // AdGroupGeoPostcodeException
        public DbSet<AdGroupGeoPostcodeImport> AdGroupGeoPostcodeImports { get; set; } // AdGroupGeoPostcodeImport
        public DbSet<AdGroupGeoPostcodeImportReportId> AdGroupGeoPostcodeImportReportIds { get; set; } // AdGroupGeoPostcodeImportReportID
        public DbSet<AdGroupGeoPostcodeReportId> AdGroupGeoPostcodeReportIds { get; set; } // AdGroupGeoPostcodeReportID
        public DbSet<AdGroupGeoPostcodeTargetingReportId> AdGroupGeoPostcodeTargetingReportIds { get; set; } // AdGroupGeoPostcodeTargetingReportID
        public DbSet<AdGroupIabVerticalImportReportId> AdGroupIabVerticalImportReportIds { get; set; } // AdGroupIABVerticalImportReportID
        public DbSet<AdGroupLanguage> AdGroupLanguages { get; set; } // AdGroupLanguage
        public DbSet<AdGroupLanguageAnalyticsReportId> AdGroupLanguageAnalyticsReportIds { get; set; } // AdGroupLanguageAnalyticsReportID
        public DbSet<AdGroupLanguageCombined> AdGroupLanguageCombineds { get; set; } // AdGroupLanguageCombined
        public DbSet<AdGroupLanguageException> AdGroupLanguageExceptions { get; set; } // AdGroupLanguageException
        public DbSet<AdGroupLanguageImport> AdGroupLanguageImports { get; set; } // AdGroupLanguageImport
        public DbSet<AdGroupLanguageImportReportId> AdGroupLanguageImportReportIds { get; set; } // AdGroupLanguageImportReportID
        public DbSet<AdGroupLanguageReportId> AdGroupLanguageReportIds { get; set; } // AdGroupLanguageReportID
        public DbSet<AdGroupLanguageTargetingReportId> AdGroupLanguageTargetingReportIds { get; set; } // AdGroupLanguageTargetingReportID
        public DbSet<AdGroupLookup> AdGroupLookups { get; set; } // AdGroupLookup
        public DbSet<AdGroupMobileCarrier> AdGroupMobileCarriers { get; set; } // AdGroupMobileCarrier
        public DbSet<AdGroupMobileCarrierAnalyticsReportId> AdGroupMobileCarrierAnalyticsReportIds { get; set; } // AdGroupMobileCarrierAnalyticsReportID
        public DbSet<AdGroupMobileCarrierCombined> AdGroupMobileCarrierCombineds { get; set; } // AdGroupMobileCarrierCombined
        public DbSet<AdGroupMobileCarrierException> AdGroupMobileCarrierExceptions { get; set; } // AdGroupMobileCarrierException
        public DbSet<AdGroupMobileCarrierImport> AdGroupMobileCarrierImports { get; set; } // AdGroupMobileCarrierImport
        public DbSet<AdGroupMobileCarrierImportReportId> AdGroupMobileCarrierImportReportIds { get; set; } // AdGroupMobileCarrierImportReportID
        public DbSet<AdGroupMobileCarrierReportId> AdGroupMobileCarrierReportIds { get; set; } // AdGroupMobileCarrierReportID
        public DbSet<AdGroupMobileCarrierTargetingReportId> AdGroupMobileCarrierTargetingReportIds { get; set; } // AdGroupMobileCarrierTargetingReportID
        public DbSet<AdGroupPagePosition> AdGroupPagePositions { get; set; } // AdGroupPagePosition
        public DbSet<AdGroupPagePositionAnalyticsReportId> AdGroupPagePositionAnalyticsReportIds { get; set; } // AdGroupPagePositionAnalyticsReportID
        public DbSet<AdGroupPagePositionCombined> AdGroupPagePositionCombineds { get; set; } // AdGroupPagePositionCombined
        public DbSet<AdGroupPagePositionException> AdGroupPagePositionExceptions { get; set; } // AdGroupPagePositionException
        public DbSet<AdGroupPagePositionImport> AdGroupPagePositionImports { get; set; } // AdGroupPagePositionImport
        public DbSet<AdGroupPagePositionImportReportId> AdGroupPagePositionImportReportIds { get; set; } // AdGroupPagePositionImportReportID
        public DbSet<AdGroupPagePositionReportId> AdGroupPagePositionReportIds { get; set; } // AdGroupPagePositionReportID
        public DbSet<AdGroupPagePositionTargetingReportId> AdGroupPagePositionTargetingReportIds { get; set; } // AdGroupPagePositionTargetingReportID
        public DbSet<AdGroupPublisher> AdGroupPublishers { get; set; } // AdGroupPublisher
        public DbSet<AdGroupPublisherAnalyticsReportId> AdGroupPublisherAnalyticsReportIds { get; set; } // AdGroupPublisherAnalyticsReportID
        public DbSet<AdGroupPublisherCombined> AdGroupPublisherCombineds { get; set; } // AdGroupPublisherCombined
        public DbSet<AdGroupPublisherException> AdGroupPublisherExceptions { get; set; } // AdGroupPublisherException
        public DbSet<AdGroupPublisherImport> AdGroupPublisherImports { get; set; } // AdGroupPublisherImport
        public DbSet<AdGroupPublisherImportReportId> AdGroupPublisherImportReportIds { get; set; } // AdGroupPublisherImportReportID
        public DbSet<AdGroupPublisherReportId> AdGroupPublisherReportIds { get; set; } // AdGroupPublisherReportID
        public DbSet<AdGroupPublisherTargetingReportId> AdGroupPublisherTargetingReportIds { get; set; } // AdGroupPublisherTargetingReportID
        public DbSet<AdGroupRegionTargetingReportId> AdGroupRegionTargetingReportIds { get; set; } // AdGroupRegionTargetingReportID
        public DbSet<AdGroupSegment> AdGroupSegments { get; set; } // AdGroupSegment
        public DbSet<AdGroupSegmentAnalytic> AdGroupSegmentAnalytics { get; set; } // AdGroupSegmentAnalytics
        public DbSet<AdGroupSegmentException> AdGroupSegmentExceptions { get; set; } // AdGroupSegmentException
        public DbSet<AdGroupSegmentImport> AdGroupSegmentImports { get; set; } // AdGroupSegmentImport
        public DbSet<AdGroupSegmentTargeting> AdGroupSegmentTargetings { get; set; } // AdGroupSegmentTargeting
        public DbSet<AdGroupVertical> AdGroupVerticals { get; set; } // AdGroupVertical
        public DbSet<AdGroupVertical1IabMappedTargetingReportId> AdGroupVertical1IabMappedTargetingReportId { get; set; } // AdGroupVertical1IABMappedTargetingReportID
        public DbSet<AdGroupVertical1TargetingReportId> AdGroupVertical1TargetingReportId { get; set; } // AdGroupVertical1TargetingReportID
        public DbSet<AdGroupVertical2IabMappedTargetingReportId> AdGroupVertical2IabMappedTargetingReportId { get; set; } // AdGroupVertical2IABMappedTargetingReportID
        public DbSet<AdGroupVertical2TargetingReportId> AdGroupVertical2TargetingReportId { get; set; } // AdGroupVertical2TargetingReportID
        public DbSet<AdGroupVertical3TargetingReportId> AdGroupVertical3TargetingReportId { get; set; } // AdGroupVertical3TargetingReportID
        public DbSet<AdGroupVerticalAnalyticsReportId> AdGroupVerticalAnalyticsReportIds { get; set; } // AdGroupVerticalAnalyticsReportID
        public DbSet<AdGroupVerticalCombined> AdGroupVerticalCombineds { get; set; } // AdGroupVerticalCombined
        public DbSet<AdGroupVerticalException> AdGroupVerticalExceptions { get; set; } // AdGroupVerticalException
        public DbSet<AdGroupVerticalIabMappedAnalyticsReportId> AdGroupVerticalIabMappedAnalyticsReportIds { get; set; } // AdGroupVerticalIABMappedAnalyticsReportID
        public DbSet<AdGroupVerticalIabMappedCombined> AdGroupVerticalIabMappedCombineds { get; set; } // AdGroupVerticalIABMappedCombined
        public DbSet<AdGroupVerticalImport> AdGroupVerticalImports { get; set; } // AdGroupVerticalImport
        public DbSet<AdGroupVerticalImportReportId> AdGroupVerticalImportReportIds { get; set; } // AdGroupVerticalImportReportID
        public DbSet<AdGroupVerticalReportId> AdGroupVerticalReportIds { get; set; } // AdGroupVerticalReportID
        public DbSet<AdGroupVideoActivity> AdGroupVideoActivities { get; set; } // AdGroupVideoActivity
        public DbSet<AdGroupVideoActivityCombined> AdGroupVideoActivityCombineds { get; set; } // AdGroupVideoActivityCombined
        public DbSet<AdGroupVideoActivityException> AdGroupVideoActivityExceptions { get; set; } // AdGroupVideoActivityException
        public DbSet<AdGroupVideoActivityExceptionReportId> AdGroupVideoActivityExceptionReportIds { get; set; } // AdGroupVideoActivityExceptionReportID
        public DbSet<AdGroupVideoActivityImport> AdGroupVideoActivityImports { get; set; } // AdGroupVideoActivityImport
        public DbSet<AdGroupVideoActivityImportReportId> AdGroupVideoActivityImportReportIds { get; set; } // AdGroupVideoActivityImportReportID
        public DbSet<AdGroupVideoActivityReportId> AdGroupVideoActivityReportIds { get; set; } // AdGroupVideoActivityReportID
        public DbSet<AdGroupWebsite> AdGroupWebsites { get; set; } // AdGroupWebsite
        public DbSet<AdGroupWebsiteAnalytic> AdGroupWebsiteAnalytics { get; set; } // AdGroupWebsiteAnalytics
        public DbSet<AdGroupWebsiteException> AdGroupWebsiteExceptions { get; set; } // AdGroupWebsiteException
        public DbSet<AdGroupWebsiteImport> AdGroupWebsiteImports { get; set; } // AdGroupWebsiteImport
        public DbSet<AdGroupWebsiteInventoryOnly> AdGroupWebsiteInventoryOnlies { get; set; } // AdGroupWebsiteInventoryOnly
        public DbSet<AdGroupWebsiteNew> AdGroupWebsiteNews { get; set; } // AdGroupWebsiteNew
        public DbSet<AdGroupWebsitePerformanceAndTargetingOnly> AdGroupWebsitePerformanceAndTargetingOnlies { get; set; } // AdGroupWebsitePerformanceAndTargetingOnly
        public DbSet<AdGroupWebsiteTargeting> AdGroupWebsiteTargetings { get; set; } // AdGroupWebsiteTargeting
        public DbSet<AdLookup> AdLookups { get; set; } // AdLookup
        public DbSet<AdPartner> AdPartners { get; set; } // AdPartner
        public DbSet<AdPartnerCombined> AdPartnerCombineds { get; set; } // AdPartnerCombined
        public DbSet<AdPartnerCombinedValidOnly> AdPartnerCombinedValidOnlies { get; set; } // AdPartnerCombinedValidOnly
        public DbSet<AdPartnerException> AdPartnerExceptions { get; set; } // AdPartnerException
        public DbSet<AdPartnerExceptionReportId> AdPartnerExceptionReportIds { get; set; } // AdPartnerExceptionReportID
        public DbSet<AdPartnerImport> AdPartnerImports { get; set; } // AdPartnerImport
        public DbSet<AdPartnerImportReportId> AdPartnerImportReportIds { get; set; } // AdPartnerImportReportID
        public DbSet<AdPartnerPerformance> AdPartnerPerformances { get; set; } // AdPartnerPerformance
        public DbSet<AdPartnerReconciliation> AdPartnerReconciliations { get; set; } // AdPartnerReconciliation
        public DbSet<AdPartnerReportId> AdPartnerReportIds { get; set; } // AdPartnerReportID
        public DbSet<AdSlotLookup> AdSlotLookups { get; set; } // AdSlotLookup
        public DbSet<AdvertiserBiLookup> AdvertiserBiLookups { get; set; } // AdvertiserBILookup
        public DbSet<AdvertiserProductBiLookup> AdvertiserProductBiLookups { get; set; } // AdvertiserProductBILookup
        public DbSet<BrandSafetyLookup> BrandSafetyLookups { get; set; } // BrandSafetyLookup
        public DbSet<BrandSafetySiteCount> BrandSafetySiteCounts { get; set; } // BrandSafetySiteCounts
        public DbSet<BuyerAccountBiLookup> BuyerAccountBiLookups { get; set; } // BuyerAccountBILookup
        public DbSet<BuyerAccountCreditLimitLookup> BuyerAccountCreditLimitLookups { get; set; } // BuyerAccountCreditLimitLookup
        public DbSet<BuyerAccountLookup> BuyerAccountLookups { get; set; } // BuyerAccountLookup
        public DbSet<BuyerAccountRecentAdGroupLookup> BuyerAccountRecentAdGroupLookups { get; set; } // BuyerAccountRecentAdGroupLookup
        public DbSet<BuyerAccountShardLookup> BuyerAccountShardLookups { get; set; } // BuyerAccountShardLookup
        public DbSet<CampaignBiLookup> CampaignBiLookups { get; set; } // CampaignBILookup
        public DbSet<CampaignLookup> CampaignLookups { get; set; } // CampaignLookup
        public DbSet<Conversion> Conversions { get; set; } // Conversion
        public DbSet<ConversionCombined> ConversionCombineds { get; set; } // ConversionCombined
        public DbSet<ConversionException> ConversionExceptions { get; set; } // ConversionException
        public DbSet<ConversionExceptionReportId> ConversionExceptionReportIds { get; set; } // ConversionExceptionReportID
        public DbSet<ConversionImport> ConversionImports { get; set; } // ConversionImport
        public DbSet<ConversionImportReportId> ConversionImportReportIds { get; set; } // ConversionImportReportID
        public DbSet<ConversionReportId> ConversionReportIds { get; set; } // ConversionReportID
        public DbSet<CountrySalesRegionLookup> CountrySalesRegionLookups { get; set; } // CountrySalesRegionLookup
        public DbSet<CreativeBiLookup> CreativeBiLookups { get; set; } // CreativeBILookup
        public DbSet<DateLookup> DateLookups { get; set; } // DateLookup
        public DbSet<DealBiLookup> DealBiLookups { get; set; } // DealBILookup
        public DbSet<DirectBuyDefaultImpression> DirectBuyDefaultImpressions { get; set; } // DirectBuyDefaultImpression
        public DbSet<DirectBuyDefaultImpressionImport> DirectBuyDefaultImpressionImports { get; set; } // DirectBuyDefaultImpressionImport
        public DbSet<DirectBuyDefaultImpressionImportReportId> DirectBuyDefaultImpressionImportReportIds { get; set; } // DirectBuyDefaultImpressionImportReportID
        public DbSet<DirectBuyDefaultImpressionReportId> DirectBuyDefaultImpressionReportIds { get; set; } // DirectBuyDefaultImpressionReportID
        public DbSet<DomainStat> DomainStats { get; set; } // DomainStats
        public DbSet<DomainStatsAlternate> DomainStatsAlternates { get; set; } // DomainStats_Alternate
        public DbSet<DomainStatsImport> DomainStatsImports { get; set; } // DomainStats_Import
        public DbSet<ExchangeSpendSummaryLookup> ExchangeSpendSummaryLookups { get; set; } // ExchangeSpendSummaryLookup
        public DbSet<GeoCityLookup> GeoCityLookups { get; set; } // GeoCityLookup
        public DbSet<GeoCountryLookup> GeoCountryLookups { get; set; } // GeoCountryLookup
        public DbSet<GeoMetroLookup> GeoMetroLookups { get; set; } // GeoMetroLookup
        public DbSet<GeoRegionLookup> GeoRegionLookups { get; set; } // GeoRegionLookup
        public DbSet<ImportSummary> ImportSummaries { get; set; } // ImportSummary
        public DbSet<ImportSummaryReportId> ImportSummaryReportIds { get; set; } // ImportSummaryReportID
        public DbSet<InventoryLookup> InventoryLookups { get; set; } // InventoryLookup
        public DbSet<InventoryLookupException> InventoryLookupExceptions { get; set; } // InventoryLookupException
        public DbSet<InventoryLookupImport> InventoryLookupImports { get; set; } // InventoryLookupImport
        public DbSet<JobHistory> JobHistories { get; set; } // JobHistory
        public DbSet<LanguageLookup> LanguageLookups { get; set; } // LanguageLookup
        public DbSet<PacingAndPricingHealth> PacingAndPricingHealths { get; set; } // PacingAndPricingHealth
        public DbSet<PartnerBiLookup> PartnerBiLookups { get; set; } // PartnerBILookup
        public DbSet<PartnerLookup> PartnerLookups { get; set; } // PartnerLookup
        public DbSet<PlacementBiLookup> PlacementBiLookups { get; set; } // PlacementBILookup
        public DbSet<PublisherBiLookup> PublisherBiLookups { get; set; } // PublisherBILookup
        public DbSet<PublisherLookup> PublisherLookups { get; set; } // PublisherLookup
        public DbSet<SalesRegionLookup> SalesRegionLookups { get; set; } // SalesRegionLookup
        public DbSet<SchemaMigration> SchemaMigrations { get; set; } // SchemaMigration
        public DbSet<Segment> Segments { get; set; } // Segment
        public DbSet<SegmentCombined> SegmentCombineds { get; set; } // SegmentCombined
        public DbSet<SegmentExceptionReportId> SegmentExceptionReportIds { get; set; } // SegmentExceptionReportID
        public DbSet<SegmentImport> SegmentImports { get; set; } // SegmentImport
        public DbSet<SegmentImportReportId> SegmentImportReportIds { get; set; } // SegmentImportReportID
        public DbSet<SegmentLookup> SegmentLookups { get; set; } // SegmentLookup
        public DbSet<SegmentLookupNew> SegmentLookupNews { get; set; } // SegmentLookup_new
        public DbSet<SegmentReportId> SegmentReportIds { get; set; } // SegmentReportID
        public DbSet<ThirdPartyPlacementLookup> ThirdPartyPlacementLookups { get; set; } // ThirdPartyPlacementLookup
        public DbSet<VideoCreativeAnalyticsReportId> VideoCreativeAnalyticsReportIds { get; set; } // VideoCreativeAnalyticsReportID
        public DbSet<WebsiteLookup> WebsiteLookups { get; set; } // WebsiteLookup
        public DbSet<WeeklyLocationBid> WeeklyLocationBids { get; set; } // WeeklyLocationBids
        public DbSet<WeeklyLocationBidsAlternate> WeeklyLocationBidsAlternates { get; set; } // WeeklyLocationBidsAlternate
        public DbSet<WhiteListForecast> WhiteListForecasts { get; set; } // WhiteListForecast
        
        static BrandscreenAnalyticsContext()
        {
            System.Data.Entity.Database.SetInitializer<BrandscreenAnalyticsContext>(null);
        }

        public BrandscreenAnalyticsContext()
            : base("Name=BrandscreenAnalyticsContext")
        {
            InitializePartial();
        }

        public BrandscreenAnalyticsContext(string connectionString) : base(connectionString)
        {
            InitializePartial();
        }

        //public BrandscreenAnalyticsContext(string connectionString, System.Data.Entity.Infrastructure.DbCompiledModel model) : base(connectionString, model)
        //{
            //InitializePartial();
        //}

        protected override void Dispose(bool disposing)
        {
            base.Dispose(disposing);
        }

        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            base.OnModelCreating(modelBuilder);

            modelBuilder.Configurations.Add(new ActiveCpcAndCpaAdGroupsLookupMap());
            modelBuilder.Configurations.Add(new AdAnalyticsReportIdMap());
            modelBuilder.Configurations.Add(new AdDirectBuyMap());
            modelBuilder.Configurations.Add(new AdDirectBuyAnalyticsReportIdMap());
            modelBuilder.Configurations.Add(new AdDirectBuyCombinedMap());
            modelBuilder.Configurations.Add(new AdDirectBuyImportMap());
            modelBuilder.Configurations.Add(new AdDirectBuyImportReportIdMap());
            modelBuilder.Configurations.Add(new AdDirectBuyReportIdMap());
            modelBuilder.Configurations.Add(new AdGroupAbsRegionTargetingReportIdMap());
            modelBuilder.Configurations.Add(new AdGroupAnalyticsFilterDataMap());
            modelBuilder.Configurations.Add(new AdGroupAnalyticsGeoCityLookupMap());
            modelBuilder.Configurations.Add(new AdGroupAnalyticsGeoCountryLookupMap());
            modelBuilder.Configurations.Add(new AdGroupAnalyticsGeoRegionLookupMap());
            modelBuilder.Configurations.Add(new AdGroupAnalyticsOptimizationModelMap());
            modelBuilder.Configurations.Add(new AdGroupAnalyticsPartnerLookupMap());
            modelBuilder.Configurations.Add(new AdGroupAnalyticsVerticalOneLookupMap());
            modelBuilder.Configurations.Add(new AdGroupAnalyticsVerticalThreeLookupMap());
            modelBuilder.Configurations.Add(new AdGroupAnalyticsVerticalTwoLookupMap());
            modelBuilder.Configurations.Add(new AdGroupBiLookupMap());
            modelBuilder.Configurations.Add(new AdGroupCityTargetingReportIdMap());
            modelBuilder.Configurations.Add(new AdGroupConversionSegmentLookupMap());
            modelBuilder.Configurations.Add(new AdGroupCountryTargetingReportIdMap());
            modelBuilder.Configurations.Add(new AdGroupDayPartMap());
            modelBuilder.Configurations.Add(new AdGroupDayPartAnalyticsReportIdMap());
            modelBuilder.Configurations.Add(new AdGroupDayPartCombinedMap());
            modelBuilder.Configurations.Add(new AdGroupDayPartExceptionMap());
            modelBuilder.Configurations.Add(new AdGroupDayPartImportMap());
            modelBuilder.Configurations.Add(new AdGroupDayPartImportReportIdMap());
            modelBuilder.Configurations.Add(new AdGroupDayPartReportIdMap());
            modelBuilder.Configurations.Add(new AdGroupDayPartTargetingReportIdMap());
            modelBuilder.Configurations.Add(new AdGroupDealMap());
            modelBuilder.Configurations.Add(new AdGroupDealAnalyticsReportIdMap());
            modelBuilder.Configurations.Add(new AdGroupDealCombinedMap());
            modelBuilder.Configurations.Add(new AdGroupDealDomainMap());
            modelBuilder.Configurations.Add(new AdGroupDealDomainImportMap());
            modelBuilder.Configurations.Add(new AdGroupDealDomainNewMap());
            modelBuilder.Configurations.Add(new AdGroupDealExceptionMap());
            modelBuilder.Configurations.Add(new AdGroupDealImportMap());
            modelBuilder.Configurations.Add(new AdGroupDealImportReportIdMap());
            modelBuilder.Configurations.Add(new AdGroupDealReportIdMap());
            modelBuilder.Configurations.Add(new AdGroupDealSiteMap());
            modelBuilder.Configurations.Add(new AdGroupDealSiteImportMap());
            modelBuilder.Configurations.Add(new AdGroupDealSiteInventoryOnlyMap());
            modelBuilder.Configurations.Add(new AdGroupDealSiteNewMap());
            modelBuilder.Configurations.Add(new AdGroupDealSitePerformanceAndTargetingOnlyMap());
            modelBuilder.Configurations.Add(new AdGroupDealTargetingReportIdMap());
            modelBuilder.Configurations.Add(new AdGroupDeviceMap());
            modelBuilder.Configurations.Add(new AdGroupDeviceAnalyticsReportIdMap());
            modelBuilder.Configurations.Add(new AdGroupDeviceCombinedMap());
            modelBuilder.Configurations.Add(new AdGroupDeviceExceptionMap());
            modelBuilder.Configurations.Add(new AdGroupDeviceImportMap());
            modelBuilder.Configurations.Add(new AdGroupDeviceImportReportIdMap());
            modelBuilder.Configurations.Add(new AdGroupDeviceReportIdMap());
            modelBuilder.Configurations.Add(new AdGroupDeviceTargetingReportIdMap());
            modelBuilder.Configurations.Add(new AdGroupDomainMap());
            modelBuilder.Configurations.Add(new AdGroupDomainAnalyticMap());
            modelBuilder.Configurations.Add(new AdGroupDomainCombinedMap());
            modelBuilder.Configurations.Add(new AdGroupDomainDailyMap());
            modelBuilder.Configurations.Add(new AdGroupDomainDailyAlternateMap());
            modelBuilder.Configurations.Add(new AdGroupDomainExceptionMap());
            modelBuilder.Configurations.Add(new AdGroupDomainImportMap());
            modelBuilder.Configurations.Add(new AdGroupDomainNewMap());
            modelBuilder.Configurations.Add(new AdGroupDomainNewAlternateMap());
            modelBuilder.Configurations.Add(new AdGroupDomainNewToDailyRollupBufferMap());
            modelBuilder.Configurations.Add(new AdGroupDomainPerformanceOnlyMap());
            modelBuilder.Configurations.Add(new AdGroupDoohGeoLocationGroupTargetingReportIdMap());
            modelBuilder.Configurations.Add(new AdGroupDoohPanelLocationMap());
            modelBuilder.Configurations.Add(new AdGroupGeoLocationMap());
            modelBuilder.Configurations.Add(new AdGroupGeoLocationAnalyticsReportIdMap());
            modelBuilder.Configurations.Add(new AdGroupGeoLocationCombinedMap());
            modelBuilder.Configurations.Add(new AdGroupGeoLocationExceptionMap());
            modelBuilder.Configurations.Add(new AdGroupGeoLocationImportMap());
            modelBuilder.Configurations.Add(new AdGroupGeoLocationImportReportIdMap());
            modelBuilder.Configurations.Add(new AdGroupGeoLocationPointRadiuMap());
            modelBuilder.Configurations.Add(new AdGroupGeoLocationPointRadiusCombinedMap());
            modelBuilder.Configurations.Add(new AdGroupGeoLocationPointRadiusExceptionMap());
            modelBuilder.Configurations.Add(new AdGroupGeoLocationPointRadiusImportMap());
            modelBuilder.Configurations.Add(new AdGroupGeoLocationPointRadiusImportReportIdMap());
            modelBuilder.Configurations.Add(new AdGroupGeoLocationPointRadiusReportIdMap());
            modelBuilder.Configurations.Add(new AdGroupGeoLocationReportIdMap());
            modelBuilder.Configurations.Add(new AdGroupGeoPostcodeMap());
            modelBuilder.Configurations.Add(new AdGroupGeoPostcodeAnalyticsReportIdMap());
            modelBuilder.Configurations.Add(new AdGroupGeoPostcodeCombinedMap());
            modelBuilder.Configurations.Add(new AdGroupGeoPostcodeExceptionMap());
            modelBuilder.Configurations.Add(new AdGroupGeoPostcodeImportMap());
            modelBuilder.Configurations.Add(new AdGroupGeoPostcodeImportReportIdMap());
            modelBuilder.Configurations.Add(new AdGroupGeoPostcodeReportIdMap());
            modelBuilder.Configurations.Add(new AdGroupGeoPostcodeTargetingReportIdMap());
            modelBuilder.Configurations.Add(new AdGroupIabVerticalImportReportIdMap());
            modelBuilder.Configurations.Add(new AdGroupLanguageMap());
            modelBuilder.Configurations.Add(new AdGroupLanguageAnalyticsReportIdMap());
            modelBuilder.Configurations.Add(new AdGroupLanguageCombinedMap());
            modelBuilder.Configurations.Add(new AdGroupLanguageExceptionMap());
            modelBuilder.Configurations.Add(new AdGroupLanguageImportMap());
            modelBuilder.Configurations.Add(new AdGroupLanguageImportReportIdMap());
            modelBuilder.Configurations.Add(new AdGroupLanguageReportIdMap());
            modelBuilder.Configurations.Add(new AdGroupLanguageTargetingReportIdMap());
            modelBuilder.Configurations.Add(new AdGroupLookupMap());
            modelBuilder.Configurations.Add(new AdGroupMobileCarrierMap());
            modelBuilder.Configurations.Add(new AdGroupMobileCarrierAnalyticsReportIdMap());
            modelBuilder.Configurations.Add(new AdGroupMobileCarrierCombinedMap());
            modelBuilder.Configurations.Add(new AdGroupMobileCarrierExceptionMap());
            modelBuilder.Configurations.Add(new AdGroupMobileCarrierImportMap());
            modelBuilder.Configurations.Add(new AdGroupMobileCarrierImportReportIdMap());
            modelBuilder.Configurations.Add(new AdGroupMobileCarrierReportIdMap());
            modelBuilder.Configurations.Add(new AdGroupMobileCarrierTargetingReportIdMap());
            modelBuilder.Configurations.Add(new AdGroupPagePositionMap());
            modelBuilder.Configurations.Add(new AdGroupPagePositionAnalyticsReportIdMap());
            modelBuilder.Configurations.Add(new AdGroupPagePositionCombinedMap());
            modelBuilder.Configurations.Add(new AdGroupPagePositionExceptionMap());
            modelBuilder.Configurations.Add(new AdGroupPagePositionImportMap());
            modelBuilder.Configurations.Add(new AdGroupPagePositionImportReportIdMap());
            modelBuilder.Configurations.Add(new AdGroupPagePositionReportIdMap());
            modelBuilder.Configurations.Add(new AdGroupPagePositionTargetingReportIdMap());
            modelBuilder.Configurations.Add(new AdGroupPublisherMap());
            modelBuilder.Configurations.Add(new AdGroupPublisherAnalyticsReportIdMap());
            modelBuilder.Configurations.Add(new AdGroupPublisherCombinedMap());
            modelBuilder.Configurations.Add(new AdGroupPublisherExceptionMap());
            modelBuilder.Configurations.Add(new AdGroupPublisherImportMap());
            modelBuilder.Configurations.Add(new AdGroupPublisherImportReportIdMap());
            modelBuilder.Configurations.Add(new AdGroupPublisherReportIdMap());
            modelBuilder.Configurations.Add(new AdGroupPublisherTargetingReportIdMap());
            modelBuilder.Configurations.Add(new AdGroupRegionTargetingReportIdMap());
            modelBuilder.Configurations.Add(new AdGroupSegmentMap());
            modelBuilder.Configurations.Add(new AdGroupSegmentAnalyticMap());
            modelBuilder.Configurations.Add(new AdGroupSegmentExceptionMap());
            modelBuilder.Configurations.Add(new AdGroupSegmentImportMap());
            modelBuilder.Configurations.Add(new AdGroupSegmentTargetingMap());
            modelBuilder.Configurations.Add(new AdGroupVerticalMap());
            modelBuilder.Configurations.Add(new AdGroupVertical1IabMappedTargetingReportIdMap());
            modelBuilder.Configurations.Add(new AdGroupVertical1TargetingReportIdMap());
            modelBuilder.Configurations.Add(new AdGroupVertical2IabMappedTargetingReportIdMap());
            modelBuilder.Configurations.Add(new AdGroupVertical2TargetingReportIdMap());
            modelBuilder.Configurations.Add(new AdGroupVertical3TargetingReportIdMap());
            modelBuilder.Configurations.Add(new AdGroupVerticalAnalyticsReportIdMap());
            modelBuilder.Configurations.Add(new AdGroupVerticalCombinedMap());
            modelBuilder.Configurations.Add(new AdGroupVerticalExceptionMap());
            modelBuilder.Configurations.Add(new AdGroupVerticalIabMappedAnalyticsReportIdMap());
            modelBuilder.Configurations.Add(new AdGroupVerticalIabMappedCombinedMap());
            modelBuilder.Configurations.Add(new AdGroupVerticalImportMap());
            modelBuilder.Configurations.Add(new AdGroupVerticalImportReportIdMap());
            modelBuilder.Configurations.Add(new AdGroupVerticalReportIdMap());
            modelBuilder.Configurations.Add(new AdGroupVideoActivityMap());
            modelBuilder.Configurations.Add(new AdGroupVideoActivityCombinedMap());
            modelBuilder.Configurations.Add(new AdGroupVideoActivityExceptionMap());
            modelBuilder.Configurations.Add(new AdGroupVideoActivityExceptionReportIdMap());
            modelBuilder.Configurations.Add(new AdGroupVideoActivityImportMap());
            modelBuilder.Configurations.Add(new AdGroupVideoActivityImportReportIdMap());
            modelBuilder.Configurations.Add(new AdGroupVideoActivityReportIdMap());
            modelBuilder.Configurations.Add(new AdGroupWebsiteMap());
            modelBuilder.Configurations.Add(new AdGroupWebsiteAnalyticMap());
            modelBuilder.Configurations.Add(new AdGroupWebsiteExceptionMap());
            modelBuilder.Configurations.Add(new AdGroupWebsiteImportMap());
            modelBuilder.Configurations.Add(new AdGroupWebsiteInventoryOnlyMap());
            modelBuilder.Configurations.Add(new AdGroupWebsiteNewMap());
            modelBuilder.Configurations.Add(new AdGroupWebsitePerformanceAndTargetingOnlyMap());
            modelBuilder.Configurations.Add(new AdGroupWebsiteTargetingMap());
            modelBuilder.Configurations.Add(new AdLookupMap());
            modelBuilder.Configurations.Add(new AdPartnerMap());
            modelBuilder.Configurations.Add(new AdPartnerCombinedMap());
            modelBuilder.Configurations.Add(new AdPartnerCombinedValidOnlyMap());
            modelBuilder.Configurations.Add(new AdPartnerExceptionMap());
            modelBuilder.Configurations.Add(new AdPartnerExceptionReportIdMap());
            modelBuilder.Configurations.Add(new AdPartnerImportMap());
            modelBuilder.Configurations.Add(new AdPartnerImportReportIdMap());
            modelBuilder.Configurations.Add(new AdPartnerPerformanceMap());
            modelBuilder.Configurations.Add(new AdPartnerReconciliationMap());
            modelBuilder.Configurations.Add(new AdPartnerReportIdMap());
            modelBuilder.Configurations.Add(new AdSlotLookupMap());
            modelBuilder.Configurations.Add(new AdvertiserBiLookupMap());
            modelBuilder.Configurations.Add(new AdvertiserProductBiLookupMap());
            modelBuilder.Configurations.Add(new BrandSafetyLookupMap());
            modelBuilder.Configurations.Add(new BrandSafetySiteCountMap());
            modelBuilder.Configurations.Add(new BuyerAccountBiLookupMap());
            modelBuilder.Configurations.Add(new BuyerAccountCreditLimitLookupMap());
            modelBuilder.Configurations.Add(new BuyerAccountLookupMap());
            modelBuilder.Configurations.Add(new BuyerAccountRecentAdGroupLookupMap());
            modelBuilder.Configurations.Add(new BuyerAccountShardLookupMap());
            modelBuilder.Configurations.Add(new CampaignBiLookupMap());
            modelBuilder.Configurations.Add(new CampaignLookupMap());
            modelBuilder.Configurations.Add(new ConversionMap());
            modelBuilder.Configurations.Add(new ConversionCombinedMap());
            modelBuilder.Configurations.Add(new ConversionExceptionMap());
            modelBuilder.Configurations.Add(new ConversionExceptionReportIdMap());
            modelBuilder.Configurations.Add(new ConversionImportMap());
            modelBuilder.Configurations.Add(new ConversionImportReportIdMap());
            modelBuilder.Configurations.Add(new ConversionReportIdMap());
            modelBuilder.Configurations.Add(new CountrySalesRegionLookupMap());
            modelBuilder.Configurations.Add(new CreativeBiLookupMap());
            modelBuilder.Configurations.Add(new DateLookupMap());
            modelBuilder.Configurations.Add(new DealBiLookupMap());
            modelBuilder.Configurations.Add(new DirectBuyDefaultImpressionMap());
            modelBuilder.Configurations.Add(new DirectBuyDefaultImpressionImportMap());
            modelBuilder.Configurations.Add(new DirectBuyDefaultImpressionImportReportIdMap());
            modelBuilder.Configurations.Add(new DirectBuyDefaultImpressionReportIdMap());
            modelBuilder.Configurations.Add(new DomainStatMap());
            modelBuilder.Configurations.Add(new DomainStatsAlternateMap());
            modelBuilder.Configurations.Add(new DomainStatsImportMap());
            modelBuilder.Configurations.Add(new ExchangeSpendSummaryLookupMap());
            modelBuilder.Configurations.Add(new GeoCityLookupMap());
            modelBuilder.Configurations.Add(new GeoCountryLookupMap());
            modelBuilder.Configurations.Add(new GeoMetroLookupMap());
            modelBuilder.Configurations.Add(new GeoRegionLookupMap());
            modelBuilder.Configurations.Add(new ImportSummaryMap());
            modelBuilder.Configurations.Add(new ImportSummaryReportIdMap());
            modelBuilder.Configurations.Add(new InventoryLookupMap());
            modelBuilder.Configurations.Add(new InventoryLookupExceptionMap());
            modelBuilder.Configurations.Add(new InventoryLookupImportMap());
            modelBuilder.Configurations.Add(new JobHistoryMap());
            modelBuilder.Configurations.Add(new LanguageLookupMap());
            modelBuilder.Configurations.Add(new PacingAndPricingHealthMap());
            modelBuilder.Configurations.Add(new PartnerBiLookupMap());
            modelBuilder.Configurations.Add(new PartnerLookupMap());
            modelBuilder.Configurations.Add(new PlacementBiLookupMap());
            modelBuilder.Configurations.Add(new PublisherBiLookupMap());
            modelBuilder.Configurations.Add(new PublisherLookupMap());
            modelBuilder.Configurations.Add(new SalesRegionLookupMap());
            modelBuilder.Configurations.Add(new SchemaMigrationMap());
            modelBuilder.Configurations.Add(new SegmentMap());
            modelBuilder.Configurations.Add(new SegmentCombinedMap());
            modelBuilder.Configurations.Add(new SegmentExceptionReportIdMap());
            modelBuilder.Configurations.Add(new SegmentImportMap());
            modelBuilder.Configurations.Add(new SegmentImportReportIdMap());
            modelBuilder.Configurations.Add(new SegmentLookupMap());
            modelBuilder.Configurations.Add(new SegmentLookupNewMap());
            modelBuilder.Configurations.Add(new SegmentReportIdMap());
            modelBuilder.Configurations.Add(new ThirdPartyPlacementLookupMap());
            modelBuilder.Configurations.Add(new VideoCreativeAnalyticsReportIdMap());
            modelBuilder.Configurations.Add(new WebsiteLookupMap());
            modelBuilder.Configurations.Add(new WeeklyLocationBidMap());
            modelBuilder.Configurations.Add(new WeeklyLocationBidsAlternateMap());
            modelBuilder.Configurations.Add(new WhiteListForecastMap());

            OnModelCreatingPartial(modelBuilder);
        }

        public static DbModelBuilder CreateModel(DbModelBuilder modelBuilder, string schema)
        {
            modelBuilder.Configurations.Add(new ActiveCpcAndCpaAdGroupsLookupMap(schema));
            modelBuilder.Configurations.Add(new AdAnalyticsReportIdMap(schema));
            modelBuilder.Configurations.Add(new AdDirectBuyMap(schema));
            modelBuilder.Configurations.Add(new AdDirectBuyAnalyticsReportIdMap(schema));
            modelBuilder.Configurations.Add(new AdDirectBuyCombinedMap(schema));
            modelBuilder.Configurations.Add(new AdDirectBuyImportMap(schema));
            modelBuilder.Configurations.Add(new AdDirectBuyImportReportIdMap(schema));
            modelBuilder.Configurations.Add(new AdDirectBuyReportIdMap(schema));
            modelBuilder.Configurations.Add(new AdGroupAbsRegionTargetingReportIdMap(schema));
            modelBuilder.Configurations.Add(new AdGroupAnalyticsFilterDataMap(schema));
            modelBuilder.Configurations.Add(new AdGroupAnalyticsGeoCityLookupMap(schema));
            modelBuilder.Configurations.Add(new AdGroupAnalyticsGeoCountryLookupMap(schema));
            modelBuilder.Configurations.Add(new AdGroupAnalyticsGeoRegionLookupMap(schema));
            modelBuilder.Configurations.Add(new AdGroupAnalyticsOptimizationModelMap(schema));
            modelBuilder.Configurations.Add(new AdGroupAnalyticsPartnerLookupMap(schema));
            modelBuilder.Configurations.Add(new AdGroupAnalyticsVerticalOneLookupMap(schema));
            modelBuilder.Configurations.Add(new AdGroupAnalyticsVerticalThreeLookupMap(schema));
            modelBuilder.Configurations.Add(new AdGroupAnalyticsVerticalTwoLookupMap(schema));
            modelBuilder.Configurations.Add(new AdGroupBiLookupMap(schema));
            modelBuilder.Configurations.Add(new AdGroupCityTargetingReportIdMap(schema));
            modelBuilder.Configurations.Add(new AdGroupConversionSegmentLookupMap(schema));
            modelBuilder.Configurations.Add(new AdGroupCountryTargetingReportIdMap(schema));
            modelBuilder.Configurations.Add(new AdGroupDayPartMap(schema));
            modelBuilder.Configurations.Add(new AdGroupDayPartAnalyticsReportIdMap(schema));
            modelBuilder.Configurations.Add(new AdGroupDayPartCombinedMap(schema));
            modelBuilder.Configurations.Add(new AdGroupDayPartExceptionMap(schema));
            modelBuilder.Configurations.Add(new AdGroupDayPartImportMap(schema));
            modelBuilder.Configurations.Add(new AdGroupDayPartImportReportIdMap(schema));
            modelBuilder.Configurations.Add(new AdGroupDayPartReportIdMap(schema));
            modelBuilder.Configurations.Add(new AdGroupDayPartTargetingReportIdMap(schema));
            modelBuilder.Configurations.Add(new AdGroupDealMap(schema));
            modelBuilder.Configurations.Add(new AdGroupDealAnalyticsReportIdMap(schema));
            modelBuilder.Configurations.Add(new AdGroupDealCombinedMap(schema));
            modelBuilder.Configurations.Add(new AdGroupDealDomainMap(schema));
            modelBuilder.Configurations.Add(new AdGroupDealDomainImportMap(schema));
            modelBuilder.Configurations.Add(new AdGroupDealDomainNewMap(schema));
            modelBuilder.Configurations.Add(new AdGroupDealExceptionMap(schema));
            modelBuilder.Configurations.Add(new AdGroupDealImportMap(schema));
            modelBuilder.Configurations.Add(new AdGroupDealImportReportIdMap(schema));
            modelBuilder.Configurations.Add(new AdGroupDealReportIdMap(schema));
            modelBuilder.Configurations.Add(new AdGroupDealSiteMap(schema));
            modelBuilder.Configurations.Add(new AdGroupDealSiteImportMap(schema));
            modelBuilder.Configurations.Add(new AdGroupDealSiteInventoryOnlyMap(schema));
            modelBuilder.Configurations.Add(new AdGroupDealSiteNewMap(schema));
            modelBuilder.Configurations.Add(new AdGroupDealSitePerformanceAndTargetingOnlyMap(schema));
            modelBuilder.Configurations.Add(new AdGroupDealTargetingReportIdMap(schema));
            modelBuilder.Configurations.Add(new AdGroupDeviceMap(schema));
            modelBuilder.Configurations.Add(new AdGroupDeviceAnalyticsReportIdMap(schema));
            modelBuilder.Configurations.Add(new AdGroupDeviceCombinedMap(schema));
            modelBuilder.Configurations.Add(new AdGroupDeviceExceptionMap(schema));
            modelBuilder.Configurations.Add(new AdGroupDeviceImportMap(schema));
            modelBuilder.Configurations.Add(new AdGroupDeviceImportReportIdMap(schema));
            modelBuilder.Configurations.Add(new AdGroupDeviceReportIdMap(schema));
            modelBuilder.Configurations.Add(new AdGroupDeviceTargetingReportIdMap(schema));
            modelBuilder.Configurations.Add(new AdGroupDomainMap(schema));
            modelBuilder.Configurations.Add(new AdGroupDomainAnalyticMap(schema));
            modelBuilder.Configurations.Add(new AdGroupDomainCombinedMap(schema));
            modelBuilder.Configurations.Add(new AdGroupDomainDailyMap(schema));
            modelBuilder.Configurations.Add(new AdGroupDomainDailyAlternateMap(schema));
            modelBuilder.Configurations.Add(new AdGroupDomainExceptionMap(schema));
            modelBuilder.Configurations.Add(new AdGroupDomainImportMap(schema));
            modelBuilder.Configurations.Add(new AdGroupDomainNewMap(schema));
            modelBuilder.Configurations.Add(new AdGroupDomainNewAlternateMap(schema));
            modelBuilder.Configurations.Add(new AdGroupDomainNewToDailyRollupBufferMap(schema));
            modelBuilder.Configurations.Add(new AdGroupDomainPerformanceOnlyMap(schema));
            modelBuilder.Configurations.Add(new AdGroupDoohGeoLocationGroupTargetingReportIdMap(schema));
            modelBuilder.Configurations.Add(new AdGroupDoohPanelLocationMap(schema));
            modelBuilder.Configurations.Add(new AdGroupGeoLocationMap(schema));
            modelBuilder.Configurations.Add(new AdGroupGeoLocationAnalyticsReportIdMap(schema));
            modelBuilder.Configurations.Add(new AdGroupGeoLocationCombinedMap(schema));
            modelBuilder.Configurations.Add(new AdGroupGeoLocationExceptionMap(schema));
            modelBuilder.Configurations.Add(new AdGroupGeoLocationImportMap(schema));
            modelBuilder.Configurations.Add(new AdGroupGeoLocationImportReportIdMap(schema));
            modelBuilder.Configurations.Add(new AdGroupGeoLocationPointRadiuMap(schema));
            modelBuilder.Configurations.Add(new AdGroupGeoLocationPointRadiusCombinedMap(schema));
            modelBuilder.Configurations.Add(new AdGroupGeoLocationPointRadiusExceptionMap(schema));
            modelBuilder.Configurations.Add(new AdGroupGeoLocationPointRadiusImportMap(schema));
            modelBuilder.Configurations.Add(new AdGroupGeoLocationPointRadiusImportReportIdMap(schema));
            modelBuilder.Configurations.Add(new AdGroupGeoLocationPointRadiusReportIdMap(schema));
            modelBuilder.Configurations.Add(new AdGroupGeoLocationReportIdMap(schema));
            modelBuilder.Configurations.Add(new AdGroupGeoPostcodeMap(schema));
            modelBuilder.Configurations.Add(new AdGroupGeoPostcodeAnalyticsReportIdMap(schema));
            modelBuilder.Configurations.Add(new AdGroupGeoPostcodeCombinedMap(schema));
            modelBuilder.Configurations.Add(new AdGroupGeoPostcodeExceptionMap(schema));
            modelBuilder.Configurations.Add(new AdGroupGeoPostcodeImportMap(schema));
            modelBuilder.Configurations.Add(new AdGroupGeoPostcodeImportReportIdMap(schema));
            modelBuilder.Configurations.Add(new AdGroupGeoPostcodeReportIdMap(schema));
            modelBuilder.Configurations.Add(new AdGroupGeoPostcodeTargetingReportIdMap(schema));
            modelBuilder.Configurations.Add(new AdGroupIabVerticalImportReportIdMap(schema));
            modelBuilder.Configurations.Add(new AdGroupLanguageMap(schema));
            modelBuilder.Configurations.Add(new AdGroupLanguageAnalyticsReportIdMap(schema));
            modelBuilder.Configurations.Add(new AdGroupLanguageCombinedMap(schema));
            modelBuilder.Configurations.Add(new AdGroupLanguageExceptionMap(schema));
            modelBuilder.Configurations.Add(new AdGroupLanguageImportMap(schema));
            modelBuilder.Configurations.Add(new AdGroupLanguageImportReportIdMap(schema));
            modelBuilder.Configurations.Add(new AdGroupLanguageReportIdMap(schema));
            modelBuilder.Configurations.Add(new AdGroupLanguageTargetingReportIdMap(schema));
            modelBuilder.Configurations.Add(new AdGroupLookupMap(schema));
            modelBuilder.Configurations.Add(new AdGroupMobileCarrierMap(schema));
            modelBuilder.Configurations.Add(new AdGroupMobileCarrierAnalyticsReportIdMap(schema));
            modelBuilder.Configurations.Add(new AdGroupMobileCarrierCombinedMap(schema));
            modelBuilder.Configurations.Add(new AdGroupMobileCarrierExceptionMap(schema));
            modelBuilder.Configurations.Add(new AdGroupMobileCarrierImportMap(schema));
            modelBuilder.Configurations.Add(new AdGroupMobileCarrierImportReportIdMap(schema));
            modelBuilder.Configurations.Add(new AdGroupMobileCarrierReportIdMap(schema));
            modelBuilder.Configurations.Add(new AdGroupMobileCarrierTargetingReportIdMap(schema));
            modelBuilder.Configurations.Add(new AdGroupPagePositionMap(schema));
            modelBuilder.Configurations.Add(new AdGroupPagePositionAnalyticsReportIdMap(schema));
            modelBuilder.Configurations.Add(new AdGroupPagePositionCombinedMap(schema));
            modelBuilder.Configurations.Add(new AdGroupPagePositionExceptionMap(schema));
            modelBuilder.Configurations.Add(new AdGroupPagePositionImportMap(schema));
            modelBuilder.Configurations.Add(new AdGroupPagePositionImportReportIdMap(schema));
            modelBuilder.Configurations.Add(new AdGroupPagePositionReportIdMap(schema));
            modelBuilder.Configurations.Add(new AdGroupPagePositionTargetingReportIdMap(schema));
            modelBuilder.Configurations.Add(new AdGroupPublisherMap(schema));
            modelBuilder.Configurations.Add(new AdGroupPublisherAnalyticsReportIdMap(schema));
            modelBuilder.Configurations.Add(new AdGroupPublisherCombinedMap(schema));
            modelBuilder.Configurations.Add(new AdGroupPublisherExceptionMap(schema));
            modelBuilder.Configurations.Add(new AdGroupPublisherImportMap(schema));
            modelBuilder.Configurations.Add(new AdGroupPublisherImportReportIdMap(schema));
            modelBuilder.Configurations.Add(new AdGroupPublisherReportIdMap(schema));
            modelBuilder.Configurations.Add(new AdGroupPublisherTargetingReportIdMap(schema));
            modelBuilder.Configurations.Add(new AdGroupRegionTargetingReportIdMap(schema));
            modelBuilder.Configurations.Add(new AdGroupSegmentMap(schema));
            modelBuilder.Configurations.Add(new AdGroupSegmentAnalyticMap(schema));
            modelBuilder.Configurations.Add(new AdGroupSegmentExceptionMap(schema));
            modelBuilder.Configurations.Add(new AdGroupSegmentImportMap(schema));
            modelBuilder.Configurations.Add(new AdGroupSegmentTargetingMap(schema));
            modelBuilder.Configurations.Add(new AdGroupVerticalMap(schema));
            modelBuilder.Configurations.Add(new AdGroupVertical1IabMappedTargetingReportIdMap(schema));
            modelBuilder.Configurations.Add(new AdGroupVertical1TargetingReportIdMap(schema));
            modelBuilder.Configurations.Add(new AdGroupVertical2IabMappedTargetingReportIdMap(schema));
            modelBuilder.Configurations.Add(new AdGroupVertical2TargetingReportIdMap(schema));
            modelBuilder.Configurations.Add(new AdGroupVertical3TargetingReportIdMap(schema));
            modelBuilder.Configurations.Add(new AdGroupVerticalAnalyticsReportIdMap(schema));
            modelBuilder.Configurations.Add(new AdGroupVerticalCombinedMap(schema));
            modelBuilder.Configurations.Add(new AdGroupVerticalExceptionMap(schema));
            modelBuilder.Configurations.Add(new AdGroupVerticalIabMappedAnalyticsReportIdMap(schema));
            modelBuilder.Configurations.Add(new AdGroupVerticalIabMappedCombinedMap(schema));
            modelBuilder.Configurations.Add(new AdGroupVerticalImportMap(schema));
            modelBuilder.Configurations.Add(new AdGroupVerticalImportReportIdMap(schema));
            modelBuilder.Configurations.Add(new AdGroupVerticalReportIdMap(schema));
            modelBuilder.Configurations.Add(new AdGroupVideoActivityMap(schema));
            modelBuilder.Configurations.Add(new AdGroupVideoActivityCombinedMap(schema));
            modelBuilder.Configurations.Add(new AdGroupVideoActivityExceptionMap(schema));
            modelBuilder.Configurations.Add(new AdGroupVideoActivityExceptionReportIdMap(schema));
            modelBuilder.Configurations.Add(new AdGroupVideoActivityImportMap(schema));
            modelBuilder.Configurations.Add(new AdGroupVideoActivityImportReportIdMap(schema));
            modelBuilder.Configurations.Add(new AdGroupVideoActivityReportIdMap(schema));
            modelBuilder.Configurations.Add(new AdGroupWebsiteMap(schema));
            modelBuilder.Configurations.Add(new AdGroupWebsiteAnalyticMap(schema));
            modelBuilder.Configurations.Add(new AdGroupWebsiteExceptionMap(schema));
            modelBuilder.Configurations.Add(new AdGroupWebsiteImportMap(schema));
            modelBuilder.Configurations.Add(new AdGroupWebsiteInventoryOnlyMap(schema));
            modelBuilder.Configurations.Add(new AdGroupWebsiteNewMap(schema));
            modelBuilder.Configurations.Add(new AdGroupWebsitePerformanceAndTargetingOnlyMap(schema));
            modelBuilder.Configurations.Add(new AdGroupWebsiteTargetingMap(schema));
            modelBuilder.Configurations.Add(new AdLookupMap(schema));
            modelBuilder.Configurations.Add(new AdPartnerMap(schema));
            modelBuilder.Configurations.Add(new AdPartnerCombinedMap(schema));
            modelBuilder.Configurations.Add(new AdPartnerCombinedValidOnlyMap(schema));
            modelBuilder.Configurations.Add(new AdPartnerExceptionMap(schema));
            modelBuilder.Configurations.Add(new AdPartnerExceptionReportIdMap(schema));
            modelBuilder.Configurations.Add(new AdPartnerImportMap(schema));
            modelBuilder.Configurations.Add(new AdPartnerImportReportIdMap(schema));
            modelBuilder.Configurations.Add(new AdPartnerPerformanceMap(schema));
            modelBuilder.Configurations.Add(new AdPartnerReconciliationMap(schema));
            modelBuilder.Configurations.Add(new AdPartnerReportIdMap(schema));
            modelBuilder.Configurations.Add(new AdSlotLookupMap(schema));
            modelBuilder.Configurations.Add(new AdvertiserBiLookupMap(schema));
            modelBuilder.Configurations.Add(new AdvertiserProductBiLookupMap(schema));
            modelBuilder.Configurations.Add(new BrandSafetyLookupMap(schema));
            modelBuilder.Configurations.Add(new BrandSafetySiteCountMap(schema));
            modelBuilder.Configurations.Add(new BuyerAccountBiLookupMap(schema));
            modelBuilder.Configurations.Add(new BuyerAccountCreditLimitLookupMap(schema));
            modelBuilder.Configurations.Add(new BuyerAccountLookupMap(schema));
            modelBuilder.Configurations.Add(new BuyerAccountRecentAdGroupLookupMap(schema));
            modelBuilder.Configurations.Add(new BuyerAccountShardLookupMap(schema));
            modelBuilder.Configurations.Add(new CampaignBiLookupMap(schema));
            modelBuilder.Configurations.Add(new CampaignLookupMap(schema));
            modelBuilder.Configurations.Add(new ConversionMap(schema));
            modelBuilder.Configurations.Add(new ConversionCombinedMap(schema));
            modelBuilder.Configurations.Add(new ConversionExceptionMap(schema));
            modelBuilder.Configurations.Add(new ConversionExceptionReportIdMap(schema));
            modelBuilder.Configurations.Add(new ConversionImportMap(schema));
            modelBuilder.Configurations.Add(new ConversionImportReportIdMap(schema));
            modelBuilder.Configurations.Add(new ConversionReportIdMap(schema));
            modelBuilder.Configurations.Add(new CountrySalesRegionLookupMap(schema));
            modelBuilder.Configurations.Add(new CreativeBiLookupMap(schema));
            modelBuilder.Configurations.Add(new DateLookupMap(schema));
            modelBuilder.Configurations.Add(new DealBiLookupMap(schema));
            modelBuilder.Configurations.Add(new DirectBuyDefaultImpressionMap(schema));
            modelBuilder.Configurations.Add(new DirectBuyDefaultImpressionImportMap(schema));
            modelBuilder.Configurations.Add(new DirectBuyDefaultImpressionImportReportIdMap(schema));
            modelBuilder.Configurations.Add(new DirectBuyDefaultImpressionReportIdMap(schema));
            modelBuilder.Configurations.Add(new DomainStatMap(schema));
            modelBuilder.Configurations.Add(new DomainStatsAlternateMap(schema));
            modelBuilder.Configurations.Add(new DomainStatsImportMap(schema));
            modelBuilder.Configurations.Add(new ExchangeSpendSummaryLookupMap(schema));
            modelBuilder.Configurations.Add(new GeoCityLookupMap(schema));
            modelBuilder.Configurations.Add(new GeoCountryLookupMap(schema));
            modelBuilder.Configurations.Add(new GeoMetroLookupMap(schema));
            modelBuilder.Configurations.Add(new GeoRegionLookupMap(schema));
            modelBuilder.Configurations.Add(new ImportSummaryMap(schema));
            modelBuilder.Configurations.Add(new ImportSummaryReportIdMap(schema));
            modelBuilder.Configurations.Add(new InventoryLookupMap(schema));
            modelBuilder.Configurations.Add(new InventoryLookupExceptionMap(schema));
            modelBuilder.Configurations.Add(new InventoryLookupImportMap(schema));
            modelBuilder.Configurations.Add(new JobHistoryMap(schema));
            modelBuilder.Configurations.Add(new LanguageLookupMap(schema));
            modelBuilder.Configurations.Add(new PacingAndPricingHealthMap(schema));
            modelBuilder.Configurations.Add(new PartnerBiLookupMap(schema));
            modelBuilder.Configurations.Add(new PartnerLookupMap(schema));
            modelBuilder.Configurations.Add(new PlacementBiLookupMap(schema));
            modelBuilder.Configurations.Add(new PublisherBiLookupMap(schema));
            modelBuilder.Configurations.Add(new PublisherLookupMap(schema));
            modelBuilder.Configurations.Add(new SalesRegionLookupMap(schema));
            modelBuilder.Configurations.Add(new SchemaMigrationMap(schema));
            modelBuilder.Configurations.Add(new SegmentMap(schema));
            modelBuilder.Configurations.Add(new SegmentCombinedMap(schema));
            modelBuilder.Configurations.Add(new SegmentExceptionReportIdMap(schema));
            modelBuilder.Configurations.Add(new SegmentImportMap(schema));
            modelBuilder.Configurations.Add(new SegmentImportReportIdMap(schema));
            modelBuilder.Configurations.Add(new SegmentLookupMap(schema));
            modelBuilder.Configurations.Add(new SegmentLookupNewMap(schema));
            modelBuilder.Configurations.Add(new SegmentReportIdMap(schema));
            modelBuilder.Configurations.Add(new ThirdPartyPlacementLookupMap(schema));
            modelBuilder.Configurations.Add(new VideoCreativeAnalyticsReportIdMap(schema));
            modelBuilder.Configurations.Add(new WebsiteLookupMap(schema));
            modelBuilder.Configurations.Add(new WeeklyLocationBidMap(schema));
            modelBuilder.Configurations.Add(new WeeklyLocationBidsAlternateMap(schema));
            modelBuilder.Configurations.Add(new WhiteListForecastMap(schema));
            return modelBuilder;
        }

        partial void InitializePartial();
        partial void OnModelCreatingPartial(DbModelBuilder modelBuilder);
        
        // Stored Procedures
        public int CreateNewSegmentEntriesForDiscoveredThirdPartySegments()
        {
            var procResultParam = new SqlParameter { ParameterName = "@procResult", SqlDbType = SqlDbType.Int, Direction = ParameterDirection.Output };
 
            Database.ExecuteSqlCommand("EXEC @procResult = [analytics].[CreateNewSegmentEntriesForDiscoveredThirdPartySegments] ", procResultParam);
 
            return (int) procResultParam.Value;
        }

        public int GetAdGroupReportsByDay(int? adGroupId, DateTime? localStartDate, DateTime? localEndDate)
        {
            var adGroupIdParam = new SqlParameter { ParameterName = "@AdGroupID", SqlDbType = SqlDbType.Int, Direction = ParameterDirection.Input, Value = adGroupId.GetValueOrDefault() };
            if (!adGroupId.HasValue)
                adGroupIdParam.Value = DBNull.Value;

            var localStartDateParam = new SqlParameter { ParameterName = "@LocalStartDate", SqlDbType = SqlDbType.Date, Direction = ParameterDirection.Input, Value = localStartDate.GetValueOrDefault() };
            if (!localStartDate.HasValue)
                localStartDateParam.Value = DBNull.Value;

            var localEndDateParam = new SqlParameter { ParameterName = "@LocalEndDate", SqlDbType = SqlDbType.Date, Direction = ParameterDirection.Input, Value = localEndDate.GetValueOrDefault() };
            if (!localEndDate.HasValue)
                localEndDateParam.Value = DBNull.Value;

            var procResultParam = new SqlParameter { ParameterName = "@procResult", SqlDbType = SqlDbType.Int, Direction = ParameterDirection.Output };
 
            Database.ExecuteSqlCommand("EXEC @procResult = [analytics].[GetAdGroupReportsByDay] @AdGroupID, @LocalStartDate, @LocalEndDate", adGroupIdParam, localStartDateParam, localEndDateParam, procResultParam);
 
            return (int) procResultParam.Value;
        }

        public int GetAdGroupReportsByHour(int? adGroupId, DateTime? localStartDate, DateTime? localEndDate)
        {
            var adGroupIdParam = new SqlParameter { ParameterName = "@AdGroupID", SqlDbType = SqlDbType.Int, Direction = ParameterDirection.Input, Value = adGroupId.GetValueOrDefault() };
            if (!adGroupId.HasValue)
                adGroupIdParam.Value = DBNull.Value;

            var localStartDateParam = new SqlParameter { ParameterName = "@LocalStartDate", SqlDbType = SqlDbType.Date, Direction = ParameterDirection.Input, Value = localStartDate.GetValueOrDefault() };
            if (!localStartDate.HasValue)
                localStartDateParam.Value = DBNull.Value;

            var localEndDateParam = new SqlParameter { ParameterName = "@LocalEndDate", SqlDbType = SqlDbType.Date, Direction = ParameterDirection.Input, Value = localEndDate.GetValueOrDefault() };
            if (!localEndDate.HasValue)
                localEndDateParam.Value = DBNull.Value;

            var procResultParam = new SqlParameter { ParameterName = "@procResult", SqlDbType = SqlDbType.Int, Direction = ParameterDirection.Output };
 
            Database.ExecuteSqlCommand("EXEC @procResult = [analytics].[GetAdGroupReportsByHour] @AdGroupID, @LocalStartDate, @LocalEndDate", adGroupIdParam, localStartDateParam, localEndDateParam, procResultParam);
 
            return (int) procResultParam.Value;
        }

        public int GetAdGroupReportsForecast(int? campaignId, int? adGroupId, int? localTimeZoneId, int? goalType, int? pacingType, long? targetAmount)
        {
            var campaignIdParam = new SqlParameter { ParameterName = "@CampaignID", SqlDbType = SqlDbType.Int, Direction = ParameterDirection.Input, Value = campaignId.GetValueOrDefault() };
            if (!campaignId.HasValue)
                campaignIdParam.Value = DBNull.Value;

            var adGroupIdParam = new SqlParameter { ParameterName = "@AdGroupID", SqlDbType = SqlDbType.Int, Direction = ParameterDirection.Input, Value = adGroupId.GetValueOrDefault() };
            if (!adGroupId.HasValue)
                adGroupIdParam.Value = DBNull.Value;

            var localTimeZoneIdParam = new SqlParameter { ParameterName = "@LocalTimeZoneID", SqlDbType = SqlDbType.Int, Direction = ParameterDirection.Input, Value = localTimeZoneId.GetValueOrDefault() };
            if (!localTimeZoneId.HasValue)
                localTimeZoneIdParam.Value = DBNull.Value;

            var goalTypeParam = new SqlParameter { ParameterName = "@GoalType", SqlDbType = SqlDbType.Int, Direction = ParameterDirection.Input, Value = goalType.GetValueOrDefault() };
            if (!goalType.HasValue)
                goalTypeParam.Value = DBNull.Value;

            var pacingTypeParam = new SqlParameter { ParameterName = "@PacingType", SqlDbType = SqlDbType.Int, Direction = ParameterDirection.Input, Value = pacingType.GetValueOrDefault() };
            if (!pacingType.HasValue)
                pacingTypeParam.Value = DBNull.Value;

            var targetAmountParam = new SqlParameter { ParameterName = "@TargetAmount", SqlDbType = SqlDbType.BigInt, Direction = ParameterDirection.Input, Value = targetAmount.GetValueOrDefault() };
            if (!targetAmount.HasValue)
                targetAmountParam.Value = DBNull.Value;

            var procResultParam = new SqlParameter { ParameterName = "@procResult", SqlDbType = SqlDbType.Int, Direction = ParameterDirection.Output };
 
            Database.ExecuteSqlCommand("EXEC @procResult = [analytics].[GetAdGroupReportsForecast] @CampaignID, @AdGroupID, @LocalTimeZoneID, @GoalType, @PacingType, @TargetAmount", campaignIdParam, adGroupIdParam, localTimeZoneIdParam, goalTypeParam, pacingTypeParam, targetAmountParam, procResultParam);
 
            return (int) procResultParam.Value;
        }

        public int GetAdGroupReportsTotal(int? adGroupId, DateTime? localStartDate)
        {
            var adGroupIdParam = new SqlParameter { ParameterName = "@AdGroupID", SqlDbType = SqlDbType.Int, Direction = ParameterDirection.Input, Value = adGroupId.GetValueOrDefault() };
            if (!adGroupId.HasValue)
                adGroupIdParam.Value = DBNull.Value;

            var localStartDateParam = new SqlParameter { ParameterName = "@LocalStartDate", SqlDbType = SqlDbType.DateTime, Direction = ParameterDirection.Input, Value = localStartDate.GetValueOrDefault() };
            if (!localStartDate.HasValue)
                localStartDateParam.Value = DBNull.Value;

            var procResultParam = new SqlParameter { ParameterName = "@procResult", SqlDbType = SqlDbType.Int, Direction = ParameterDirection.Output };
 
            Database.ExecuteSqlCommand("EXEC @procResult = [analytics].[GetAdGroupReportsTotal] @AdGroupID, @LocalStartDate", adGroupIdParam, localStartDateParam, procResultParam);
 
            return (int) procResultParam.Value;
        }

        public List<GetAnalyticsDataSegmentsTotalReturnModel> GetAnalyticsDataSegmentsTotal(string rtbSegmentId)
        {
            int procResult;
            return GetAnalyticsDataSegmentsTotal(rtbSegmentId, out procResult);
        }

        public List<GetAnalyticsDataSegmentsTotalReturnModel> GetAnalyticsDataSegmentsTotal(string rtbSegmentId, out int procResult)
        {
            var rtbSegmentIdParam = new SqlParameter { ParameterName = "@RtbSegmentID", SqlDbType = SqlDbType.VarChar, Direction = ParameterDirection.Input, Value = rtbSegmentId, Size = 24 };
            if (rtbSegmentIdParam.Value == null)
                rtbSegmentIdParam.Value = DBNull.Value;

            var procResultParam = new SqlParameter { ParameterName = "@procResult", SqlDbType = SqlDbType.Int, Direction = ParameterDirection.Output };
 
            var procResultData = Database.SqlQuery<GetAnalyticsDataSegmentsTotalReturnModel>("EXEC @procResult = [analytics].[GetAnalyticsDataSegmentsTotal] @RtbSegmentID", rtbSegmentIdParam, procResultParam).ToList();
 
            procResult = (int) procResultParam.Value;
            return procResultData;
        }

        public int GetAnalyticsReportsTotal(int? adGroupId)
        {
            var adGroupIdParam = new SqlParameter { ParameterName = "@AdGroupID", SqlDbType = SqlDbType.Int, Direction = ParameterDirection.Input, Value = adGroupId.GetValueOrDefault() };
            if (!adGroupId.HasValue)
                adGroupIdParam.Value = DBNull.Value;

            var procResultParam = new SqlParameter { ParameterName = "@procResult", SqlDbType = SqlDbType.Int, Direction = ParameterDirection.Output };
 
            Database.ExecuteSqlCommand("EXEC @procResult = [analytics].[GetAnalyticsReportsTotal] @AdGroupID", adGroupIdParam, procResultParam);
 
            return (int) procResultParam.Value;
        }

        public int GetAnalyticsReportsTotalThisHour(int? adGroupId)
        {
            var adGroupIdParam = new SqlParameter { ParameterName = "@AdGroupID", SqlDbType = SqlDbType.Int, Direction = ParameterDirection.Input, Value = adGroupId.GetValueOrDefault() };
            if (!adGroupId.HasValue)
                adGroupIdParam.Value = DBNull.Value;

            var procResultParam = new SqlParameter { ParameterName = "@procResult", SqlDbType = SqlDbType.Int, Direction = ParameterDirection.Output };
 
            Database.ExecuteSqlCommand("EXEC @procResult = [analytics].[GetAnalyticsReportsTotalThisHour] @AdGroupID", adGroupIdParam, procResultParam);
 
            return (int) procResultParam.Value;
        }

        public int GetAnalyticsReportsTotalThisMonth(int? adGroupId)
        {
            var adGroupIdParam = new SqlParameter { ParameterName = "@AdGroupID", SqlDbType = SqlDbType.Int, Direction = ParameterDirection.Input, Value = adGroupId.GetValueOrDefault() };
            if (!adGroupId.HasValue)
                adGroupIdParam.Value = DBNull.Value;

            var procResultParam = new SqlParameter { ParameterName = "@procResult", SqlDbType = SqlDbType.Int, Direction = ParameterDirection.Output };
 
            Database.ExecuteSqlCommand("EXEC @procResult = [analytics].[GetAnalyticsReportsTotalThisMonth] @AdGroupID", adGroupIdParam, procResultParam);
 
            return (int) procResultParam.Value;
        }

        public int GetAnalyticsReportsTotalThisWeek(int? adGroupId)
        {
            var adGroupIdParam = new SqlParameter { ParameterName = "@AdGroupID", SqlDbType = SqlDbType.Int, Direction = ParameterDirection.Input, Value = adGroupId.GetValueOrDefault() };
            if (!adGroupId.HasValue)
                adGroupIdParam.Value = DBNull.Value;

            var procResultParam = new SqlParameter { ParameterName = "@procResult", SqlDbType = SqlDbType.Int, Direction = ParameterDirection.Output };
 
            Database.ExecuteSqlCommand("EXEC @procResult = [analytics].[GetAnalyticsReportsTotalThisWeek] @AdGroupID", adGroupIdParam, procResultParam);
 
            return (int) procResultParam.Value;
        }

        public int GetAnalyticsReportsTotalToday(int? adGroupId)
        {
            var adGroupIdParam = new SqlParameter { ParameterName = "@AdGroupID", SqlDbType = SqlDbType.Int, Direction = ParameterDirection.Input, Value = adGroupId.GetValueOrDefault() };
            if (!adGroupId.HasValue)
                adGroupIdParam.Value = DBNull.Value;

            var procResultParam = new SqlParameter { ParameterName = "@procResult", SqlDbType = SqlDbType.Int, Direction = ParameterDirection.Output };
 
            Database.ExecuteSqlCommand("EXEC @procResult = [analytics].[GetAnalyticsReportsTotalToday] @AdGroupID", adGroupIdParam, procResultParam);
 
            return (int) procResultParam.Value;
        }

        public List<GetAnalyticsSummaryTopLevelReturnModel> GetAnalyticsSummaryTopLevel(DateTime? localStartDate, DateTime? localEndDate)
        {
            int procResult;
            return GetAnalyticsSummaryTopLevel(localStartDate, localEndDate, out procResult);
        }

        public List<GetAnalyticsSummaryTopLevelReturnModel> GetAnalyticsSummaryTopLevel(DateTime? localStartDate, DateTime? localEndDate, out int procResult)
        {
            var localStartDateParam = new SqlParameter { ParameterName = "@LocalStartDate", SqlDbType = SqlDbType.Date, Direction = ParameterDirection.Input, Value = localStartDate.GetValueOrDefault() };
            if (!localStartDate.HasValue)
                localStartDateParam.Value = DBNull.Value;

            var localEndDateParam = new SqlParameter { ParameterName = "@LocalEndDate", SqlDbType = SqlDbType.Date, Direction = ParameterDirection.Input, Value = localEndDate.GetValueOrDefault() };
            if (!localEndDate.HasValue)
                localEndDateParam.Value = DBNull.Value;

            var procResultParam = new SqlParameter { ParameterName = "@procResult", SqlDbType = SqlDbType.Int, Direction = ParameterDirection.Output };
 
            var procResultData = Database.SqlQuery<GetAnalyticsSummaryTopLevelReturnModel>("EXEC @procResult = [analytics].[GetAnalyticsSummaryTopLevel] @LocalStartDate, @LocalEndDate", localStartDateParam, localEndDateParam, procResultParam).ToList();
 
            procResult = (int) procResultParam.Value;
            return procResultData;
        }

        public List<GetAnalyticsSummaryTopLevelByAdvertiserReturnModel> GetAnalyticsSummaryTopLevelByAdvertiser(int? buyerAccountId, int? advertiserId, DateTime? localStartDate, DateTime? localEndDate)
        {
            int procResult;
            return GetAnalyticsSummaryTopLevelByAdvertiser(buyerAccountId, advertiserId, localStartDate, localEndDate, out procResult);
        }

        public List<GetAnalyticsSummaryTopLevelByAdvertiserReturnModel> GetAnalyticsSummaryTopLevelByAdvertiser(int? buyerAccountId, int? advertiserId, DateTime? localStartDate, DateTime? localEndDate, out int procResult)
        {
            var buyerAccountIdParam = new SqlParameter { ParameterName = "@BuyerAccountID", SqlDbType = SqlDbType.Int, Direction = ParameterDirection.Input, Value = buyerAccountId.GetValueOrDefault() };
            if (!buyerAccountId.HasValue)
                buyerAccountIdParam.Value = DBNull.Value;

            var advertiserIdParam = new SqlParameter { ParameterName = "@AdvertiserID", SqlDbType = SqlDbType.Int, Direction = ParameterDirection.Input, Value = advertiserId.GetValueOrDefault() };
            if (!advertiserId.HasValue)
                advertiserIdParam.Value = DBNull.Value;

            var localStartDateParam = new SqlParameter { ParameterName = "@LocalStartDate", SqlDbType = SqlDbType.Date, Direction = ParameterDirection.Input, Value = localStartDate.GetValueOrDefault() };
            if (!localStartDate.HasValue)
                localStartDateParam.Value = DBNull.Value;

            var localEndDateParam = new SqlParameter { ParameterName = "@LocalEndDate", SqlDbType = SqlDbType.Date, Direction = ParameterDirection.Input, Value = localEndDate.GetValueOrDefault() };
            if (!localEndDate.HasValue)
                localEndDateParam.Value = DBNull.Value;

            var procResultParam = new SqlParameter { ParameterName = "@procResult", SqlDbType = SqlDbType.Int, Direction = ParameterDirection.Output };
 
            var procResultData = Database.SqlQuery<GetAnalyticsSummaryTopLevelByAdvertiserReturnModel>("EXEC @procResult = [analytics].[GetAnalyticsSummaryTopLevelByAdvertiser] @BuyerAccountID, @AdvertiserID, @LocalStartDate, @LocalEndDate", buyerAccountIdParam, advertiserIdParam, localStartDateParam, localEndDateParam, procResultParam).ToList();
 
            procResult = (int) procResultParam.Value;
            return procResultData;
        }

        public int GetAnalyticsWebsite(int? websiteId)
        {
            var websiteIdParam = new SqlParameter { ParameterName = "@WebsiteID", SqlDbType = SqlDbType.Int, Direction = ParameterDirection.Input, Value = websiteId.GetValueOrDefault() };
            if (!websiteId.HasValue)
                websiteIdParam.Value = DBNull.Value;

            var procResultParam = new SqlParameter { ParameterName = "@procResult", SqlDbType = SqlDbType.Int, Direction = ParameterDirection.Output };
 
            Database.ExecuteSqlCommand("EXEC @procResult = [analytics].[GetAnalyticsWebsite] @WebsiteID", websiteIdParam, procResultParam);
 
            return (int) procResultParam.Value;
        }

        public int GetAnalyticsWebsitesTotal(int? campaignId, int? adGroupId)
        {
            var campaignIdParam = new SqlParameter { ParameterName = "@CampaignID", SqlDbType = SqlDbType.Int, Direction = ParameterDirection.Input, Value = campaignId.GetValueOrDefault() };
            if (!campaignId.HasValue)
                campaignIdParam.Value = DBNull.Value;

            var adGroupIdParam = new SqlParameter { ParameterName = "@AdGroupID", SqlDbType = SqlDbType.Int, Direction = ParameterDirection.Input, Value = adGroupId.GetValueOrDefault() };
            if (!adGroupId.HasValue)
                adGroupIdParam.Value = DBNull.Value;

            var procResultParam = new SqlParameter { ParameterName = "@procResult", SqlDbType = SqlDbType.Int, Direction = ParameterDirection.Output };
 
            Database.ExecuteSqlCommand("EXEC @procResult = [analytics].[GetAnalyticsWebsitesTotal] @CampaignID, @AdGroupID", campaignIdParam, adGroupIdParam, procResultParam);
 
            return (int) procResultParam.Value;
        }

        public List<GetConversionReportReturnModel> GetConversionReport(int? buyerAccountId)
        {
            int procResult;
            return GetConversionReport(buyerAccountId, out procResult);
        }

        public List<GetConversionReportReturnModel> GetConversionReport(int? buyerAccountId, out int procResult)
        {
            var buyerAccountIdParam = new SqlParameter { ParameterName = "@BuyerAccountID", SqlDbType = SqlDbType.Int, Direction = ParameterDirection.Input, Value = buyerAccountId.GetValueOrDefault() };
            if (!buyerAccountId.HasValue)
                buyerAccountIdParam.Value = DBNull.Value;

            var procResultParam = new SqlParameter { ParameterName = "@procResult", SqlDbType = SqlDbType.Int, Direction = ParameterDirection.Output };
 
            var procResultData = Database.SqlQuery<GetConversionReportReturnModel>("EXEC @procResult = [analytics].[GetConversionReport] @BuyerAccountID", buyerAccountIdParam, procResultParam).ToList();
 
            procResult = (int) procResultParam.Value;
            return procResultData;
        }

        public List<GetConversionReportReportIdReturnModel> GetConversionReportReportId(int? buyerAccountId)
        {
            int procResult;
            return GetConversionReportReportId(buyerAccountId, out procResult);
        }

        public List<GetConversionReportReportIdReturnModel> GetConversionReportReportId(int? buyerAccountId, out int procResult)
        {
            var buyerAccountIdParam = new SqlParameter { ParameterName = "@BuyerAccountID", SqlDbType = SqlDbType.Int, Direction = ParameterDirection.Input, Value = buyerAccountId.GetValueOrDefault() };
            if (!buyerAccountId.HasValue)
                buyerAccountIdParam.Value = DBNull.Value;

            var procResultParam = new SqlParameter { ParameterName = "@procResult", SqlDbType = SqlDbType.Int, Direction = ParameterDirection.Output };
 
            var procResultData = Database.SqlQuery<GetConversionReportReportIdReturnModel>("EXEC @procResult = [analytics].[GetConversionReportReportID] @BuyerAccountID", buyerAccountIdParam, procResultParam).ToList();
 
            procResult = (int) procResultParam.Value;
            return procResultData;
        }

        public int GetDomainPerformance(int? adGroupId, int? pageSize, string orderby, string searchText)
        {
            var adGroupIdParam = new SqlParameter { ParameterName = "@adGroupID", SqlDbType = SqlDbType.Int, Direction = ParameterDirection.Input, Value = adGroupId.GetValueOrDefault() };
            if (!adGroupId.HasValue)
                adGroupIdParam.Value = DBNull.Value;

            var pageSizeParam = new SqlParameter { ParameterName = "@pageSize", SqlDbType = SqlDbType.Int, Direction = ParameterDirection.Input, Value = pageSize.GetValueOrDefault() };
            if (!pageSize.HasValue)
                pageSizeParam.Value = DBNull.Value;

            var orderbyParam = new SqlParameter { ParameterName = "@orderby", SqlDbType = SqlDbType.NVarChar, Direction = ParameterDirection.Input, Value = orderby, Size = 100 };
            if (orderbyParam.Value == null)
                orderbyParam.Value = DBNull.Value;

            var searchTextParam = new SqlParameter { ParameterName = "@searchText", SqlDbType = SqlDbType.NVarChar, Direction = ParameterDirection.Input, Value = searchText, Size = 64 };
            if (searchTextParam.Value == null)
                searchTextParam.Value = DBNull.Value;

            var procResultParam = new SqlParameter { ParameterName = "@procResult", SqlDbType = SqlDbType.Int, Direction = ParameterDirection.Output };
 
            Database.ExecuteSqlCommand("EXEC @procResult = [analytics].[GetDomainPerformance] @adGroupID, @pageSize, @orderby, @searchText", adGroupIdParam, pageSizeParam, orderbyParam, searchTextParam, procResultParam);
 
            return (int) procResultParam.Value;
        }

        public int GetDomainPerformanceTotals(int? adGroupId, int? costView, string searchText)
        {
            var adGroupIdParam = new SqlParameter { ParameterName = "@adGroupID", SqlDbType = SqlDbType.Int, Direction = ParameterDirection.Input, Value = adGroupId.GetValueOrDefault() };
            if (!adGroupId.HasValue)
                adGroupIdParam.Value = DBNull.Value;

            var costViewParam = new SqlParameter { ParameterName = "@costView", SqlDbType = SqlDbType.Int, Direction = ParameterDirection.Input, Value = costView.GetValueOrDefault() };
            if (!costView.HasValue)
                costViewParam.Value = DBNull.Value;

            var searchTextParam = new SqlParameter { ParameterName = "@searchText", SqlDbType = SqlDbType.NVarChar, Direction = ParameterDirection.Input, Value = searchText, Size = 64 };
            if (searchTextParam.Value == null)
                searchTextParam.Value = DBNull.Value;

            var procResultParam = new SqlParameter { ParameterName = "@procResult", SqlDbType = SqlDbType.Int, Direction = ParameterDirection.Output };
 
            Database.ExecuteSqlCommand("EXEC @procResult = [analytics].[GetDomainPerformanceTotals] @adGroupID, @costView, @searchText", adGroupIdParam, costViewParam, searchTextParam, procResultParam);
 
            return (int) procResultParam.Value;
        }

        public int GetLastAdGroupWebsiteTimestamp(out DateTime? timestamp)
        {
            var timestampParam = new SqlParameter { ParameterName = "@timestamp", SqlDbType = SqlDbType.Date, Direction = ParameterDirection.Output };
            var procResultParam = new SqlParameter { ParameterName = "@procResult", SqlDbType = SqlDbType.Int, Direction = ParameterDirection.Output };
 
            Database.ExecuteSqlCommand("EXEC @procResult = [analytics].[GetLastAdGroupWebsiteTimestamp] @timestamp OUTPUT", timestampParam, procResultParam);
            if (((INullable)timestampParam.SqlValue).IsNull)
                timestamp = null;
            else
            timestamp = (DateTime) timestampParam.Value;
 
            return (int) procResultParam.Value;
        }

        public int GetLastAdPartnerTimestamp(out DateTime? timestamp)
        {
            var timestampParam = new SqlParameter { ParameterName = "@timestamp", SqlDbType = SqlDbType.DateTime, Direction = ParameterDirection.Output };
            var procResultParam = new SqlParameter { ParameterName = "@procResult", SqlDbType = SqlDbType.Int, Direction = ParameterDirection.Output };
 
            Database.ExecuteSqlCommand("EXEC @procResult = [analytics].[GetLastAdPartnerTimestamp] @timestamp OUTPUT", timestampParam, procResultParam);
            if (((INullable)timestampParam.SqlValue).IsNull)
                timestamp = null;
            else
            timestamp = (DateTime) timestampParam.Value;
 
            return (int) procResultParam.Value;
        }

        public int GetLastJobHistoryTimestamp(out DateTime? timestamp)
        {
            var timestampParam = new SqlParameter { ParameterName = "@timestamp", SqlDbType = SqlDbType.DateTime, Direction = ParameterDirection.Output };
            var procResultParam = new SqlParameter { ParameterName = "@procResult", SqlDbType = SqlDbType.Int, Direction = ParameterDirection.Output };
 
            Database.ExecuteSqlCommand("EXEC @procResult = [analytics].[GetLastJobHistoryTimestamp] @timestamp OUTPUT", timestampParam, procResultParam);
            if (((INullable)timestampParam.SqlValue).IsNull)
                timestamp = null;
            else
            timestamp = (DateTime) timestampParam.Value;
 
            return (int) procResultParam.Value;
        }

        public int GetLastSegmentTimestamp(out DateTime? timestamp)
        {
            var timestampParam = new SqlParameter { ParameterName = "@timestamp", SqlDbType = SqlDbType.DateTime, Direction = ParameterDirection.Output };
            var procResultParam = new SqlParameter { ParameterName = "@procResult", SqlDbType = SqlDbType.Int, Direction = ParameterDirection.Output };
 
            Database.ExecuteSqlCommand("EXEC @procResult = [analytics].[GetLastSegmentTimestamp] @timestamp OUTPUT", timestampParam, procResultParam);
            if (((INullable)timestampParam.SqlValue).IsNull)
                timestamp = null;
            else
            timestamp = (DateTime) timestampParam.Value;
 
            return (int) procResultParam.Value;
        }

        public List<GetLiveStrategiesReportReturnModel> GetLiveStrategiesReport(int? buyerAccountId, DateTime? utcNow, DateTime? localNow)
        {
            int procResult;
            return GetLiveStrategiesReport(buyerAccountId, utcNow, localNow, out procResult);
        }

        public List<GetLiveStrategiesReportReturnModel> GetLiveStrategiesReport(int? buyerAccountId, DateTime? utcNow, DateTime? localNow, out int procResult)
        {
            var buyerAccountIdParam = new SqlParameter { ParameterName = "@buyerAccountID", SqlDbType = SqlDbType.Int, Direction = ParameterDirection.Input, Value = buyerAccountId.GetValueOrDefault() };
            if (!buyerAccountId.HasValue)
                buyerAccountIdParam.Value = DBNull.Value;

            var utcNowParam = new SqlParameter { ParameterName = "@utcNow", SqlDbType = SqlDbType.DateTime, Direction = ParameterDirection.Input, Value = utcNow.GetValueOrDefault() };
            if (!utcNow.HasValue)
                utcNowParam.Value = DBNull.Value;

            var localNowParam = new SqlParameter { ParameterName = "@localNow", SqlDbType = SqlDbType.DateTime, Direction = ParameterDirection.Input, Value = localNow.GetValueOrDefault() };
            if (!localNow.HasValue)
                localNowParam.Value = DBNull.Value;

            var procResultParam = new SqlParameter { ParameterName = "@procResult", SqlDbType = SqlDbType.Int, Direction = ParameterDirection.Output };
 
            var procResultData = Database.SqlQuery<GetLiveStrategiesReportReturnModel>("EXEC @procResult = [analytics].[GetLiveStrategiesReport] @buyerAccountID, @utcNow, @localNow", buyerAccountIdParam, utcNowParam, localNowParam, procResultParam).ToList();
 
            procResult = (int) procResultParam.Value;
            return procResultData;
        }

        public List<GetPrivateMarketsPublishersTotalReturnModel> GetPrivateMarketsPublishersTotal(int? buyerAccountId)
        {
            int procResult;
            return GetPrivateMarketsPublishersTotal(buyerAccountId, out procResult);
        }

        public List<GetPrivateMarketsPublishersTotalReturnModel> GetPrivateMarketsPublishersTotal(int? buyerAccountId, out int procResult)
        {
            var buyerAccountIdParam = new SqlParameter { ParameterName = "@BuyerAccountID", SqlDbType = SqlDbType.Int, Direction = ParameterDirection.Input, Value = buyerAccountId.GetValueOrDefault() };
            if (!buyerAccountId.HasValue)
                buyerAccountIdParam.Value = DBNull.Value;

            var procResultParam = new SqlParameter { ParameterName = "@procResult", SqlDbType = SqlDbType.Int, Direction = ParameterDirection.Output };
 
            var procResultData = Database.SqlQuery<GetPrivateMarketsPublishersTotalReturnModel>("EXEC @procResult = [analytics].[GetPrivateMarketsPublishersTotal] @BuyerAccountID", buyerAccountIdParam, procResultParam).ToList();
 
            procResult = (int) procResultParam.Value;
            return procResultData;
        }

        public int ImportAnalyticsData(string tableName, string jobId, string filePath, string fieldTerminator)
        {
            var tableNameParam = new SqlParameter { ParameterName = "@TableName", SqlDbType = SqlDbType.VarChar, Direction = ParameterDirection.Input, Value = tableName, Size = 100 };
            if (tableNameParam.Value == null)
                tableNameParam.Value = DBNull.Value;

            var jobIdParam = new SqlParameter { ParameterName = "@JobID", SqlDbType = SqlDbType.VarChar, Direction = ParameterDirection.Input, Value = jobId, Size = 500 };
            if (jobIdParam.Value == null)
                jobIdParam.Value = DBNull.Value;

            var filePathParam = new SqlParameter { ParameterName = "@FilePath", SqlDbType = SqlDbType.VarChar, Direction = ParameterDirection.Input, Value = filePath, Size = 1024 };
            if (filePathParam.Value == null)
                filePathParam.Value = DBNull.Value;

            var fieldTerminatorParam = new SqlParameter { ParameterName = "@FieldTerminator", SqlDbType = SqlDbType.VarChar, Direction = ParameterDirection.Input, Value = fieldTerminator, Size = 2 };
            if (fieldTerminatorParam.Value == null)
                fieldTerminatorParam.Value = DBNull.Value;

            var procResultParam = new SqlParameter { ParameterName = "@procResult", SqlDbType = SqlDbType.Int, Direction = ParameterDirection.Output };
 
            Database.ExecuteSqlCommand("EXEC @procResult = [analytics].[ImportAnalyticsData] @TableName, @JobID, @FilePath, @FieldTerminator", tableNameParam, jobIdParam, filePathParam, fieldTerminatorParam, procResultParam);
 
            return (int) procResultParam.Value;
        }

        public int PopulateAdGroupReportsForecast(int? placementId)
        {
            var placementIdParam = new SqlParameter { ParameterName = "@PlacementID", SqlDbType = SqlDbType.Int, Direction = ParameterDirection.Input, Value = placementId.GetValueOrDefault() };
            if (!placementId.HasValue)
                placementIdParam.Value = DBNull.Value;

            var procResultParam = new SqlParameter { ParameterName = "@procResult", SqlDbType = SqlDbType.Int, Direction = ParameterDirection.Output };
 
            Database.ExecuteSqlCommand("EXEC @procResult = [analytics].[PopulateAdGroupReportsForecast] @PlacementID", placementIdParam, procResultParam);
 
            return (int) procResultParam.Value;
        }

        public List<PromoteAdGroupWebsiteReturnModel> PromoteAdGroupWebsite(DateTime? utcNow)
        {
            int procResult;
            return PromoteAdGroupWebsite(utcNow, out procResult);
        }

        public List<PromoteAdGroupWebsiteReturnModel> PromoteAdGroupWebsite(DateTime? utcNow, out int procResult)
        {
            var utcNowParam = new SqlParameter { ParameterName = "@utcNow", SqlDbType = SqlDbType.Date, Direction = ParameterDirection.Input, Value = utcNow.GetValueOrDefault() };
            if (!utcNow.HasValue)
                utcNowParam.Value = DBNull.Value;

            var procResultParam = new SqlParameter { ParameterName = "@procResult", SqlDbType = SqlDbType.Int, Direction = ParameterDirection.Output };
 
            var procResultData = Database.SqlQuery<PromoteAdGroupWebsiteReturnModel>("EXEC @procResult = [analytics].[PromoteAdGroupWebsite] @utcNow", utcNowParam, procResultParam).ToList();
 
            procResult = (int) procResultParam.Value;
            return procResultData;
        }

        public int RefreshAdPerformanceData(int? buyerAccountId)
        {
            var buyerAccountIdParam = new SqlParameter { ParameterName = "@BuyerAccountID", SqlDbType = SqlDbType.Int, Direction = ParameterDirection.Input, Value = buyerAccountId.GetValueOrDefault() };
            if (!buyerAccountId.HasValue)
                buyerAccountIdParam.Value = DBNull.Value;

            var procResultParam = new SqlParameter { ParameterName = "@procResult", SqlDbType = SqlDbType.Int, Direction = ParameterDirection.Output };
 
            Database.ExecuteSqlCommand("EXEC @procResult = [analytics].[RefreshAdPerformanceData] @BuyerAccountID", buyerAccountIdParam, procResultParam);
 
            return (int) procResultParam.Value;
        }

        public List<RefreshDateIndexesReturnModel> RefreshDateIndexes(string indexNameBase, int? lookbackDays, string tableName, string dateColumn, DateTime? utcNow)
        {
            int procResult;
            return RefreshDateIndexes(indexNameBase, lookbackDays, tableName, dateColumn, utcNow, out procResult);
        }

        public List<RefreshDateIndexesReturnModel> RefreshDateIndexes(string indexNameBase, int? lookbackDays, string tableName, string dateColumn, DateTime? utcNow, out int procResult)
        {
            var indexNameBaseParam = new SqlParameter { ParameterName = "@indexNameBase", SqlDbType = SqlDbType.NVarChar, Direction = ParameterDirection.Input, Value = indexNameBase, Size = 500 };
            if (indexNameBaseParam.Value == null)
                indexNameBaseParam.Value = DBNull.Value;

            var lookbackDaysParam = new SqlParameter { ParameterName = "@lookbackDays", SqlDbType = SqlDbType.Int, Direction = ParameterDirection.Input, Value = lookbackDays.GetValueOrDefault() };
            if (!lookbackDays.HasValue)
                lookbackDaysParam.Value = DBNull.Value;

            var tableNameParam = new SqlParameter { ParameterName = "@tableName", SqlDbType = SqlDbType.NVarChar, Direction = ParameterDirection.Input, Value = tableName, Size = 500 };
            if (tableNameParam.Value == null)
                tableNameParam.Value = DBNull.Value;

            var dateColumnParam = new SqlParameter { ParameterName = "@dateColumn", SqlDbType = SqlDbType.NVarChar, Direction = ParameterDirection.Input, Value = dateColumn, Size = 100 };
            if (dateColumnParam.Value == null)
                dateColumnParam.Value = DBNull.Value;

            var utcNowParam = new SqlParameter { ParameterName = "@utcNow", SqlDbType = SqlDbType.DateTime, Direction = ParameterDirection.Input, Value = utcNow.GetValueOrDefault() };
            if (!utcNow.HasValue)
                utcNowParam.Value = DBNull.Value;

            var procResultParam = new SqlParameter { ParameterName = "@procResult", SqlDbType = SqlDbType.Int, Direction = ParameterDirection.Output };
 
            var procResultData = Database.SqlQuery<RefreshDateIndexesReturnModel>("EXEC @procResult = [analytics].[RefreshDateIndexes] @indexNameBase, @lookbackDays, @tableName, @dateColumn, @utcNow", indexNameBaseParam, lookbackDaysParam, tableNameParam, dateColumnParam, utcNowParam, procResultParam).ToList();
 
            procResult = (int) procResultParam.Value;
            return procResultData;
        }

        public int RefreshDealPerformanceData(int? buyerAccountId)
        {
            var buyerAccountIdParam = new SqlParameter { ParameterName = "@BuyerAccountID", SqlDbType = SqlDbType.Int, Direction = ParameterDirection.Input, Value = buyerAccountId.GetValueOrDefault() };
            if (!buyerAccountId.HasValue)
                buyerAccountIdParam.Value = DBNull.Value;

            var procResultParam = new SqlParameter { ParameterName = "@procResult", SqlDbType = SqlDbType.Int, Direction = ParameterDirection.Output };
 
            Database.ExecuteSqlCommand("EXEC @procResult = [analytics].[RefreshDealPerformanceData] @BuyerAccountID", buyerAccountIdParam, procResultParam);
 
            return (int) procResultParam.Value;
        }

        public int RefreshPrivateMarketPerformanceData(int? buyerAccountId)
        {
            var buyerAccountIdParam = new SqlParameter { ParameterName = "@BuyerAccountID", SqlDbType = SqlDbType.Int, Direction = ParameterDirection.Input, Value = buyerAccountId.GetValueOrDefault() };
            if (!buyerAccountId.HasValue)
                buyerAccountIdParam.Value = DBNull.Value;

            var procResultParam = new SqlParameter { ParameterName = "@procResult", SqlDbType = SqlDbType.Int, Direction = ParameterDirection.Output };
 
            Database.ExecuteSqlCommand("EXEC @procResult = [analytics].[RefreshPrivateMarketPerformanceData] @BuyerAccountID", buyerAccountIdParam, procResultParam);
 
            return (int) procResultParam.Value;
        }

        public int RefreshSegmentPerformanceData(int? buyerAccountId)
        {
            var buyerAccountIdParam = new SqlParameter { ParameterName = "@BuyerAccountID", SqlDbType = SqlDbType.Int, Direction = ParameterDirection.Input, Value = buyerAccountId.GetValueOrDefault() };
            if (!buyerAccountId.HasValue)
                buyerAccountIdParam.Value = DBNull.Value;

            var procResultParam = new SqlParameter { ParameterName = "@procResult", SqlDbType = SqlDbType.Int, Direction = ParameterDirection.Output };
 
            Database.ExecuteSqlCommand("EXEC @procResult = [analytics].[RefreshSegmentPerformanceData] @BuyerAccountID", buyerAccountIdParam, procResultParam);
 
            return (int) procResultParam.Value;
        }

        public List<RefreshSystemSpendLimitReturnModel> RefreshSystemSpendLimit(int? lookbackDays, DateTime? todayUtc)
        {
            int procResult;
            return RefreshSystemSpendLimit(lookbackDays, todayUtc, out procResult);
        }

        public List<RefreshSystemSpendLimitReturnModel> RefreshSystemSpendLimit(int? lookbackDays, DateTime? todayUtc, out int procResult)
        {
            var lookbackDaysParam = new SqlParameter { ParameterName = "@lookbackDays", SqlDbType = SqlDbType.Int, Direction = ParameterDirection.Input, Value = lookbackDays.GetValueOrDefault() };
            if (!lookbackDays.HasValue)
                lookbackDaysParam.Value = DBNull.Value;

            var todayUtcParam = new SqlParameter { ParameterName = "@todayUtc", SqlDbType = SqlDbType.Date, Direction = ParameterDirection.Input, Value = todayUtc.GetValueOrDefault() };
            if (!todayUtc.HasValue)
                todayUtcParam.Value = DBNull.Value;

            var procResultParam = new SqlParameter { ParameterName = "@procResult", SqlDbType = SqlDbType.Int, Direction = ParameterDirection.Output };
 
            var procResultData = Database.SqlQuery<RefreshSystemSpendLimitReturnModel>("EXEC @procResult = [analytics].[RefreshSystemSpendLimit] @lookbackDays, @todayUtc", lookbackDaysParam, todayUtcParam, procResultParam).ToList();
 
            procResult = (int) procResultParam.Value;
            return procResultData;
        }

        public List<RollAdAnalyticsReportsHourlyToDailyReportIdReturnModel> RollAdAnalyticsReportsHourlyToDailyReportId(int? rollupNumberOfDaysBefore)
        {
            int procResult;
            return RollAdAnalyticsReportsHourlyToDailyReportId(rollupNumberOfDaysBefore, out procResult);
        }

        public List<RollAdAnalyticsReportsHourlyToDailyReportIdReturnModel> RollAdAnalyticsReportsHourlyToDailyReportId(int? rollupNumberOfDaysBefore, out int procResult)
        {
            var rollupNumberOfDaysBeforeParam = new SqlParameter { ParameterName = "@rollupNumberOfDaysBefore", SqlDbType = SqlDbType.Int, Direction = ParameterDirection.Input, Value = rollupNumberOfDaysBefore.GetValueOrDefault() };
            if (!rollupNumberOfDaysBefore.HasValue)
                rollupNumberOfDaysBeforeParam.Value = DBNull.Value;

            var procResultParam = new SqlParameter { ParameterName = "@procResult", SqlDbType = SqlDbType.Int, Direction = ParameterDirection.Output };
 
            var procResultData = Database.SqlQuery<RollAdAnalyticsReportsHourlyToDailyReportIdReturnModel>("EXEC @procResult = [analytics].[RollAdAnalyticsReportsHourlyToDailyReportID] @rollupNumberOfDaysBefore", rollupNumberOfDaysBeforeParam, procResultParam).ToList();
 
            procResult = (int) procResultParam.Value;
            return procResultData;
        }

        public List<RollAdAnalyticsReportsReportIdReturnModel> RollAdAnalyticsReportsReportId()
        {
            int procResult;
            return RollAdAnalyticsReportsReportId(out procResult);
        }

        public List<RollAdAnalyticsReportsReportIdReturnModel> RollAdAnalyticsReportsReportId( out int procResult)
        {
            var procResultParam = new SqlParameter { ParameterName = "@procResult", SqlDbType = SqlDbType.Int, Direction = ParameterDirection.Output };
 
            var procResultData = Database.SqlQuery<RollAdAnalyticsReportsReportIdReturnModel>("EXEC @procResult = [analytics].[RollAdAnalyticsReportsReportID] ", procResultParam).ToList();
 
            procResult = (int) procResultParam.Value;
            return procResultData;
        }

        public List<RollAdDirectBuyReportsReportIdReturnModel> RollAdDirectBuyReportsReportId()
        {
            int procResult;
            return RollAdDirectBuyReportsReportId(out procResult);
        }

        public List<RollAdDirectBuyReportsReportIdReturnModel> RollAdDirectBuyReportsReportId( out int procResult)
        {
            var procResultParam = new SqlParameter { ParameterName = "@procResult", SqlDbType = SqlDbType.Int, Direction = ParameterDirection.Output };
 
            var procResultData = Database.SqlQuery<RollAdDirectBuyReportsReportIdReturnModel>("EXEC @procResult = [analytics].[RollAdDirectBuyReportsReportID] ", procResultParam).ToList();
 
            procResult = (int) procResultParam.Value;
            return procResultData;
        }

        public List<RollAdGroupAnalyticsReportsHourlyToDailyReportIdReturnModel> RollAdGroupAnalyticsReportsHourlyToDailyReportId(int? rollupNumberOfDaysBefore, string analyticsTableName)
        {
            int procResult;
            return RollAdGroupAnalyticsReportsHourlyToDailyReportId(rollupNumberOfDaysBefore, analyticsTableName, out procResult);
        }

        public List<RollAdGroupAnalyticsReportsHourlyToDailyReportIdReturnModel> RollAdGroupAnalyticsReportsHourlyToDailyReportId(int? rollupNumberOfDaysBefore, string analyticsTableName, out int procResult)
        {
            var rollupNumberOfDaysBeforeParam = new SqlParameter { ParameterName = "@rollupNumberOfDaysBefore", SqlDbType = SqlDbType.Int, Direction = ParameterDirection.Input, Value = rollupNumberOfDaysBefore.GetValueOrDefault() };
            if (!rollupNumberOfDaysBefore.HasValue)
                rollupNumberOfDaysBeforeParam.Value = DBNull.Value;

            var analyticsTableNameParam = new SqlParameter { ParameterName = "@analyticsTableName", SqlDbType = SqlDbType.VarChar, Direction = ParameterDirection.Input, Value = analyticsTableName, Size = 100 };
            if (analyticsTableNameParam.Value == null)
                analyticsTableNameParam.Value = DBNull.Value;

            var procResultParam = new SqlParameter { ParameterName = "@procResult", SqlDbType = SqlDbType.Int, Direction = ParameterDirection.Output };
 
            var procResultData = Database.SqlQuery<RollAdGroupAnalyticsReportsHourlyToDailyReportIdReturnModel>("EXEC @procResult = [analytics].[RollAdGroupAnalyticsReportsHourlyToDailyReportID] @rollupNumberOfDaysBefore, @analyticsTableName", rollupNumberOfDaysBeforeParam, analyticsTableNameParam, procResultParam).ToList();
 
            procResult = (int) procResultParam.Value;
            return procResultData;
        }

        public List<RollAdGroupAnalyticsReportsReportIdReturnModel> RollAdGroupAnalyticsReportsReportId()
        {
            int procResult;
            return RollAdGroupAnalyticsReportsReportId(out procResult);
        }

        public List<RollAdGroupAnalyticsReportsReportIdReturnModel> RollAdGroupAnalyticsReportsReportId( out int procResult)
        {
            var procResultParam = new SqlParameter { ParameterName = "@procResult", SqlDbType = SqlDbType.Int, Direction = ParameterDirection.Output };
 
            var procResultData = Database.SqlQuery<RollAdGroupAnalyticsReportsReportIdReturnModel>("EXEC @procResult = [analytics].[RollAdGroupAnalyticsReportsReportID] ", procResultParam).ToList();
 
            procResult = (int) procResultParam.Value;
            return procResultData;
        }

        public List<RollAdGroupDealReportsHourlyToDailyReportIdReturnModel> RollAdGroupDealReportsHourlyToDailyReportId(int? rollupNumberOfDaysBefore)
        {
            int procResult;
            return RollAdGroupDealReportsHourlyToDailyReportId(rollupNumberOfDaysBefore, out procResult);
        }

        public List<RollAdGroupDealReportsHourlyToDailyReportIdReturnModel> RollAdGroupDealReportsHourlyToDailyReportId(int? rollupNumberOfDaysBefore, out int procResult)
        {
            var rollupNumberOfDaysBeforeParam = new SqlParameter { ParameterName = "@rollupNumberOfDaysBefore", SqlDbType = SqlDbType.Int, Direction = ParameterDirection.Input, Value = rollupNumberOfDaysBefore.GetValueOrDefault() };
            if (!rollupNumberOfDaysBefore.HasValue)
                rollupNumberOfDaysBeforeParam.Value = DBNull.Value;

            var procResultParam = new SqlParameter { ParameterName = "@procResult", SqlDbType = SqlDbType.Int, Direction = ParameterDirection.Output };
 
            var procResultData = Database.SqlQuery<RollAdGroupDealReportsHourlyToDailyReportIdReturnModel>("EXEC @procResult = [analytics].[RollAdGroupDealReportsHourlyToDailyReportID] @rollupNumberOfDaysBefore", rollupNumberOfDaysBeforeParam, procResultParam).ToList();
 
            procResult = (int) procResultParam.Value;
            return procResultData;
        }

        public List<RollAdGroupDealReportsReportIdReturnModel> RollAdGroupDealReportsReportId()
        {
            int procResult;
            return RollAdGroupDealReportsReportId(out procResult);
        }

        public List<RollAdGroupDealReportsReportIdReturnModel> RollAdGroupDealReportsReportId( out int procResult)
        {
            var procResultParam = new SqlParameter { ParameterName = "@procResult", SqlDbType = SqlDbType.Int, Direction = ParameterDirection.Output };
 
            var procResultData = Database.SqlQuery<RollAdGroupDealReportsReportIdReturnModel>("EXEC @procResult = [analytics].[RollAdGroupDealReportsReportID] ", procResultParam).ToList();
 
            procResult = (int) procResultParam.Value;
            return procResultData;
        }

        public int RollAdGroupDealSiteReports()
        {
            var procResultParam = new SqlParameter { ParameterName = "@procResult", SqlDbType = SqlDbType.Int, Direction = ParameterDirection.Output };
 
            Database.ExecuteSqlCommand("EXEC @procResult = [analytics].[RollAdGroupDealSiteReports] ", procResultParam);
 
            return (int) procResultParam.Value;
        }

        public List<RollAdGroupVideoActivityReportsReportIdReturnModel> RollAdGroupVideoActivityReportsReportId()
        {
            int procResult;
            return RollAdGroupVideoActivityReportsReportId(out procResult);
        }

        public List<RollAdGroupVideoActivityReportsReportIdReturnModel> RollAdGroupVideoActivityReportsReportId( out int procResult)
        {
            var procResultParam = new SqlParameter { ParameterName = "@procResult", SqlDbType = SqlDbType.Int, Direction = ParameterDirection.Output };
 
            var procResultData = Database.SqlQuery<RollAdGroupVideoActivityReportsReportIdReturnModel>("EXEC @procResult = [analytics].[RollAdGroupVideoActivityReportsReportID] ", procResultParam).ToList();
 
            procResult = (int) procResultParam.Value;
            return procResultData;
        }

        public int RollBrandSafetyCountryBids()
        {
            var procResultParam = new SqlParameter { ParameterName = "@procResult", SqlDbType = SqlDbType.Int, Direction = ParameterDirection.Output };
 
            Database.ExecuteSqlCommand("EXEC @procResult = [analytics].[RollBrandSafetyCountryBids] ", procResultParam);
 
            return (int) procResultParam.Value;
        }

        public List<RollConversionReportsReportIdReturnModel> RollConversionReportsReportId()
        {
            int procResult;
            return RollConversionReportsReportId(out procResult);
        }

        public List<RollConversionReportsReportIdReturnModel> RollConversionReportsReportId( out int procResult)
        {
            var procResultParam = new SqlParameter { ParameterName = "@procResult", SqlDbType = SqlDbType.Int, Direction = ParameterDirection.Output };
 
            var procResultData = Database.SqlQuery<RollConversionReportsReportIdReturnModel>("EXEC @procResult = [analytics].[RollConversionReportsReportID] ", procResultParam).ToList();
 
            procResult = (int) procResultParam.Value;
            return procResultData;
        }

        public List<RollDirectBuyDefaultImpressionReportsReportIdReturnModel> RollDirectBuyDefaultImpressionReportsReportId()
        {
            int procResult;
            return RollDirectBuyDefaultImpressionReportsReportId(out procResult);
        }

        public List<RollDirectBuyDefaultImpressionReportsReportIdReturnModel> RollDirectBuyDefaultImpressionReportsReportId( out int procResult)
        {
            var procResultParam = new SqlParameter { ParameterName = "@procResult", SqlDbType = SqlDbType.Int, Direction = ParameterDirection.Output };
 
            var procResultData = Database.SqlQuery<RollDirectBuyDefaultImpressionReportsReportIdReturnModel>("EXEC @procResult = [analytics].[RollDirectBuyDefaultImpressionReportsReportID] ", procResultParam).ToList();
 
            procResult = (int) procResultParam.Value;
            return procResultData;
        }

        public int RollDomainAnalyticsReports()
        {
            var procResultParam = new SqlParameter { ParameterName = "@procResult", SqlDbType = SqlDbType.Int, Direction = ParameterDirection.Output };
 
            Database.ExecuteSqlCommand("EXEC @procResult = [analytics].[RollDomainAnalyticsReports] ", procResultParam);
 
            return (int) procResultParam.Value;
        }

        public int RollDomainForecast()
        {
            var procResultParam = new SqlParameter { ParameterName = "@procResult", SqlDbType = SqlDbType.Int, Direction = ParameterDirection.Output };
 
            Database.ExecuteSqlCommand("EXEC @procResult = [analytics].[RollDomainForecast] ", procResultParam);
 
            return (int) procResultParam.Value;
        }

        public List<RollInventoryLookupReturnModel> RollInventoryLookup()
        {
            int procResult;
            return RollInventoryLookup(out procResult);
        }

        public List<RollInventoryLookupReturnModel> RollInventoryLookup( out int procResult)
        {
            var procResultParam = new SqlParameter { ParameterName = "@procResult", SqlDbType = SqlDbType.Int, Direction = ParameterDirection.Output };
 
            var procResultData = Database.SqlQuery<RollInventoryLookupReturnModel>("EXEC @procResult = [analytics].[RollInventoryLookup] ", procResultParam).ToList();
 
            procResult = (int) procResultParam.Value;
            return procResultData;
        }

        public List<RollReconciliationAnalyticsReportsReturnModel> RollReconciliationAnalyticsReports()
        {
            int procResult;
            return RollReconciliationAnalyticsReports(out procResult);
        }

        public List<RollReconciliationAnalyticsReportsReturnModel> RollReconciliationAnalyticsReports( out int procResult)
        {
            var procResultParam = new SqlParameter { ParameterName = "@procResult", SqlDbType = SqlDbType.Int, Direction = ParameterDirection.Output };
 
            var procResultData = Database.SqlQuery<RollReconciliationAnalyticsReportsReturnModel>("EXEC @procResult = [analytics].[RollReconciliationAnalyticsReports] ", procResultParam).ToList();
 
            procResult = (int) procResultParam.Value;
            return procResultData;
        }

        public List<RollSegmentAnalyticsReportsReportIdReturnModel> RollSegmentAnalyticsReportsReportId()
        {
            int procResult;
            return RollSegmentAnalyticsReportsReportId(out procResult);
        }

        public List<RollSegmentAnalyticsReportsReportIdReturnModel> RollSegmentAnalyticsReportsReportId( out int procResult)
        {
            var procResultParam = new SqlParameter { ParameterName = "@procResult", SqlDbType = SqlDbType.Int, Direction = ParameterDirection.Output };
 
            var procResultData = Database.SqlQuery<RollSegmentAnalyticsReportsReportIdReturnModel>("EXEC @procResult = [analytics].[RollSegmentAnalyticsReportsReportID] ", procResultParam).ToList();
 
            procResult = (int) procResultParam.Value;
            return procResultData;
        }

        public int RollWebsiteAnalyticsReports()
        {
            var procResultParam = new SqlParameter { ParameterName = "@procResult", SqlDbType = SqlDbType.Int, Direction = ParameterDirection.Output };
 
            Database.ExecuteSqlCommand("EXEC @procResult = [analytics].[RollWebsiteAnalyticsReports] ", procResultParam);
 
            return (int) procResultParam.Value;
        }

        public int RollWebsiteAnalyticsReportsReportId()
        {
            var procResultParam = new SqlParameter { ParameterName = "@procResult", SqlDbType = SqlDbType.Int, Direction = ParameterDirection.Output };
 
            Database.ExecuteSqlCommand("EXEC @procResult = [analytics].[RollWebsiteAnalyticsReportsReportID] ", procResultParam);
 
            return (int) procResultParam.Value;
        }

        public int RollWeeklyLocationBids()
        {
            var procResultParam = new SqlParameter { ParameterName = "@procResult", SqlDbType = SqlDbType.Int, Direction = ParameterDirection.Output };
 
            Database.ExecuteSqlCommand("EXEC @procResult = [analytics].[RollWeeklyLocationBids] ", procResultParam);
 
            return (int) procResultParam.Value;
        }

        public List<RunBillingReturnModel> RunBilling(int? billingPeriodId, bool? reprocess, int? buyerAccountId, bool? dryRun)
        {
            int procResult;
            return RunBilling(billingPeriodId, reprocess, buyerAccountId, dryRun, out procResult);
        }

        public List<RunBillingReturnModel> RunBilling(int? billingPeriodId, bool? reprocess, int? buyerAccountId, bool? dryRun, out int procResult)
        {
            var billingPeriodIdParam = new SqlParameter { ParameterName = "@BillingPeriodID", SqlDbType = SqlDbType.Int, Direction = ParameterDirection.Input, Value = billingPeriodId.GetValueOrDefault() };
            if (!billingPeriodId.HasValue)
                billingPeriodIdParam.Value = DBNull.Value;

            var reprocessParam = new SqlParameter { ParameterName = "@Reprocess", SqlDbType = SqlDbType.Bit, Direction = ParameterDirection.Input, Value = reprocess.GetValueOrDefault() };
            if (!reprocess.HasValue)
                reprocessParam.Value = DBNull.Value;

            var buyerAccountIdParam = new SqlParameter { ParameterName = "@BuyerAccountID", SqlDbType = SqlDbType.Int, Direction = ParameterDirection.Input, Value = buyerAccountId.GetValueOrDefault() };
            if (!buyerAccountId.HasValue)
                buyerAccountIdParam.Value = DBNull.Value;

            var dryRunParam = new SqlParameter { ParameterName = "@DryRun", SqlDbType = SqlDbType.Bit, Direction = ParameterDirection.Input, Value = dryRun.GetValueOrDefault() };
            if (!dryRun.HasValue)
                dryRunParam.Value = DBNull.Value;

            var procResultParam = new SqlParameter { ParameterName = "@procResult", SqlDbType = SqlDbType.Int, Direction = ParameterDirection.Output };
 
            var procResultData = Database.SqlQuery<RunBillingReturnModel>("EXEC @procResult = [analytics].[RunBilling] @BillingPeriodID, @Reprocess, @BuyerAccountID, @DryRun", billingPeriodIdParam, reprocessParam, buyerAccountIdParam, dryRunParam, procResultParam).ToList();
 
            procResult = (int) procResultParam.Value;
            return procResultData;
        }

        public List<SafetyCheckHourlyIntegrityCheckReturnModel> SafetyCheckHourlyIntegrityCheck(DateTime? latestAdPartner, int? auditHours)
        {
            int procResult;
            return SafetyCheckHourlyIntegrityCheck(latestAdPartner, auditHours, out procResult);
        }

        public List<SafetyCheckHourlyIntegrityCheckReturnModel> SafetyCheckHourlyIntegrityCheck(DateTime? latestAdPartner, int? auditHours, out int procResult)
        {
            var latestAdPartnerParam = new SqlParameter { ParameterName = "@latestAdPartner", SqlDbType = SqlDbType.DateTime, Direction = ParameterDirection.Input, Value = latestAdPartner.GetValueOrDefault() };
            if (!latestAdPartner.HasValue)
                latestAdPartnerParam.Value = DBNull.Value;

            var auditHoursParam = new SqlParameter { ParameterName = "@auditHours", SqlDbType = SqlDbType.Int, Direction = ParameterDirection.Input, Value = auditHours.GetValueOrDefault() };
            if (!auditHours.HasValue)
                auditHoursParam.Value = DBNull.Value;

            var procResultParam = new SqlParameter { ParameterName = "@procResult", SqlDbType = SqlDbType.Int, Direction = ParameterDirection.Output };
 
            var procResultData = Database.SqlQuery<SafetyCheckHourlyIntegrityCheckReturnModel>("EXEC @procResult = [analytics].[SafetyCheck_HourlyIntegrityCheck] @latestAdPartner, @auditHours", latestAdPartnerParam, auditHoursParam, procResultParam).ToList();
 
            procResult = (int) procResultParam.Value;
            return procResultData;
        }

        public List<SafetyCheckReportIdDailyDealIntegrityCheckReturnModel> SafetyCheckReportIdDailyDealIntegrityCheck(DateTime? latestAdPartner, int? auditDays)
        {
            int procResult;
            return SafetyCheckReportIdDailyDealIntegrityCheck(latestAdPartner, auditDays, out procResult);
        }

        public List<SafetyCheckReportIdDailyDealIntegrityCheckReturnModel> SafetyCheckReportIdDailyDealIntegrityCheck(DateTime? latestAdPartner, int? auditDays, out int procResult)
        {
            var latestAdPartnerParam = new SqlParameter { ParameterName = "@latestAdPartner", SqlDbType = SqlDbType.DateTime, Direction = ParameterDirection.Input, Value = latestAdPartner.GetValueOrDefault() };
            if (!latestAdPartner.HasValue)
                latestAdPartnerParam.Value = DBNull.Value;

            var auditDaysParam = new SqlParameter { ParameterName = "@auditDays", SqlDbType = SqlDbType.Int, Direction = ParameterDirection.Input, Value = auditDays.GetValueOrDefault() };
            if (!auditDays.HasValue)
                auditDaysParam.Value = DBNull.Value;

            var procResultParam = new SqlParameter { ParameterName = "@procResult", SqlDbType = SqlDbType.Int, Direction = ParameterDirection.Output };
 
            var procResultData = Database.SqlQuery<SafetyCheckReportIdDailyDealIntegrityCheckReturnModel>("EXEC @procResult = [analytics].[SafetyCheck_ReportIDDailyDealIntegrityCheck] @latestAdPartner, @auditDays", latestAdPartnerParam, auditDaysParam, procResultParam).ToList();
 
            procResult = (int) procResultParam.Value;
            return procResultData;
        }

        public List<SafetyCheckReportIdDailyIntegrityCheckReturnModel> SafetyCheckReportIdDailyIntegrityCheck(DateTime? latestAdPartner, int? auditDays)
        {
            int procResult;
            return SafetyCheckReportIdDailyIntegrityCheck(latestAdPartner, auditDays, out procResult);
        }

        public List<SafetyCheckReportIdDailyIntegrityCheckReturnModel> SafetyCheckReportIdDailyIntegrityCheck(DateTime? latestAdPartner, int? auditDays, out int procResult)
        {
            var latestAdPartnerParam = new SqlParameter { ParameterName = "@latestAdPartner", SqlDbType = SqlDbType.DateTime, Direction = ParameterDirection.Input, Value = latestAdPartner.GetValueOrDefault() };
            if (!latestAdPartner.HasValue)
                latestAdPartnerParam.Value = DBNull.Value;

            var auditDaysParam = new SqlParameter { ParameterName = "@auditDays", SqlDbType = SqlDbType.Int, Direction = ParameterDirection.Input, Value = auditDays.GetValueOrDefault() };
            if (!auditDays.HasValue)
                auditDaysParam.Value = DBNull.Value;

            var procResultParam = new SqlParameter { ParameterName = "@procResult", SqlDbType = SqlDbType.Int, Direction = ParameterDirection.Output };
 
            var procResultData = Database.SqlQuery<SafetyCheckReportIdDailyIntegrityCheckReturnModel>("EXEC @procResult = [analytics].[SafetyCheck_ReportIDDailyIntegrityCheck] @latestAdPartner, @auditDays", latestAdPartnerParam, auditDaysParam, procResultParam).ToList();
 
            procResult = (int) procResultParam.Value;
            return procResultData;
        }

        public List<SafetyCheckReportIdDirectBuyHourlyIntegrityCheckReturnModel> SafetyCheckReportIdDirectBuyHourlyIntegrityCheck(DateTime? latestAdPartner, int? auditHours)
        {
            int procResult;
            return SafetyCheckReportIdDirectBuyHourlyIntegrityCheck(latestAdPartner, auditHours, out procResult);
        }

        public List<SafetyCheckReportIdDirectBuyHourlyIntegrityCheckReturnModel> SafetyCheckReportIdDirectBuyHourlyIntegrityCheck(DateTime? latestAdPartner, int? auditHours, out int procResult)
        {
            var latestAdPartnerParam = new SqlParameter { ParameterName = "@latestAdPartner", SqlDbType = SqlDbType.DateTime, Direction = ParameterDirection.Input, Value = latestAdPartner.GetValueOrDefault() };
            if (!latestAdPartner.HasValue)
                latestAdPartnerParam.Value = DBNull.Value;

            var auditHoursParam = new SqlParameter { ParameterName = "@auditHours", SqlDbType = SqlDbType.Int, Direction = ParameterDirection.Input, Value = auditHours.GetValueOrDefault() };
            if (!auditHours.HasValue)
                auditHoursParam.Value = DBNull.Value;

            var procResultParam = new SqlParameter { ParameterName = "@procResult", SqlDbType = SqlDbType.Int, Direction = ParameterDirection.Output };
 
            var procResultData = Database.SqlQuery<SafetyCheckReportIdDirectBuyHourlyIntegrityCheckReturnModel>("EXEC @procResult = [analytics].[SafetyCheck_ReportIDDirectBuyHourlyIntegrityCheck] @latestAdPartner, @auditHours", latestAdPartnerParam, auditHoursParam, procResultParam).ToList();
 
            procResult = (int) procResultParam.Value;
            return procResultData;
        }

        public List<SafetyCheckReportIdDomainDailyIntegrityCheckReturnModel> SafetyCheckReportIdDomainDailyIntegrityCheck(DateTime? latestAdPartner, int? auditDays)
        {
            int procResult;
            return SafetyCheckReportIdDomainDailyIntegrityCheck(latestAdPartner, auditDays, out procResult);
        }

        public List<SafetyCheckReportIdDomainDailyIntegrityCheckReturnModel> SafetyCheckReportIdDomainDailyIntegrityCheck(DateTime? latestAdPartner, int? auditDays, out int procResult)
        {
            var latestAdPartnerParam = new SqlParameter { ParameterName = "@latestAdPartner", SqlDbType = SqlDbType.DateTime, Direction = ParameterDirection.Input, Value = latestAdPartner.GetValueOrDefault() };
            if (!latestAdPartner.HasValue)
                latestAdPartnerParam.Value = DBNull.Value;

            var auditDaysParam = new SqlParameter { ParameterName = "@auditDays", SqlDbType = SqlDbType.Int, Direction = ParameterDirection.Input, Value = auditDays.GetValueOrDefault() };
            if (!auditDays.HasValue)
                auditDaysParam.Value = DBNull.Value;

            var procResultParam = new SqlParameter { ParameterName = "@procResult", SqlDbType = SqlDbType.Int, Direction = ParameterDirection.Output };
 
            var procResultData = Database.SqlQuery<SafetyCheckReportIdDomainDailyIntegrityCheckReturnModel>("EXEC @procResult = [analytics].[SafetyCheck_ReportIDDomainDailyIntegrityCheck] @latestAdPartner, @auditDays", latestAdPartnerParam, auditDaysParam, procResultParam).ToList();
 
            procResult = (int) procResultParam.Value;
            return procResultData;
        }

        public List<SafetyCheckReportIdHourlyDirectBuyIntegrityCheckReturnModel> SafetyCheckReportIdHourlyDirectBuyIntegrityCheck(DateTime? latestAdPartner, int? auditHours)
        {
            int procResult;
            return SafetyCheckReportIdHourlyDirectBuyIntegrityCheck(latestAdPartner, auditHours, out procResult);
        }

        public List<SafetyCheckReportIdHourlyDirectBuyIntegrityCheckReturnModel> SafetyCheckReportIdHourlyDirectBuyIntegrityCheck(DateTime? latestAdPartner, int? auditHours, out int procResult)
        {
            var latestAdPartnerParam = new SqlParameter { ParameterName = "@latestAdPartner", SqlDbType = SqlDbType.DateTime, Direction = ParameterDirection.Input, Value = latestAdPartner.GetValueOrDefault() };
            if (!latestAdPartner.HasValue)
                latestAdPartnerParam.Value = DBNull.Value;

            var auditHoursParam = new SqlParameter { ParameterName = "@auditHours", SqlDbType = SqlDbType.Int, Direction = ParameterDirection.Input, Value = auditHours.GetValueOrDefault() };
            if (!auditHours.HasValue)
                auditHoursParam.Value = DBNull.Value;

            var procResultParam = new SqlParameter { ParameterName = "@procResult", SqlDbType = SqlDbType.Int, Direction = ParameterDirection.Output };
 
            var procResultData = Database.SqlQuery<SafetyCheckReportIdHourlyDirectBuyIntegrityCheckReturnModel>("EXEC @procResult = [analytics].[SafetyCheck_ReportIDHourlyDirectBuyIntegrityCheck] @latestAdPartner, @auditHours", latestAdPartnerParam, auditHoursParam, procResultParam).ToList();
 
            procResult = (int) procResultParam.Value;
            return procResultData;
        }

        public List<SafetyCheckReportIdHourlyIntegrityCheckReturnModel> SafetyCheckReportIdHourlyIntegrityCheck(DateTime? latestAdPartner, int? auditHours)
        {
            int procResult;
            return SafetyCheckReportIdHourlyIntegrityCheck(latestAdPartner, auditHours, out procResult);
        }

        public List<SafetyCheckReportIdHourlyIntegrityCheckReturnModel> SafetyCheckReportIdHourlyIntegrityCheck(DateTime? latestAdPartner, int? auditHours, out int procResult)
        {
            var latestAdPartnerParam = new SqlParameter { ParameterName = "@latestAdPartner", SqlDbType = SqlDbType.DateTime, Direction = ParameterDirection.Input, Value = latestAdPartner.GetValueOrDefault() };
            if (!latestAdPartner.HasValue)
                latestAdPartnerParam.Value = DBNull.Value;

            var auditHoursParam = new SqlParameter { ParameterName = "@auditHours", SqlDbType = SqlDbType.Int, Direction = ParameterDirection.Input, Value = auditHours.GetValueOrDefault() };
            if (!auditHours.HasValue)
                auditHoursParam.Value = DBNull.Value;

            var procResultParam = new SqlParameter { ParameterName = "@procResult", SqlDbType = SqlDbType.Int, Direction = ParameterDirection.Output };
 
            var procResultData = Database.SqlQuery<SafetyCheckReportIdHourlyIntegrityCheckReturnModel>("EXEC @procResult = [analytics].[SafetyCheck_ReportIDHourlyIntegrityCheck] @latestAdPartner, @auditHours", latestAdPartnerParam, auditHoursParam, procResultParam).ToList();
 
            procResult = (int) procResultParam.Value;
            return procResultData;
        }

        public List<SafetyCheckReportIdIntegrityCheckReturnModel> SafetyCheckReportIdIntegrityCheck(long? reportId)
        {
            int procResult;
            return SafetyCheckReportIdIntegrityCheck(reportId, out procResult);
        }

        public List<SafetyCheckReportIdIntegrityCheckReturnModel> SafetyCheckReportIdIntegrityCheck(long? reportId, out int procResult)
        {
            var reportIdParam = new SqlParameter { ParameterName = "@reportID", SqlDbType = SqlDbType.BigInt, Direction = ParameterDirection.Input, Value = reportId.GetValueOrDefault() };
            if (!reportId.HasValue)
                reportIdParam.Value = DBNull.Value;

            var procResultParam = new SqlParameter { ParameterName = "@procResult", SqlDbType = SqlDbType.Int, Direction = ParameterDirection.Output };
 
            var procResultData = Database.SqlQuery<SafetyCheckReportIdIntegrityCheckReturnModel>("EXEC @procResult = [analytics].[SafetyCheck_ReportIDIntegrityCheck] @reportID", reportIdParam, procResultParam).ToList();
 
            procResult = (int) procResultParam.Value;
            return procResultData;
        }

        public int SaveImportSummary(string tableName)
        {
            var tableNameParam = new SqlParameter { ParameterName = "@tableName", SqlDbType = SqlDbType.NVarChar, Direction = ParameterDirection.Input, Value = tableName, Size = 100 };
            if (tableNameParam.Value == null)
                tableNameParam.Value = DBNull.Value;

            var procResultParam = new SqlParameter { ParameterName = "@procResult", SqlDbType = SqlDbType.Int, Direction = ParameterDirection.Output };
 
            Database.ExecuteSqlCommand("EXEC @procResult = [analytics].[SaveImportSummary] @tableName", tableNameParam, procResultParam);
 
            return (int) procResultParam.Value;
        }

        public int SaveImportSummaryReportId(string tableName)
        {
            var tableNameParam = new SqlParameter { ParameterName = "@tableName", SqlDbType = SqlDbType.NVarChar, Direction = ParameterDirection.Input, Value = tableName, Size = 100 };
            if (tableNameParam.Value == null)
                tableNameParam.Value = DBNull.Value;

            var procResultParam = new SqlParameter { ParameterName = "@procResult", SqlDbType = SqlDbType.Int, Direction = ParameterDirection.Output };
 
            Database.ExecuteSqlCommand("EXEC @procResult = [analytics].[SaveImportSummaryReportID] @tableName", tableNameParam, procResultParam);
 
            return (int) procResultParam.Value;
        }

        public int SearchAnalyticsWebsites(int? adGroupId, int? pageNum, int? pageSize, string sortColumnName, int? sortDirection, string searchString, out int? totalRecords)
        {
            var adGroupIdParam = new SqlParameter { ParameterName = "@AdGroupID", SqlDbType = SqlDbType.Int, Direction = ParameterDirection.Input, Value = adGroupId.GetValueOrDefault() };
            if (!adGroupId.HasValue)
                adGroupIdParam.Value = DBNull.Value;

            var pageNumParam = new SqlParameter { ParameterName = "@pageNum", SqlDbType = SqlDbType.Int, Direction = ParameterDirection.Input, Value = pageNum.GetValueOrDefault() };
            if (!pageNum.HasValue)
                pageNumParam.Value = DBNull.Value;

            var pageSizeParam = new SqlParameter { ParameterName = "@pageSize", SqlDbType = SqlDbType.Int, Direction = ParameterDirection.Input, Value = pageSize.GetValueOrDefault() };
            if (!pageSize.HasValue)
                pageSizeParam.Value = DBNull.Value;

            var sortColumnNameParam = new SqlParameter { ParameterName = "@sortColumnName", SqlDbType = SqlDbType.VarChar, Direction = ParameterDirection.Input, Value = sortColumnName, Size = 200 };
            if (sortColumnNameParam.Value == null)
                sortColumnNameParam.Value = DBNull.Value;

            var sortDirectionParam = new SqlParameter { ParameterName = "@sortDirection", SqlDbType = SqlDbType.Int, Direction = ParameterDirection.Input, Value = sortDirection.GetValueOrDefault() };
            if (!sortDirection.HasValue)
                sortDirectionParam.Value = DBNull.Value;

            var searchStringParam = new SqlParameter { ParameterName = "@searchString", SqlDbType = SqlDbType.VarChar, Direction = ParameterDirection.Input, Value = searchString, Size = 100 };
            if (searchStringParam.Value == null)
                searchStringParam.Value = DBNull.Value;

            var totalRecordsParam = new SqlParameter { ParameterName = "@totalRecords", SqlDbType = SqlDbType.Int, Direction = ParameterDirection.Output };
            var procResultParam = new SqlParameter { ParameterName = "@procResult", SqlDbType = SqlDbType.Int, Direction = ParameterDirection.Output };
 
            Database.ExecuteSqlCommand("EXEC @procResult = [analytics].[SearchAnalyticsWebsites] @AdGroupID, @pageNum, @pageSize, @sortColumnName, @sortDirection, @searchString, @totalRecords OUTPUT", adGroupIdParam, pageNumParam, pageSizeParam, sortColumnNameParam, sortDirectionParam, searchStringParam, totalRecordsParam, procResultParam);
            if (((INullable)totalRecordsParam.SqlValue).IsNull)
                totalRecords = null;
            else
            totalRecords = (int) totalRecordsParam.Value;
 
            return (int) procResultParam.Value;
        }

        public int SearchWeeklyLocationBidsUrl(int? pageNum, int? pageSize, string searchString, int? geoCountryId, out int? totalRecords)
        {
            var pageNumParam = new SqlParameter { ParameterName = "@pageNum", SqlDbType = SqlDbType.Int, Direction = ParameterDirection.Input, Value = pageNum.GetValueOrDefault() };
            if (!pageNum.HasValue)
                pageNumParam.Value = DBNull.Value;

            var pageSizeParam = new SqlParameter { ParameterName = "@pageSize", SqlDbType = SqlDbType.Int, Direction = ParameterDirection.Input, Value = pageSize.GetValueOrDefault() };
            if (!pageSize.HasValue)
                pageSizeParam.Value = DBNull.Value;

            var searchStringParam = new SqlParameter { ParameterName = "@searchString", SqlDbType = SqlDbType.VarChar, Direction = ParameterDirection.Input, Value = searchString, Size = 100 };
            if (searchStringParam.Value == null)
                searchStringParam.Value = DBNull.Value;

            var geoCountryIdParam = new SqlParameter { ParameterName = "@geoCountryID", SqlDbType = SqlDbType.Int, Direction = ParameterDirection.Input, Value = geoCountryId.GetValueOrDefault() };
            if (!geoCountryId.HasValue)
                geoCountryIdParam.Value = DBNull.Value;

            var totalRecordsParam = new SqlParameter { ParameterName = "@totalRecords", SqlDbType = SqlDbType.Int, Direction = ParameterDirection.Output };
            var procResultParam = new SqlParameter { ParameterName = "@procResult", SqlDbType = SqlDbType.Int, Direction = ParameterDirection.Output };
 
            Database.ExecuteSqlCommand("EXEC @procResult = [analytics].[SearchWeeklyLocationBidsUrl] @pageNum, @pageSize, @searchString, @geoCountryID, @totalRecords OUTPUT", pageNumParam, pageSizeParam, searchStringParam, geoCountryIdParam, totalRecordsParam, procResultParam);
            if (((INullable)totalRecordsParam.SqlValue).IsNull)
                totalRecords = null;
            else
            totalRecords = (int) totalRecordsParam.Value;
 
            return (int) procResultParam.Value;
        }

        public int UpdateBrandSafetySiteCounts()
        {
            var procResultParam = new SqlParameter { ParameterName = "@procResult", SqlDbType = SqlDbType.Int, Direction = ParameterDirection.Output };
 
            Database.ExecuteSqlCommand("EXEC @procResult = [analytics].[UpdateBrandSafetySiteCounts] ", procResultParam);
 
            return (int) procResultParam.Value;
        }

        public int UpdatePacingAndPricingHealth()
        {
            var procResultParam = new SqlParameter { ParameterName = "@procResult", SqlDbType = SqlDbType.Int, Direction = ParameterDirection.Output };
 
            Database.ExecuteSqlCommand("EXEC @procResult = [analytics].[UpdatePacingAndPricingHealth] ", procResultParam);
 
            return (int) procResultParam.Value;
        }

        public int UpdatePrivateMarketPerformance()
        {
            var procResultParam = new SqlParameter { ParameterName = "@procResult", SqlDbType = SqlDbType.Int, Direction = ParameterDirection.Output };
 
            Database.ExecuteSqlCommand("EXEC @procResult = [analytics].[UpdatePrivateMarketPerformance] ", procResultParam);
 
            return (int) procResultParam.Value;
        }

        public int UpdatePrivateMarketSitePerformance()
        {
            var procResultParam = new SqlParameter { ParameterName = "@procResult", SqlDbType = SqlDbType.Int, Direction = ParameterDirection.Output };
 
            Database.ExecuteSqlCommand("EXEC @procResult = [analytics].[UpdatePrivateMarketSitePerformance] ", procResultParam);
 
            return (int) procResultParam.Value;
        }

        public List<CheckImpressionAndSpendRatioForDealsReturnModel> CheckImpressionAndSpendRatioForDeals(DateTime? refDateTime, int? numHours)
        {
            int procResult;
            return CheckImpressionAndSpendRatioForDeals(refDateTime, numHours, out procResult);
        }

        public List<CheckImpressionAndSpendRatioForDealsReturnModel> CheckImpressionAndSpendRatioForDeals(DateTime? refDateTime, int? numHours, out int procResult)
        {
            var refDateTimeParam = new SqlParameter { ParameterName = "@refDateTime", SqlDbType = SqlDbType.DateTime, Direction = ParameterDirection.Input, Value = refDateTime.GetValueOrDefault() };
            if (!refDateTime.HasValue)
                refDateTimeParam.Value = DBNull.Value;

            var numHoursParam = new SqlParameter { ParameterName = "@numHours", SqlDbType = SqlDbType.Int, Direction = ParameterDirection.Input, Value = numHours.GetValueOrDefault() };
            if (!numHours.HasValue)
                numHoursParam.Value = DBNull.Value;

            var procResultParam = new SqlParameter { ParameterName = "@procResult", SqlDbType = SqlDbType.Int, Direction = ParameterDirection.Output };
 
            var procResultData = Database.SqlQuery<CheckImpressionAndSpendRatioForDealsReturnModel>("EXEC @procResult = [dbo].[checkImpressionAndSpendRatioForDeals] @refDateTime, @numHours", refDateTimeParam, numHoursParam, procResultParam).ToList();
 
            procResult = (int) procResultParam.Value;
            return procResultData;
        }

        public int RollupAdPartnerReportIdIntoAdPartner(string computer, string @operator, string source, Guid? sourceid, Guid? executionid, int? lookBackDays)
        {
            var computerParam = new SqlParameter { ParameterName = "@computer", SqlDbType = SqlDbType.NVarChar, Direction = ParameterDirection.Input, Value = computer, Size = 128 };
            if (computerParam.Value == null)
                computerParam.Value = DBNull.Value;

            var @operatorParam = new SqlParameter { ParameterName = "@operator", SqlDbType = SqlDbType.NVarChar, Direction = ParameterDirection.Input, Value = @operator, Size = 128 };
            if (@operatorParam.Value == null)
                @operatorParam.Value = DBNull.Value;

            var sourceParam = new SqlParameter { ParameterName = "@source", SqlDbType = SqlDbType.NVarChar, Direction = ParameterDirection.Input, Value = source, Size = 1024 };
            if (sourceParam.Value == null)
                sourceParam.Value = DBNull.Value;

            var sourceidParam = new SqlParameter { ParameterName = "@sourceid", SqlDbType = SqlDbType.UniqueIdentifier, Direction = ParameterDirection.Input, Value = sourceid.GetValueOrDefault() };
            if (!sourceid.HasValue)
                sourceidParam.Value = DBNull.Value;

            var executionidParam = new SqlParameter { ParameterName = "@executionid", SqlDbType = SqlDbType.UniqueIdentifier, Direction = ParameterDirection.Input, Value = executionid.GetValueOrDefault() };
            if (!executionid.HasValue)
                executionidParam.Value = DBNull.Value;

            var lookBackDaysParam = new SqlParameter { ParameterName = "@lookBackDays", SqlDbType = SqlDbType.Int, Direction = ParameterDirection.Input, Value = lookBackDays.GetValueOrDefault() };
            if (!lookBackDays.HasValue)
                lookBackDaysParam.Value = DBNull.Value;

            var procResultParam = new SqlParameter { ParameterName = "@procResult", SqlDbType = SqlDbType.Int, Direction = ParameterDirection.Output };
 
            Database.ExecuteSqlCommand("EXEC @procResult = [dbo].[RollupAdPartnerReportIDIntoAdPartner] @computer, @operator, @source, @sourceid, @executionid, @lookBackDays", computerParam, @operatorParam, sourceParam, sourceidParam, executionidParam, lookBackDaysParam, procResultParam);
 
            return (int) procResultParam.Value;
        }

        public int SpGetDomainStatsGrid(int? pageNumber, int? pageSize, string orderBy, string searchText, out int? totalRecords)
        {
            var pageNumberParam = new SqlParameter { ParameterName = "@pageNumber", SqlDbType = SqlDbType.Int, Direction = ParameterDirection.Input, Value = pageNumber.GetValueOrDefault() };
            if (!pageNumber.HasValue)
                pageNumberParam.Value = DBNull.Value;

            var pageSizeParam = new SqlParameter { ParameterName = "@pageSize", SqlDbType = SqlDbType.Int, Direction = ParameterDirection.Input, Value = pageSize.GetValueOrDefault() };
            if (!pageSize.HasValue)
                pageSizeParam.Value = DBNull.Value;

            var orderByParam = new SqlParameter { ParameterName = "@orderBy", SqlDbType = SqlDbType.NVarChar, Direction = ParameterDirection.Input, Value = orderBy, Size = 500 };
            if (orderByParam.Value == null)
                orderByParam.Value = DBNull.Value;

            var searchTextParam = new SqlParameter { ParameterName = "@searchText", SqlDbType = SqlDbType.NVarChar, Direction = ParameterDirection.Input, Value = searchText, Size = 64 };
            if (searchTextParam.Value == null)
                searchTextParam.Value = DBNull.Value;

            var totalRecordsParam = new SqlParameter { ParameterName = "@totalRecords", SqlDbType = SqlDbType.Int, Direction = ParameterDirection.Output };
            var procResultParam = new SqlParameter { ParameterName = "@procResult", SqlDbType = SqlDbType.Int, Direction = ParameterDirection.Output };
 
            Database.ExecuteSqlCommand("EXEC @procResult = [dbo].[spGetDomainStatsGrid] @pageNumber, @pageSize, @orderBy, @searchText, @totalRecords OUTPUT", pageNumberParam, pageSizeParam, orderByParam, searchTextParam, totalRecordsParam, procResultParam);
            if (((INullable)totalRecordsParam.SqlValue).IsNull)
                totalRecords = null;
            else
            totalRecords = (int) totalRecordsParam.Value;
 
            return (int) procResultParam.Value;
        }

    }

    // ************************************************************************
    // Fake Database context
    [GeneratedCodeAttribute("EF.Reverse.POCO.Generator", "2.15.1.0")]
    public class FakeBrandscreenAnalyticsContext : IBrandscreenAnalyticsContext
    {
        public DbSet<ActiveCpcAndCpaAdGroupsLookup> ActiveCpcAndCpaAdGroupsLookups { get; set; }
        public DbSet<AdAnalyticsReportId> AdAnalyticsReportIds { get; set; }
        public DbSet<AdDirectBuy> AdDirectBuys { get; set; }
        public DbSet<AdDirectBuyAnalyticsReportId> AdDirectBuyAnalyticsReportIds { get; set; }
        public DbSet<AdDirectBuyCombined> AdDirectBuyCombineds { get; set; }
        public DbSet<AdDirectBuyImport> AdDirectBuyImports { get; set; }
        public DbSet<AdDirectBuyImportReportId> AdDirectBuyImportReportIds { get; set; }
        public DbSet<AdDirectBuyReportId> AdDirectBuyReportIds { get; set; }
        public DbSet<AdGroupAbsRegionTargetingReportId> AdGroupAbsRegionTargetingReportIds { get; set; }
        public DbSet<AdGroupAnalyticsFilterData> AdGroupAnalyticsFilterDatas { get; set; }
        public DbSet<AdGroupAnalyticsGeoCityLookup> AdGroupAnalyticsGeoCityLookups { get; set; }
        public DbSet<AdGroupAnalyticsGeoCountryLookup> AdGroupAnalyticsGeoCountryLookups { get; set; }
        public DbSet<AdGroupAnalyticsGeoRegionLookup> AdGroupAnalyticsGeoRegionLookups { get; set; }
        public DbSet<AdGroupAnalyticsOptimizationModel> AdGroupAnalyticsOptimizationModels { get; set; }
        public DbSet<AdGroupAnalyticsPartnerLookup> AdGroupAnalyticsPartnerLookups { get; set; }
        public DbSet<AdGroupAnalyticsVerticalOneLookup> AdGroupAnalyticsVerticalOneLookups { get; set; }
        public DbSet<AdGroupAnalyticsVerticalThreeLookup> AdGroupAnalyticsVerticalThreeLookups { get; set; }
        public DbSet<AdGroupAnalyticsVerticalTwoLookup> AdGroupAnalyticsVerticalTwoLookups { get; set; }
        public DbSet<AdGroupBiLookup> AdGroupBiLookups { get; set; }
        public DbSet<AdGroupCityTargetingReportId> AdGroupCityTargetingReportIds { get; set; }
        public DbSet<AdGroupConversionSegmentLookup> AdGroupConversionSegmentLookups { get; set; }
        public DbSet<AdGroupCountryTargetingReportId> AdGroupCountryTargetingReportIds { get; set; }
        public DbSet<AdGroupDayPart> AdGroupDayParts { get; set; }
        public DbSet<AdGroupDayPartAnalyticsReportId> AdGroupDayPartAnalyticsReportIds { get; set; }
        public DbSet<AdGroupDayPartCombined> AdGroupDayPartCombineds { get; set; }
        public DbSet<AdGroupDayPartException> AdGroupDayPartExceptions { get; set; }
        public DbSet<AdGroupDayPartImport> AdGroupDayPartImports { get; set; }
        public DbSet<AdGroupDayPartImportReportId> AdGroupDayPartImportReportIds { get; set; }
        public DbSet<AdGroupDayPartReportId> AdGroupDayPartReportIds { get; set; }
        public DbSet<AdGroupDayPartTargetingReportId> AdGroupDayPartTargetingReportIds { get; set; }
        public DbSet<AdGroupDeal> AdGroupDeals { get; set; }
        public DbSet<AdGroupDealAnalyticsReportId> AdGroupDealAnalyticsReportIds { get; set; }
        public DbSet<AdGroupDealCombined> AdGroupDealCombineds { get; set; }
        public DbSet<AdGroupDealDomain> AdGroupDealDomains { get; set; }
        public DbSet<AdGroupDealDomainImport> AdGroupDealDomainImports { get; set; }
        public DbSet<AdGroupDealDomainNew> AdGroupDealDomainNews { get; set; }
        public DbSet<AdGroupDealException> AdGroupDealExceptions { get; set; }
        public DbSet<AdGroupDealImport> AdGroupDealImports { get; set; }
        public DbSet<AdGroupDealImportReportId> AdGroupDealImportReportIds { get; set; }
        public DbSet<AdGroupDealReportId> AdGroupDealReportIds { get; set; }
        public DbSet<AdGroupDealSite> AdGroupDealSites { get; set; }
        public DbSet<AdGroupDealSiteImport> AdGroupDealSiteImports { get; set; }
        public DbSet<AdGroupDealSiteInventoryOnly> AdGroupDealSiteInventoryOnlies { get; set; }
        public DbSet<AdGroupDealSiteNew> AdGroupDealSiteNews { get; set; }
        public DbSet<AdGroupDealSitePerformanceAndTargetingOnly> AdGroupDealSitePerformanceAndTargetingOnlies { get; set; }
        public DbSet<AdGroupDealTargetingReportId> AdGroupDealTargetingReportIds { get; set; }
        public DbSet<AdGroupDevice> AdGroupDevices { get; set; }
        public DbSet<AdGroupDeviceAnalyticsReportId> AdGroupDeviceAnalyticsReportIds { get; set; }
        public DbSet<AdGroupDeviceCombined> AdGroupDeviceCombineds { get; set; }
        public DbSet<AdGroupDeviceException> AdGroupDeviceExceptions { get; set; }
        public DbSet<AdGroupDeviceImport> AdGroupDeviceImports { get; set; }
        public DbSet<AdGroupDeviceImportReportId> AdGroupDeviceImportReportIds { get; set; }
        public DbSet<AdGroupDeviceReportId> AdGroupDeviceReportIds { get; set; }
        public DbSet<AdGroupDeviceTargetingReportId> AdGroupDeviceTargetingReportIds { get; set; }
        public DbSet<AdGroupDomain> AdGroupDomains { get; set; }
        public DbSet<AdGroupDomainAnalytic> AdGroupDomainAnalytics { get; set; }
        public DbSet<AdGroupDomainCombined> AdGroupDomainCombineds { get; set; }
        public DbSet<AdGroupDomainDaily> AdGroupDomainDailies { get; set; }
        public DbSet<AdGroupDomainDailyAlternate> AdGroupDomainDailyAlternates { get; set; }
        public DbSet<AdGroupDomainException> AdGroupDomainExceptions { get; set; }
        public DbSet<AdGroupDomainImport> AdGroupDomainImports { get; set; }
        public DbSet<AdGroupDomainNew> AdGroupDomainNews { get; set; }
        public DbSet<AdGroupDomainNewAlternate> AdGroupDomainNewAlternates { get; set; }
        public DbSet<AdGroupDomainNewToDailyRollupBuffer> AdGroupDomainNewToDailyRollupBuffers { get; set; }
        public DbSet<AdGroupDomainPerformanceOnly> AdGroupDomainPerformanceOnlies { get; set; }
        public DbSet<AdGroupDoohGeoLocationGroupTargetingReportId> AdGroupDoohGeoLocationGroupTargetingReportIds { get; set; }
        public DbSet<AdGroupDoohPanelLocation> AdGroupDoohPanelLocations { get; set; }
        public DbSet<AdGroupGeoLocation> AdGroupGeoLocations { get; set; }
        public DbSet<AdGroupGeoLocationAnalyticsReportId> AdGroupGeoLocationAnalyticsReportIds { get; set; }
        public DbSet<AdGroupGeoLocationCombined> AdGroupGeoLocationCombineds { get; set; }
        public DbSet<AdGroupGeoLocationException> AdGroupGeoLocationExceptions { get; set; }
        public DbSet<AdGroupGeoLocationImport> AdGroupGeoLocationImports { get; set; }
        public DbSet<AdGroupGeoLocationImportReportId> AdGroupGeoLocationImportReportIds { get; set; }
        public DbSet<AdGroupGeoLocationPointRadiu> AdGroupGeoLocationPointRadius { get; set; }
        public DbSet<AdGroupGeoLocationPointRadiusCombined> AdGroupGeoLocationPointRadiusCombineds { get; set; }
        public DbSet<AdGroupGeoLocationPointRadiusException> AdGroupGeoLocationPointRadiusExceptions { get; set; }
        public DbSet<AdGroupGeoLocationPointRadiusImport> AdGroupGeoLocationPointRadiusImports { get; set; }
        public DbSet<AdGroupGeoLocationPointRadiusImportReportId> AdGroupGeoLocationPointRadiusImportReportIds { get; set; }
        public DbSet<AdGroupGeoLocationPointRadiusReportId> AdGroupGeoLocationPointRadiusReportIds { get; set; }
        public DbSet<AdGroupGeoLocationReportId> AdGroupGeoLocationReportIds { get; set; }
        public DbSet<AdGroupGeoPostcode> AdGroupGeoPostcodes { get; set; }
        public DbSet<AdGroupGeoPostcodeAnalyticsReportId> AdGroupGeoPostcodeAnalyticsReportIds { get; set; }
        public DbSet<AdGroupGeoPostcodeCombined> AdGroupGeoPostcodeCombineds { get; set; }
        public DbSet<AdGroupGeoPostcodeException> AdGroupGeoPostcodeExceptions { get; set; }
        public DbSet<AdGroupGeoPostcodeImport> AdGroupGeoPostcodeImports { get; set; }
        public DbSet<AdGroupGeoPostcodeImportReportId> AdGroupGeoPostcodeImportReportIds { get; set; }
        public DbSet<AdGroupGeoPostcodeReportId> AdGroupGeoPostcodeReportIds { get; set; }
        public DbSet<AdGroupGeoPostcodeTargetingReportId> AdGroupGeoPostcodeTargetingReportIds { get; set; }
        public DbSet<AdGroupIabVerticalImportReportId> AdGroupIabVerticalImportReportIds { get; set; }
        public DbSet<AdGroupLanguage> AdGroupLanguages { get; set; }
        public DbSet<AdGroupLanguageAnalyticsReportId> AdGroupLanguageAnalyticsReportIds { get; set; }
        public DbSet<AdGroupLanguageCombined> AdGroupLanguageCombineds { get; set; }
        public DbSet<AdGroupLanguageException> AdGroupLanguageExceptions { get; set; }
        public DbSet<AdGroupLanguageImport> AdGroupLanguageImports { get; set; }
        public DbSet<AdGroupLanguageImportReportId> AdGroupLanguageImportReportIds { get; set; }
        public DbSet<AdGroupLanguageReportId> AdGroupLanguageReportIds { get; set; }
        public DbSet<AdGroupLanguageTargetingReportId> AdGroupLanguageTargetingReportIds { get; set; }
        public DbSet<AdGroupLookup> AdGroupLookups { get; set; }
        public DbSet<AdGroupMobileCarrier> AdGroupMobileCarriers { get; set; }
        public DbSet<AdGroupMobileCarrierAnalyticsReportId> AdGroupMobileCarrierAnalyticsReportIds { get; set; }
        public DbSet<AdGroupMobileCarrierCombined> AdGroupMobileCarrierCombineds { get; set; }
        public DbSet<AdGroupMobileCarrierException> AdGroupMobileCarrierExceptions { get; set; }
        public DbSet<AdGroupMobileCarrierImport> AdGroupMobileCarrierImports { get; set; }
        public DbSet<AdGroupMobileCarrierImportReportId> AdGroupMobileCarrierImportReportIds { get; set; }
        public DbSet<AdGroupMobileCarrierReportId> AdGroupMobileCarrierReportIds { get; set; }
        public DbSet<AdGroupMobileCarrierTargetingReportId> AdGroupMobileCarrierTargetingReportIds { get; set; }
        public DbSet<AdGroupPagePosition> AdGroupPagePositions { get; set; }
        public DbSet<AdGroupPagePositionAnalyticsReportId> AdGroupPagePositionAnalyticsReportIds { get; set; }
        public DbSet<AdGroupPagePositionCombined> AdGroupPagePositionCombineds { get; set; }
        public DbSet<AdGroupPagePositionException> AdGroupPagePositionExceptions { get; set; }
        public DbSet<AdGroupPagePositionImport> AdGroupPagePositionImports { get; set; }
        public DbSet<AdGroupPagePositionImportReportId> AdGroupPagePositionImportReportIds { get; set; }
        public DbSet<AdGroupPagePositionReportId> AdGroupPagePositionReportIds { get; set; }
        public DbSet<AdGroupPagePositionTargetingReportId> AdGroupPagePositionTargetingReportIds { get; set; }
        public DbSet<AdGroupPublisher> AdGroupPublishers { get; set; }
        public DbSet<AdGroupPublisherAnalyticsReportId> AdGroupPublisherAnalyticsReportIds { get; set; }
        public DbSet<AdGroupPublisherCombined> AdGroupPublisherCombineds { get; set; }
        public DbSet<AdGroupPublisherException> AdGroupPublisherExceptions { get; set; }
        public DbSet<AdGroupPublisherImport> AdGroupPublisherImports { get; set; }
        public DbSet<AdGroupPublisherImportReportId> AdGroupPublisherImportReportIds { get; set; }
        public DbSet<AdGroupPublisherReportId> AdGroupPublisherReportIds { get; set; }
        public DbSet<AdGroupPublisherTargetingReportId> AdGroupPublisherTargetingReportIds { get; set; }
        public DbSet<AdGroupRegionTargetingReportId> AdGroupRegionTargetingReportIds { get; set; }
        public DbSet<AdGroupSegment> AdGroupSegments { get; set; }
        public DbSet<AdGroupSegmentAnalytic> AdGroupSegmentAnalytics { get; set; }
        public DbSet<AdGroupSegmentException> AdGroupSegmentExceptions { get; set; }
        public DbSet<AdGroupSegmentImport> AdGroupSegmentImports { get; set; }
        public DbSet<AdGroupSegmentTargeting> AdGroupSegmentTargetings { get; set; }
        public DbSet<AdGroupVertical> AdGroupVerticals { get; set; }
        public DbSet<AdGroupVertical1IabMappedTargetingReportId> AdGroupVertical1IabMappedTargetingReportId { get; set; }
        public DbSet<AdGroupVertical1TargetingReportId> AdGroupVertical1TargetingReportId { get; set; }
        public DbSet<AdGroupVertical2IabMappedTargetingReportId> AdGroupVertical2IabMappedTargetingReportId { get; set; }
        public DbSet<AdGroupVertical2TargetingReportId> AdGroupVertical2TargetingReportId { get; set; }
        public DbSet<AdGroupVertical3TargetingReportId> AdGroupVertical3TargetingReportId { get; set; }
        public DbSet<AdGroupVerticalAnalyticsReportId> AdGroupVerticalAnalyticsReportIds { get; set; }
        public DbSet<AdGroupVerticalCombined> AdGroupVerticalCombineds { get; set; }
        public DbSet<AdGroupVerticalException> AdGroupVerticalExceptions { get; set; }
        public DbSet<AdGroupVerticalIabMappedAnalyticsReportId> AdGroupVerticalIabMappedAnalyticsReportIds { get; set; }
        public DbSet<AdGroupVerticalIabMappedCombined> AdGroupVerticalIabMappedCombineds { get; set; }
        public DbSet<AdGroupVerticalImport> AdGroupVerticalImports { get; set; }
        public DbSet<AdGroupVerticalImportReportId> AdGroupVerticalImportReportIds { get; set; }
        public DbSet<AdGroupVerticalReportId> AdGroupVerticalReportIds { get; set; }
        public DbSet<AdGroupVideoActivity> AdGroupVideoActivities { get; set; }
        public DbSet<AdGroupVideoActivityCombined> AdGroupVideoActivityCombineds { get; set; }
        public DbSet<AdGroupVideoActivityException> AdGroupVideoActivityExceptions { get; set; }
        public DbSet<AdGroupVideoActivityExceptionReportId> AdGroupVideoActivityExceptionReportIds { get; set; }
        public DbSet<AdGroupVideoActivityImport> AdGroupVideoActivityImports { get; set; }
        public DbSet<AdGroupVideoActivityImportReportId> AdGroupVideoActivityImportReportIds { get; set; }
        public DbSet<AdGroupVideoActivityReportId> AdGroupVideoActivityReportIds { get; set; }
        public DbSet<AdGroupWebsite> AdGroupWebsites { get; set; }
        public DbSet<AdGroupWebsiteAnalytic> AdGroupWebsiteAnalytics { get; set; }
        public DbSet<AdGroupWebsiteException> AdGroupWebsiteExceptions { get; set; }
        public DbSet<AdGroupWebsiteImport> AdGroupWebsiteImports { get; set; }
        public DbSet<AdGroupWebsiteInventoryOnly> AdGroupWebsiteInventoryOnlies { get; set; }
        public DbSet<AdGroupWebsiteNew> AdGroupWebsiteNews { get; set; }
        public DbSet<AdGroupWebsitePerformanceAndTargetingOnly> AdGroupWebsitePerformanceAndTargetingOnlies { get; set; }
        public DbSet<AdGroupWebsiteTargeting> AdGroupWebsiteTargetings { get; set; }
        public DbSet<AdLookup> AdLookups { get; set; }
        public DbSet<AdPartner> AdPartners { get; set; }
        public DbSet<AdPartnerCombined> AdPartnerCombineds { get; set; }
        public DbSet<AdPartnerCombinedValidOnly> AdPartnerCombinedValidOnlies { get; set; }
        public DbSet<AdPartnerException> AdPartnerExceptions { get; set; }
        public DbSet<AdPartnerExceptionReportId> AdPartnerExceptionReportIds { get; set; }
        public DbSet<AdPartnerImport> AdPartnerImports { get; set; }
        public DbSet<AdPartnerImportReportId> AdPartnerImportReportIds { get; set; }
        public DbSet<AdPartnerPerformance> AdPartnerPerformances { get; set; }
        public DbSet<AdPartnerReconciliation> AdPartnerReconciliations { get; set; }
        public DbSet<AdPartnerReportId> AdPartnerReportIds { get; set; }
        public DbSet<AdSlotLookup> AdSlotLookups { get; set; }
        public DbSet<AdvertiserBiLookup> AdvertiserBiLookups { get; set; }
        public DbSet<AdvertiserProductBiLookup> AdvertiserProductBiLookups { get; set; }
        public DbSet<BrandSafetyLookup> BrandSafetyLookups { get; set; }
        public DbSet<BrandSafetySiteCount> BrandSafetySiteCounts { get; set; }
        public DbSet<BuyerAccountBiLookup> BuyerAccountBiLookups { get; set; }
        public DbSet<BuyerAccountCreditLimitLookup> BuyerAccountCreditLimitLookups { get; set; }
        public DbSet<BuyerAccountLookup> BuyerAccountLookups { get; set; }
        public DbSet<BuyerAccountRecentAdGroupLookup> BuyerAccountRecentAdGroupLookups { get; set; }
        public DbSet<BuyerAccountShardLookup> BuyerAccountShardLookups { get; set; }
        public DbSet<CampaignBiLookup> CampaignBiLookups { get; set; }
        public DbSet<CampaignLookup> CampaignLookups { get; set; }
        public DbSet<Conversion> Conversions { get; set; }
        public DbSet<ConversionCombined> ConversionCombineds { get; set; }
        public DbSet<ConversionException> ConversionExceptions { get; set; }
        public DbSet<ConversionExceptionReportId> ConversionExceptionReportIds { get; set; }
        public DbSet<ConversionImport> ConversionImports { get; set; }
        public DbSet<ConversionImportReportId> ConversionImportReportIds { get; set; }
        public DbSet<ConversionReportId> ConversionReportIds { get; set; }
        public DbSet<CountrySalesRegionLookup> CountrySalesRegionLookups { get; set; }
        public DbSet<CreativeBiLookup> CreativeBiLookups { get; set; }
        public DbSet<DateLookup> DateLookups { get; set; }
        public DbSet<DealBiLookup> DealBiLookups { get; set; }
        public DbSet<DirectBuyDefaultImpression> DirectBuyDefaultImpressions { get; set; }
        public DbSet<DirectBuyDefaultImpressionImport> DirectBuyDefaultImpressionImports { get; set; }
        public DbSet<DirectBuyDefaultImpressionImportReportId> DirectBuyDefaultImpressionImportReportIds { get; set; }
        public DbSet<DirectBuyDefaultImpressionReportId> DirectBuyDefaultImpressionReportIds { get; set; }
        public DbSet<DomainStat> DomainStats { get; set; }
        public DbSet<DomainStatsAlternate> DomainStatsAlternates { get; set; }
        public DbSet<DomainStatsImport> DomainStatsImports { get; set; }
        public DbSet<ExchangeSpendSummaryLookup> ExchangeSpendSummaryLookups { get; set; }
        public DbSet<GeoCityLookup> GeoCityLookups { get; set; }
        public DbSet<GeoCountryLookup> GeoCountryLookups { get; set; }
        public DbSet<GeoMetroLookup> GeoMetroLookups { get; set; }
        public DbSet<GeoRegionLookup> GeoRegionLookups { get; set; }
        public DbSet<ImportSummary> ImportSummaries { get; set; }
        public DbSet<ImportSummaryReportId> ImportSummaryReportIds { get; set; }
        public DbSet<InventoryLookup> InventoryLookups { get; set; }
        public DbSet<InventoryLookupException> InventoryLookupExceptions { get; set; }
        public DbSet<InventoryLookupImport> InventoryLookupImports { get; set; }
        public DbSet<JobHistory> JobHistories { get; set; }
        public DbSet<LanguageLookup> LanguageLookups { get; set; }
        public DbSet<PacingAndPricingHealth> PacingAndPricingHealths { get; set; }
        public DbSet<PartnerBiLookup> PartnerBiLookups { get; set; }
        public DbSet<PartnerLookup> PartnerLookups { get; set; }
        public DbSet<PlacementBiLookup> PlacementBiLookups { get; set; }
        public DbSet<PublisherBiLookup> PublisherBiLookups { get; set; }
        public DbSet<PublisherLookup> PublisherLookups { get; set; }
        public DbSet<SalesRegionLookup> SalesRegionLookups { get; set; }
        public DbSet<SchemaMigration> SchemaMigrations { get; set; }
        public DbSet<Segment> Segments { get; set; }
        public DbSet<SegmentCombined> SegmentCombineds { get; set; }
        public DbSet<SegmentExceptionReportId> SegmentExceptionReportIds { get; set; }
        public DbSet<SegmentImport> SegmentImports { get; set; }
        public DbSet<SegmentImportReportId> SegmentImportReportIds { get; set; }
        public DbSet<SegmentLookup> SegmentLookups { get; set; }
        public DbSet<SegmentLookupNew> SegmentLookupNews { get; set; }
        public DbSet<SegmentReportId> SegmentReportIds { get; set; }
        public DbSet<ThirdPartyPlacementLookup> ThirdPartyPlacementLookups { get; set; }
        public DbSet<VideoCreativeAnalyticsReportId> VideoCreativeAnalyticsReportIds { get; set; }
        public DbSet<WebsiteLookup> WebsiteLookups { get; set; }
        public DbSet<WeeklyLocationBid> WeeklyLocationBids { get; set; }
        public DbSet<WeeklyLocationBidsAlternate> WeeklyLocationBidsAlternates { get; set; }
        public DbSet<WhiteListForecast> WhiteListForecasts { get; set; }

        public FakeBrandscreenAnalyticsContext()
        {
            ActiveCpcAndCpaAdGroupsLookups = new FakeDbSet<ActiveCpcAndCpaAdGroupsLookup>();
            AdAnalyticsReportIds = new FakeDbSet<AdAnalyticsReportId>();
            AdDirectBuys = new FakeDbSet<AdDirectBuy>();
            AdDirectBuyAnalyticsReportIds = new FakeDbSet<AdDirectBuyAnalyticsReportId>();
            AdDirectBuyCombineds = new FakeDbSet<AdDirectBuyCombined>();
            AdDirectBuyImports = new FakeDbSet<AdDirectBuyImport>();
            AdDirectBuyImportReportIds = new FakeDbSet<AdDirectBuyImportReportId>();
            AdDirectBuyReportIds = new FakeDbSet<AdDirectBuyReportId>();
            AdGroupAbsRegionTargetingReportIds = new FakeDbSet<AdGroupAbsRegionTargetingReportId>();
            AdGroupAnalyticsFilterDatas = new FakeDbSet<AdGroupAnalyticsFilterData>();
            AdGroupAnalyticsGeoCityLookups = new FakeDbSet<AdGroupAnalyticsGeoCityLookup>();
            AdGroupAnalyticsGeoCountryLookups = new FakeDbSet<AdGroupAnalyticsGeoCountryLookup>();
            AdGroupAnalyticsGeoRegionLookups = new FakeDbSet<AdGroupAnalyticsGeoRegionLookup>();
            AdGroupAnalyticsOptimizationModels = new FakeDbSet<AdGroupAnalyticsOptimizationModel>();
            AdGroupAnalyticsPartnerLookups = new FakeDbSet<AdGroupAnalyticsPartnerLookup>();
            AdGroupAnalyticsVerticalOneLookups = new FakeDbSet<AdGroupAnalyticsVerticalOneLookup>();
            AdGroupAnalyticsVerticalThreeLookups = new FakeDbSet<AdGroupAnalyticsVerticalThreeLookup>();
            AdGroupAnalyticsVerticalTwoLookups = new FakeDbSet<AdGroupAnalyticsVerticalTwoLookup>();
            AdGroupBiLookups = new FakeDbSet<AdGroupBiLookup>();
            AdGroupCityTargetingReportIds = new FakeDbSet<AdGroupCityTargetingReportId>();
            AdGroupConversionSegmentLookups = new FakeDbSet<AdGroupConversionSegmentLookup>();
            AdGroupCountryTargetingReportIds = new FakeDbSet<AdGroupCountryTargetingReportId>();
            AdGroupDayParts = new FakeDbSet<AdGroupDayPart>();
            AdGroupDayPartAnalyticsReportIds = new FakeDbSet<AdGroupDayPartAnalyticsReportId>();
            AdGroupDayPartCombineds = new FakeDbSet<AdGroupDayPartCombined>();
            AdGroupDayPartExceptions = new FakeDbSet<AdGroupDayPartException>();
            AdGroupDayPartImports = new FakeDbSet<AdGroupDayPartImport>();
            AdGroupDayPartImportReportIds = new FakeDbSet<AdGroupDayPartImportReportId>();
            AdGroupDayPartReportIds = new FakeDbSet<AdGroupDayPartReportId>();
            AdGroupDayPartTargetingReportIds = new FakeDbSet<AdGroupDayPartTargetingReportId>();
            AdGroupDeals = new FakeDbSet<AdGroupDeal>();
            AdGroupDealAnalyticsReportIds = new FakeDbSet<AdGroupDealAnalyticsReportId>();
            AdGroupDealCombineds = new FakeDbSet<AdGroupDealCombined>();
            AdGroupDealDomains = new FakeDbSet<AdGroupDealDomain>();
            AdGroupDealDomainImports = new FakeDbSet<AdGroupDealDomainImport>();
            AdGroupDealDomainNews = new FakeDbSet<AdGroupDealDomainNew>();
            AdGroupDealExceptions = new FakeDbSet<AdGroupDealException>();
            AdGroupDealImports = new FakeDbSet<AdGroupDealImport>();
            AdGroupDealImportReportIds = new FakeDbSet<AdGroupDealImportReportId>();
            AdGroupDealReportIds = new FakeDbSet<AdGroupDealReportId>();
            AdGroupDealSites = new FakeDbSet<AdGroupDealSite>();
            AdGroupDealSiteImports = new FakeDbSet<AdGroupDealSiteImport>();
            AdGroupDealSiteInventoryOnlies = new FakeDbSet<AdGroupDealSiteInventoryOnly>();
            AdGroupDealSiteNews = new FakeDbSet<AdGroupDealSiteNew>();
            AdGroupDealSitePerformanceAndTargetingOnlies = new FakeDbSet<AdGroupDealSitePerformanceAndTargetingOnly>();
            AdGroupDealTargetingReportIds = new FakeDbSet<AdGroupDealTargetingReportId>();
            AdGroupDevices = new FakeDbSet<AdGroupDevice>();
            AdGroupDeviceAnalyticsReportIds = new FakeDbSet<AdGroupDeviceAnalyticsReportId>();
            AdGroupDeviceCombineds = new FakeDbSet<AdGroupDeviceCombined>();
            AdGroupDeviceExceptions = new FakeDbSet<AdGroupDeviceException>();
            AdGroupDeviceImports = new FakeDbSet<AdGroupDeviceImport>();
            AdGroupDeviceImportReportIds = new FakeDbSet<AdGroupDeviceImportReportId>();
            AdGroupDeviceReportIds = new FakeDbSet<AdGroupDeviceReportId>();
            AdGroupDeviceTargetingReportIds = new FakeDbSet<AdGroupDeviceTargetingReportId>();
            AdGroupDomains = new FakeDbSet<AdGroupDomain>();
            AdGroupDomainAnalytics = new FakeDbSet<AdGroupDomainAnalytic>();
            AdGroupDomainCombineds = new FakeDbSet<AdGroupDomainCombined>();
            AdGroupDomainDailies = new FakeDbSet<AdGroupDomainDaily>();
            AdGroupDomainDailyAlternates = new FakeDbSet<AdGroupDomainDailyAlternate>();
            AdGroupDomainExceptions = new FakeDbSet<AdGroupDomainException>();
            AdGroupDomainImports = new FakeDbSet<AdGroupDomainImport>();
            AdGroupDomainNews = new FakeDbSet<AdGroupDomainNew>();
            AdGroupDomainNewAlternates = new FakeDbSet<AdGroupDomainNewAlternate>();
            AdGroupDomainNewToDailyRollupBuffers = new FakeDbSet<AdGroupDomainNewToDailyRollupBuffer>();
            AdGroupDomainPerformanceOnlies = new FakeDbSet<AdGroupDomainPerformanceOnly>();
            AdGroupDoohGeoLocationGroupTargetingReportIds = new FakeDbSet<AdGroupDoohGeoLocationGroupTargetingReportId>();
            AdGroupDoohPanelLocations = new FakeDbSet<AdGroupDoohPanelLocation>();
            AdGroupGeoLocations = new FakeDbSet<AdGroupGeoLocation>();
            AdGroupGeoLocationAnalyticsReportIds = new FakeDbSet<AdGroupGeoLocationAnalyticsReportId>();
            AdGroupGeoLocationCombineds = new FakeDbSet<AdGroupGeoLocationCombined>();
            AdGroupGeoLocationExceptions = new FakeDbSet<AdGroupGeoLocationException>();
            AdGroupGeoLocationImports = new FakeDbSet<AdGroupGeoLocationImport>();
            AdGroupGeoLocationImportReportIds = new FakeDbSet<AdGroupGeoLocationImportReportId>();
            AdGroupGeoLocationPointRadius = new FakeDbSet<AdGroupGeoLocationPointRadiu>();
            AdGroupGeoLocationPointRadiusCombineds = new FakeDbSet<AdGroupGeoLocationPointRadiusCombined>();
            AdGroupGeoLocationPointRadiusExceptions = new FakeDbSet<AdGroupGeoLocationPointRadiusException>();
            AdGroupGeoLocationPointRadiusImports = new FakeDbSet<AdGroupGeoLocationPointRadiusImport>();
            AdGroupGeoLocationPointRadiusImportReportIds = new FakeDbSet<AdGroupGeoLocationPointRadiusImportReportId>();
            AdGroupGeoLocationPointRadiusReportIds = new FakeDbSet<AdGroupGeoLocationPointRadiusReportId>();
            AdGroupGeoLocationReportIds = new FakeDbSet<AdGroupGeoLocationReportId>();
            AdGroupGeoPostcodes = new FakeDbSet<AdGroupGeoPostcode>();
            AdGroupGeoPostcodeAnalyticsReportIds = new FakeDbSet<AdGroupGeoPostcodeAnalyticsReportId>();
            AdGroupGeoPostcodeCombineds = new FakeDbSet<AdGroupGeoPostcodeCombined>();
            AdGroupGeoPostcodeExceptions = new FakeDbSet<AdGroupGeoPostcodeException>();
            AdGroupGeoPostcodeImports = new FakeDbSet<AdGroupGeoPostcodeImport>();
            AdGroupGeoPostcodeImportReportIds = new FakeDbSet<AdGroupGeoPostcodeImportReportId>();
            AdGroupGeoPostcodeReportIds = new FakeDbSet<AdGroupGeoPostcodeReportId>();
            AdGroupGeoPostcodeTargetingReportIds = new FakeDbSet<AdGroupGeoPostcodeTargetingReportId>();
            AdGroupIabVerticalImportReportIds = new FakeDbSet<AdGroupIabVerticalImportReportId>();
            AdGroupLanguages = new FakeDbSet<AdGroupLanguage>();
            AdGroupLanguageAnalyticsReportIds = new FakeDbSet<AdGroupLanguageAnalyticsReportId>();
            AdGroupLanguageCombineds = new FakeDbSet<AdGroupLanguageCombined>();
            AdGroupLanguageExceptions = new FakeDbSet<AdGroupLanguageException>();
            AdGroupLanguageImports = new FakeDbSet<AdGroupLanguageImport>();
            AdGroupLanguageImportReportIds = new FakeDbSet<AdGroupLanguageImportReportId>();
            AdGroupLanguageReportIds = new FakeDbSet<AdGroupLanguageReportId>();
            AdGroupLanguageTargetingReportIds = new FakeDbSet<AdGroupLanguageTargetingReportId>();
            AdGroupLookups = new FakeDbSet<AdGroupLookup>();
            AdGroupMobileCarriers = new FakeDbSet<AdGroupMobileCarrier>();
            AdGroupMobileCarrierAnalyticsReportIds = new FakeDbSet<AdGroupMobileCarrierAnalyticsReportId>();
            AdGroupMobileCarrierCombineds = new FakeDbSet<AdGroupMobileCarrierCombined>();
            AdGroupMobileCarrierExceptions = new FakeDbSet<AdGroupMobileCarrierException>();
            AdGroupMobileCarrierImports = new FakeDbSet<AdGroupMobileCarrierImport>();
            AdGroupMobileCarrierImportReportIds = new FakeDbSet<AdGroupMobileCarrierImportReportId>();
            AdGroupMobileCarrierReportIds = new FakeDbSet<AdGroupMobileCarrierReportId>();
            AdGroupMobileCarrierTargetingReportIds = new FakeDbSet<AdGroupMobileCarrierTargetingReportId>();
            AdGroupPagePositions = new FakeDbSet<AdGroupPagePosition>();
            AdGroupPagePositionAnalyticsReportIds = new FakeDbSet<AdGroupPagePositionAnalyticsReportId>();
            AdGroupPagePositionCombineds = new FakeDbSet<AdGroupPagePositionCombined>();
            AdGroupPagePositionExceptions = new FakeDbSet<AdGroupPagePositionException>();
            AdGroupPagePositionImports = new FakeDbSet<AdGroupPagePositionImport>();
            AdGroupPagePositionImportReportIds = new FakeDbSet<AdGroupPagePositionImportReportId>();
            AdGroupPagePositionReportIds = new FakeDbSet<AdGroupPagePositionReportId>();
            AdGroupPagePositionTargetingReportIds = new FakeDbSet<AdGroupPagePositionTargetingReportId>();
            AdGroupPublishers = new FakeDbSet<AdGroupPublisher>();
            AdGroupPublisherAnalyticsReportIds = new FakeDbSet<AdGroupPublisherAnalyticsReportId>();
            AdGroupPublisherCombineds = new FakeDbSet<AdGroupPublisherCombined>();
            AdGroupPublisherExceptions = new FakeDbSet<AdGroupPublisherException>();
            AdGroupPublisherImports = new FakeDbSet<AdGroupPublisherImport>();
            AdGroupPublisherImportReportIds = new FakeDbSet<AdGroupPublisherImportReportId>();
            AdGroupPublisherReportIds = new FakeDbSet<AdGroupPublisherReportId>();
            AdGroupPublisherTargetingReportIds = new FakeDbSet<AdGroupPublisherTargetingReportId>();
            AdGroupRegionTargetingReportIds = new FakeDbSet<AdGroupRegionTargetingReportId>();
            AdGroupSegments = new FakeDbSet<AdGroupSegment>();
            AdGroupSegmentAnalytics = new FakeDbSet<AdGroupSegmentAnalytic>();
            AdGroupSegmentExceptions = new FakeDbSet<AdGroupSegmentException>();
            AdGroupSegmentImports = new FakeDbSet<AdGroupSegmentImport>();
            AdGroupSegmentTargetings = new FakeDbSet<AdGroupSegmentTargeting>();
            AdGroupVerticals = new FakeDbSet<AdGroupVertical>();
            AdGroupVertical1IabMappedTargetingReportId = new FakeDbSet<AdGroupVertical1IabMappedTargetingReportId>();
            AdGroupVertical1TargetingReportId = new FakeDbSet<AdGroupVertical1TargetingReportId>();
            AdGroupVertical2IabMappedTargetingReportId = new FakeDbSet<AdGroupVertical2IabMappedTargetingReportId>();
            AdGroupVertical2TargetingReportId = new FakeDbSet<AdGroupVertical2TargetingReportId>();
            AdGroupVertical3TargetingReportId = new FakeDbSet<AdGroupVertical3TargetingReportId>();
            AdGroupVerticalAnalyticsReportIds = new FakeDbSet<AdGroupVerticalAnalyticsReportId>();
            AdGroupVerticalCombineds = new FakeDbSet<AdGroupVerticalCombined>();
            AdGroupVerticalExceptions = new FakeDbSet<AdGroupVerticalException>();
            AdGroupVerticalIabMappedAnalyticsReportIds = new FakeDbSet<AdGroupVerticalIabMappedAnalyticsReportId>();
            AdGroupVerticalIabMappedCombineds = new FakeDbSet<AdGroupVerticalIabMappedCombined>();
            AdGroupVerticalImports = new FakeDbSet<AdGroupVerticalImport>();
            AdGroupVerticalImportReportIds = new FakeDbSet<AdGroupVerticalImportReportId>();
            AdGroupVerticalReportIds = new FakeDbSet<AdGroupVerticalReportId>();
            AdGroupVideoActivities = new FakeDbSet<AdGroupVideoActivity>();
            AdGroupVideoActivityCombineds = new FakeDbSet<AdGroupVideoActivityCombined>();
            AdGroupVideoActivityExceptions = new FakeDbSet<AdGroupVideoActivityException>();
            AdGroupVideoActivityExceptionReportIds = new FakeDbSet<AdGroupVideoActivityExceptionReportId>();
            AdGroupVideoActivityImports = new FakeDbSet<AdGroupVideoActivityImport>();
            AdGroupVideoActivityImportReportIds = new FakeDbSet<AdGroupVideoActivityImportReportId>();
            AdGroupVideoActivityReportIds = new FakeDbSet<AdGroupVideoActivityReportId>();
            AdGroupWebsites = new FakeDbSet<AdGroupWebsite>();
            AdGroupWebsiteAnalytics = new FakeDbSet<AdGroupWebsiteAnalytic>();
            AdGroupWebsiteExceptions = new FakeDbSet<AdGroupWebsiteException>();
            AdGroupWebsiteImports = new FakeDbSet<AdGroupWebsiteImport>();
            AdGroupWebsiteInventoryOnlies = new FakeDbSet<AdGroupWebsiteInventoryOnly>();
            AdGroupWebsiteNews = new FakeDbSet<AdGroupWebsiteNew>();
            AdGroupWebsitePerformanceAndTargetingOnlies = new FakeDbSet<AdGroupWebsitePerformanceAndTargetingOnly>();
            AdGroupWebsiteTargetings = new FakeDbSet<AdGroupWebsiteTargeting>();
            AdLookups = new FakeDbSet<AdLookup>();
            AdPartners = new FakeDbSet<AdPartner>();
            AdPartnerCombineds = new FakeDbSet<AdPartnerCombined>();
            AdPartnerCombinedValidOnlies = new FakeDbSet<AdPartnerCombinedValidOnly>();
            AdPartnerExceptions = new FakeDbSet<AdPartnerException>();
            AdPartnerExceptionReportIds = new FakeDbSet<AdPartnerExceptionReportId>();
            AdPartnerImports = new FakeDbSet<AdPartnerImport>();
            AdPartnerImportReportIds = new FakeDbSet<AdPartnerImportReportId>();
            AdPartnerPerformances = new FakeDbSet<AdPartnerPerformance>();
            AdPartnerReconciliations = new FakeDbSet<AdPartnerReconciliation>();
            AdPartnerReportIds = new FakeDbSet<AdPartnerReportId>();
            AdSlotLookups = new FakeDbSet<AdSlotLookup>();
            AdvertiserBiLookups = new FakeDbSet<AdvertiserBiLookup>();
            AdvertiserProductBiLookups = new FakeDbSet<AdvertiserProductBiLookup>();
            BrandSafetyLookups = new FakeDbSet<BrandSafetyLookup>();
            BrandSafetySiteCounts = new FakeDbSet<BrandSafetySiteCount>();
            BuyerAccountBiLookups = new FakeDbSet<BuyerAccountBiLookup>();
            BuyerAccountCreditLimitLookups = new FakeDbSet<BuyerAccountCreditLimitLookup>();
            BuyerAccountLookups = new FakeDbSet<BuyerAccountLookup>();
            BuyerAccountRecentAdGroupLookups = new FakeDbSet<BuyerAccountRecentAdGroupLookup>();
            BuyerAccountShardLookups = new FakeDbSet<BuyerAccountShardLookup>();
            CampaignBiLookups = new FakeDbSet<CampaignBiLookup>();
            CampaignLookups = new FakeDbSet<CampaignLookup>();
            Conversions = new FakeDbSet<Conversion>();
            ConversionCombineds = new FakeDbSet<ConversionCombined>();
            ConversionExceptions = new FakeDbSet<ConversionException>();
            ConversionExceptionReportIds = new FakeDbSet<ConversionExceptionReportId>();
            ConversionImports = new FakeDbSet<ConversionImport>();
            ConversionImportReportIds = new FakeDbSet<ConversionImportReportId>();
            ConversionReportIds = new FakeDbSet<ConversionReportId>();
            CountrySalesRegionLookups = new FakeDbSet<CountrySalesRegionLookup>();
            CreativeBiLookups = new FakeDbSet<CreativeBiLookup>();
            DateLookups = new FakeDbSet<DateLookup>();
            DealBiLookups = new FakeDbSet<DealBiLookup>();
            DirectBuyDefaultImpressions = new FakeDbSet<DirectBuyDefaultImpression>();
            DirectBuyDefaultImpressionImports = new FakeDbSet<DirectBuyDefaultImpressionImport>();
            DirectBuyDefaultImpressionImportReportIds = new FakeDbSet<DirectBuyDefaultImpressionImportReportId>();
            DirectBuyDefaultImpressionReportIds = new FakeDbSet<DirectBuyDefaultImpressionReportId>();
            DomainStats = new FakeDbSet<DomainStat>();
            DomainStatsAlternates = new FakeDbSet<DomainStatsAlternate>();
            DomainStatsImports = new FakeDbSet<DomainStatsImport>();
            ExchangeSpendSummaryLookups = new FakeDbSet<ExchangeSpendSummaryLookup>();
            GeoCityLookups = new FakeDbSet<GeoCityLookup>();
            GeoCountryLookups = new FakeDbSet<GeoCountryLookup>();
            GeoMetroLookups = new FakeDbSet<GeoMetroLookup>();
            GeoRegionLookups = new FakeDbSet<GeoRegionLookup>();
            ImportSummaries = new FakeDbSet<ImportSummary>();
            ImportSummaryReportIds = new FakeDbSet<ImportSummaryReportId>();
            InventoryLookups = new FakeDbSet<InventoryLookup>();
            InventoryLookupExceptions = new FakeDbSet<InventoryLookupException>();
            InventoryLookupImports = new FakeDbSet<InventoryLookupImport>();
            JobHistories = new FakeDbSet<JobHistory>();
            LanguageLookups = new FakeDbSet<LanguageLookup>();
            PacingAndPricingHealths = new FakeDbSet<PacingAndPricingHealth>();
            PartnerBiLookups = new FakeDbSet<PartnerBiLookup>();
            PartnerLookups = new FakeDbSet<PartnerLookup>();
            PlacementBiLookups = new FakeDbSet<PlacementBiLookup>();
            PublisherBiLookups = new FakeDbSet<PublisherBiLookup>();
            PublisherLookups = new FakeDbSet<PublisherLookup>();
            SalesRegionLookups = new FakeDbSet<SalesRegionLookup>();
            SchemaMigrations = new FakeDbSet<SchemaMigration>();
            Segments = new FakeDbSet<Segment>();
            SegmentCombineds = new FakeDbSet<SegmentCombined>();
            SegmentExceptionReportIds = new FakeDbSet<SegmentExceptionReportId>();
            SegmentImports = new FakeDbSet<SegmentImport>();
            SegmentImportReportIds = new FakeDbSet<SegmentImportReportId>();
            SegmentLookups = new FakeDbSet<SegmentLookup>();
            SegmentLookupNews = new FakeDbSet<SegmentLookupNew>();
            SegmentReportIds = new FakeDbSet<SegmentReportId>();
            ThirdPartyPlacementLookups = new FakeDbSet<ThirdPartyPlacementLookup>();
            VideoCreativeAnalyticsReportIds = new FakeDbSet<VideoCreativeAnalyticsReportId>();
            WebsiteLookups = new FakeDbSet<WebsiteLookup>();
            WeeklyLocationBids = new FakeDbSet<WeeklyLocationBid>();
            WeeklyLocationBidsAlternates = new FakeDbSet<WeeklyLocationBidsAlternate>();
            WhiteListForecasts = new FakeDbSet<WhiteListForecast>();
        }
        
        public int SaveChangesCount { get; private set; } 
        public int SaveChanges()
        {
            ++SaveChangesCount;
            return 1;
        }

        public System.Threading.Tasks.Task<int> SaveChangesAsync()
        {
            throw new NotImplementedException();
        }

        public System.Threading.Tasks.Task<int> SaveChangesAsync(CancellationToken cancellationToken)
        {
            throw new NotImplementedException();
        }

        protected virtual void Dispose(bool disposing)
        {
        }
        
        public void Dispose()
        {
            Dispose(true);
        }
        
        // Stored Procedures
        public int CreateNewSegmentEntriesForDiscoveredThirdPartySegments()
        {
 
            return 0;
        }

        public int GetAdGroupReportsByDay(int? adGroupId, DateTime? localStartDate, DateTime? localEndDate)
        {
 
            return 0;
        }

        public int GetAdGroupReportsByHour(int? adGroupId, DateTime? localStartDate, DateTime? localEndDate)
        {
 
            return 0;
        }

        public int GetAdGroupReportsForecast(int? campaignId, int? adGroupId, int? localTimeZoneId, int? goalType, int? pacingType, long? targetAmount)
        {
 
            return 0;
        }

        public int GetAdGroupReportsTotal(int? adGroupId, DateTime? localStartDate)
        {
 
            return 0;
        }

        public List<GetAnalyticsDataSegmentsTotalReturnModel> GetAnalyticsDataSegmentsTotal(string rtbSegmentId)
        {
            int procResult;
            return GetAnalyticsDataSegmentsTotal(rtbSegmentId, out procResult);
        }

        public List<GetAnalyticsDataSegmentsTotalReturnModel> GetAnalyticsDataSegmentsTotal(string rtbSegmentId, out int procResult)
        {
 
            procResult = 0;
            return new List<GetAnalyticsDataSegmentsTotalReturnModel>();
        }

        public int GetAnalyticsReportsTotal(int? adGroupId)
        {
 
            return 0;
        }

        public int GetAnalyticsReportsTotalThisHour(int? adGroupId)
        {
 
            return 0;
        }

        public int GetAnalyticsReportsTotalThisMonth(int? adGroupId)
        {
 
            return 0;
        }

        public int GetAnalyticsReportsTotalThisWeek(int? adGroupId)
        {
 
            return 0;
        }

        public int GetAnalyticsReportsTotalToday(int? adGroupId)
        {
 
            return 0;
        }

        public List<GetAnalyticsSummaryTopLevelReturnModel> GetAnalyticsSummaryTopLevel(DateTime? localStartDate, DateTime? localEndDate)
        {
            int procResult;
            return GetAnalyticsSummaryTopLevel(localStartDate, localEndDate, out procResult);
        }

        public List<GetAnalyticsSummaryTopLevelReturnModel> GetAnalyticsSummaryTopLevel(DateTime? localStartDate, DateTime? localEndDate, out int procResult)
        {
 
            procResult = 0;
            return new List<GetAnalyticsSummaryTopLevelReturnModel>();
        }

        public List<GetAnalyticsSummaryTopLevelByAdvertiserReturnModel> GetAnalyticsSummaryTopLevelByAdvertiser(int? buyerAccountId, int? advertiserId, DateTime? localStartDate, DateTime? localEndDate)
        {
            int procResult;
            return GetAnalyticsSummaryTopLevelByAdvertiser(buyerAccountId, advertiserId, localStartDate, localEndDate, out procResult);
        }

        public List<GetAnalyticsSummaryTopLevelByAdvertiserReturnModel> GetAnalyticsSummaryTopLevelByAdvertiser(int? buyerAccountId, int? advertiserId, DateTime? localStartDate, DateTime? localEndDate, out int procResult)
        {
 
            procResult = 0;
            return new List<GetAnalyticsSummaryTopLevelByAdvertiserReturnModel>();
        }

        public int GetAnalyticsWebsite(int? websiteId)
        {
 
            return 0;
        }

        public int GetAnalyticsWebsitesTotal(int? campaignId, int? adGroupId)
        {
 
            return 0;
        }

        public List<GetConversionReportReturnModel> GetConversionReport(int? buyerAccountId)
        {
            int procResult;
            return GetConversionReport(buyerAccountId, out procResult);
        }

        public List<GetConversionReportReturnModel> GetConversionReport(int? buyerAccountId, out int procResult)
        {
 
            procResult = 0;
            return new List<GetConversionReportReturnModel>();
        }

        public List<GetConversionReportReportIdReturnModel> GetConversionReportReportId(int? buyerAccountId)
        {
            int procResult;
            return GetConversionReportReportId(buyerAccountId, out procResult);
        }

        public List<GetConversionReportReportIdReturnModel> GetConversionReportReportId(int? buyerAccountId, out int procResult)
        {
 
            procResult = 0;
            return new List<GetConversionReportReportIdReturnModel>();
        }

        public int GetDomainPerformance(int? adGroupId, int? pageSize, string orderby, string searchText)
        {
 
            return 0;
        }

        public int GetDomainPerformanceTotals(int? adGroupId, int? costView, string searchText)
        {
 
            return 0;
        }

        public int GetLastAdGroupWebsiteTimestamp(out DateTime? timestamp)
        {
            timestamp = default(DateTime);
 
            return 0;
        }

        public int GetLastAdPartnerTimestamp(out DateTime? timestamp)
        {
            timestamp = default(DateTime);
 
            return 0;
        }

        public int GetLastJobHistoryTimestamp(out DateTime? timestamp)
        {
            timestamp = default(DateTime);
 
            return 0;
        }

        public int GetLastSegmentTimestamp(out DateTime? timestamp)
        {
            timestamp = default(DateTime);
 
            return 0;
        }

        public List<GetLiveStrategiesReportReturnModel> GetLiveStrategiesReport(int? buyerAccountId, DateTime? utcNow, DateTime? localNow)
        {
            int procResult;
            return GetLiveStrategiesReport(buyerAccountId, utcNow, localNow, out procResult);
        }

        public List<GetLiveStrategiesReportReturnModel> GetLiveStrategiesReport(int? buyerAccountId, DateTime? utcNow, DateTime? localNow, out int procResult)
        {
 
            procResult = 0;
            return new List<GetLiveStrategiesReportReturnModel>();
        }

        public List<GetPrivateMarketsPublishersTotalReturnModel> GetPrivateMarketsPublishersTotal(int? buyerAccountId)
        {
            int procResult;
            return GetPrivateMarketsPublishersTotal(buyerAccountId, out procResult);
        }

        public List<GetPrivateMarketsPublishersTotalReturnModel> GetPrivateMarketsPublishersTotal(int? buyerAccountId, out int procResult)
        {
 
            procResult = 0;
            return new List<GetPrivateMarketsPublishersTotalReturnModel>();
        }

        public int ImportAnalyticsData(string tableName, string jobId, string filePath, string fieldTerminator)
        {
 
            return 0;
        }

        public int PopulateAdGroupReportsForecast(int? placementId)
        {
 
            return 0;
        }

        public List<PromoteAdGroupWebsiteReturnModel> PromoteAdGroupWebsite(DateTime? utcNow)
        {
            int procResult;
            return PromoteAdGroupWebsite(utcNow, out procResult);
        }

        public List<PromoteAdGroupWebsiteReturnModel> PromoteAdGroupWebsite(DateTime? utcNow, out int procResult)
        {
 
            procResult = 0;
            return new List<PromoteAdGroupWebsiteReturnModel>();
        }

        public int RefreshAdPerformanceData(int? buyerAccountId)
        {
 
            return 0;
        }

        public List<RefreshDateIndexesReturnModel> RefreshDateIndexes(string indexNameBase, int? lookbackDays, string tableName, string dateColumn, DateTime? utcNow)
        {
            int procResult;
            return RefreshDateIndexes(indexNameBase, lookbackDays, tableName, dateColumn, utcNow, out procResult);
        }

        public List<RefreshDateIndexesReturnModel> RefreshDateIndexes(string indexNameBase, int? lookbackDays, string tableName, string dateColumn, DateTime? utcNow, out int procResult)
        {
 
            procResult = 0;
            return new List<RefreshDateIndexesReturnModel>();
        }

        public int RefreshDealPerformanceData(int? buyerAccountId)
        {
 
            return 0;
        }

        public int RefreshPrivateMarketPerformanceData(int? buyerAccountId)
        {
 
            return 0;
        }

        public int RefreshSegmentPerformanceData(int? buyerAccountId)
        {
 
            return 0;
        }

        public List<RefreshSystemSpendLimitReturnModel> RefreshSystemSpendLimit(int? lookbackDays, DateTime? todayUtc)
        {
            int procResult;
            return RefreshSystemSpendLimit(lookbackDays, todayUtc, out procResult);
        }

        public List<RefreshSystemSpendLimitReturnModel> RefreshSystemSpendLimit(int? lookbackDays, DateTime? todayUtc, out int procResult)
        {
 
            procResult = 0;
            return new List<RefreshSystemSpendLimitReturnModel>();
        }

        public List<RollAdAnalyticsReportsHourlyToDailyReportIdReturnModel> RollAdAnalyticsReportsHourlyToDailyReportId(int? rollupNumberOfDaysBefore)
        {
            int procResult;
            return RollAdAnalyticsReportsHourlyToDailyReportId(rollupNumberOfDaysBefore, out procResult);
        }

        public List<RollAdAnalyticsReportsHourlyToDailyReportIdReturnModel> RollAdAnalyticsReportsHourlyToDailyReportId(int? rollupNumberOfDaysBefore, out int procResult)
        {
 
            procResult = 0;
            return new List<RollAdAnalyticsReportsHourlyToDailyReportIdReturnModel>();
        }

        public List<RollAdAnalyticsReportsReportIdReturnModel> RollAdAnalyticsReportsReportId()
        {
            int procResult;
            return RollAdAnalyticsReportsReportId(out procResult);
        }

        public List<RollAdAnalyticsReportsReportIdReturnModel> RollAdAnalyticsReportsReportId( out int procResult)
        {
 
            procResult = 0;
            return new List<RollAdAnalyticsReportsReportIdReturnModel>();
        }

        public List<RollAdDirectBuyReportsReportIdReturnModel> RollAdDirectBuyReportsReportId()
        {
            int procResult;
            return RollAdDirectBuyReportsReportId(out procResult);
        }

        public List<RollAdDirectBuyReportsReportIdReturnModel> RollAdDirectBuyReportsReportId( out int procResult)
        {
 
            procResult = 0;
            return new List<RollAdDirectBuyReportsReportIdReturnModel>();
        }

        public List<RollAdGroupAnalyticsReportsHourlyToDailyReportIdReturnModel> RollAdGroupAnalyticsReportsHourlyToDailyReportId(int? rollupNumberOfDaysBefore, string analyticsTableName)
        {
            int procResult;
            return RollAdGroupAnalyticsReportsHourlyToDailyReportId(rollupNumberOfDaysBefore, analyticsTableName, out procResult);
        }

        public List<RollAdGroupAnalyticsReportsHourlyToDailyReportIdReturnModel> RollAdGroupAnalyticsReportsHourlyToDailyReportId(int? rollupNumberOfDaysBefore, string analyticsTableName, out int procResult)
        {
 
            procResult = 0;
            return new List<RollAdGroupAnalyticsReportsHourlyToDailyReportIdReturnModel>();
        }

        public List<RollAdGroupAnalyticsReportsReportIdReturnModel> RollAdGroupAnalyticsReportsReportId()
        {
            int procResult;
            return RollAdGroupAnalyticsReportsReportId(out procResult);
        }

        public List<RollAdGroupAnalyticsReportsReportIdReturnModel> RollAdGroupAnalyticsReportsReportId( out int procResult)
        {
 
            procResult = 0;
            return new List<RollAdGroupAnalyticsReportsReportIdReturnModel>();
        }

        public List<RollAdGroupDealReportsHourlyToDailyReportIdReturnModel> RollAdGroupDealReportsHourlyToDailyReportId(int? rollupNumberOfDaysBefore)
        {
            int procResult;
            return RollAdGroupDealReportsHourlyToDailyReportId(rollupNumberOfDaysBefore, out procResult);
        }

        public List<RollAdGroupDealReportsHourlyToDailyReportIdReturnModel> RollAdGroupDealReportsHourlyToDailyReportId(int? rollupNumberOfDaysBefore, out int procResult)
        {
 
            procResult = 0;
            return new List<RollAdGroupDealReportsHourlyToDailyReportIdReturnModel>();
        }

        public List<RollAdGroupDealReportsReportIdReturnModel> RollAdGroupDealReportsReportId()
        {
            int procResult;
            return RollAdGroupDealReportsReportId(out procResult);
        }

        public List<RollAdGroupDealReportsReportIdReturnModel> RollAdGroupDealReportsReportId( out int procResult)
        {
 
            procResult = 0;
            return new List<RollAdGroupDealReportsReportIdReturnModel>();
        }

        public int RollAdGroupDealSiteReports()
        {
 
            return 0;
        }

        public List<RollAdGroupVideoActivityReportsReportIdReturnModel> RollAdGroupVideoActivityReportsReportId()
        {
            int procResult;
            return RollAdGroupVideoActivityReportsReportId(out procResult);
        }

        public List<RollAdGroupVideoActivityReportsReportIdReturnModel> RollAdGroupVideoActivityReportsReportId( out int procResult)
        {
 
            procResult = 0;
            return new List<RollAdGroupVideoActivityReportsReportIdReturnModel>();
        }

        public int RollBrandSafetyCountryBids()
        {
 
            return 0;
        }

        public List<RollConversionReportsReportIdReturnModel> RollConversionReportsReportId()
        {
            int procResult;
            return RollConversionReportsReportId(out procResult);
        }

        public List<RollConversionReportsReportIdReturnModel> RollConversionReportsReportId( out int procResult)
        {
 
            procResult = 0;
            return new List<RollConversionReportsReportIdReturnModel>();
        }

        public List<RollDirectBuyDefaultImpressionReportsReportIdReturnModel> RollDirectBuyDefaultImpressionReportsReportId()
        {
            int procResult;
            return RollDirectBuyDefaultImpressionReportsReportId(out procResult);
        }

        public List<RollDirectBuyDefaultImpressionReportsReportIdReturnModel> RollDirectBuyDefaultImpressionReportsReportId( out int procResult)
        {
 
            procResult = 0;
            return new List<RollDirectBuyDefaultImpressionReportsReportIdReturnModel>();
        }

        public int RollDomainAnalyticsReports()
        {
 
            return 0;
        }

        public int RollDomainForecast()
        {
 
            return 0;
        }

        public List<RollInventoryLookupReturnModel> RollInventoryLookup()
        {
            int procResult;
            return RollInventoryLookup(out procResult);
        }

        public List<RollInventoryLookupReturnModel> RollInventoryLookup( out int procResult)
        {
 
            procResult = 0;
            return new List<RollInventoryLookupReturnModel>();
        }

        public List<RollReconciliationAnalyticsReportsReturnModel> RollReconciliationAnalyticsReports()
        {
            int procResult;
            return RollReconciliationAnalyticsReports(out procResult);
        }

        public List<RollReconciliationAnalyticsReportsReturnModel> RollReconciliationAnalyticsReports( out int procResult)
        {
 
            procResult = 0;
            return new List<RollReconciliationAnalyticsReportsReturnModel>();
        }

        public List<RollSegmentAnalyticsReportsReportIdReturnModel> RollSegmentAnalyticsReportsReportId()
        {
            int procResult;
            return RollSegmentAnalyticsReportsReportId(out procResult);
        }

        public List<RollSegmentAnalyticsReportsReportIdReturnModel> RollSegmentAnalyticsReportsReportId( out int procResult)
        {
 
            procResult = 0;
            return new List<RollSegmentAnalyticsReportsReportIdReturnModel>();
        }

        public int RollWebsiteAnalyticsReports()
        {
 
            return 0;
        }

        public int RollWebsiteAnalyticsReportsReportId()
        {
 
            return 0;
        }

        public int RollWeeklyLocationBids()
        {
 
            return 0;
        }

        public List<RunBillingReturnModel> RunBilling(int? billingPeriodId, bool? reprocess, int? buyerAccountId, bool? dryRun)
        {
            int procResult;
            return RunBilling(billingPeriodId, reprocess, buyerAccountId, dryRun, out procResult);
        }

        public List<RunBillingReturnModel> RunBilling(int? billingPeriodId, bool? reprocess, int? buyerAccountId, bool? dryRun, out int procResult)
        {
 
            procResult = 0;
            return new List<RunBillingReturnModel>();
        }

        public List<SafetyCheckHourlyIntegrityCheckReturnModel> SafetyCheckHourlyIntegrityCheck(DateTime? latestAdPartner, int? auditHours)
        {
            int procResult;
            return SafetyCheckHourlyIntegrityCheck(latestAdPartner, auditHours, out procResult);
        }

        public List<SafetyCheckHourlyIntegrityCheckReturnModel> SafetyCheckHourlyIntegrityCheck(DateTime? latestAdPartner, int? auditHours, out int procResult)
        {
 
            procResult = 0;
            return new List<SafetyCheckHourlyIntegrityCheckReturnModel>();
        }

        public List<SafetyCheckReportIdDailyDealIntegrityCheckReturnModel> SafetyCheckReportIdDailyDealIntegrityCheck(DateTime? latestAdPartner, int? auditDays)
        {
            int procResult;
            return SafetyCheckReportIdDailyDealIntegrityCheck(latestAdPartner, auditDays, out procResult);
        }

        public List<SafetyCheckReportIdDailyDealIntegrityCheckReturnModel> SafetyCheckReportIdDailyDealIntegrityCheck(DateTime? latestAdPartner, int? auditDays, out int procResult)
        {
 
            procResult = 0;
            return new List<SafetyCheckReportIdDailyDealIntegrityCheckReturnModel>();
        }

        public List<SafetyCheckReportIdDailyIntegrityCheckReturnModel> SafetyCheckReportIdDailyIntegrityCheck(DateTime? latestAdPartner, int? auditDays)
        {
            int procResult;
            return SafetyCheckReportIdDailyIntegrityCheck(latestAdPartner, auditDays, out procResult);
        }

        public List<SafetyCheckReportIdDailyIntegrityCheckReturnModel> SafetyCheckReportIdDailyIntegrityCheck(DateTime? latestAdPartner, int? auditDays, out int procResult)
        {
 
            procResult = 0;
            return new List<SafetyCheckReportIdDailyIntegrityCheckReturnModel>();
        }

        public List<SafetyCheckReportIdDirectBuyHourlyIntegrityCheckReturnModel> SafetyCheckReportIdDirectBuyHourlyIntegrityCheck(DateTime? latestAdPartner, int? auditHours)
        {
            int procResult;
            return SafetyCheckReportIdDirectBuyHourlyIntegrityCheck(latestAdPartner, auditHours, out procResult);
        }

        public List<SafetyCheckReportIdDirectBuyHourlyIntegrityCheckReturnModel> SafetyCheckReportIdDirectBuyHourlyIntegrityCheck(DateTime? latestAdPartner, int? auditHours, out int procResult)
        {
 
            procResult = 0;
            return new List<SafetyCheckReportIdDirectBuyHourlyIntegrityCheckReturnModel>();
        }

        public List<SafetyCheckReportIdDomainDailyIntegrityCheckReturnModel> SafetyCheckReportIdDomainDailyIntegrityCheck(DateTime? latestAdPartner, int? auditDays)
        {
            int procResult;
            return SafetyCheckReportIdDomainDailyIntegrityCheck(latestAdPartner, auditDays, out procResult);
        }

        public List<SafetyCheckReportIdDomainDailyIntegrityCheckReturnModel> SafetyCheckReportIdDomainDailyIntegrityCheck(DateTime? latestAdPartner, int? auditDays, out int procResult)
        {
 
            procResult = 0;
            return new List<SafetyCheckReportIdDomainDailyIntegrityCheckReturnModel>();
        }

        public List<SafetyCheckReportIdHourlyDirectBuyIntegrityCheckReturnModel> SafetyCheckReportIdHourlyDirectBuyIntegrityCheck(DateTime? latestAdPartner, int? auditHours)
        {
            int procResult;
            return SafetyCheckReportIdHourlyDirectBuyIntegrityCheck(latestAdPartner, auditHours, out procResult);
        }

        public List<SafetyCheckReportIdHourlyDirectBuyIntegrityCheckReturnModel> SafetyCheckReportIdHourlyDirectBuyIntegrityCheck(DateTime? latestAdPartner, int? auditHours, out int procResult)
        {
 
            procResult = 0;
            return new List<SafetyCheckReportIdHourlyDirectBuyIntegrityCheckReturnModel>();
        }

        public List<SafetyCheckReportIdHourlyIntegrityCheckReturnModel> SafetyCheckReportIdHourlyIntegrityCheck(DateTime? latestAdPartner, int? auditHours)
        {
            int procResult;
            return SafetyCheckReportIdHourlyIntegrityCheck(latestAdPartner, auditHours, out procResult);
        }

        public List<SafetyCheckReportIdHourlyIntegrityCheckReturnModel> SafetyCheckReportIdHourlyIntegrityCheck(DateTime? latestAdPartner, int? auditHours, out int procResult)
        {
 
            procResult = 0;
            return new List<SafetyCheckReportIdHourlyIntegrityCheckReturnModel>();
        }

        public List<SafetyCheckReportIdIntegrityCheckReturnModel> SafetyCheckReportIdIntegrityCheck(long? reportId)
        {
            int procResult;
            return SafetyCheckReportIdIntegrityCheck(reportId, out procResult);
        }

        public List<SafetyCheckReportIdIntegrityCheckReturnModel> SafetyCheckReportIdIntegrityCheck(long? reportId, out int procResult)
        {
 
            procResult = 0;
            return new List<SafetyCheckReportIdIntegrityCheckReturnModel>();
        }

        public int SaveImportSummary(string tableName)
        {
 
            return 0;
        }

        public int SaveImportSummaryReportId(string tableName)
        {
 
            return 0;
        }

        public int SearchAnalyticsWebsites(int? adGroupId, int? pageNum, int? pageSize, string sortColumnName, int? sortDirection, string searchString, out int? totalRecords)
        {
            totalRecords = default(int);
 
            return 0;
        }

        public int SearchWeeklyLocationBidsUrl(int? pageNum, int? pageSize, string searchString, int? geoCountryId, out int? totalRecords)
        {
            totalRecords = default(int);
 
            return 0;
        }

        public int UpdateBrandSafetySiteCounts()
        {
 
            return 0;
        }

        public int UpdatePacingAndPricingHealth()
        {
 
            return 0;
        }

        public int UpdatePrivateMarketPerformance()
        {
 
            return 0;
        }

        public int UpdatePrivateMarketSitePerformance()
        {
 
            return 0;
        }

        public List<CheckImpressionAndSpendRatioForDealsReturnModel> CheckImpressionAndSpendRatioForDeals(DateTime? refDateTime, int? numHours)
        {
            int procResult;
            return CheckImpressionAndSpendRatioForDeals(refDateTime, numHours, out procResult);
        }

        public List<CheckImpressionAndSpendRatioForDealsReturnModel> CheckImpressionAndSpendRatioForDeals(DateTime? refDateTime, int? numHours, out int procResult)
        {
 
            procResult = 0;
            return new List<CheckImpressionAndSpendRatioForDealsReturnModel>();
        }

        public int RollupAdPartnerReportIdIntoAdPartner(string computer, string @operator, string source, Guid? sourceid, Guid? executionid, int? lookBackDays)
        {
 
            return 0;
        }

        public int SpGetDomainStatsGrid(int? pageNumber, int? pageSize, string orderBy, string searchText, out int? totalRecords)
        {
            totalRecords = default(int);
 
            return 0;
        }

    }

    // ************************************************************************
    // Fake DbSet
    // Implementing Find:
    //      The Find method is difficult to implement in a generic fashion. If
    //      you need to test code that makes use of the Find method it is
    //      easiest to create a test DbSet for each of the entity types that
    //      need to support find. You can then write logic to find that
    //      particular type of entity, as shown below:
    //      public class FakeBlogDbSet : FakeDbSet<Blog>
    //      {
    //          public override Blog Find(params object[] keyValues)
    //          {
    //              var id = (int) keyValues.Single();
    //              return this.SingleOrDefault(b => b.BlogId == id);
    //          }
    //      }
    //      Read more about it here: https://msdn.microsoft.com/en-us/data/dn314431.aspx
    [GeneratedCodeAttribute("EF.Reverse.POCO.Generator", "2.15.1.0")]
    public class FakeDbSet<TEntity> : DbSet<TEntity>, IQueryable, IEnumerable<TEntity>, IDbAsyncEnumerable<TEntity> 
        where TEntity : class 
    { 
        private readonly ObservableCollection<TEntity> _data;
        private readonly IQueryable _query;
 
        public FakeDbSet() 
        { 
            _data = new ObservableCollection<TEntity>(); 
            _query = _data.AsQueryable(); 
        }

        public override IEnumerable<TEntity> AddRange(IEnumerable<TEntity> entities)
        {
            if (entities == null) throw new ArgumentNullException("entities");
            var items = entities.ToList();
            foreach (var entity in items)
            {
                _data.Add(entity);
            }
            return items;
        }
        
        public override TEntity Add(TEntity item) 
        {
            if (item == null) throw new ArgumentNullException("item");
            _data.Add(item); 
            return item; 
        } 
 
        public override TEntity Remove(TEntity item) 
        {
            if (item == null) throw new ArgumentNullException("item");
            _data.Remove(item); 
            return item; 
        } 
 
        public override TEntity Attach(TEntity item) 
        {
            if (item == null) throw new ArgumentNullException("item");
            _data.Add(item); 
            return item; 
        } 
 
        public override TEntity Create() 
        { 
            return Activator.CreateInstance<TEntity>(); 
        } 
 
        public override TDerivedEntity Create<TDerivedEntity>() 
        { 
            return Activator.CreateInstance<TDerivedEntity>(); 
        } 
 
        public override ObservableCollection<TEntity> Local 
        { 
            get { return _data; } 
        } 
 
        Type IQueryable.ElementType 
        { 
            get { return _query.ElementType; } 
        } 
 
        Expression IQueryable.Expression 
        { 
            get { return _query.Expression; } 
        } 
 
        IQueryProvider IQueryable.Provider 
        { 
            get { return new FakeDbAsyncQueryProvider<TEntity>(_query.Provider); } 
        } 
 
        System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator() 
        { 
            return _data.GetEnumerator(); 
        } 
 
        IEnumerator<TEntity> IEnumerable<TEntity>.GetEnumerator() 
        { 
            return _data.GetEnumerator(); 
        } 
 
        IDbAsyncEnumerator<TEntity> IDbAsyncEnumerable<TEntity>.GetAsyncEnumerator() 
        { 
            return new FakeDbAsyncEnumerator<TEntity>(_data.GetEnumerator()); 
        }
    } 
 
    internal class FakeDbAsyncQueryProvider<TEntity> : IDbAsyncQueryProvider 
    { 
        private readonly IQueryProvider _inner; 
 
        internal FakeDbAsyncQueryProvider(IQueryProvider inner) 
        { 
            _inner = inner; 
        } 
 
        public IQueryable CreateQuery(Expression expression) 
        { 
            return new FakeDbAsyncEnumerable<TEntity>(expression); 
        } 
 
        public IQueryable<TElement> CreateQuery<TElement>(Expression expression) 
        { 
            return new FakeDbAsyncEnumerable<TElement>(expression); 
        } 
 
        public object Execute(Expression expression) 
        { 
            return _inner.Execute(expression); 
        } 
 
        public TResult Execute<TResult>(Expression expression) 
        { 
            return _inner.Execute<TResult>(expression); 
        } 
 
        public System.Threading.Tasks.Task<object> ExecuteAsync(Expression expression, CancellationToken cancellationToken) 
        { 
            return System.Threading.Tasks.Task.FromResult(Execute(expression)); 
        } 
 
        public System.Threading.Tasks.Task<TResult> ExecuteAsync<TResult>(Expression expression, CancellationToken cancellationToken) 
        { 
            return System.Threading.Tasks.Task.FromResult(Execute<TResult>(expression)); 
        } 
    } 
 
    internal class FakeDbAsyncEnumerable<T> : EnumerableQuery<T>, IDbAsyncEnumerable<T>, IQueryable<T> 
    { 
        public FakeDbAsyncEnumerable(IEnumerable<T> enumerable) 
            : base(enumerable) 
        { } 
 
        public FakeDbAsyncEnumerable(Expression expression) 
            : base(expression) 
        { } 
 
        public IDbAsyncEnumerator<T> GetAsyncEnumerator() 
        { 
            return new FakeDbAsyncEnumerator<T>(this.AsEnumerable().GetEnumerator()); 
        } 
 
        IDbAsyncEnumerator IDbAsyncEnumerable.GetAsyncEnumerator() 
        { 
            return GetAsyncEnumerator(); 
        } 
 
        IQueryProvider IQueryable.Provider 
        { 
            get { return new FakeDbAsyncQueryProvider<T>(this); } 
        } 
    } 
 
    internal class FakeDbAsyncEnumerator<T> : IDbAsyncEnumerator<T> 
    { 
        private readonly IEnumerator<T> _inner; 
 
        public FakeDbAsyncEnumerator(IEnumerator<T> inner) 
        { 
            _inner = inner; 
        } 
 
        public void Dispose() 
        { 
            _inner.Dispose(); 
        } 
 
        public System.Threading.Tasks.Task<bool> MoveNextAsync(CancellationToken cancellationToken) 
        { 
            return System.Threading.Tasks.Task.FromResult(_inner.MoveNext()); 
        } 
 
        public T Current 
        { 
            get { return _inner.Current; } 
        } 
 
        object IDbAsyncEnumerator.Current 
        { 
            get { return Current; } 
        } 
    }

    // ************************************************************************
    // POCO classes

    // ActiveCPCAndCPAAdGroupsLookup
    public partial class ActiveCpcAndCpaAdGroupsLookup : Entity
    {
        public int AdGroupId { get; set; } // AdGroupID
        
        public ActiveCpcAndCpaAdGroupsLookup()
        {
            InitializePartial();
        }

        partial void InitializePartial();
    }

    // AdAnalyticsReportID
    public partial class AdAnalyticsReportId : Entity
    {
        public int AdvertiserId { get; set; } // AdvertiserID
        public string AdvertiserName { get; set; } // AdvertiserName
        public int BuyerAccountId { get; set; } // BuyerAccountID
        public string CompanyName { get; set; } // CompanyName
        public int AdvertiserProductId { get; set; } // AdvertiserProductID
        public string ProductName { get; set; } // ProductName
        public int CampaignId { get; set; } // CampaignID
        public string CampaignName { get; set; } // CampaignName
        public int AdGroupId { get; set; } // AdGroupID
        public string CampaignStatusName { get; set; } // CampaignStatusName
        public string RtbAdGroupId { get; set; } // RtbAdGroupID
        public string AdGroupName { get; set; } // AdGroupName
        public int PlacementId { get; set; } // PlacementID
        public int PartnerId { get; set; } // PartnerID
        public string AdName { get; set; } // AdName
        public int? Height { get; set; } // Height
        public int? Width { get; set; } // Width
        public DateTime UtcDate { get; set; } // UtcDate
        public DateTime UtcDateTime { get; set; } // UtcDateTime
        public DateTime LocalDate { get; set; } // LocalDate
        public DateTime LocalDateTime { get; set; } // LocalDateTime
        public long Bids { get; set; } // Bids
        public long Impressions { get; set; } // Impressions
        public long Clicks { get; set; } // Clicks
        public long UnfilteredClicks { get; set; } // UnfilteredClicks
        public long Conversions { get; set; } // Conversions
        public long PostViewConversions { get; set; } // PostViewConversions
        public long PostClickConversions { get; set; } // PostClickConversions
        public long? SpendLocalMicros { get; set; } // SpendLocalMicros
        public decimal? Spend { get; set; } // Spend
        public long? ClientCostLocalMicros { get; set; } // ClientCostLocalMicros
        public decimal? ClientCostDollars { get; set; } // ClientCostDollars
        public long MediaCostLocalMicros { get; set; } // MediaCostLocalMicros
        public long DataCostLocalMicros { get; set; } // DataCostLocalMicros
        public long? MediaClientCostLocalMicros { get; set; } // MediaClientCostLocalMicros
        public long? DataClientCostLocalMicros { get; set; } // DataClientCostLocalMicros
        public long? AdSlotDurationInSeconds { get; set; } // AdSlotDurationInSeconds
        public long? RawViews { get; set; } // RawViews
        public long? IabViews { get; set; } // IabViews
        public long? ViewDurationInSeconds { get; set; } // ViewDurationInSeconds
        public double? Ctr { get; set; } // CTR
        public decimal? Cpm { get; set; } // CPM
        public decimal? Cpc { get; set; } // CPC
        public decimal? Cpa { get; set; } // CPA
        public decimal? ClientCostCpm { get; set; } // ClientCostCpm
        public decimal? ClientCostCpc { get; set; } // ClientCostCpc
        public decimal? ClientCostCpa { get; set; } // ClientCostCpa
        public decimal? Cpms { get; set; } // CPMs
        public decimal? ClientCostCpms { get; set; } // ClientCostCpms
        public decimal? Cps { get; set; } // CPS
        public decimal? ClientCostCps { get; set; } // ClientCostCps
        public double? ViewableRatio { get; set; } // ViewableRatio
        public string AgencyReference { get; set; } // AgencyReference
        
        public AdAnalyticsReportId()
        {
            InitializePartial();
        }

        partial void InitializePartial();
    }

    // AdDirectBuy
    public partial class AdDirectBuy : Entity
    {
        public string DealKey { get; set; } // DealKey
        public int AdSlotId { get; set; } // AdSlotID
        public int BuyerAccountId { get; set; } // BuyerAccountID
        public int PlacementId { get; set; } // PlacementID
        public int AdGroupId { get; set; } // AdGroupID
        public int OptimizationModelId { get; set; } // OptimizationModelID
        public DateTime UtcDate { get; set; } // UtcDate
        public DateTime LocalDate { get; set; } // LocalDate
        public DateTime UtcDateTime { get; set; } // UtcDateTime
        public DateTime LocalDateTime { get; set; } // LocalDateTime
        public long Bids { get; set; } // Bids
        public long Impressions { get; set; } // Impressions
        public long? InvalidImpressions { get; set; } // InvalidImpressions
        public long Clicks { get; set; } // Clicks
        public long? InvalidClicks { get; set; } // InvalidClicks
        public long Conversions { get; set; } // Conversions
        public long PostViewConversions { get; set; } // PostViewConversions
        public long PostClickConversions { get; set; } // PostClickConversions
        public long MediaCostUsdMicros { get; set; } // MediaCostUsdMicros
        public long MediaCostLocalMicros { get; set; } // MediaCostLocalMicros
        public long DataCostLocalMicros { get; set; } // DataCostLocalMicros
        public long? FeesUsdSuperMicros { get; set; } // FeesUsdSuperMicros
        public long? FeesLocalSuperMicros { get; set; } // FeesLocalSuperMicros
        public long? AdSlotDurationInSeconds { get; set; } // AdSlotDurationInSeconds
        public long? RawViews { get; set; } // RawViews
        public long? IabViews { get; set; } // IabViews
        public long? ViewDurationInSeconds { get; set; } // ViewDurationInSeconds
        
        public AdDirectBuy()
        {
            InitializePartial();
        }

        partial void InitializePartial();
    }

    // AdDirectBuyAnalyticsReportID
    public partial class AdDirectBuyAnalyticsReportId : Entity
    {
        public int BuyerAccountId { get; set; } // BuyerAccountID
        public int AdvertiserId { get; set; } // AdvertiserID
        public string AdvertiserName { get; set; } // AdvertiserName
        public int AdvertiserProductId { get; set; } // AdvertiserProductID
        public string ProductName { get; set; } // ProductName
        public int CampaignId { get; set; } // CampaignID
        public string CampaignName { get; set; } // CampaignName
        public int AdGroupId { get; set; } // AdGroupID
        public string AdGroupName { get; set; } // AdGroupName
        public string CreativeName { get; set; } // CreativeName
        public string AdSlotName { get; set; } // AdSlotName
        public string DealKey { get; set; } // DealKey
        public int DealId { get; set; } // DealID
        public string DealName { get; set; } // DealName
        public int OptimizationModelId { get; set; } // OptimizationModelID
        public string PublisherName { get; set; } // PublisherName
        public DateTime LocalDate { get; set; } // LocalDate
        public long Bids { get; set; } // Bids
        public long Impressions { get; set; } // Impressions
        public long? Clicks { get; set; } // Clicks
        public long? UnfilteredClicks { get; set; } // UnfilteredClicks
        public long Conversions { get; set; } // Conversions
        public long PostViewConversions { get; set; } // PostViewConversions
        public long PostClickConversions { get; set; } // PostClickConversions
        public long? SpendLocalMicros { get; set; } // SpendLocalMicros
        public decimal? Spend { get; set; } // Spend
        public long? ClientCostLocalMicros { get; set; } // ClientCostLocalMicros
        public decimal? ClientCostDollars { get; set; } // ClientCostDollars
        public long MediaCostLocalMicros { get; set; } // MediaCostLocalMicros
        public long DataCostLocalMicros { get; set; } // DataCostLocalMicros
        public long? MediaClientCostLocalMicros { get; set; } // MediaClientCostLocalMicros
        public long? DataClientCostLocalMicros { get; set; } // DataClientCostLocalMicros
        public long? AdSlotDurationInSeconds { get; set; } // AdSlotDurationInSeconds
        public long? RawViews { get; set; } // RawViews
        public long? IabViews { get; set; } // IabViews
        public long? ViewDurationInSeconds { get; set; } // ViewDurationInSeconds
        public double? Ctr { get; set; } // CTR
        public decimal? Cpm { get; set; } // CPM
        public decimal? Cpc { get; set; } // CPC
        public decimal? Cpa { get; set; } // CPA
        public decimal? ClientCpm { get; set; } // ClientCPM
        public decimal? ClientCpc { get; set; } // ClientCPC
        public decimal? ClientCpa { get; set; } // ClientCPA
        public decimal? Cpms { get; set; } // CPMs
        public decimal? ClientCostCpms { get; set; } // ClientCostCpms
        public decimal? Cps { get; set; } // CPS
        public decimal? ClientCostCps { get; set; } // ClientCostCps
        public double? ViewableRatio { get; set; } // ViewableRatio
        
        public AdDirectBuyAnalyticsReportId()
        {
            InitializePartial();
        }

        partial void InitializePartial();
    }

    // AdDirectBuyCombined
    public partial class AdDirectBuyCombined : Entity
    {
        public string DealKey { get; set; } // DealKey
        public int AdSlotId { get; set; } // AdSlotID
        public int BuyerAccountId { get; set; } // BuyerAccountID
        public int PlacementId { get; set; } // PlacementID
        public int AdGroupId { get; set; } // AdGroupID
        public int OptimizationModelId { get; set; } // OptimizationModelID
        public DateTime UtcDate { get; set; } // UtcDate
        public DateTime LocalDate { get; set; } // LocalDate
        public DateTime UtcDateTime { get; set; } // UtcDateTime
        public DateTime LocalDateTime { get; set; } // LocalDateTime
        public long Bids { get; set; } // Bids
        public long Impressions { get; set; } // Impressions
        public long? InvalidImpressions { get; set; } // InvalidImpressions
        public long Clicks { get; set; } // Clicks
        public long? InvalidClicks { get; set; } // InvalidClicks
        public long Conversions { get; set; } // Conversions
        public long PostViewConversions { get; set; } // PostViewConversions
        public long PostClickConversions { get; set; } // PostClickConversions
        public long MediaCostUsdMicros { get; set; } // MediaCostUsdMicros
        public long MediaCostLocalMicros { get; set; } // MediaCostLocalMicros
        public long DataCostLocalMicros { get; set; } // DataCostLocalMicros
        public long? FeesUsdSuperMicros { get; set; } // FeesUsdSuperMicros
        public long? FeesLocalSuperMicros { get; set; } // FeesLocalSuperMicros
        public long? AdSlotDurationInSeconds { get; set; } // AdSlotDurationInSeconds
        public long? RawViews { get; set; } // RawViews
        public long? IabViews { get; set; } // IabViews
        public long? ViewDurationInSeconds { get; set; } // ViewDurationInSeconds
        
        public AdDirectBuyCombined()
        {
            InitializePartial();
        }

        partial void InitializePartial();
    }

    // AdDirectBuyImport
    public partial class AdDirectBuyImport : Entity
    {
        public string DealKey { get; set; } // DealKey
        public int AdSlotId { get; set; } // AdSlotID
        public int BuyerAccountId { get; set; } // BuyerAccountID
        public int PlacementId { get; set; } // PlacementID
        public int AdGroupId { get; set; } // AdGroupID
        public int OptimizationModelId { get; set; } // OptimizationModelID
        public DateTime UtcDate { get; set; } // UtcDate
        public DateTime LocalDate { get; set; } // LocalDate
        public DateTime UtcDateTime { get; set; } // UtcDateTime
        public DateTime LocalDateTime { get; set; } // LocalDateTime
        public long Bids { get; set; } // Bids
        public long Impressions { get; set; } // Impressions
        public long? InvalidImpressions { get; set; } // InvalidImpressions
        public long Clicks { get; set; } // Clicks
        public long? InvalidClicks { get; set; } // InvalidClicks
        public long Conversions { get; set; } // Conversions
        public long PostViewConversions { get; set; } // PostViewConversions
        public long PostClickConversions { get; set; } // PostClickConversions
        public long MediaCostUsdMicros { get; set; } // MediaCostUsdMicros
        public long MediaCostLocalMicros { get; set; } // MediaCostLocalMicros
        public long DataCostLocalMicros { get; set; } // DataCostLocalMicros
        public long? FeesUsdSuperMicros { get; set; } // FeesUsdSuperMicros
        public long? FeesLocalSuperMicros { get; set; } // FeesLocalSuperMicros
        public long? AdSlotDurationInSeconds { get; set; } // AdSlotDurationInSeconds
        public long? RawViews { get; set; } // RawViews
        public long? IabViews { get; set; } // IabViews
        public long? ViewDurationInSeconds { get; set; } // ViewDurationInSeconds
        
        public AdDirectBuyImport()
        {
            InitializePartial();
        }

        partial void InitializePartial();
    }

    // AdDirectBuyImportReportID
    public partial class AdDirectBuyImportReportId : Entity
    {
        public string DealKey { get; set; } // DealKey
        public int AdSlotId { get; set; } // AdSlotID
        public int BuyerAccountId { get; set; } // BuyerAccountID
        public int PlacementId { get; set; } // PlacementID
        public int AdGroupId { get; set; } // AdGroupID
        public int OptimizationModelId { get; set; } // OptimizationModelID
        public DateTime UtcDate { get; set; } // UtcDate
        public DateTime LocalDate { get; set; } // LocalDate
        public DateTime UtcDateTime { get; set; } // UtcDateTime
        public DateTime LocalDateTime { get; set; } // LocalDateTime
        public long Bids { get; set; } // Bids
        public long Impressions { get; set; } // Impressions
        public long? InvalidImpressions { get; set; } // InvalidImpressions
        public long Clicks { get; set; } // Clicks
        public long? InvalidClicks { get; set; } // InvalidClicks
        public long Conversions { get; set; } // Conversions
        public long PostViewConversions { get; set; } // PostViewConversions
        public long PostClickConversions { get; set; } // PostClickConversions
        public long MediaCostUsdMicros { get; set; } // MediaCostUsdMicros
        public long MediaCostLocalMicros { get; set; } // MediaCostLocalMicros
        public long DataCostLocalMicros { get; set; } // DataCostLocalMicros
        public long? FeesUsdSuperMicros { get; set; } // FeesUsdSuperMicros
        public long? FeesLocalSuperMicros { get; set; } // FeesLocalSuperMicros
        public long ReportId { get; set; } // ReportID
        public long? AdSlotDurationInSeconds { get; set; } // AdSlotDurationInSeconds
        public long? RawViews { get; set; } // RawViews
        public long? IabViews { get; set; } // IabViews
        public long? ViewDurationInSeconds { get; set; } // ViewDurationInSeconds
        
        public AdDirectBuyImportReportId()
        {
            InitializePartial();
        }

        partial void InitializePartial();
    }

    // AdDirectBuyReportID
    public partial class AdDirectBuyReportId : Entity
    {
        public string DealKey { get; set; } // DealKey
        public int AdSlotId { get; set; } // AdSlotID
        public int BuyerAccountId { get; set; } // BuyerAccountID
        public int PlacementId { get; set; } // PlacementID
        public int AdGroupId { get; set; } // AdGroupID
        public int OptimizationModelId { get; set; } // OptimizationModelID
        public DateTime UtcDate { get; set; } // UtcDate
        public DateTime LocalDate { get; set; } // LocalDate
        public DateTime UtcDateTime { get; set; } // UtcDateTime
        public DateTime LocalDateTime { get; set; } // LocalDateTime
        public long Bids { get; set; } // Bids
        public long Impressions { get; set; } // Impressions
        public long? InvalidImpressions { get; set; } // InvalidImpressions
        public long Clicks { get; set; } // Clicks
        public long? InvalidClicks { get; set; } // InvalidClicks
        public long Conversions { get; set; } // Conversions
        public long PostViewConversions { get; set; } // PostViewConversions
        public long PostClickConversions { get; set; } // PostClickConversions
        public long MediaCostUsdMicros { get; set; } // MediaCostUsdMicros
        public long MediaCostLocalMicros { get; set; } // MediaCostLocalMicros
        public long DataCostLocalMicros { get; set; } // DataCostLocalMicros
        public long? FeesUsdSuperMicros { get; set; } // FeesUsdSuperMicros
        public long? FeesLocalSuperMicros { get; set; } // FeesLocalSuperMicros
        public long ReportId { get; set; } // ReportID
        public long? AdSlotDurationInSeconds { get; set; } // AdSlotDurationInSeconds
        public long? RawViews { get; set; } // RawViews
        public long? IabViews { get; set; } // IabViews
        public long? ViewDurationInSeconds { get; set; } // ViewDurationInSeconds
        
        public AdDirectBuyReportId()
        {
            InitializePartial();
        }

        partial void InitializePartial();
    }

    // AdGroupAbsRegionTargetingReportID
    public partial class AdGroupAbsRegionTargetingReportId : Entity
    {
        public int BuyerAccountId { get; set; } // BuyerAccountID
        public int CampaignId { get; set; } // CampaignID
        public int AdGroupId { get; set; } // AdGroupID
        public int? GeoAbsRegionId { get; set; } // GeoAbsRegionID
        public string RegionName { get; set; } // RegionName
        public int IsTargeted { get; set; } // IsTargeted
        public int PackageInstalled { get; set; } // PackageInstalled
        public long? Bids { get; set; } // Bids
        public long? Impressions { get; set; } // Impressions
        public long? Clicks { get; set; } // Clicks
        public long? Conversions { get; set; } // Conversions
        public long? PostViewConversions { get; set; } // PostViewConversions
        public long? PostClickConversions { get; set; } // PostClickConversions
        public long? SpendLocalMicros { get; set; } // SpendLocalMicros
        public decimal? Spend { get; set; } // Spend
        public decimal? ClientCostLocalMicros { get; set; } // ClientCostLocalMicros
        public decimal? ClientCostDollars { get; set; } // ClientCostDollars
        public long? MediaCostLocalMicros { get; set; } // MediaCostLocalMicros
        public long? DataCostLocalMicros { get; set; } // DataCostLocalMicros
        public decimal? MediaClientCostLocalMicros { get; set; } // MediaClientCostLocalMicros
        public decimal? DataClientCostLocalMicros { get; set; } // DataClientCostLocalMicros
        public long? AdSlotDurationInSeconds { get; set; } // AdSlotDurationInSeconds
        public long? RawViews { get; set; } // RawViews
        public long? IabViews { get; set; } // IabViews
        public long? ViewDurationInSeconds { get; set; } // ViewDurationInSeconds
        public double? Ctr { get; set; } // CTR
        public decimal? Cpm { get; set; } // CPM
        public decimal? Cpc { get; set; } // CPC
        public decimal? Cpa { get; set; } // CPA
        public decimal? ClientCostCpm { get; set; } // ClientCostCPM
        public decimal? ClientCostCpc { get; set; } // ClientCostCPC
        public decimal? ClientCostCpa { get; set; } // ClientCostCPA
        public decimal? Cpms { get; set; } // CPMs
        public decimal? ClientCostCpMs { get; set; } // ClientCostCPMs
        public decimal? Cps { get; set; } // CPS
        public decimal? ClientCostCps { get; set; } // ClientCostCPS
        
        public AdGroupAbsRegionTargetingReportId()
        {
            InitializePartial();
        }

        partial void InitializePartial();
    }

    // AdGroupAnalytics_FilterData
    public partial class AdGroupAnalyticsFilterData : Entity
    {
        public int BuyerAccountId { get; set; } // BuyerAccountID
        public string CompanyName { get; set; } // CompanyName
        public int CampaignId { get; set; } // CampaignID
        public string CampaignName { get; set; } // CampaignName
        public int AdGroupId { get; set; } // AdGroupID
        public string AdGroupName { get; set; } // AdGroupName
        public DateTime LocalDate { get; set; } // LocalDate
        
        public AdGroupAnalyticsFilterData()
        {
            InitializePartial();
        }

        partial void InitializePartial();
    }

    // AdGroupAnalytics_GeoCityLookup
    public partial class AdGroupAnalyticsGeoCityLookup : Entity
    {
        public int GeoCityId { get; set; } // GeoCityID
        public string GeoCityName { get; set; } // GeoCityName
        public int? GeoRegionId { get; set; } // GeoRegionID
        
        public AdGroupAnalyticsGeoCityLookup()
        {
            InitializePartial();
        }

        partial void InitializePartial();
    }

    // AdGroupAnalytics_GeoCountryLookup
    public partial class AdGroupAnalyticsGeoCountryLookup : Entity
    {
        public int GeoCountryId { get; set; } // GeoCountryID
        public string GeoCountryName { get; set; } // GeoCountryName
        
        public AdGroupAnalyticsGeoCountryLookup()
        {
            InitializePartial();
        }

        partial void InitializePartial();
    }

    // AdGroupAnalytics_GeoRegionLookup
    public partial class AdGroupAnalyticsGeoRegionLookup : Entity
    {
        public int GeoRegionId { get; set; } // GeoRegionID
        public string GeoRegionName { get; set; } // GeoRegionName
        public int GeoCountryId { get; set; } // GeoCountryID
        
        public AdGroupAnalyticsGeoRegionLookup()
        {
            InitializePartial();
        }

        partial void InitializePartial();
    }

    // AdGroupAnalytics_OptimizationModel
    public partial class AdGroupAnalyticsOptimizationModel : Entity
    {
        public int OptimizationModelId { get; set; } // OptimizationModelID
        public DateTime LocalDate { get; set; } // LocalDate
        public long Bids { get; set; } // Bids
        public long Impressions { get; set; } // Impressions
        public long Clicks { get; set; } // Clicks
        public long PostViewConversions { get; set; } // PostViewConversions
        public long PostClickConversions { get; set; } // PostClickConversions
        public long Conversions { get; set; } // Conversions
        public decimal? Spend { get; set; } // Spend
        
        public AdGroupAnalyticsOptimizationModel()
        {
            InitializePartial();
        }

        partial void InitializePartial();
    }

    // AdGroupAnalytics_PartnerLookup
    public partial class AdGroupAnalyticsPartnerLookup : Entity
    {
        public int PartnerId { get; set; } // PartnerID
        public string PartnerName { get; set; } // PartnerName
        
        public AdGroupAnalyticsPartnerLookup()
        {
            InitializePartial();
        }

        partial void InitializePartial();
    }

    // AdGroupAnalytics_VerticalOneLookup
    public partial class AdGroupAnalyticsVerticalOneLookup : Entity
    {
        public int VerticalOneId { get; set; } // VerticalOneID
        public string VerticalOneName { get; set; } // VerticalOneName
        
        public AdGroupAnalyticsVerticalOneLookup()
        {
            InitializePartial();
        }

        partial void InitializePartial();
    }

    // AdGroupAnalytics_VerticalThreeLookup
    public partial class AdGroupAnalyticsVerticalThreeLookup : Entity
    {
        public int VerticalThreeId { get; set; } // VerticalThreeID
        public string VerticalThreeName { get; set; } // VerticalThreeName
        
        public AdGroupAnalyticsVerticalThreeLookup()
        {
            InitializePartial();
        }

        partial void InitializePartial();
    }

    // AdGroupAnalytics_VerticalTwoLookup
    public partial class AdGroupAnalyticsVerticalTwoLookup : Entity
    {
        public int VerticalTwoId { get; set; } // VerticalTwoID
        public string VerticalTwoName { get; set; } // VerticalTwoName
        
        public AdGroupAnalyticsVerticalTwoLookup()
        {
            InitializePartial();
        }

        partial void InitializePartial();
    }

    // AdGroupBILookup
    public partial class AdGroupBiLookup : Entity
    {
        public int AdGroupId { get; set; } // AdGroupID
        public Guid AdGroupUuid { get; set; } // AdGroupUuid
        public int BuyerAccountId { get; set; } // BuyerAccountID
        public int CampaignId { get; set; } // CampaignID
        public string AdGroupName { get; set; } // AdGroupName
        public int GoalTypeId { get; set; } // GoalTypeID
        public decimal GoalTargetRate { get; set; } // GoalTargetRate
        public int BudgetPeriodId { get; set; } // BudgetPeriodID
        public int PacingStyleId { get; set; } // PacingStyleID
        public decimal BudgetAmount { get; set; } // BudgetAmount
        public DateTime? UtcStartDateTime { get; set; } // UtcStartDateTime
        public DateTime? UtcEndDateTime { get; set; } // UtcEndDateTime
        public decimal MaxBidCpm { get; set; } // MaxBidCpm
        public bool AutoPause { get; set; } // AutoPause
        public int SpendConstraintPeriodId { get; set; } // SpendConstraintPeriodID
        public decimal SpendConstraintAmount { get; set; } // SpendConstraintAmount
        public int UniqueConstraintPeriodId { get; set; } // UniqueConstraintPeriodID
        public int UniqueConstraintAmount { get; set; } // UniqueConstraintAmount
        public int AdGroupStatusId { get; set; } // AdGroupStatusID
        public bool IsDeleted { get; set; } // IsDeleted
        public DateTime UtcCreatedDateTime { get; set; } // UtcCreatedDateTime
        public DateTime UtcModifiedDateTime { get; set; } // UtcModifiedDateTime
        public long GoalTargetQuantity { get; set; } // GoalTargetQuantity
        public int LanguageTargetingMode { get; set; } // LanguageTargetingMode
        public int CountryTargetingMode { get; set; } // CountryTargetingMode
        public int RegionTargetingMode { get; set; } // RegionTargetingMode
        public int CityTargetingMode { get; set; } // CityTargetingMode
        public int Vertical1TargetingMode { get; set; } // Vertical1TargetingMode
        public int Vertical2TargetingMode { get; set; } // Vertical2TargetingMode
        public int Vertical3TargetingMode { get; set; } // Vertical3TargetingMode
        public int ExchangeTargetingMode { get; set; } // ExchangeTargetingMode
        public int PublisherTargetingMode { get; set; } // PublisherTargetingMode
        public int SiteTargetingMode { get; set; } // SiteTargetingMode
        public int DataTargetTargetingMode { get; set; } // DataTargetTargetingMode
        public int DeviceTargetingMode { get; set; } // DeviceTargetingMode
        public int DayPartTargetingMode { get; set; } // DayPartTargetingMode
        public int PagePositionTargetingMode { get; set; } // PagePositionTargetingMode
        public DateTime? UtcOriginalStartDateTime { get; set; } // UtcOriginalStartDateTime
        public decimal MinBidCpm { get; set; } // MinBidCpm
        public int? CloneFromAdGroupId { get; set; } // CloneFromAdGroupID
        public decimal? PacingAmount { get; set; } // PacingAmount
        public bool IsDebug { get; set; } // IsDebug
        public int MediaTypeId { get; set; } // MediaTypeID
        
        public AdGroupBiLookup()
        {
            InitializePartial();
        }

        partial void InitializePartial();
    }

    // AdGroupCityTargetingReportID
    public partial class AdGroupCityTargetingReportId : Entity
    {
        public int BuyerAccountId { get; set; } // BuyerAccountID
        public int CampaignId { get; set; } // CampaignID
        public int AdGroupId { get; set; } // AdGroupID
        public int? GeoCityId { get; set; } // GeoCityID
        public string CityName { get; set; } // CityName
        public int GeoRegionId { get; set; } // GeoRegionID
        public string RegionName { get; set; } // RegionName
        public int GeoCountryId { get; set; } // GeoCountryID
        public string CountryName { get; set; } // CountryName
        public int IsTargeted { get; set; } // IsTargeted
        public int PackageInstalled { get; set; } // PackageInstalled
        public long? Bids { get; set; } // Bids
        public long? Impressions { get; set; } // Impressions
        public long? Clicks { get; set; } // Clicks
        public long? Conversions { get; set; } // Conversions
        public long? PostViewConversions { get; set; } // PostViewConversions
        public long? PostClickConversions { get; set; } // PostClickConversions
        public long? SpendLocalMicros { get; set; } // SpendLocalMicros
        public decimal? Spend { get; set; } // Spend
        public decimal? ClientCostLocalMicros { get; set; } // ClientCostLocalMicros
        public decimal? ClientCostDollars { get; set; } // ClientCostDollars
        public long? MediaCostLocalMicros { get; set; } // MediaCostLocalMicros
        public long? DataCostLocalMicros { get; set; } // DataCostLocalMicros
        public decimal? MediaClientCostLocalMicros { get; set; } // MediaClientCostLocalMicros
        public decimal? DataClientCostLocalMicros { get; set; } // DataClientCostLocalMicros
        public long? AdSlotDurationInSeconds { get; set; } // AdSlotDurationInSeconds
        public long? RawViews { get; set; } // RawViews
        public long? IabViews { get; set; } // IabViews
        public long? ViewDurationInSeconds { get; set; } // ViewDurationInSeconds
        public double? Ctr { get; set; } // CTR
        public decimal? Cpm { get; set; } // CPM
        public decimal? Cpc { get; set; } // CPC
        public decimal? Cpa { get; set; } // CPA
        public decimal? ClientCostCpm { get; set; } // ClientCostCPM
        public decimal? ClientCostCpc { get; set; } // ClientCostCPC
        public decimal? ClientCostCpa { get; set; } // ClientCostCPA
        public decimal? Cpms { get; set; } // CPMs
        public decimal? ClientCostCpms { get; set; } // ClientCostCpms
        public decimal? Cps { get; set; } // CPS
        public decimal? ClientCostCps { get; set; } // ClientCostCps
        public double? ViewableRatio { get; set; } // ViewableRatio
        
        public AdGroupCityTargetingReportId()
        {
            InitializePartial();
        }

        partial void InitializePartial();
    }

    // AdGroupConversionSegmentLookup
    public partial class AdGroupConversionSegmentLookup : Entity
    {
        public int AdGroupId { get; set; } // AdGroupID
        public int SegmentId { get; set; } // SegmentID
        public string RtbSegmentId { get; set; } // RtbSegmentID
        
        public AdGroupConversionSegmentLookup()
        {
            InitializePartial();
        }

        partial void InitializePartial();
    }

    // AdGroupCountryTargetingReportID
    public partial class AdGroupCountryTargetingReportId : Entity
    {
        public int BuyerAccountId { get; set; } // BuyerAccountID
        public int CampaignId { get; set; } // CampaignID
        public int AdGroupId { get; set; } // AdGroupID
        public int GeoCountryId { get; set; } // GeoCountryID
        public string CountryName { get; set; } // CountryName
        public int MediaTypeId { get; set; } // MediaTypeID
        public int IsTargeted { get; set; } // IsTargeted
        public int PackageInstalled { get; set; } // PackageInstalled
        public long? Bids { get; set; } // Bids
        public long? Impressions { get; set; } // Impressions
        public long? Clicks { get; set; } // Clicks
        public long? Conversions { get; set; } // Conversions
        public long? PostViewConversions { get; set; } // PostViewConversions
        public long? PostClickConversions { get; set; } // PostClickConversions
        public long? SpendLocalMicros { get; set; } // SpendLocalMicros
        public decimal? Spend { get; set; } // Spend
        public decimal? ClientCostLocalMicros { get; set; } // ClientCostLocalMicros
        public decimal? ClientCostDollars { get; set; } // ClientCostDollars
        public long? MediaCostLocalMicros { get; set; } // MediaCostLocalMicros
        public long? DataCostLocalMicros { get; set; } // DataCostLocalMicros
        public decimal? MediaClientCostLocalMicros { get; set; } // MediaClientCostLocalMicros
        public decimal? DataClientCostLocalMicros { get; set; } // DataClientCostLocalMicros
        public long? AdSlotDurationInSeconds { get; set; } // AdSlotDurationInSeconds
        public long? RawViews { get; set; } // RawViews
        public long? IabViews { get; set; } // IabViews
        public long? ViewDurationInSeconds { get; set; } // ViewDurationInSeconds
        public int CountryId { get; set; } // CountryID
        public double? Ctr { get; set; } // CTR
        public decimal? Cpm { get; set; } // CPM
        public decimal? Cpc { get; set; } // CPC
        public decimal? Cpa { get; set; } // CPA
        public decimal? ClientCostCpm { get; set; } // ClientCostCPM
        public decimal? ClientCostCpc { get; set; } // ClientCostCPC
        public decimal? ClientCostCpa { get; set; } // ClientCostCPA
        public decimal? Cpms { get; set; } // CPMs
        public decimal? ClientCostCpms { get; set; } // ClientCostCpms
        public decimal? Cps { get; set; } // CPS
        public decimal? ClientCostCps { get; set; } // ClientCostCps
        public double? ViewableRatio { get; set; } // ViewableRatio
        
        public AdGroupCountryTargetingReportId()
        {
            InitializePartial();
        }

        partial void InitializePartial();
    }

    // AdGroupDayPart
    public partial class AdGroupDayPart : Entity
    {
        public int BuyerAccountId { get; set; } // BuyerAccountID
        public int CampaignId { get; set; } // CampaignID
        public int AdGroupId { get; set; } // AdGroupID
        public int OptimizationModelId { get; set; } // OptimizationModelID
        public int DayPartId { get; set; } // DayPartID
        public DateTime UtcDate { get; set; } // UtcDate
        public DateTime LocalDate { get; set; } // LocalDate
        public DateTime UtcDateTime { get; set; } // UtcDateTime
        public DateTime LocalDateTime { get; set; } // LocalDateTime
        public long Bids { get; set; } // Bids
        public long Impressions { get; set; } // Impressions
        public long Clicks { get; set; } // Clicks
        public long Conversions { get; set; } // Conversions
        public long PostViewConversions { get; set; } // PostViewConversions
        public long PostClickConversions { get; set; } // PostClickConversions
        public long MediaCostUsdMicros { get; set; } // MediaCostUsdMicros
        public long MediaCostLocalMicros { get; set; } // MediaCostLocalMicros
        public long DataCostLocalMicros { get; set; } // DataCostLocalMicros
        public long? InvalidImpressions { get; set; } // InvalidImpressions
        public long? InvalidClicks { get; set; } // InvalidClicks
        public long? FeesUsdSuperMicros { get; set; } // FeesUsdSuperMicros
        public long? FeesLocalSuperMicros { get; set; } // FeesLocalSuperMicros
        public long? AdSlotDurationInSeconds { get; set; } // AdSlotDurationInSeconds
        public long? RawViews { get; set; } // RawViews
        public long? IabViews { get; set; } // IabViews
        public long? ViewDurationInSeconds { get; set; } // ViewDurationInSeconds
        
        public AdGroupDayPart()
        {
            InitializePartial();
        }

        partial void InitializePartial();
    }

    // AdGroupDayPartAnalyticsReportID
    public partial class AdGroupDayPartAnalyticsReportId : Entity
    {
        public int BuyerAccountId { get; set; } // BuyerAccountID
        public int AdvertiserId { get; set; } // AdvertiserID
        public int AdvertiserProductId { get; set; } // AdvertiserProductID
        public int CampaignId { get; set; } // CampaignID
        public int AdGroupId { get; set; } // AdGroupID
        public int OptimizationModelId { get; set; } // OptimizationModelID
        public int DayPartId { get; set; } // DayPartID
        public string DayPartName { get; set; } // DayPartName
        public DateTime LocalDate { get; set; } // LocalDate
        public long Bids { get; set; } // Bids
        public long Impressions { get; set; } // Impressions
        public long? Clicks { get; set; } // Clicks
        public long? UnfilteredClicks { get; set; } // UnfilteredClicks
        public long Conversions { get; set; } // Conversions
        public long PostViewConversions { get; set; } // PostViewConversions
        public long PostClickConversions { get; set; } // PostClickConversions
        public long? SpendLocalMicros { get; set; } // SpendLocalMicros
        public decimal? Spend { get; set; } // Spend
        public long? ClientCostLocalMicros { get; set; } // ClientCostLocalMicros
        public decimal? ClientCostDollars { get; set; } // ClientCostDollars
        public long MediaCostLocalMicros { get; set; } // MediaCostLocalMicros
        public long DataCostLocalMicros { get; set; } // DataCostLocalMicros
        public long? MediaClientCostLocalMicros { get; set; } // MediaClientCostLocalMicros
        public long? DataClientCostLocalMicros { get; set; } // DataClientCostLocalMicros
        public long? AdSlotDurationInSeconds { get; set; } // AdSlotDurationInSeconds
        public long? RawViews { get; set; } // RawViews
        public long? IabViews { get; set; } // IabViews
        public long? ViewDurationInSeconds { get; set; } // ViewDurationInSeconds
        public double? Ctr { get; set; } // CTR
        public decimal? Cpm { get; set; } // CPM
        public decimal? Cpc { get; set; } // CPC
        public decimal? Cpa { get; set; } // CPA
        public decimal? ClientCpm { get; set; } // ClientCPM
        public decimal? ClientCpc { get; set; } // ClientCPC
        public decimal? ClientCpa { get; set; } // ClientCPA
        public decimal? Cpms { get; set; } // CPMs
        public decimal? ClientCostCpms { get; set; } // ClientCostCpms
        public decimal? Cps { get; set; } // CPS
        public decimal? ClientCostCps { get; set; } // ClientCostCps
        public double? ViewableRatio { get; set; } // ViewableRatio
        
        public AdGroupDayPartAnalyticsReportId()
        {
            InitializePartial();
        }

        partial void InitializePartial();
    }

    // AdGroupDayPartCombined
    public partial class AdGroupDayPartCombined : Entity
    {
        public int BuyerAccountId { get; set; } // BuyerAccountID
        public int CampaignId { get; set; } // CampaignID
        public int AdGroupId { get; set; } // AdGroupID
        public int OptimizationModelId { get; set; } // OptimizationModelID
        public int DayPartId { get; set; } // DayPartID
        public DateTime UtcDate { get; set; } // UtcDate
        public DateTime LocalDate { get; set; } // LocalDate
        public DateTime UtcDateTime { get; set; } // UtcDateTime
        public DateTime LocalDateTime { get; set; } // LocalDateTime
        public long Bids { get; set; } // Bids
        public long Impressions { get; set; } // Impressions
        public long Clicks { get; set; } // Clicks
        public long Conversions { get; set; } // Conversions
        public long PostViewConversions { get; set; } // PostViewConversions
        public long PostClickConversions { get; set; } // PostClickConversions
        public long MediaCostUsdMicros { get; set; } // MediaCostUsdMicros
        public long MediaCostLocalMicros { get; set; } // MediaCostLocalMicros
        public long DataCostLocalMicros { get; set; } // DataCostLocalMicros
        public long? InvalidImpressions { get; set; } // InvalidImpressions
        public long? InvalidClicks { get; set; } // InvalidClicks
        public long? FeesUsdSuperMicros { get; set; } // FeesUsdSuperMicros
        public long? FeesLocalSuperMicros { get; set; } // FeesLocalSuperMicros
        public long? AdSlotDurationInSeconds { get; set; } // AdSlotDurationInSeconds
        public long? RawViews { get; set; } // RawViews
        public long? IabViews { get; set; } // IabViews
        public long? ViewDurationInSeconds { get; set; } // ViewDurationInSeconds
        
        public AdGroupDayPartCombined()
        {
            InitializePartial();
        }

        partial void InitializePartial();
    }

    // AdGroupDayPartException
    public partial class AdGroupDayPartException : Entity
    {
        public int BuyerAccountId { get; set; } // BuyerAccountID
        public int CampaignId { get; set; } // CampaignID
        public int AdGroupId { get; set; } // AdGroupID
        public int OptimizationModelId { get; set; } // OptimizationModelID
        public int DeviceId { get; set; } // DeviceID
        public DateTime UtcDateTime { get; set; } // UtcDateTime
        public DateTime LocalDateTime { get; set; } // LocalDateTime
        public long Bids { get; set; } // Bids
        public long Impressions { get; set; } // Impressions
        public long InvalidImpressions { get; set; } // InvalidImpressions
        public long Clicks { get; set; } // Clicks
        public long InvalidClicks { get; set; } // InvalidClicks
        public long Conversions { get; set; } // Conversions
        public long PostViewConversions { get; set; } // PostViewConversions
        public long PostClickConversions { get; set; } // PostClickConversions
        public long MediaCostUsdMicros { get; set; } // MediaCostUsdMicros
        public long MediaCostLocalMicros { get; set; } // MediaCostLocalMicros
        public long DataCostLocalMicros { get; set; } // DataCostLocalMicros
        public long FeesUsdSuperMicros { get; set; } // FeesUsdSuperMicros
        public long FeesLocalSuperMicros { get; set; } // FeesLocalSuperMicros
        public long? AdSlotDurationInSeconds { get; set; } // AdSlotDurationInSeconds
        public long? RawViews { get; set; } // RawViews
        public long? IabViews { get; set; } // IabViews
        public long? ViewDurationInSeconds { get; set; } // ViewDurationInSeconds
        
        public AdGroupDayPartException()
        {
            InitializePartial();
        }

        partial void InitializePartial();
    }

    // AdGroupDayPartImport
    public partial class AdGroupDayPartImport : Entity
    {
        public int BuyerAccountId { get; set; } // BuyerAccountID
        public int CampaignId { get; set; } // CampaignID
        public int AdGroupId { get; set; } // AdGroupID
        public int OptimizationModelId { get; set; } // OptimizationModelID
        public int DayPartId { get; set; } // DayPartID
        public DateTime UtcDateTime { get; set; } // UtcDateTime
        public DateTime LocalDateTime { get; set; } // LocalDateTime
        public long Bids { get; set; } // Bids
        public long Impressions { get; set; } // Impressions
        public long InvalidImpressions { get; set; } // InvalidImpressions
        public long Clicks { get; set; } // Clicks
        public long InvalidClicks { get; set; } // InvalidClicks
        public long Conversions { get; set; } // Conversions
        public long PostViewConversions { get; set; } // PostViewConversions
        public long PostClickConversions { get; set; } // PostClickConversions
        public long MediaCostUsdMicros { get; set; } // MediaCostUsdMicros
        public long MediaCostLocalMicros { get; set; } // MediaCostLocalMicros
        public long DataCostLocalMicros { get; set; } // DataCostLocalMicros
        public long FeesUsdSuperMicros { get; set; } // FeesUsdSuperMicros
        public long FeesLocalSuperMicros { get; set; } // FeesLocalSuperMicros
        public long? AdSlotDurationInSeconds { get; set; } // AdSlotDurationInSeconds
        public long? RawViews { get; set; } // RawViews
        public long? IabViews { get; set; } // IabViews
        public long? ViewDurationInSeconds { get; set; } // ViewDurationInSeconds
        
        public AdGroupDayPartImport()
        {
            InitializePartial();
        }

        partial void InitializePartial();
    }

    // AdGroupDayPartImportReportID
    public partial class AdGroupDayPartImportReportId : Entity
    {
        public int BuyerAccountId { get; set; } // BuyerAccountID
        public int CampaignId { get; set; } // CampaignID
        public int AdGroupId { get; set; } // AdGroupID
        public int OptimizationModelId { get; set; } // OptimizationModelID
        public int DayPartId { get; set; } // DayPartID
        public DateTime UtcDateTime { get; set; } // UtcDateTime
        public DateTime LocalDateTime { get; set; } // LocalDateTime
        public long Bids { get; set; } // Bids
        public long Impressions { get; set; } // Impressions
        public long InvalidImpressions { get; set; } // InvalidImpressions
        public long Clicks { get; set; } // Clicks
        public long InvalidClicks { get; set; } // InvalidClicks
        public long Conversions { get; set; } // Conversions
        public long PostViewConversions { get; set; } // PostViewConversions
        public long PostClickConversions { get; set; } // PostClickConversions
        public long MediaCostUsdMicros { get; set; } // MediaCostUsdMicros
        public long MediaCostLocalMicros { get; set; } // MediaCostLocalMicros
        public long DataCostLocalMicros { get; set; } // DataCostLocalMicros
        public long FeesUsdSuperMicros { get; set; } // FeesUsdSuperMicros
        public long FeesLocalSuperMicros { get; set; } // FeesLocalSuperMicros
        public long ReportId { get; set; } // ReportID
        public long? AdSlotDurationInSeconds { get; set; } // AdSlotDurationInSeconds
        public long? RawViews { get; set; } // RawViews
        public long? IabViews { get; set; } // IabViews
        public long? ViewDurationInSeconds { get; set; } // ViewDurationInSeconds
        
        public AdGroupDayPartImportReportId()
        {
            InitializePartial();
        }

        partial void InitializePartial();
    }

    // AdGroupDayPartReportID
    public partial class AdGroupDayPartReportId : Entity
    {
        public int BuyerAccountId { get; set; } // BuyerAccountID
        public int CampaignId { get; set; } // CampaignID
        public int AdGroupId { get; set; } // AdGroupID
        public int OptimizationModelId { get; set; } // OptimizationModelID
        public int DayPartId { get; set; } // DayPartID
        public DateTime UtcDate { get; set; } // UtcDate
        public DateTime LocalDate { get; set; } // LocalDate
        public DateTime UtcDateTime { get; set; } // UtcDateTime
        public DateTime LocalDateTime { get; set; } // LocalDateTime
        public long Bids { get; set; } // Bids
        public long Impressions { get; set; } // Impressions
        public long Clicks { get; set; } // Clicks
        public long Conversions { get; set; } // Conversions
        public long PostViewConversions { get; set; } // PostViewConversions
        public long PostClickConversions { get; set; } // PostClickConversions
        public long MediaCostUsdMicros { get; set; } // MediaCostUsdMicros
        public long MediaCostLocalMicros { get; set; } // MediaCostLocalMicros
        public long DataCostLocalMicros { get; set; } // DataCostLocalMicros
        public long? InvalidImpressions { get; set; } // InvalidImpressions
        public long? InvalidClicks { get; set; } // InvalidClicks
        public long? FeesUsdSuperMicros { get; set; } // FeesUsdSuperMicros
        public long? FeesLocalSuperMicros { get; set; } // FeesLocalSuperMicros
        public long ReportId { get; set; } // ReportID
        public long? AdSlotDurationInSeconds { get; set; } // AdSlotDurationInSeconds
        public long? RawViews { get; set; } // RawViews
        public long? IabViews { get; set; } // IabViews
        public long? ViewDurationInSeconds { get; set; } // ViewDurationInSeconds
        
        public AdGroupDayPartReportId()
        {
            InitializePartial();
        }

        partial void InitializePartial();
    }

    // AdGroupDayPartTargetingReportID
    public partial class AdGroupDayPartTargetingReportId : Entity
    {
        public int? BuyerAccountId { get; set; } // BuyerAccountID
        public int? CampaignId { get; set; } // CampaignID
        public int? AdGroupId { get; set; } // AdGroupID
        public int DayPartId { get; set; } // DayPartID
        public string DayPartName { get; set; } // DayPartName
        public string DayOfWeekName { get; set; } // DayOfWeekName
        public string HourOfDayName { get; set; } // HourOfDayName
        public bool IsEnabled { get; set; } // IsEnabled
        public int IsTargeted { get; set; } // IsTargeted
        public int PackageInstalled { get; set; } // PackageInstalled
        public long? Bids { get; set; } // Bids
        public long? Impressions { get; set; } // Impressions
        public long? Clicks { get; set; } // Clicks
        public long? Conversions { get; set; } // Conversions
        public long? PostViewConversions { get; set; } // PostViewConversions
        public long? PostClickConversions { get; set; } // PostClickConversions
        public long? SpendLocalMicros { get; set; } // SpendLocalMicros
        public decimal? Spend { get; set; } // Spend
        public decimal? ClientCostLocalMicros { get; set; } // ClientCostLocalMicros
        public decimal? ClientCostDollars { get; set; } // ClientCostDollars
        public long? MediaCostLocalMicros { get; set; } // MediaCostLocalMicros
        public long? DataCostLocalMicros { get; set; } // DataCostLocalMicros
        public decimal? MediaClientCostLocalMicros { get; set; } // MediaClientCostLocalMicros
        public decimal? DataClientCostLocalMicros { get; set; } // DataClientCostLocalMicros
        public long? AdSlotDurationInSeconds { get; set; } // AdSlotDurationInSeconds
        public long? RawViews { get; set; } // RawViews
        public long? IabViews { get; set; } // IabViews
        public long? ViewDurationInSeconds { get; set; } // ViewDurationInSeconds
        public double? Ctr { get; set; } // CTR
        public decimal? Cpm { get; set; } // CPM
        public decimal? Cpc { get; set; } // CPC
        public decimal? Cpa { get; set; } // CPA
        public decimal? ClientCostCpm { get; set; } // ClientCostCPM
        public decimal? ClientCostCpc { get; set; } // ClientCostCPC
        public decimal? ClientCostCpa { get; set; } // ClientCostCPA
        public decimal? Cpms { get; set; } // CPMs
        public decimal? ClientCostCpms { get; set; } // ClientCostCpms
        public decimal? Cps { get; set; } // CPS
        public decimal? ClientCostCps { get; set; } // ClientCostCps
        public double? ViewableRatio { get; set; } // ViewableRatio
        
        public AdGroupDayPartTargetingReportId()
        {
            InitializePartial();
        }

        partial void InitializePartial();
    }

    // AdGroupDeal
    public partial class AdGroupDeal : Entity
    {
        public int AdGroupId { get; set; } // AdGroupID
        public string DealKey { get; set; } // DealKey
        public int PublisherId { get; set; } // PublisherID
        public int OptimizationModelId { get; set; } // OptimizationModelID
        public DateTime UtcDate { get; set; } // UtcDate
        public DateTime LocalDate { get; set; } // LocalDate
        public DateTime UtcDateTime { get; set; } // UtcDateTime
        public DateTime LocalDateTime { get; set; } // LocalDateTime
        public long Bids { get; set; } // Bids
        public long Impressions { get; set; } // Impressions
        public long? InvalidImpressions { get; set; } // InvalidImpressions
        public long Clicks { get; set; } // Clicks
        public long? InvalidClicks { get; set; } // InvalidClicks
        public long Conversions { get; set; } // Conversions
        public long PostViewConversions { get; set; } // PostViewConversions
        public long PostClickConversions { get; set; } // PostClickConversions
        public long MediaCostUsdMicros { get; set; } // MediaCostUsdMicros
        public long MediaCostLocalMicros { get; set; } // MediaCostLocalMicros
        public long DataCostLocalMicros { get; set; } // DataCostLocalMicros
        public long? FeesUsdSuperMicros { get; set; } // FeesUsdSuperMicros
        public long? FeesLocalSuperMicros { get; set; } // FeesLocalSuperMicros
        public long? AdSlotDurationInSeconds { get; set; } // AdSlotDurationInSeconds
        public long? RawViews { get; set; } // RawViews
        public long? IabViews { get; set; } // IabViews
        public long? ViewDurationInSeconds { get; set; } // ViewDurationInSeconds
        
        public AdGroupDeal()
        {
            InitializePartial();
        }

        partial void InitializePartial();
    }

    // AdGroupDealAnalyticsReportID
    public partial class AdGroupDealAnalyticsReportId : Entity
    {
        public int BuyerAccountId { get; set; } // BuyerAccountID
        public int AdvertiserId { get; set; } // AdvertiserID
        public int AdvertiserProductId { get; set; } // AdvertiserProductID
        public int CampaignId { get; set; } // CampaignID
        public int AdGroupId { get; set; } // AdGroupID
        public string DealKey { get; set; } // DealKey
        public int DealId { get; set; } // DealID
        public string DealName { get; set; } // DealName
        public int OptimizationModelId { get; set; } // OptimizationModelID
        public int? PartnerId { get; set; } // PartnerID
        public string PartnerName { get; set; } // PartnerName
        public int? PublisherId { get; set; } // PublisherID
        public string PublisherName { get; set; } // PublisherName
        public DateTime LocalDate { get; set; } // LocalDate
        public long Bids { get; set; } // Bids
        public long Impressions { get; set; } // Impressions
        public long? Clicks { get; set; } // Clicks
        public long? UnfilteredClicks { get; set; } // UnfilteredClicks
        public long Conversions { get; set; } // Conversions
        public long PostViewConversions { get; set; } // PostViewConversions
        public long PostClickConversions { get; set; } // PostClickConversions
        public long? SpendLocalMicros { get; set; } // SpendLocalMicros
        public decimal? Spend { get; set; } // Spend
        public long? ClientCostLocalMicros { get; set; } // ClientCostLocalMicros
        public decimal? ClientCostDollars { get; set; } // ClientCostDollars
        public long MediaCostLocalMicros { get; set; } // MediaCostLocalMicros
        public long DataCostLocalMicros { get; set; } // DataCostLocalMicros
        public long? MediaClientCostLocalMicros { get; set; } // MediaClientCostLocalMicros
        public long? DataClientCostLocalMicros { get; set; } // DataClientCostLocalMicros
        public long? AdSlotDurationInSeconds { get; set; } // AdSlotDurationInSeconds
        public long? RawViews { get; set; } // RawViews
        public long? IabViews { get; set; } // IabViews
        public long? ViewDurationInSeconds { get; set; } // ViewDurationInSeconds
        public double? Ctr { get; set; } // CTR
        public decimal? Cpm { get; set; } // CPM
        public decimal? Cpc { get; set; } // CPC
        public decimal? Cpa { get; set; } // CPA
        public decimal? ClientCpm { get; set; } // ClientCPM
        public decimal? ClientCpc { get; set; } // ClientCPC
        public decimal? ClientCpa { get; set; } // ClientCPA
        public decimal? Cpms { get; set; } // CPMs
        public decimal? ClientCostCpms { get; set; } // ClientCostCpms
        public decimal? Cps { get; set; } // CPS
        public decimal? ClientCostCps { get; set; } // ClientCostCps
        public double? ViewableRatio { get; set; } // ViewableRatio
        
        public AdGroupDealAnalyticsReportId()
        {
            InitializePartial();
        }

        partial void InitializePartial();
    }

    // AdGroupDealCombined
    public partial class AdGroupDealCombined : Entity
    {
        public int AdGroupId { get; set; } // AdGroupID
        public string DealKey { get; set; } // DealKey
        public int PublisherId { get; set; } // PublisherID
        public int OptimizationModelId { get; set; } // OptimizationModelID
        public DateTime UtcDate { get; set; } // UtcDate
        public DateTime LocalDate { get; set; } // LocalDate
        public DateTime UtcDateTime { get; set; } // UtcDateTime
        public DateTime LocalDateTime { get; set; } // LocalDateTime
        public long Bids { get; set; } // Bids
        public long Impressions { get; set; } // Impressions
        public long? InvalidImpressions { get; set; } // InvalidImpressions
        public long Clicks { get; set; } // Clicks
        public long? InvalidClicks { get; set; } // InvalidClicks
        public long Conversions { get; set; } // Conversions
        public long PostViewConversions { get; set; } // PostViewConversions
        public long PostClickConversions { get; set; } // PostClickConversions
        public long MediaCostUsdMicros { get; set; } // MediaCostUsdMicros
        public long MediaCostLocalMicros { get; set; } // MediaCostLocalMicros
        public long DataCostLocalMicros { get; set; } // DataCostLocalMicros
        public long? FeesUsdSuperMicros { get; set; } // FeesUsdSuperMicros
        public long? FeesLocalSuperMicros { get; set; } // FeesLocalSuperMicros
        public long? AdSlotDurationInSeconds { get; set; } // AdSlotDurationInSeconds
        public long? RawViews { get; set; } // RawViews
        public long? IabViews { get; set; } // IabViews
        public long? ViewDurationInSeconds { get; set; } // ViewDurationInSeconds
        
        public AdGroupDealCombined()
        {
            InitializePartial();
        }

        partial void InitializePartial();
    }

    // AdGroupDealDomain
    public partial class AdGroupDealDomain : Entity
    {
        public int AdGroupId { get; set; } // AdGroupID
        public string DealKey { get; set; } // DealKey
        public string DomainName { get; set; } // DomainName
        public DateTime UtcDate { get; set; } // UtcDate
        public DateTime LocalDate { get; set; } // LocalDate
        public long Bids { get; set; } // Bids
        public long Impressions { get; set; } // Impressions
        public long Clicks { get; set; } // Clicks
        public long Conversions { get; set; } // Conversions
        public long PostViewConversions { get; set; } // PostViewConversions
        public long PostClickConversions { get; set; } // PostClickConversions
        public long MediaCostUsdMicros { get; set; } // MediaCostUsdMicros
        public long MediaCostLocalMicros { get; set; } // MediaCostLocalMicros
        public long DataCostLocalMicros { get; set; } // DataCostLocalMicros
        public long? InvalidImpressions { get; set; } // InvalidImpressions
        public long? InvalidClicks { get; set; } // InvalidClicks
        public long? FeesUsdSuperMicros { get; set; } // FeesUsdSuperMicros
        public long? FeesLocalSuperMicros { get; set; } // FeesLocalSuperMicros
        public long? AdSlotDurationInSeconds { get; set; } // AdSlotDurationInSeconds
        public long? RawViews { get; set; } // RawViews
        public long? IabViews { get; set; } // IabViews
        public long? ViewDurationInSeconds { get; set; } // ViewDurationInSeconds
        
        public AdGroupDealDomain()
        {
            InitializePartial();
        }

        partial void InitializePartial();
    }

    // AdGroupDealDomainImport
    public partial class AdGroupDealDomainImport : Entity
    {
        public int AdGroupId { get; set; } // AdGroupID
        public string DealKey { get; set; } // DealKey
        public string DomainName { get; set; } // DomainName
        public DateTime UtcDate { get; set; } // UtcDate
        public DateTime LocalDate { get; set; } // LocalDate
        public long Bids { get; set; } // Bids
        public long Impressions { get; set; } // Impressions
        public long Clicks { get; set; } // Clicks
        public long Conversions { get; set; } // Conversions
        public long PostViewConversions { get; set; } // PostViewConversions
        public long PostClickConversions { get; set; } // PostClickConversions
        public long MediaCostUsdMicros { get; set; } // MediaCostUsdMicros
        public long MediaCostLocalMicros { get; set; } // MediaCostLocalMicros
        public long DataCostLocalMicros { get; set; } // DataCostLocalMicros
        public long? InvalidImpressions { get; set; } // InvalidImpressions
        public long? InvalidClicks { get; set; } // InvalidClicks
        public long? FeesUsdSuperMicros { get; set; } // FeesUsdSuperMicros
        public long? FeesLocalSuperMicros { get; set; } // FeesLocalSuperMicros
        public long? AdSlotDurationInSeconds { get; set; } // AdSlotDurationInSeconds
        public long? RawViews { get; set; } // RawViews
        public long? IabViews { get; set; } // IabViews
        public long? ViewDurationInSeconds { get; set; } // ViewDurationInSeconds
        
        public AdGroupDealDomainImport()
        {
            InitializePartial();
        }

        partial void InitializePartial();
    }

    // AdGroupDealDomainNew
    public partial class AdGroupDealDomainNew : Entity
    {
        public int AdGroupId { get; set; } // AdGroupID
        public string DealKey { get; set; } // DealKey
        public string DomainName { get; set; } // DomainName
        public DateTime UtcDate { get; set; } // UtcDate
        public DateTime LocalDate { get; set; } // LocalDate
        public long Bids { get; set; } // Bids
        public long Impressions { get; set; } // Impressions
        public long Clicks { get; set; } // Clicks
        public long Conversions { get; set; } // Conversions
        public long PostViewConversions { get; set; } // PostViewConversions
        public long PostClickConversions { get; set; } // PostClickConversions
        public long MediaCostUsdMicros { get; set; } // MediaCostUsdMicros
        public long MediaCostLocalMicros { get; set; } // MediaCostLocalMicros
        public long DataCostLocalMicros { get; set; } // DataCostLocalMicros
        public long? InvalidImpressions { get; set; } // InvalidImpressions
        public long? InvalidClicks { get; set; } // InvalidClicks
        public long? FeesUsdSuperMicros { get; set; } // FeesUsdSuperMicros
        public long? FeesLocalSuperMicros { get; set; } // FeesLocalSuperMicros
        public long? AdSlotDurationInSeconds { get; set; } // AdSlotDurationInSeconds
        public long? RawViews { get; set; } // RawViews
        public long? IabViews { get; set; } // IabViews
        public long? ViewDurationInSeconds { get; set; } // ViewDurationInSeconds
        
        public AdGroupDealDomainNew()
        {
            InitializePartial();
        }

        partial void InitializePartial();
    }

    // AdGroupDealException
    public partial class AdGroupDealException : Entity
    {
        public int AdGroupId { get; set; } // AdGroupID
        public string DealKey { get; set; } // DealKey
        public int PublisherId { get; set; } // PublisherID
        public int OptimizationModelId { get; set; } // OptimizationModelID
        public DateTime UtcDate { get; set; } // UtcDate
        public DateTime LocalDate { get; set; } // LocalDate
        public DateTime UtcDateTime { get; set; } // UtcDateTime
        public DateTime LocalDateTime { get; set; } // LocalDateTime
        public long Bids { get; set; } // Bids
        public long Impressions { get; set; } // Impressions
        public long? InvalidImpressions { get; set; } // InvalidImpressions
        public long Clicks { get; set; } // Clicks
        public long? InvalidClicks { get; set; } // InvalidClicks
        public long Conversions { get; set; } // Conversions
        public long PostViewConversions { get; set; } // PostViewConversions
        public long PostClickConversions { get; set; } // PostClickConversions
        public long MediaCostUsdMicros { get; set; } // MediaCostUsdMicros
        public long MediaCostLocalMicros { get; set; } // MediaCostLocalMicros
        public long DataCostLocalMicros { get; set; } // DataCostLocalMicros
        public long? FeesUsdSuperMicros { get; set; } // FeesUsdSuperMicros
        public long? FeesLocalSuperMicros { get; set; } // FeesLocalSuperMicros
        public long? AdSlotDurationInSeconds { get; set; } // AdSlotDurationInSeconds
        public long? RawViews { get; set; } // RawViews
        public long? IabViews { get; set; } // IabViews
        public long? ViewDurationInSeconds { get; set; } // ViewDurationInSeconds
        
        public AdGroupDealException()
        {
            InitializePartial();
        }

        partial void InitializePartial();
    }

    // AdGroupDealImport
    public partial class AdGroupDealImport : Entity
    {
        public int AdGroupId { get; set; } // AdGroupID
        public string DealKey { get; set; } // DealKey
        public int PublisherId { get; set; } // PublisherID
        public int OptimizationModelId { get; set; } // OptimizationModelID
        public DateTime UtcDate { get; set; } // UtcDate
        public DateTime LocalDate { get; set; } // LocalDate
        public DateTime UtcDateTime { get; set; } // UtcDateTime
        public DateTime LocalDateTime { get; set; } // LocalDateTime
        public long Bids { get; set; } // Bids
        public long Impressions { get; set; } // Impressions
        public long? InvalidImpressions { get; set; } // InvalidImpressions
        public long Clicks { get; set; } // Clicks
        public long? InvalidClicks { get; set; } // InvalidClicks
        public long Conversions { get; set; } // Conversions
        public long PostViewConversions { get; set; } // PostViewConversions
        public long PostClickConversions { get; set; } // PostClickConversions
        public long MediaCostUsdMicros { get; set; } // MediaCostUsdMicros
        public long MediaCostLocalMicros { get; set; } // MediaCostLocalMicros
        public long DataCostLocalMicros { get; set; } // DataCostLocalMicros
        public long? FeesUsdSuperMicros { get; set; } // FeesUsdSuperMicros
        public long? FeesLocalSuperMicros { get; set; } // FeesLocalSuperMicros
        public long? AdSlotDurationInSeconds { get; set; } // AdSlotDurationInSeconds
        public long? RawViews { get; set; } // RawViews
        public long? IabViews { get; set; } // IabViews
        public long? ViewDurationInSeconds { get; set; } // ViewDurationInSeconds
        
        public AdGroupDealImport()
        {
            InitializePartial();
        }

        partial void InitializePartial();
    }

    // AdGroupDealImportReportID
    public partial class AdGroupDealImportReportId : Entity
    {
        public int AdGroupId { get; set; } // AdGroupID
        public string DealKey { get; set; } // DealKey
        public int PublisherId { get; set; } // PublisherID
        public int OptimizationModelId { get; set; } // OptimizationModelID
        public DateTime UtcDate { get; set; } // UtcDate
        public DateTime LocalDate { get; set; } // LocalDate
        public DateTime UtcDateTime { get; set; } // UtcDateTime
        public DateTime LocalDateTime { get; set; } // LocalDateTime
        public long Bids { get; set; } // Bids
        public long Impressions { get; set; } // Impressions
        public long? InvalidImpressions { get; set; } // InvalidImpressions
        public long Clicks { get; set; } // Clicks
        public long? InvalidClicks { get; set; } // InvalidClicks
        public long Conversions { get; set; } // Conversions
        public long PostViewConversions { get; set; } // PostViewConversions
        public long PostClickConversions { get; set; } // PostClickConversions
        public long MediaCostUsdMicros { get; set; } // MediaCostUsdMicros
        public long MediaCostLocalMicros { get; set; } // MediaCostLocalMicros
        public long DataCostLocalMicros { get; set; } // DataCostLocalMicros
        public long? FeesUsdSuperMicros { get; set; } // FeesUsdSuperMicros
        public long? FeesLocalSuperMicros { get; set; } // FeesLocalSuperMicros
        public long ReportId { get; set; } // ReportID
        public long? AdSlotDurationInSeconds { get; set; } // AdSlotDurationInSeconds
        public long? RawViews { get; set; } // RawViews
        public long? IabViews { get; set; } // IabViews
        public long? ViewDurationInSeconds { get; set; } // ViewDurationInSeconds
        
        public AdGroupDealImportReportId()
        {
            InitializePartial();
        }

        partial void InitializePartial();
    }

    // AdGroupDealReportID
    public partial class AdGroupDealReportId : Entity
    {
        public int AdGroupId { get; set; } // AdGroupID
        public string DealKey { get; set; } // DealKey
        public int PublisherId { get; set; } // PublisherID
        public int OptimizationModelId { get; set; } // OptimizationModelID
        public DateTime UtcDate { get; set; } // UtcDate
        public DateTime LocalDate { get; set; } // LocalDate
        public DateTime UtcDateTime { get; set; } // UtcDateTime
        public DateTime LocalDateTime { get; set; } // LocalDateTime
        public long Bids { get; set; } // Bids
        public long Impressions { get; set; } // Impressions
        public long? InvalidImpressions { get; set; } // InvalidImpressions
        public long Clicks { get; set; } // Clicks
        public long? InvalidClicks { get; set; } // InvalidClicks
        public long Conversions { get; set; } // Conversions
        public long PostViewConversions { get; set; } // PostViewConversions
        public long PostClickConversions { get; set; } // PostClickConversions
        public long MediaCostUsdMicros { get; set; } // MediaCostUsdMicros
        public long MediaCostLocalMicros { get; set; } // MediaCostLocalMicros
        public long DataCostLocalMicros { get; set; } // DataCostLocalMicros
        public long? FeesUsdSuperMicros { get; set; } // FeesUsdSuperMicros
        public long? FeesLocalSuperMicros { get; set; } // FeesLocalSuperMicros
        public long ReportId { get; set; } // ReportID
        public long? AdSlotDurationInSeconds { get; set; } // AdSlotDurationInSeconds
        public long? RawViews { get; set; } // RawViews
        public long? IabViews { get; set; } // IabViews
        public long? ViewDurationInSeconds { get; set; } // ViewDurationInSeconds
        
        public AdGroupDealReportId()
        {
            InitializePartial();
        }

        partial void InitializePartial();
    }

    // AdGroupDealSite
    public partial class AdGroupDealSite : Entity
    {
        public int AdGroupId { get; set; } // AdGroupID
        public string DealKey { get; set; } // DealKey
        public long? InventoryId { get; set; } // InventoryID
        public int PartnerId { get; set; } // PartnerID
        public int PublisherId { get; set; } // PublisherID
        public int WebsiteId { get; set; } // WebsiteID
        public string WebsiteUrl { get; set; } // WebsiteUrl
        public DateTime UtcDate { get; set; } // UtcDate
        public DateTime LocalDate { get; set; } // LocalDate
        public long Bids { get; set; } // Bids
        public long Impressions { get; set; } // Impressions
        public long Clicks { get; set; } // Clicks
        public long Conversions { get; set; } // Conversions
        public long PostViewConversions { get; set; } // PostViewConversions
        public long PostClickConversions { get; set; } // PostClickConversions
        public long MediaCostUsdMicros { get; set; } // MediaCostUsdMicros
        public long MediaCostLocalMicros { get; set; } // MediaCostLocalMicros
        public long DataCostLocalMicros { get; set; } // DataCostLocalMicros
        public long? InvalidImpressions { get; set; } // InvalidImpressions
        public long? InvalidClicks { get; set; } // InvalidClicks
        public long? FeesUsdSuperMicros { get; set; } // FeesUsdSuperMicros
        public long? FeesLocalSuperMicros { get; set; } // FeesLocalSuperMicros
        public long? AdSlotDurationInSeconds { get; set; } // AdSlotDurationInSeconds
        public long? RawViews { get; set; } // RawViews
        public long? IabViews { get; set; } // IabViews
        public long? ViewDurationInSeconds { get; set; } // ViewDurationInSeconds
        
        public AdGroupDealSite()
        {
            InitializePartial();
        }

        partial void InitializePartial();
    }

    // AdGroupDealSiteImport
    public partial class AdGroupDealSiteImport : Entity
    {
        public int AdGroupId { get; set; } // AdGroupID
        public string DealKey { get; set; } // DealKey
        public long? InventoryId { get; set; } // InventoryID
        public int PartnerId { get; set; } // PartnerID
        public int PublisherId { get; set; } // PublisherID
        public int WebsiteId { get; set; } // WebsiteID
        public string WebsiteUrl { get; set; } // WebsiteUrl
        public DateTime UtcDate { get; set; } // UtcDate
        public DateTime LocalDate { get; set; } // LocalDate
        public long Bids { get; set; } // Bids
        public long Impressions { get; set; } // Impressions
        public long Clicks { get; set; } // Clicks
        public long Conversions { get; set; } // Conversions
        public long PostViewConversions { get; set; } // PostViewConversions
        public long PostClickConversions { get; set; } // PostClickConversions
        public long MediaCostUsdMicros { get; set; } // MediaCostUsdMicros
        public long MediaCostLocalMicros { get; set; } // MediaCostLocalMicros
        public long DataCostLocalMicros { get; set; } // DataCostLocalMicros
        public long? InvalidImpressions { get; set; } // InvalidImpressions
        public long? InvalidClicks { get; set; } // InvalidClicks
        public long? FeesUsdSuperMicros { get; set; } // FeesUsdSuperMicros
        public long? FeesLocalSuperMicros { get; set; } // FeesLocalSuperMicros
        public long? AdSlotDurationInSeconds { get; set; } // AdSlotDurationInSeconds
        public long? RawViews { get; set; } // RawViews
        public long? IabViews { get; set; } // IabViews
        public long? ViewDurationInSeconds { get; set; } // ViewDurationInSeconds
        
        public AdGroupDealSiteImport()
        {
            InitializePartial();
        }

        partial void InitializePartial();
    }

    // AdGroupDealSiteInventoryOnly
    public partial class AdGroupDealSiteInventoryOnly : Entity
    {
        public int BuyerAccountId { get; set; } // BuyerAccountID
        public int CampaignId { get; set; } // CampaignID
        public int AdGroupId { get; set; } // AdGroupID
        public long InventoryId { get; set; } // InventoryID
        public int PartnerId { get; set; } // PartnerID
        public string PartnerName { get; set; } // PartnerName
        public string DealKey { get; set; } // DealKey
        public int PublisherId { get; set; } // PublisherID
        public string PublisherName { get; set; } // PublisherName
        public long WebsiteId { get; set; } // WebsiteID
        public string WebsiteUrl { get; set; } // WebsiteUrl
        public int IsTargeted { get; set; } // IsTargeted
        public int PackageInstalled { get; set; } // PackageInstalled
        public int BinomialFiltered { get; set; } // BinomialFiltered
        public int BinomialFilterOverride { get; set; } // BinomialFilterOverride
        public int WhiteListedInSiteLevel { get; set; } // WhiteListedInSiteLevel
        public long? Bids { get; set; } // Bids
        public long? Impressions { get; set; } // Impressions
        public long? Clicks { get; set; } // Clicks
        public long? Conversions { get; set; } // Conversions
        public long? PostViewConversions { get; set; } // PostViewConversions
        public long? PostClickConversions { get; set; } // PostClickConversions
        public long? SpendLocalMicros { get; set; } // SpendLocalMicros
        public decimal? Spend { get; set; } // Spend
        public long? ClientCostLocalMicros { get; set; } // ClientCostLocalMicros
        public decimal? ClientCostDollars { get; set; } // ClientCostDollars
        public double? Ctr { get; set; } // Ctr
        public decimal? Cpm { get; set; } // Cpm
        public decimal? Cpc { get; set; } // Cpc
        public decimal? Cpa { get; set; } // Cpa
        public decimal? ClientCostCpm { get; set; } // ClientCostCpm
        public decimal? ClientCostCpc { get; set; } // ClientCostCpc
        public decimal? ClientCostCpa { get; set; } // ClientCostCpa
        public long? MediaCostLocalMicros { get; set; } // MediaCostLocalMicros
        public long? DataCostLocalMicros { get; set; } // DataCostLocalMicros
        public long? MediaClientCostLocalMicros { get; set; } // MediaClientCostLocalMicros
        public long? DataClientCostLocalMicros { get; set; } // DataClientCostLocalMicros
        public long? AdSlotDurationInSeconds { get; set; } // AdSlotDurationInSeconds
        public long? RawViews { get; set; } // RawViews
        public long? IabViews { get; set; } // IabViews
        public long? ViewDurationInSeconds { get; set; } // ViewDurationInSeconds
        public double? ViewableRatio { get; set; } // ViewableRatio
        public decimal? Cpms { get; set; } // Cpms
        public decimal? ClientCostCpms { get; set; } // ClientCostCpms
        public decimal? Cps { get; set; } // Cps
        public decimal? ClientCostCps { get; set; } // ClientCostCps
        
        public AdGroupDealSiteInventoryOnly()
        {
            InitializePartial();
        }

        partial void InitializePartial();
    }

    // AdGroupDealSiteNew
    public partial class AdGroupDealSiteNew : Entity
    {
        public int AdGroupId { get; set; } // AdGroupID
        public string DealKey { get; set; } // DealKey
        public long? InventoryId { get; set; } // InventoryID
        public int PartnerId { get; set; } // PartnerID
        public int PublisherId { get; set; } // PublisherID
        public int WebsiteId { get; set; } // WebsiteID
        public string WebsiteUrl { get; set; } // WebsiteUrl
        public DateTime UtcDate { get; set; } // UtcDate
        public DateTime LocalDate { get; set; } // LocalDate
        public long Bids { get; set; } // Bids
        public long Impressions { get; set; } // Impressions
        public long Clicks { get; set; } // Clicks
        public long Conversions { get; set; } // Conversions
        public long PostViewConversions { get; set; } // PostViewConversions
        public long PostClickConversions { get; set; } // PostClickConversions
        public long MediaCostUsdMicros { get; set; } // MediaCostUsdMicros
        public long MediaCostLocalMicros { get; set; } // MediaCostLocalMicros
        public long DataCostLocalMicros { get; set; } // DataCostLocalMicros
        public long? InvalidImpressions { get; set; } // InvalidImpressions
        public long? InvalidClicks { get; set; } // InvalidClicks
        public long? FeesUsdSuperMicros { get; set; } // FeesUsdSuperMicros
        public long? FeesLocalSuperMicros { get; set; } // FeesLocalSuperMicros
        public long? AdSlotDurationInSeconds { get; set; } // AdSlotDurationInSeconds
        public long? RawViews { get; set; } // RawViews
        public long? IabViews { get; set; } // IabViews
        public long? ViewDurationInSeconds { get; set; } // ViewDurationInSeconds
        
        public AdGroupDealSiteNew()
        {
            InitializePartial();
        }

        partial void InitializePartial();
    }

    // AdGroupDealSitePerformanceAndTargetingOnly
    public partial class AdGroupDealSitePerformanceAndTargetingOnly : Entity
    {
        public int BuyerAccountId { get; set; } // BuyerAccountID
        public int CampaignId { get; set; } // CampaignID
        public int AdGroupId { get; set; } // AdGroupID
        public long? InventoryId { get; set; } // InventoryID
        public int PartnerId { get; set; } // PartnerID
        public string PartnerName { get; set; } // PartnerName
        public int PublisherId { get; set; } // PublisherID
        public string PublisherName { get; set; } // PublisherName
        public long? WebsiteId { get; set; } // WebsiteID
        public string WebsiteUrl { get; set; } // WebsiteUrl
        public string DealKey { get; set; } // DealKey
        public int DealId { get; set; } // DealID
        public string DealName { get; set; } // DealName
        public long? Bids { get; set; } // Bids
        public long? Impressions { get; set; } // Impressions
        public long? Clicks { get; set; } // Clicks
        public long? Conversions { get; set; } // Conversions
        public long? PostViewConversions { get; set; } // PostViewConversions
        public long? PostClickConversions { get; set; } // PostClickConversions
        public long? SpendLocalMicros { get; set; } // SpendLocalMicros
        public decimal? Spend { get; set; } // Spend
        public long? ClientCostLocalMicros { get; set; } // ClientCostLocalMicros
        public decimal? ClientCostDollars { get; set; } // ClientCostDollars
        public long? MediaCostLocalMicros { get; set; } // MediaCostLocalMicros
        public long? DataCostLocalMicros { get; set; } // DataCostLocalMicros
        public long? MediaClientCostLocalMicros { get; set; } // MediaClientCostLocalMicros
        public long? DataClientCostLocalMicros { get; set; } // DataClientCostLocalMicros
        public long? AdSlotDurationInSeconds { get; set; } // AdSlotDurationInSeconds
        public long? RawViews { get; set; } // RawViews
        public long? IabViews { get; set; } // IabViews
        public long? ViewDurationInSeconds { get; set; } // ViewDurationInSeconds
        public int IsTargeted { get; set; } // IsTargeted
        public int PackageInstalled { get; set; } // PackageInstalled
        public int BinomialFiltered { get; set; } // BinomialFiltered
        public int BinomialFilterOverride { get; set; } // BinomialFilterOverride
        public int WhiteListedInSiteLevel { get; set; } // WhiteListedInSiteLevel
        public double? Ctr { get; set; } // CTR
        public decimal? Cpm { get; set; } // CPM
        public decimal? Cpc { get; set; } // CPC
        public decimal? Cpa { get; set; } // CPA
        public decimal? ClientCostCpm { get; set; } // ClientCostCPM
        public decimal? ClientCostCpc { get; set; } // ClientCostCPC
        public decimal? ClientCostCpa { get; set; } // ClientCostCPA
        public decimal? Cpms { get; set; } // CPMs
        public decimal? ClientCostCpms { get; set; } // ClientCostCpms
        public decimal? Cps { get; set; } // CPS
        public decimal? ClientCostCps { get; set; } // ClientCostCps
        public double? ViewableRatio { get; set; } // ViewableRatio
        
        public AdGroupDealSitePerformanceAndTargetingOnly()
        {
            InitializePartial();
        }

        partial void InitializePartial();
    }

    // AdGroupDealTargetingReportID
    public partial class AdGroupDealTargetingReportId : Entity
    {
        public int BuyerAccountId { get; set; } // BuyerAccountID
        public int? CampaignId { get; set; } // CampaignID
        public int? AdGroupId { get; set; } // AdGroupID
        public int DealId { get; set; } // DealID
        public string DealName { get; set; } // DealName
        public string PublisherName { get; set; } // PublisherName
        public int PublisherId { get; set; } // PublisherID
        public string PartnerName { get; set; } // PartnerName
        public int IsTargeted { get; set; } // IsTargeted
        public int? PackageInstalled { get; set; } // PackageInstalled
        public long? Bids { get; set; } // Bids
        public long? Impressions { get; set; } // Impressions
        public long? Clicks { get; set; } // Clicks
        public long? Conversions { get; set; } // Conversions
        public long? PostViewConversions { get; set; } // PostViewConversions
        public long? PostClickConversions { get; set; } // PostClickConversions
        public long? SpendLocalMicros { get; set; } // SpendLocalMicros
        public decimal? Spend { get; set; } // Spend
        public decimal? ClientCostLocalMicros { get; set; } // ClientCostLocalMicros
        public decimal? ClientCostDollars { get; set; } // ClientCostDollars
        public long? MediaCostLocalMicros { get; set; } // MediaCostLocalMicros
        public long? DataCostLocalMicros { get; set; } // DataCostLocalMicros
        public decimal? MediaClientCostLocalMicros { get; set; } // MediaClientCostLocalMicros
        public decimal? DataClientCostLocalMicros { get; set; } // DataClientCostLocalMicros
        public int DealStatusId { get; set; } // DealStatusID
        public long? AdSlotDurationInSeconds { get; set; } // AdSlotDurationInSeconds
        public long? RawViews { get; set; } // RawViews
        public long? IabViews { get; set; } // IabViews
        public long? ViewDurationInSeconds { get; set; } // ViewDurationInSeconds
        public double? Ctr { get; set; } // CTR
        public decimal? Cpm { get; set; } // CPM
        public decimal? Cpc { get; set; } // CPC
        public decimal? Cpa { get; set; } // CPA
        public decimal? ClientCostCpm { get; set; } // ClientCostCPM
        public decimal? ClientCostCpc { get; set; } // ClientCostCPC
        public decimal? ClientCostCpa { get; set; } // ClientCostCPA
        public decimal? Cpms { get; set; } // CPMs
        public decimal? ClientCostCpms { get; set; } // ClientCostCpms
        public decimal? Cps { get; set; } // CPS
        public decimal? ClientCostCps { get; set; } // ClientCostCps
        public double? ViewableRatio { get; set; } // ViewableRatio
        
        public AdGroupDealTargetingReportId()
        {
            InitializePartial();
        }

        partial void InitializePartial();
    }

    // AdGroupDevice
    public partial class AdGroupDevice : Entity
    {
        public int BuyerAccountId { get; set; } // BuyerAccountID
        public int CampaignId { get; set; } // CampaignID
        public int AdGroupId { get; set; } // AdGroupID
        public int OptimizationModelId { get; set; } // OptimizationModelID
        public int DeviceId { get; set; } // DeviceID
        public DateTime UtcDate { get; set; } // UtcDate
        public DateTime LocalDate { get; set; } // LocalDate
        public DateTime UtcDateTime { get; set; } // UtcDateTime
        public DateTime LocalDateTime { get; set; } // LocalDateTime
        public long Bids { get; set; } // Bids
        public long Impressions { get; set; } // Impressions
        public long Clicks { get; set; } // Clicks
        public long Conversions { get; set; } // Conversions
        public long PostViewConversions { get; set; } // PostViewConversions
        public long PostClickConversions { get; set; } // PostClickConversions
        public long MediaCostUsdMicros { get; set; } // MediaCostUsdMicros
        public long MediaCostLocalMicros { get; set; } // MediaCostLocalMicros
        public long DataCostLocalMicros { get; set; } // DataCostLocalMicros
        public long? InvalidImpressions { get; set; } // InvalidImpressions
        public long? InvalidClicks { get; set; } // InvalidClicks
        public long? FeesUsdSuperMicros { get; set; } // FeesUsdSuperMicros
        public long? FeesLocalSuperMicros { get; set; } // FeesLocalSuperMicros
        public long? AdSlotDurationInSeconds { get; set; } // AdSlotDurationInSeconds
        public long? RawViews { get; set; } // RawViews
        public long? IabViews { get; set; } // IabViews
        public long? ViewDurationInSeconds { get; set; } // ViewDurationInSeconds
        
        public AdGroupDevice()
        {
            InitializePartial();
        }

        partial void InitializePartial();
    }

    // AdGroupDeviceAnalyticsReportID
    public partial class AdGroupDeviceAnalyticsReportId : Entity
    {
        public int BuyerAccountId { get; set; } // BuyerAccountID
        public int AdvertiserId { get; set; } // AdvertiserID
        public int AdvertiserProductId { get; set; } // AdvertiserProductID
        public int CampaignId { get; set; } // CampaignID
        public int AdGroupId { get; set; } // AdGroupID
        public int OptimizationModelId { get; set; } // OptimizationModelID
        public int DeviceId { get; set; } // DeviceID
        public string DeviceName { get; set; } // DeviceName
        public DateTime LocalDate { get; set; } // LocalDate
        public long Bids { get; set; } // Bids
        public long Impressions { get; set; } // Impressions
        public long? Clicks { get; set; } // Clicks
        public long? UnfilteredClicks { get; set; } // UnfilteredClicks
        public long Conversions { get; set; } // Conversions
        public long PostViewConversions { get; set; } // PostViewConversions
        public long PostClickConversions { get; set; } // PostClickConversions
        public long? SpendLocalMicros { get; set; } // SpendLocalMicros
        public decimal? Spend { get; set; } // Spend
        public long? ClientCostLocalMicros { get; set; } // ClientCostLocalMicros
        public decimal? ClientCostDollars { get; set; } // ClientCostDollars
        public long MediaCostLocalMicros { get; set; } // MediaCostLocalMicros
        public long DataCostLocalMicros { get; set; } // DataCostLocalMicros
        public long? MediaClientCostLocalMicros { get; set; } // MediaClientCostLocalMicros
        public long? DataClientCostLocalMicros { get; set; } // DataClientCostLocalMicros
        public long? AdSlotDurationInSeconds { get; set; } // AdSlotDurationInSeconds
        public long? RawViews { get; set; } // RawViews
        public long? IabViews { get; set; } // IabViews
        public long? ViewDurationInSeconds { get; set; } // ViewDurationInSeconds
        public double? Ctr { get; set; } // CTR
        public decimal? Cpm { get; set; } // CPM
        public decimal? Cpc { get; set; } // CPC
        public decimal? Cpa { get; set; } // CPA
        public decimal? ClientCpm { get; set; } // ClientCPM
        public decimal? ClientCpc { get; set; } // ClientCPC
        public decimal? ClientCpa { get; set; } // ClientCPA
        public decimal? Cpms { get; set; } // CPMs
        public decimal? ClientCostCpms { get; set; } // ClientCostCpms
        public decimal? Cps { get; set; } // CPS
        public decimal? ClientCostCps { get; set; } // ClientCostCps
        public double? ViewableRatio { get; set; } // ViewableRatio
        
        public AdGroupDeviceAnalyticsReportId()
        {
            InitializePartial();
        }

        partial void InitializePartial();
    }

    // AdGroupDeviceCombined
    public partial class AdGroupDeviceCombined : Entity
    {
        public int BuyerAccountId { get; set; } // BuyerAccountID
        public int CampaignId { get; set; } // CampaignID
        public int AdGroupId { get; set; } // AdGroupID
        public int OptimizationModelId { get; set; } // OptimizationModelID
        public int DeviceId { get; set; } // DeviceID
        public DateTime UtcDate { get; set; } // UtcDate
        public DateTime LocalDate { get; set; } // LocalDate
        public DateTime UtcDateTime { get; set; } // UtcDateTime
        public DateTime LocalDateTime { get; set; } // LocalDateTime
        public long Bids { get; set; } // Bids
        public long Impressions { get; set; } // Impressions
        public long Clicks { get; set; } // Clicks
        public long Conversions { get; set; } // Conversions
        public long PostViewConversions { get; set; } // PostViewConversions
        public long PostClickConversions { get; set; } // PostClickConversions
        public long MediaCostUsdMicros { get; set; } // MediaCostUsdMicros
        public long MediaCostLocalMicros { get; set; } // MediaCostLocalMicros
        public long DataCostLocalMicros { get; set; } // DataCostLocalMicros
        public long? InvalidImpressions { get; set; } // InvalidImpressions
        public long? InvalidClicks { get; set; } // InvalidClicks
        public long? FeesUsdSuperMicros { get; set; } // FeesUsdSuperMicros
        public long? FeesLocalSuperMicros { get; set; } // FeesLocalSuperMicros
        public long? AdSlotDurationInSeconds { get; set; } // AdSlotDurationInSeconds
        public long? RawViews { get; set; } // RawViews
        public long? IabViews { get; set; } // IabViews
        public long? ViewDurationInSeconds { get; set; } // ViewDurationInSeconds
        
        public AdGroupDeviceCombined()
        {
            InitializePartial();
        }

        partial void InitializePartial();
    }

    // AdGroupDeviceException
    public partial class AdGroupDeviceException : Entity
    {
        public int BuyerAccountId { get; set; } // BuyerAccountID
        public int CampaignId { get; set; } // CampaignID
        public int AdGroupId { get; set; } // AdGroupID
        public int OptimizationModelId { get; set; } // OptimizationModelID
        public int DeviceId { get; set; } // DeviceID
        public DateTime UtcDate { get; set; } // UtcDate
        public DateTime LocalDate { get; set; } // LocalDate
        public DateTime UtcDateTime { get; set; } // UtcDateTime
        public DateTime LocalDateTime { get; set; } // LocalDateTime
        public long Bids { get; set; } // Bids
        public long Impressions { get; set; } // Impressions
        public long Clicks { get; set; } // Clicks
        public long Conversions { get; set; } // Conversions
        public long PostViewConversions { get; set; } // PostViewConversions
        public long PostClickConversions { get; set; } // PostClickConversions
        public long MediaCostUsdMicros { get; set; } // MediaCostUsdMicros
        public long MediaCostLocalMicros { get; set; } // MediaCostLocalMicros
        public long DataCostLocalMicros { get; set; } // DataCostLocalMicros
        public long? AdSlotDurationInSeconds { get; set; } // AdSlotDurationInSeconds
        public long? RawViews { get; set; } // RawViews
        public long? IabViews { get; set; } // IabViews
        public long? ViewDurationInSeconds { get; set; } // ViewDurationInSeconds
        
        public AdGroupDeviceException()
        {
            InitializePartial();
        }

        partial void InitializePartial();
    }

    // AdGroupDeviceImport
    public partial class AdGroupDeviceImport : Entity
    {
        public int BuyerAccountId { get; set; } // BuyerAccountID
        public int CampaignId { get; set; } // CampaignID
        public int AdGroupId { get; set; } // AdGroupID
        public int OptimizationModelId { get; set; } // OptimizationModelID
        public int DeviceId { get; set; } // DeviceID
        public DateTime UtcDateTime { get; set; } // UtcDateTime
        public DateTime LocalDateTime { get; set; } // LocalDateTime
        public long Bids { get; set; } // Bids
        public long Impressions { get; set; } // Impressions
        public long InvalidImpressions { get; set; } // InvalidImpressions
        public long Clicks { get; set; } // Clicks
        public long InvalidClicks { get; set; } // InvalidClicks
        public long Conversions { get; set; } // Conversions
        public long PostViewConversions { get; set; } // PostViewConversions
        public long PostClickConversions { get; set; } // PostClickConversions
        public long MediaCostUsdMicros { get; set; } // MediaCostUsdMicros
        public long MediaCostLocalMicros { get; set; } // MediaCostLocalMicros
        public long DataCostLocalMicros { get; set; } // DataCostLocalMicros
        public long FeesUsdSuperMicros { get; set; } // FeesUsdSuperMicros
        public long FeesLocalSuperMicros { get; set; } // FeesLocalSuperMicros
        public long? AdSlotDurationInSeconds { get; set; } // AdSlotDurationInSeconds
        public long? RawViews { get; set; } // RawViews
        public long? IabViews { get; set; } // IabViews
        public long? ViewDurationInSeconds { get; set; } // ViewDurationInSeconds
        
        public AdGroupDeviceImport()
        {
            InitializePartial();
        }

        partial void InitializePartial();
    }

    // AdGroupDeviceImportReportID
    public partial class AdGroupDeviceImportReportId : Entity
    {
        public int BuyerAccountId { get; set; } // BuyerAccountID
        public int CampaignId { get; set; } // CampaignID
        public int AdGroupId { get; set; } // AdGroupID
        public int OptimizationModelId { get; set; } // OptimizationModelID
        public int DeviceId { get; set; } // DeviceID
        public DateTime UtcDateTime { get; set; } // UtcDateTime
        public DateTime LocalDateTime { get; set; } // LocalDateTime
        public long Bids { get; set; } // Bids
        public long Impressions { get; set; } // Impressions
        public long InvalidImpressions { get; set; } // InvalidImpressions
        public long Clicks { get; set; } // Clicks
        public long InvalidClicks { get; set; } // InvalidClicks
        public long Conversions { get; set; } // Conversions
        public long PostViewConversions { get; set; } // PostViewConversions
        public long PostClickConversions { get; set; } // PostClickConversions
        public long MediaCostUsdMicros { get; set; } // MediaCostUsdMicros
        public long MediaCostLocalMicros { get; set; } // MediaCostLocalMicros
        public long DataCostLocalMicros { get; set; } // DataCostLocalMicros
        public long FeesUsdSuperMicros { get; set; } // FeesUsdSuperMicros
        public long FeesLocalSuperMicros { get; set; } // FeesLocalSuperMicros
        public long ReportId { get; set; } // ReportID
        public long? AdSlotDurationInSeconds { get; set; } // AdSlotDurationInSeconds
        public long? RawViews { get; set; } // RawViews
        public long? IabViews { get; set; } // IabViews
        public long? ViewDurationInSeconds { get; set; } // ViewDurationInSeconds
        
        public AdGroupDeviceImportReportId()
        {
            InitializePartial();
        }

        partial void InitializePartial();
    }

    // AdGroupDeviceReportID
    public partial class AdGroupDeviceReportId : Entity
    {
        public int BuyerAccountId { get; set; } // BuyerAccountID
        public int CampaignId { get; set; } // CampaignID
        public int AdGroupId { get; set; } // AdGroupID
        public int OptimizationModelId { get; set; } // OptimizationModelID
        public int DeviceId { get; set; } // DeviceID
        public DateTime UtcDate { get; set; } // UtcDate
        public DateTime LocalDate { get; set; } // LocalDate
        public DateTime UtcDateTime { get; set; } // UtcDateTime
        public DateTime LocalDateTime { get; set; } // LocalDateTime
        public long Bids { get; set; } // Bids
        public long Impressions { get; set; } // Impressions
        public long Clicks { get; set; } // Clicks
        public long Conversions { get; set; } // Conversions
        public long PostViewConversions { get; set; } // PostViewConversions
        public long PostClickConversions { get; set; } // PostClickConversions
        public long MediaCostUsdMicros { get; set; } // MediaCostUsdMicros
        public long MediaCostLocalMicros { get; set; } // MediaCostLocalMicros
        public long DataCostLocalMicros { get; set; } // DataCostLocalMicros
        public long? InvalidImpressions { get; set; } // InvalidImpressions
        public long? InvalidClicks { get; set; } // InvalidClicks
        public long? FeesUsdSuperMicros { get; set; } // FeesUsdSuperMicros
        public long? FeesLocalSuperMicros { get; set; } // FeesLocalSuperMicros
        public long ReportId { get; set; } // ReportID
        public long? AdSlotDurationInSeconds { get; set; } // AdSlotDurationInSeconds
        public long? RawViews { get; set; } // RawViews
        public long? IabViews { get; set; } // IabViews
        public long? ViewDurationInSeconds { get; set; } // ViewDurationInSeconds
        
        public AdGroupDeviceReportId()
        {
            InitializePartial();
        }

        partial void InitializePartial();
    }

    // AdGroupDeviceTargetingReportID
    public partial class AdGroupDeviceTargetingReportId : Entity
    {
        public int? BuyerAccountId { get; set; } // BuyerAccountID
        public int? CampaignId { get; set; } // CampaignID
        public int? AdGroupId { get; set; } // AdGroupID
        public int DeviceId { get; set; } // DeviceID
        public string DeviceName { get; set; } // DeviceName
        public int IsTargeted { get; set; } // IsTargeted
        public int PackageInstalled { get; set; } // PackageInstalled
        public long? Bids { get; set; } // Bids
        public long? Impressions { get; set; } // Impressions
        public long? Clicks { get; set; } // Clicks
        public long? Conversions { get; set; } // Conversions
        public long? PostViewConversions { get; set; } // PostViewConversions
        public long? PostClickConversions { get; set; } // PostClickConversions
        public long? SpendLocalMicros { get; set; } // SpendLocalMicros
        public decimal? Spend { get; set; } // Spend
        public decimal? ClientCostLocalMicros { get; set; } // ClientCostLocalMicros
        public decimal? ClientCostDollars { get; set; } // ClientCostDollars
        public long? MediaCostLocalMicros { get; set; } // MediaCostLocalMicros
        public long? DataCostLocalMicros { get; set; } // DataCostLocalMicros
        public decimal? MediaClientCostLocalMicros { get; set; } // MediaClientCostLocalMicros
        public decimal? DataClientCostLocalMicros { get; set; } // DataClientCostLocalMicros
        public long? AdSlotDurationInSeconds { get; set; } // AdSlotDurationInSeconds
        public long? RawViews { get; set; } // RawViews
        public long? IabViews { get; set; } // IabViews
        public long? ViewDurationInSeconds { get; set; } // ViewDurationInSeconds
        public double? Ctr { get; set; } // CTR
        public decimal? Cpm { get; set; } // CPM
        public decimal? Cpc { get; set; } // CPC
        public decimal? Cpa { get; set; } // CPA
        public decimal? ClientCostCpm { get; set; } // ClientCostCPM
        public decimal? ClientCostCpc { get; set; } // ClientCostCPC
        public decimal? ClientCostCpa { get; set; } // ClientCostCPA
        public decimal? Cpms { get; set; } // CPMs
        public decimal? ClientCostCpms { get; set; } // ClientCostCpms
        public decimal? Cps { get; set; } // CPS
        public decimal? ClientCostCps { get; set; } // ClientCostCps
        public double? ViewableRatio { get; set; } // ViewableRatio
        
        public AdGroupDeviceTargetingReportId()
        {
            InitializePartial();
        }

        partial void InitializePartial();
    }

    // AdGroupDomain
    public partial class AdGroupDomain : Entity
    {
        public int BuyerAccountId { get; set; } // BuyerAccountID
        public int CampaignId { get; set; } // CampaignID
        public int AdGroupId { get; set; } // AdGroupID
        public string DomainName { get; set; } // DomainName
        public DateTime UtcDate { get; set; } // UtcDate
        public DateTime LocalDate { get; set; } // LocalDate
        public long Bids { get; set; } // Bids
        public long Impressions { get; set; } // Impressions
        public long? InvalidImpressions { get; set; } // InvalidImpressions
        public long Clicks { get; set; } // Clicks
        public long? InvalidClicks { get; set; } // InvalidClicks
        public long Conversions { get; set; } // Conversions
        public long PostViewConversions { get; set; } // PostViewConversions
        public long PostClickConversions { get; set; } // PostClickConversions
        public long MediaCostUsdMicros { get; set; } // MediaCostUsdMicros
        public long MediaCostLocalMicros { get; set; } // MediaCostLocalMicros
        public long DataCostLocalMicros { get; set; } // DataCostLocalMicros
        public long? FeesUsdSuperMicros { get; set; } // FeesUsdSuperMicros
        public long? FeesLocalSuperMicros { get; set; } // FeesLocalSuperMicros
        public long? AdSlotDurationInSeconds { get; set; } // AdSlotDurationInSeconds
        public long? RawViews { get; set; } // RawViews
        public long? IabViews { get; set; } // IabViews
        public long? ViewDurationInSeconds { get; set; } // ViewDurationInSeconds
        
        public AdGroupDomain()
        {
            InitializePartial();
        }

        partial void InitializePartial();
    }

    // AdGroupDomainAnalytics
    public partial class AdGroupDomainAnalytic : Entity
    {
        public int BuyerAccountId { get; set; } // BuyerAccountID
        public int AdvertiserId { get; set; } // AdvertiserID
        public int AdvertiserProductId { get; set; } // AdvertiserProductID
        public int CampaignId { get; set; } // CampaignID
        public int AdGroupId { get; set; } // AdGroupID
        public int OptimizationModelId { get; set; } // OptimizationModelID
        public string DomainName { get; set; } // DomainName
        public DateTime LocalDate { get; set; } // LocalDate
        public long? Bids { get; set; } // Bids
        public long? Impressions { get; set; } // Impressions
        public long? Clicks { get; set; } // Clicks
        public long? UnfilteredClicks { get; set; } // UnfilteredClicks
        public long? Conversions { get; set; } // Conversions
        public long? PostViewConversions { get; set; } // PostViewConversions
        public long? PostClickConversions { get; set; } // PostClickConversions
        public long? SpendLocalMicros { get; set; } // SpendLocalMicros
        public decimal? Spend { get; set; } // Spend
        public long? ClientCostLocalMicros { get; set; } // ClientCostLocalMicros
        public decimal? ClientCostDollars { get; set; } // ClientCostDollars
        public long? MediaCostLocalMicros { get; set; } // MediaCostLocalMicros
        public long? DataCostLocalMicros { get; set; } // DataCostLocalMicros
        public long? MediaClientCostLocalMicros { get; set; } // MediaClientCostLocalMicros
        public long? DataClientCostLocalMicros { get; set; } // DataClientCostLocalMicros
        public long? AdSlotDurationInSeconds { get; set; } // AdSlotDurationInSeconds
        public long? RawViews { get; set; } // RawViews
        public long? IabViews { get; set; } // IabViews
        public long? ViewDurationInSeconds { get; set; } // ViewDurationInSeconds
        public double? Ctr { get; set; } // CTR
        public decimal? Cpm { get; set; } // CPM
        public decimal? Cpc { get; set; } // CPC
        public decimal? Cpa { get; set; } // CPA
        public decimal? ClientCpm { get; set; } // ClientCPM
        public decimal? ClientCpc { get; set; } // ClientCPC
        public decimal? ClientCpa { get; set; } // ClientCPA
        public decimal? Cpms { get; set; } // CPMs
        public decimal? ClientCostCpms { get; set; } // ClientCostCpms
        public decimal? Cps { get; set; } // CPS
        public decimal? ClientCostCps { get; set; } // ClientCostCps
        public double? ViewableRatio { get; set; } // ViewableRatio
        
        public AdGroupDomainAnalytic()
        {
            InitializePartial();
        }

        partial void InitializePartial();
    }

    // AdGroupDomainCombined
    public partial class AdGroupDomainCombined : Entity
    {
        public int BuyerAccountId { get; set; } // BuyerAccountID
        public int CampaignId { get; set; } // CampaignID
        public int AdGroupId { get; set; } // AdGroupID
        public string DomainName { get; set; } // DomainName
        public DateTime UtcDate { get; set; } // UtcDate
        public DateTime LocalDate { get; set; } // LocalDate
        public long Bids { get; set; } // Bids
        public long Impressions { get; set; } // Impressions
        public long Clicks { get; set; } // Clicks
        public long Conversions { get; set; } // Conversions
        public long PostViewConversions { get; set; } // PostViewConversions
        public long PostClickConversions { get; set; } // PostClickConversions
        public long MediaCostUsdMicros { get; set; } // MediaCostUsdMicros
        public long MediaCostLocalMicros { get; set; } // MediaCostLocalMicros
        public long DataCostLocalMicros { get; set; } // DataCostLocalMicros
        public long? InvalidImpressions { get; set; } // InvalidImpressions
        public long? InvalidClicks { get; set; } // InvalidClicks
        public long? FeesUsdSuperMicros { get; set; } // FeesUsdSuperMicros
        public long? FeesLocalSuperMicros { get; set; } // FeesLocalSuperMicros
        public long? AdSlotDurationInSeconds { get; set; } // AdSlotDurationInSeconds
        public long? RawViews { get; set; } // RawViews
        public long? IabViews { get; set; } // IabViews
        public long? ViewDurationInSeconds { get; set; } // ViewDurationInSeconds
        
        public AdGroupDomainCombined()
        {
            InitializePartial();
        }

        partial void InitializePartial();
    }

    // AdGroupDomainDaily
    public partial class AdGroupDomainDaily : Entity
    {
        public int BuyerAccountId { get; set; } // BuyerAccountID
        public int CampaignId { get; set; } // CampaignID
        public int AdGroupId { get; set; } // AdGroupID
        public string DomainName { get; set; } // DomainName
        public DateTime UtcDate { get; set; } // UtcDate
        public DateTime LocalDate { get; set; } // LocalDate
        public long Bids { get; set; } // Bids
        public long Impressions { get; set; } // Impressions
        public long? InvalidImpressions { get; set; } // InvalidImpressions
        public long Clicks { get; set; } // Clicks
        public long? InvalidClicks { get; set; } // InvalidClicks
        public long Conversions { get; set; } // Conversions
        public long PostViewConversions { get; set; } // PostViewConversions
        public long PostClickConversions { get; set; } // PostClickConversions
        public long MediaCostUsdMicros { get; set; } // MediaCostUsdMicros
        public long MediaCostLocalMicros { get; set; } // MediaCostLocalMicros
        public long DataCostLocalMicros { get; set; } // DataCostLocalMicros
        public long? FeesUsdSuperMicros { get; set; } // FeesUsdSuperMicros
        public long? FeesLocalSuperMicros { get; set; } // FeesLocalSuperMicros
        public long? AdSlotDurationInSeconds { get; set; } // AdSlotDurationInSeconds
        public long? RawViews { get; set; } // RawViews
        public long? IabViews { get; set; } // IabViews
        public long? ViewDurationInSeconds { get; set; } // ViewDurationInSeconds
        
        public AdGroupDomainDaily()
        {
            InitializePartial();
        }

        partial void InitializePartial();
    }

    // AdGroupDomainDailyAlternate
    public partial class AdGroupDomainDailyAlternate : Entity
    {
        public int BuyerAccountId { get; set; } // BuyerAccountID
        public int CampaignId { get; set; } // CampaignID
        public int AdGroupId { get; set; } // AdGroupID
        public string DomainName { get; set; } // DomainName
        public DateTime UtcDate { get; set; } // UtcDate
        public DateTime LocalDate { get; set; } // LocalDate
        public long Bids { get; set; } // Bids
        public long Impressions { get; set; } // Impressions
        public long? InvalidImpressions { get; set; } // InvalidImpressions
        public long Clicks { get; set; } // Clicks
        public long? InvalidClicks { get; set; } // InvalidClicks
        public long Conversions { get; set; } // Conversions
        public long PostViewConversions { get; set; } // PostViewConversions
        public long PostClickConversions { get; set; } // PostClickConversions
        public long MediaCostUsdMicros { get; set; } // MediaCostUsdMicros
        public long MediaCostLocalMicros { get; set; } // MediaCostLocalMicros
        public long DataCostLocalMicros { get; set; } // DataCostLocalMicros
        public long? FeesUsdSuperMicros { get; set; } // FeesUsdSuperMicros
        public long? FeesLocalSuperMicros { get; set; } // FeesLocalSuperMicros
        public long? AdSlotDurationInSeconds { get; set; } // AdSlotDurationInSeconds
        public long? RawViews { get; set; } // RawViews
        public long? IabViews { get; set; } // IabViews
        public long? ViewDurationInSeconds { get; set; } // ViewDurationInSeconds
        
        public AdGroupDomainDailyAlternate()
        {
            InitializePartial();
        }

        partial void InitializePartial();
    }

    // AdGroupDomainException
    public partial class AdGroupDomainException : Entity
    {
        public int BuyerAccountId { get; set; } // BuyerAccountID
        public int CampaignId { get; set; } // CampaignID
        public int AdGroupId { get; set; } // AdGroupID
        public string DomainName { get; set; } // DomainName
        public DateTime UtcDate { get; set; } // UtcDate
        public DateTime LocalDate { get; set; } // LocalDate
        public long Bids { get; set; } // Bids
        public long Impressions { get; set; } // Impressions
        public long? InvalidImpressions { get; set; } // InvalidImpressions
        public long Clicks { get; set; } // Clicks
        public long? InvalidClicks { get; set; } // InvalidClicks
        public long Conversions { get; set; } // Conversions
        public long PostViewConversions { get; set; } // PostViewConversions
        public long PostClickConversions { get; set; } // PostClickConversions
        public long MediaCostUsdMicros { get; set; } // MediaCostUsdMicros
        public long MediaCostLocalMicros { get; set; } // MediaCostLocalMicros
        public long DataCostLocalMicros { get; set; } // DataCostLocalMicros
        public long? FeesUsdSuperMicros { get; set; } // FeesUsdSuperMicros
        public long? FeesLocalSuperMicros { get; set; } // FeesLocalSuperMicros
        public long? AdSlotDurationInSeconds { get; set; } // AdSlotDurationInSeconds
        public long? RawViews { get; set; } // RawViews
        public long? IabViews { get; set; } // IabViews
        public long? ViewDurationInSeconds { get; set; } // ViewDurationInSeconds
        
        public AdGroupDomainException()
        {
            InitializePartial();
        }

        partial void InitializePartial();
    }

    // AdGroupDomainImport
    public partial class AdGroupDomainImport : Entity
    {
        public int BuyerAccountId { get; set; } // BuyerAccountID
        public int CampaignId { get; set; } // CampaignID
        public int AdGroupId { get; set; } // AdGroupID
        public string DomainName { get; set; } // DomainName
        public DateTime UtcDate { get; set; } // UtcDate
        public DateTime LocalDate { get; set; } // LocalDate
        public long Bids { get; set; } // Bids
        public long Impressions { get; set; } // Impressions
        public long? InvalidImpressions { get; set; } // InvalidImpressions
        public long Clicks { get; set; } // Clicks
        public long? InvalidClicks { get; set; } // InvalidClicks
        public long Conversions { get; set; } // Conversions
        public long PostViewConversions { get; set; } // PostViewConversions
        public long PostClickConversions { get; set; } // PostClickConversions
        public long MediaCostUsdMicros { get; set; } // MediaCostUsdMicros
        public long MediaCostLocalMicros { get; set; } // MediaCostLocalMicros
        public long DataCostLocalMicros { get; set; } // DataCostLocalMicros
        public long? FeesUsdSuperMicros { get; set; } // FeesUsdSuperMicros
        public long? FeesLocalSuperMicros { get; set; } // FeesLocalSuperMicros
        public long? AdSlotDurationInSeconds { get; set; } // AdSlotDurationInSeconds
        public long? RawViews { get; set; } // RawViews
        public long? IabViews { get; set; } // IabViews
        public long? ViewDurationInSeconds { get; set; } // ViewDurationInSeconds
        
        public AdGroupDomainImport()
        {
            InitializePartial();
        }

        partial void InitializePartial();
    }

    // AdGroupDomainNew
    public partial class AdGroupDomainNew : Entity
    {
        public int BuyerAccountId { get; set; } // BuyerAccountID
        public int CampaignId { get; set; } // CampaignID
        public int AdGroupId { get; set; } // AdGroupID
        public string DomainName { get; set; } // DomainName
        public DateTime UtcDate { get; set; } // UtcDate
        public DateTime LocalDate { get; set; } // LocalDate
        public long Bids { get; set; } // Bids
        public long Impressions { get; set; } // Impressions
        public long? InvalidImpressions { get; set; } // InvalidImpressions
        public long Clicks { get; set; } // Clicks
        public long? InvalidClicks { get; set; } // InvalidClicks
        public long Conversions { get; set; } // Conversions
        public long PostViewConversions { get; set; } // PostViewConversions
        public long PostClickConversions { get; set; } // PostClickConversions
        public long MediaCostUsdMicros { get; set; } // MediaCostUsdMicros
        public long MediaCostLocalMicros { get; set; } // MediaCostLocalMicros
        public long DataCostLocalMicros { get; set; } // DataCostLocalMicros
        public long? FeesUsdSuperMicros { get; set; } // FeesUsdSuperMicros
        public long? FeesLocalSuperMicros { get; set; } // FeesLocalSuperMicros
        public long? AdSlotDurationInSeconds { get; set; } // AdSlotDurationInSeconds
        public long? RawViews { get; set; } // RawViews
        public long? IabViews { get; set; } // IabViews
        public long? ViewDurationInSeconds { get; set; } // ViewDurationInSeconds
        
        public AdGroupDomainNew()
        {
            InitializePartial();
        }

        partial void InitializePartial();
    }

    // AdGroupDomainNewAlternate
    public partial class AdGroupDomainNewAlternate : Entity
    {
        public int BuyerAccountId { get; set; } // BuyerAccountID
        public int CampaignId { get; set; } // CampaignID
        public int AdGroupId { get; set; } // AdGroupID
        public string DomainName { get; set; } // DomainName
        public DateTime UtcDate { get; set; } // UtcDate
        public DateTime LocalDate { get; set; } // LocalDate
        public long Bids { get; set; } // Bids
        public long Impressions { get; set; } // Impressions
        public long? InvalidImpressions { get; set; } // InvalidImpressions
        public long Clicks { get; set; } // Clicks
        public long? InvalidClicks { get; set; } // InvalidClicks
        public long Conversions { get; set; } // Conversions
        public long PostViewConversions { get; set; } // PostViewConversions
        public long PostClickConversions { get; set; } // PostClickConversions
        public long MediaCostUsdMicros { get; set; } // MediaCostUsdMicros
        public long MediaCostLocalMicros { get; set; } // MediaCostLocalMicros
        public long DataCostLocalMicros { get; set; } // DataCostLocalMicros
        public long? FeesUsdSuperMicros { get; set; } // FeesUsdSuperMicros
        public long? FeesLocalSuperMicros { get; set; } // FeesLocalSuperMicros
        public long? AdSlotDurationInSeconds { get; set; } // AdSlotDurationInSeconds
        public long? RawViews { get; set; } // RawViews
        public long? IabViews { get; set; } // IabViews
        public long? ViewDurationInSeconds { get; set; } // ViewDurationInSeconds
        
        public AdGroupDomainNewAlternate()
        {
            InitializePartial();
        }

        partial void InitializePartial();
    }

    // AdGroupDomainNewToDaily_RollupBuffer
    public partial class AdGroupDomainNewToDailyRollupBuffer : Entity
    {
        public int BuyerAccountId { get; set; } // BuyerAccountID
        public int CampaignId { get; set; } // CampaignID
        public int AdGroupId { get; set; } // AdGroupID
        public string DomainName { get; set; } // DomainName
        public DateTime UtcDate { get; set; } // UtcDate
        public DateTime LocalDate { get; set; } // LocalDate
        public long Bids { get; set; } // Bids
        public long Impressions { get; set; } // Impressions
        public long? InvalidImpressions { get; set; } // InvalidImpressions
        public long Clicks { get; set; } // Clicks
        public long? InvalidClicks { get; set; } // InvalidClicks
        public long Conversions { get; set; } // Conversions
        public long PostViewConversions { get; set; } // PostViewConversions
        public long PostClickConversions { get; set; } // PostClickConversions
        public long MediaCostUsdMicros { get; set; } // MediaCostUsdMicros
        public long MediaCostLocalMicros { get; set; } // MediaCostLocalMicros
        public long DataCostLocalMicros { get; set; } // DataCostLocalMicros
        public long? FeesUsdSuperMicros { get; set; } // FeesUsdSuperMicros
        public long? FeesLocalSuperMicros { get; set; } // FeesLocalSuperMicros
        public long? AdSlotDurationInSeconds { get; set; } // AdSlotDurationInSeconds
        public long? RawViews { get; set; } // RawViews
        public long? IabViews { get; set; } // IabViews
        public long? ViewDurationInSeconds { get; set; } // ViewDurationInSeconds
        
        public AdGroupDomainNewToDailyRollupBuffer()
        {
            InitializePartial();
        }

        partial void InitializePartial();
    }

    // AdGroupDomainPerformanceOnly
    public partial class AdGroupDomainPerformanceOnly : Entity
    {
        public int IsTargeted { get; set; } // IsTargeted
        public bool? ReadOnly { get; set; } // ReadOnly
        public int BinomialFiltered { get; set; } // BinomialFiltered
        public int BinomialFilterOverride { get; set; } // BinomialFilterOverride
        public int BuyerAccountId { get; set; } // BuyerAccountID
        public int CampaignId { get; set; } // CampaignID
        public int AdGroupId { get; set; } // AdGroupID
        public string DomainName { get; set; } // DomainName
        public long? Bids { get; set; } // Bids
        public long? Impressions { get; set; } // Impressions
        public long? Clicks { get; set; } // Clicks
        public long? Conversions { get; set; } // Conversions
        public long? PostViewConversions { get; set; } // PostViewConversions
        public long? PostClickConversions { get; set; } // PostClickConversions
        public long? SpendLocalMicros { get; set; } // SpendLocalMicros
        public long? ClientCostLocalMicros { get; set; } // ClientCostLocalMicros
        public long? MediaCostLocalMicros { get; set; } // MediaCostLocalMicros
        public long? DataCostLocalMicros { get; set; } // DataCostLocalMicros
        public long? MediaClientCostLocalMicros { get; set; } // MediaClientCostLocalMicros
        public long? DataClientCostLocalMicros { get; set; } // DataClientCostLocalMicros
        public int PackageInstalled { get; set; } // PackageInstalled
        public int Spend { get; set; } // Spend
        public int ClientCostDollars { get; set; } // ClientCostDollars
        public long? AdSlotDurationInSeconds { get; set; } // AdSlotDurationInSeconds
        public long? RawViews { get; set; } // RawViews
        public long? IabViews { get; set; } // IabViews
        public long? ViewDurationInSeconds { get; set; } // ViewDurationInSeconds
        public double? Ctr { get; set; } // CTR
        public decimal? Cpm { get; set; } // CPM
        public decimal? Cpc { get; set; } // CPC
        public decimal? Cpa { get; set; } // CPA
        public decimal? ClientCostCpm { get; set; } // ClientCostCPM
        public decimal? ClientCostCpc { get; set; } // ClientCostCPC
        public decimal? ClientCostCpa { get; set; } // ClientCostCPA
        public decimal? Cpms { get; set; } // CPMs
        public decimal? ClientCostCpms { get; set; } // ClientCostCpms
        public decimal? Cps { get; set; } // CPS
        public decimal? ClientCostCps { get; set; } // ClientCostCps
        public double? ViewableRatio { get; set; } // ViewableRatio
        
        public AdGroupDomainPerformanceOnly()
        {
            InitializePartial();
        }

        partial void InitializePartial();
    }

    // AdGroupDoohGeoLocationGroupTargetingReportID
    public partial class AdGroupDoohGeoLocationGroupTargetingReportId : Entity
    {
        public int BuyerAccountId { get; set; } // BuyerAccountID
        public int CampaignId { get; set; } // CampaignID
        public int AdGroupId { get; set; } // AdGroupID
        public int DoohGeoLocationGroupId { get; set; } // DoohGeoLocationGroupID
        public string LocationName { get; set; } // LocationName
        public string RegionName { get; set; } // RegionName
        public string CountryName { get; set; } // CountryName
        public int IsTargeted { get; set; } // IsTargeted
        public int PackageInstalled { get; set; } // PackageInstalled
        public long? Bids { get; set; } // Bids
        public long? Impressions { get; set; } // Impressions
        public long? Clicks { get; set; } // Clicks
        public long? Conversions { get; set; } // Conversions
        public long? PostViewConversions { get; set; } // PostViewConversions
        public long? PostClickConversions { get; set; } // PostClickConversions
        public long? SpendLocalMicros { get; set; } // SpendLocalMicros
        public decimal? Spend { get; set; } // Spend
        public decimal? ClientCostLocalMicros { get; set; } // ClientCostLocalMicros
        public decimal? ClientCostDollars { get; set; } // ClientCostDollars
        public long? MediaCostLocalMicros { get; set; } // MediaCostLocalMicros
        public long? DataCostLocalMicros { get; set; } // DataCostLocalMicros
        public decimal? MediaClientCostLocalMicros { get; set; } // MediaClientCostLocalMicros
        public decimal? DataClientCostLocalMicros { get; set; } // DataClientCostLocalMicros
        public long? AdSlotDurationInSeconds { get; set; } // AdSlotDurationInSeconds
        public long? RawViews { get; set; } // RawViews
        public long? IabViews { get; set; } // IabViews
        public long? ViewDurationInSeconds { get; set; } // ViewDurationInSeconds
        public double? Ctr { get; set; } // CTR
        public decimal? Cpm { get; set; } // CPM
        public decimal? Cpc { get; set; } // CPC
        public decimal? Cpa { get; set; } // CPA
        public decimal? ClientCostCpm { get; set; } // ClientCostCPM
        public decimal? ClientCostCpc { get; set; } // ClientCostCPC
        public decimal? ClientCostCpa { get; set; } // ClientCostCPA
        public decimal? Cpms { get; set; } // CPMs
        public decimal? ClientCostCpMs { get; set; } // ClientCostCPMs
        public decimal? Cps { get; set; } // CPS
        public decimal? ClientCostCps { get; set; } // ClientCostCPS
        
        public AdGroupDoohGeoLocationGroupTargetingReportId()
        {
            InitializePartial();
        }

        partial void InitializePartial();
    }

    // AdGroupDoohPanelLocation
    public partial class AdGroupDoohPanelLocation : Entity
    {
        public int BuyerAccountId { get; set; } // BuyerAccountID
        public int CampaignId { get; set; } // CampaignID
        public int AdGroupId { get; set; } // AdGroupID
        public int CreativeId { get; set; } // CreativeID
        public int DoohPanelLocationId { get; set; } // DoohPanelLocationID
        public DateTime UtcDateTime { get; set; } // UtcDateTime
        public DateTime LocalDateTime { get; set; } // LocalDateTime
        public long Bids { get; set; } // Bids
        public long Impressions { get; set; } // Impressions
        public long MediaCostUsdMicros { get; set; } // MediaCostUsdMicros
        public long MediaCostLocalMicros { get; set; } // MediaCostLocalMicros
        public long? AdSlotDurationInSeconds { get; set; } // AdSlotDurationInSeconds
        
        public AdGroupDoohPanelLocation()
        {
            InitializePartial();
        }

        partial void InitializePartial();
    }

    // AdGroupGeoLocation
    public partial class AdGroupGeoLocation : Entity
    {
        public int BuyerAccountId { get; set; } // BuyerAccountID
        public int CampaignId { get; set; } // CampaignID
        public int AdGroupId { get; set; } // AdGroupID
        public int OptimizationModelId { get; set; } // OptimizationModelID
        public int GeoCountryId { get; set; } // GeoCountryID
        public int GeoRegionId { get; set; } // GeoRegionID
        public int GeoCityId { get; set; } // GeoCityID
        public DateTime UtcDate { get; set; } // UtcDate
        public DateTime LocalDate { get; set; } // LocalDate
        public DateTime UtcDateTime { get; set; } // UtcDateTime
        public DateTime LocalDateTime { get; set; } // LocalDateTime
        public long Bids { get; set; } // Bids
        public long Impressions { get; set; } // Impressions
        public long Clicks { get; set; } // Clicks
        public long Conversions { get; set; } // Conversions
        public long PostViewConversions { get; set; } // PostViewConversions
        public long PostClickConversions { get; set; } // PostClickConversions
        public long MediaCostUsdMicros { get; set; } // MediaCostUsdMicros
        public long MediaCostLocalMicros { get; set; } // MediaCostLocalMicros
        public long DataCostLocalMicros { get; set; } // DataCostLocalMicros
        public long? InvalidImpressions { get; set; } // InvalidImpressions
        public long? InvalidClicks { get; set; } // InvalidClicks
        public long? FeesUsdSuperMicros { get; set; } // FeesUsdSuperMicros
        public long? FeesLocalSuperMicros { get; set; } // FeesLocalSuperMicros
        public long? AdSlotDurationInSeconds { get; set; } // AdSlotDurationInSeconds
        public long? RawViews { get; set; } // RawViews
        public long? IabViews { get; set; } // IabViews
        public long? ViewDurationInSeconds { get; set; } // ViewDurationInSeconds
        
        public AdGroupGeoLocation()
        {
            InitializePartial();
        }

        partial void InitializePartial();
    }

    // AdGroupGeoLocationAnalyticsReportID
    public partial class AdGroupGeoLocationAnalyticsReportId : Entity
    {
        public int BuyerAccountId { get; set; } // BuyerAccountID
        public int AdvertiserId { get; set; } // AdvertiserID
        public int AdvertiserProductId { get; set; } // AdvertiserProductID
        public int CampaignId { get; set; } // CampaignID
        public int AdGroupId { get; set; } // AdGroupID
        public int OptimizationModelId { get; set; } // OptimizationModelID
        public int GeoCountryId { get; set; } // GeoCountryID
        public string GeoCountryName { get; set; } // GeoCountryName
        public int GeoRegionId { get; set; } // GeoRegionID
        public string GeoRegionName { get; set; } // GeoRegionName
        public int GeoCityId { get; set; } // GeoCityID
        public string GeoCityName { get; set; } // GeoCityName
        public DateTime LocalDate { get; set; } // LocalDate
        public long Bids { get; set; } // Bids
        public long Impressions { get; set; } // Impressions
        public long? Clicks { get; set; } // Clicks
        public long? UnfilteredClicks { get; set; } // UnfilteredClicks
        public long Conversions { get; set; } // Conversions
        public long PostViewConversions { get; set; } // PostViewConversions
        public long PostClickConversions { get; set; } // PostClickConversions
        public long? SpendLocalMicros { get; set; } // SpendLocalMicros
        public decimal? Spend { get; set; } // Spend
        public long? ClientCostLocalMicros { get; set; } // ClientCostLocalMicros
        public decimal? ClientCostDollars { get; set; } // ClientCostDollars
        public long? MediaCostLocalMicros { get; set; } // MediaCostLocalMicros
        public long? DataCostLocalMicros { get; set; } // DataCostLocalMicros
        public long? MediaClientCostLocalMicros { get; set; } // MediaClientCostLocalMicros
        public long? DataClientCostLocalMicros { get; set; } // DataClientCostLocalMicros
        public long? AdSlotDurationInSeconds { get; set; } // AdSlotDurationInSeconds
        public long? RawViews { get; set; } // RawViews
        public long? IabViews { get; set; } // IabViews
        public long? ViewDurationInSeconds { get; set; } // ViewDurationInSeconds
        public double? Ctr { get; set; } // CTR
        public decimal? Cpm { get; set; } // CPM
        public decimal? Cpc { get; set; } // CPC
        public decimal? Cpa { get; set; } // CPA
        public decimal? ClientCpm { get; set; } // ClientCPM
        public decimal? ClientCpc { get; set; } // ClientCPC
        public decimal? ClientCpa { get; set; } // ClientCPA
        public decimal? Cpms { get; set; } // CPMs
        public decimal? ClientCostCpms { get; set; } // ClientCostCpms
        public decimal? Cps { get; set; } // CPS
        public decimal? ClientCostCps { get; set; } // ClientCostCps
        public double? ViewableRatio { get; set; } // ViewableRatio
        
        public AdGroupGeoLocationAnalyticsReportId()
        {
            InitializePartial();
        }

        partial void InitializePartial();
    }

    // AdGroupGeoLocationCombined
    public partial class AdGroupGeoLocationCombined : Entity
    {
        public int BuyerAccountId { get; set; } // BuyerAccountID
        public int CampaignId { get; set; } // CampaignID
        public int AdGroupId { get; set; } // AdGroupID
        public int OptimizationModelId { get; set; } // OptimizationModelID
        public int GeoCountryId { get; set; } // GeoCountryID
        public int GeoRegionId { get; set; } // GeoRegionID
        public int GeoCityId { get; set; } // GeoCityID
        public DateTime UtcDate { get; set; } // UtcDate
        public DateTime LocalDate { get; set; } // LocalDate
        public DateTime UtcDateTime { get; set; } // UtcDateTime
        public DateTime LocalDateTime { get; set; } // LocalDateTime
        public long Bids { get; set; } // Bids
        public long Impressions { get; set; } // Impressions
        public long Clicks { get; set; } // Clicks
        public long Conversions { get; set; } // Conversions
        public long PostViewConversions { get; set; } // PostViewConversions
        public long PostClickConversions { get; set; } // PostClickConversions
        public long MediaCostUsdMicros { get; set; } // MediaCostUsdMicros
        public long MediaCostLocalMicros { get; set; } // MediaCostLocalMicros
        public long DataCostLocalMicros { get; set; } // DataCostLocalMicros
        public long? InvalidImpressions { get; set; } // InvalidImpressions
        public long? InvalidClicks { get; set; } // InvalidClicks
        public long? FeesUsdSuperMicros { get; set; } // FeesUsdSuperMicros
        public long? FeesLocalSuperMicros { get; set; } // FeesLocalSuperMicros
        public long? AdSlotDurationInSeconds { get; set; } // AdSlotDurationInSeconds
        public long? RawViews { get; set; } // RawViews
        public long? IabViews { get; set; } // IabViews
        public long? ViewDurationInSeconds { get; set; } // ViewDurationInSeconds
        
        public AdGroupGeoLocationCombined()
        {
            InitializePartial();
        }

        partial void InitializePartial();
    }

    // AdGroupGeoLocationException
    public partial class AdGroupGeoLocationException : Entity
    {
        public int BuyerAccountId { get; set; } // BuyerAccountID
        public int CampaignId { get; set; } // CampaignID
        public int AdGroupId { get; set; } // AdGroupID
        public int OptimizationModelId { get; set; } // OptimizationModelID
        public int GeoCountryId { get; set; } // GeoCountryID
        public int GeoRegionId { get; set; } // GeoRegionID
        public int GeoCityId { get; set; } // GeoCityID
        public DateTime UtcDateTime { get; set; } // UtcDateTime
        public DateTime LocalDateTime { get; set; } // LocalDateTime
        public long Bids { get; set; } // Bids
        public long Impressions { get; set; } // Impressions
        public long InvalidImpressions { get; set; } // InvalidImpressions
        public long Clicks { get; set; } // Clicks
        public long InvalidClicks { get; set; } // InvalidClicks
        public long Conversions { get; set; } // Conversions
        public long PostViewConversions { get; set; } // PostViewConversions
        public long PostClickConversions { get; set; } // PostClickConversions
        public long MediaCostUsdMicros { get; set; } // MediaCostUsdMicros
        public long MediaCostLocalMicros { get; set; } // MediaCostLocalMicros
        public long DataCostLocalMicros { get; set; } // DataCostLocalMicros
        public long FeesUsdSuperMicros { get; set; } // FeesUsdSuperMicros
        public long FeesLocalSuperMicros { get; set; } // FeesLocalSuperMicros
        public long? AdSlotDurationInSeconds { get; set; } // AdSlotDurationInSeconds
        public long? RawViews { get; set; } // RawViews
        public long? IabViews { get; set; } // IabViews
        public long? ViewDurationInSeconds { get; set; } // ViewDurationInSeconds
        
        public AdGroupGeoLocationException()
        {
            InitializePartial();
        }

        partial void InitializePartial();
    }

    // AdGroupGeoLocationImport
    public partial class AdGroupGeoLocationImport : Entity
    {
        public int BuyerAccountId { get; set; } // BuyerAccountID
        public int CampaignId { get; set; } // CampaignID
        public int AdGroupId { get; set; } // AdGroupID
        public int OptimizationModelId { get; set; } // OptimizationModelID
        public int GeoCountryId { get; set; } // GeoCountryID
        public int GeoRegionId { get; set; } // GeoRegionID
        public int GeoCityId { get; set; } // GeoCityID
        public DateTime UtcDateTime { get; set; } // UtcDateTime
        public DateTime LocalDateTime { get; set; } // LocalDateTime
        public long Bids { get; set; } // Bids
        public long Impressions { get; set; } // Impressions
        public long InvalidImpressions { get; set; } // InvalidImpressions
        public long Clicks { get; set; } // Clicks
        public long InvalidClicks { get; set; } // InvalidClicks
        public long Conversions { get; set; } // Conversions
        public long PostViewConversions { get; set; } // PostViewConversions
        public long PostClickConversions { get; set; } // PostClickConversions
        public long MediaCostUsdMicros { get; set; } // MediaCostUsdMicros
        public long MediaCostLocalMicros { get; set; } // MediaCostLocalMicros
        public long DataCostLocalMicros { get; set; } // DataCostLocalMicros
        public long FeesUsdSuperMicros { get; set; } // FeesUsdSuperMicros
        public long FeesLocalSuperMicros { get; set; } // FeesLocalSuperMicros
        public long? AdSlotDurationInSeconds { get; set; } // AdSlotDurationInSeconds
        public long? RawViews { get; set; } // RawViews
        public long? IabViews { get; set; } // IabViews
        public long? ViewDurationInSeconds { get; set; } // ViewDurationInSeconds
        
        public AdGroupGeoLocationImport()
        {
            InitializePartial();
        }

        partial void InitializePartial();
    }

    // AdGroupGeoLocationImportReportID
    public partial class AdGroupGeoLocationImportReportId : Entity
    {
        public int BuyerAccountId { get; set; } // BuyerAccountID
        public int CampaignId { get; set; } // CampaignID
        public int AdGroupId { get; set; } // AdGroupID
        public int OptimizationModelId { get; set; } // OptimizationModelID
        public int GeoCountryId { get; set; } // GeoCountryID
        public int GeoRegionId { get; set; } // GeoRegionID
        public int GeoCityId { get; set; } // GeoCityID
        public DateTime UtcDateTime { get; set; } // UtcDateTime
        public DateTime LocalDateTime { get; set; } // LocalDateTime
        public long Bids { get; set; } // Bids
        public long Impressions { get; set; } // Impressions
        public long InvalidImpressions { get; set; } // InvalidImpressions
        public long Clicks { get; set; } // Clicks
        public long InvalidClicks { get; set; } // InvalidClicks
        public long Conversions { get; set; } // Conversions
        public long PostViewConversions { get; set; } // PostViewConversions
        public long PostClickConversions { get; set; } // PostClickConversions
        public long MediaCostUsdMicros { get; set; } // MediaCostUsdMicros
        public long MediaCostLocalMicros { get; set; } // MediaCostLocalMicros
        public long DataCostLocalMicros { get; set; } // DataCostLocalMicros
        public long FeesUsdSuperMicros { get; set; } // FeesUsdSuperMicros
        public long FeesLocalSuperMicros { get; set; } // FeesLocalSuperMicros
        public long ReportId { get; set; } // ReportID
        public long? AdSlotDurationInSeconds { get; set; } // AdSlotDurationInSeconds
        public long? RawViews { get; set; } // RawViews
        public long? IabViews { get; set; } // IabViews
        public long? ViewDurationInSeconds { get; set; } // ViewDurationInSeconds
        
        public AdGroupGeoLocationImportReportId()
        {
            InitializePartial();
        }

        partial void InitializePartial();
    }

    // AdGroupGeoLocationPointRadius
    public partial class AdGroupGeoLocationPointRadiu : Entity
    {
        public int BuyerAccountId { get; set; } // BuyerAccountID
        public int CampaignId { get; set; } // CampaignID
        public int AdGroupId { get; set; } // AdGroupID
        public int OptimizationModelId { get; set; } // OptimizationModelID
        public decimal Latitude { get; set; } // Latitude
        public decimal Longitude { get; set; } // Longitude
        public decimal RadiusInKm { get; set; } // RadiusInKm
        public decimal LatitudeActual { get; set; } // LatitudeActual
        public decimal LongitudeActual { get; set; } // LongitudeActual
        public DateTime UtcDate { get; set; } // UtcDate
        public DateTime LocalDate { get; set; } // LocalDate
        public DateTime UtcDateTime { get; set; } // UtcDateTime
        public DateTime LocalDateTime { get; set; } // LocalDateTime
        public long Bids { get; set; } // Bids
        public long Impressions { get; set; } // Impressions
        public long Clicks { get; set; } // Clicks
        public long Conversions { get; set; } // Conversions
        public long PostViewConversions { get; set; } // PostViewConversions
        public long PostClickConversions { get; set; } // PostClickConversions
        public long MediaCostUsdMicros { get; set; } // MediaCostUsdMicros
        public long MediaCostLocalMicros { get; set; } // MediaCostLocalMicros
        public long DataCostLocalMicros { get; set; } // DataCostLocalMicros
        public long? InvalidImpressions { get; set; } // InvalidImpressions
        public long? InvalidClicks { get; set; } // InvalidClicks
        public long? FeesUsdSuperMicros { get; set; } // FeesUsdSuperMicros
        public long? FeesLocalSuperMicros { get; set; } // FeesLocalSuperMicros
        public long? AdSlotDurationInSeconds { get; set; } // AdSlotDurationInSeconds
        public long? RawViews { get; set; } // RawViews
        public long? IabViews { get; set; } // IabViews
        public long? ViewDurationInSeconds { get; set; } // ViewDurationInSeconds
        
        public AdGroupGeoLocationPointRadiu()
        {
            InitializePartial();
        }

        partial void InitializePartial();
    }

    // AdGroupGeoLocationPointRadiusCombined
    public partial class AdGroupGeoLocationPointRadiusCombined : Entity
    {
        public int BuyerAccountId { get; set; } // BuyerAccountID
        public int CampaignId { get; set; } // CampaignID
        public int AdGroupId { get; set; } // AdGroupID
        public int OptimizationModelId { get; set; } // OptimizationModelID
        public decimal Latitude { get; set; } // Latitude
        public decimal Longitude { get; set; } // Longitude
        public decimal RadiusInKm { get; set; } // RadiusInKm
        public decimal LatitudeActual { get; set; } // LatitudeActual
        public decimal LongitudeActual { get; set; } // LongitudeActual
        public DateTime UtcDate { get; set; } // UtcDate
        public DateTime LocalDate { get; set; } // LocalDate
        public DateTime UtcDateTime { get; set; } // UtcDateTime
        public DateTime LocalDateTime { get; set; } // LocalDateTime
        public long Bids { get; set; } // Bids
        public long Impressions { get; set; } // Impressions
        public long Clicks { get; set; } // Clicks
        public long Conversions { get; set; } // Conversions
        public long PostViewConversions { get; set; } // PostViewConversions
        public long PostClickConversions { get; set; } // PostClickConversions
        public long MediaCostUsdMicros { get; set; } // MediaCostUsdMicros
        public long MediaCostLocalMicros { get; set; } // MediaCostLocalMicros
        public long DataCostLocalMicros { get; set; } // DataCostLocalMicros
        public long? InvalidImpressions { get; set; } // InvalidImpressions
        public long? InvalidClicks { get; set; } // InvalidClicks
        public long? FeesUsdSuperMicros { get; set; } // FeesUsdSuperMicros
        public long? FeesLocalSuperMicros { get; set; } // FeesLocalSuperMicros
        public long? AdSlotDurationInSeconds { get; set; } // AdSlotDurationInSeconds
        public long? RawViews { get; set; } // RawViews
        public long? IabViews { get; set; } // IabViews
        public long? ViewDurationInSeconds { get; set; } // ViewDurationInSeconds
        
        public AdGroupGeoLocationPointRadiusCombined()
        {
            InitializePartial();
        }

        partial void InitializePartial();
    }

    // AdGroupGeoLocationPointRadiusException
    public partial class AdGroupGeoLocationPointRadiusException : Entity
    {
        public int BuyerAccountId { get; set; } // BuyerAccountID
        public int CampaignId { get; set; } // CampaignID
        public int AdGroupId { get; set; } // AdGroupID
        public int OptimizationModelId { get; set; } // OptimizationModelID
        public decimal Latitude { get; set; } // Latitude
        public decimal Longitude { get; set; } // Longitude
        public decimal RadiusInKm { get; set; } // RadiusInKm
        public decimal LatitudeActual { get; set; } // LatitudeActual
        public decimal LongitudeActual { get; set; } // LongitudeActual
        public DateTime UtcDate { get; set; } // UtcDate
        public DateTime LocalDate { get; set; } // LocalDate
        public DateTime UtcDateTime { get; set; } // UtcDateTime
        public DateTime LocalDateTime { get; set; } // LocalDateTime
        public long Bids { get; set; } // Bids
        public long Impressions { get; set; } // Impressions
        public long Clicks { get; set; } // Clicks
        public long Conversions { get; set; } // Conversions
        public long PostViewConversions { get; set; } // PostViewConversions
        public long PostClickConversions { get; set; } // PostClickConversions
        public long MediaCostUsdMicros { get; set; } // MediaCostUsdMicros
        public long MediaCostLocalMicros { get; set; } // MediaCostLocalMicros
        public long DataCostLocalMicros { get; set; } // DataCostLocalMicros
        public long? InvalidImpressions { get; set; } // InvalidImpressions
        public long? InvalidClicks { get; set; } // InvalidClicks
        public long? FeesUsdSuperMicros { get; set; } // FeesUsdSuperMicros
        public long? FeesLocalSuperMicros { get; set; } // FeesLocalSuperMicros
        public long? AdSlotDurationInSeconds { get; set; } // AdSlotDurationInSeconds
        public long? RawViews { get; set; } // RawViews
        public long? IabViews { get; set; } // IabViews
        public long? ViewDurationInSeconds { get; set; } // ViewDurationInSeconds
        
        public AdGroupGeoLocationPointRadiusException()
        {
            InitializePartial();
        }

        partial void InitializePartial();
    }

    // AdGroupGeoLocationPointRadiusImport
    public partial class AdGroupGeoLocationPointRadiusImport : Entity
    {
        public int BuyerAccountId { get; set; } // BuyerAccountID
        public int CampaignId { get; set; } // CampaignID
        public int AdGroupId { get; set; } // AdGroupID
        public int OptimizationModelId { get; set; } // OptimizationModelID
        public decimal Latitude { get; set; } // Latitude
        public decimal Longitude { get; set; } // Longitude
        public decimal RadiusInKm { get; set; } // RadiusInKm
        public decimal LatitudeActual { get; set; } // LatitudeActual
        public decimal LongitudeActual { get; set; } // LongitudeActual
        public DateTime UtcDate { get; set; } // UtcDate
        public DateTime LocalDate { get; set; } // LocalDate
        public DateTime UtcDateTime { get; set; } // UtcDateTime
        public DateTime LocalDateTime { get; set; } // LocalDateTime
        public long Bids { get; set; } // Bids
        public long Impressions { get; set; } // Impressions
        public long Clicks { get; set; } // Clicks
        public long Conversions { get; set; } // Conversions
        public long PostViewConversions { get; set; } // PostViewConversions
        public long PostClickConversions { get; set; } // PostClickConversions
        public long MediaCostUsdMicros { get; set; } // MediaCostUsdMicros
        public long MediaCostLocalMicros { get; set; } // MediaCostLocalMicros
        public long DataCostLocalMicros { get; set; } // DataCostLocalMicros
        public long? InvalidImpressions { get; set; } // InvalidImpressions
        public long? InvalidClicks { get; set; } // InvalidClicks
        public long? FeesUsdSuperMicros { get; set; } // FeesUsdSuperMicros
        public long? FeesLocalSuperMicros { get; set; } // FeesLocalSuperMicros
        public long? AdSlotDurationInSeconds { get; set; } // AdSlotDurationInSeconds
        public long? RawViews { get; set; } // RawViews
        public long? IabViews { get; set; } // IabViews
        public long? ViewDurationInSeconds { get; set; } // ViewDurationInSeconds
        
        public AdGroupGeoLocationPointRadiusImport()
        {
            InitializePartial();
        }

        partial void InitializePartial();
    }

    // AdGroupGeoLocationPointRadiusImportReportID
    public partial class AdGroupGeoLocationPointRadiusImportReportId : Entity
    {
        public int BuyerAccountId { get; set; } // BuyerAccountID
        public int CampaignId { get; set; } // CampaignID
        public int AdGroupId { get; set; } // AdGroupID
        public int OptimizationModelId { get; set; } // OptimizationModelID
        public decimal Latitude { get; set; } // Latitude
        public decimal Longitude { get; set; } // Longitude
        public decimal RadiusInKm { get; set; } // RadiusInKm
        public decimal LatitudeActual { get; set; } // LatitudeActual
        public decimal LongitudeActual { get; set; } // LongitudeActual
        public DateTime UtcDate { get; set; } // UtcDate
        public DateTime LocalDate { get; set; } // LocalDate
        public DateTime UtcDateTime { get; set; } // UtcDateTime
        public DateTime LocalDateTime { get; set; } // LocalDateTime
        public long Bids { get; set; } // Bids
        public long Impressions { get; set; } // Impressions
        public long Clicks { get; set; } // Clicks
        public long Conversions { get; set; } // Conversions
        public long PostViewConversions { get; set; } // PostViewConversions
        public long PostClickConversions { get; set; } // PostClickConversions
        public long MediaCostUsdMicros { get; set; } // MediaCostUsdMicros
        public long MediaCostLocalMicros { get; set; } // MediaCostLocalMicros
        public long DataCostLocalMicros { get; set; } // DataCostLocalMicros
        public long? InvalidImpressions { get; set; } // InvalidImpressions
        public long? InvalidClicks { get; set; } // InvalidClicks
        public long? FeesUsdSuperMicros { get; set; } // FeesUsdSuperMicros
        public long? FeesLocalSuperMicros { get; set; } // FeesLocalSuperMicros
        public long ReportId { get; set; } // ReportID
        public long? AdSlotDurationInSeconds { get; set; } // AdSlotDurationInSeconds
        public long? RawViews { get; set; } // RawViews
        public long? IabViews { get; set; } // IabViews
        public long? ViewDurationInSeconds { get; set; } // ViewDurationInSeconds
        
        public AdGroupGeoLocationPointRadiusImportReportId()
        {
            InitializePartial();
        }

        partial void InitializePartial();
    }

    // AdGroupGeoLocationPointRadiusReportID
    public partial class AdGroupGeoLocationPointRadiusReportId : Entity
    {
        public int BuyerAccountId { get; set; } // BuyerAccountID
        public int CampaignId { get; set; } // CampaignID
        public int AdGroupId { get; set; } // AdGroupID
        public int OptimizationModelId { get; set; } // OptimizationModelID
        public decimal Latitude { get; set; } // Latitude
        public decimal Longitude { get; set; } // Longitude
        public decimal RadiusInKm { get; set; } // RadiusInKm
        public decimal LatitudeActual { get; set; } // LatitudeActual
        public decimal LongitudeActual { get; set; } // LongitudeActual
        public DateTime UtcDate { get; set; } // UtcDate
        public DateTime LocalDate { get; set; } // LocalDate
        public DateTime UtcDateTime { get; set; } // UtcDateTime
        public DateTime LocalDateTime { get; set; } // LocalDateTime
        public long Bids { get; set; } // Bids
        public long Impressions { get; set; } // Impressions
        public long Clicks { get; set; } // Clicks
        public long Conversions { get; set; } // Conversions
        public long PostViewConversions { get; set; } // PostViewConversions
        public long PostClickConversions { get; set; } // PostClickConversions
        public long MediaCostUsdMicros { get; set; } // MediaCostUsdMicros
        public long MediaCostLocalMicros { get; set; } // MediaCostLocalMicros
        public long DataCostLocalMicros { get; set; } // DataCostLocalMicros
        public long? InvalidImpressions { get; set; } // InvalidImpressions
        public long? InvalidClicks { get; set; } // InvalidClicks
        public long? FeesUsdSuperMicros { get; set; } // FeesUsdSuperMicros
        public long? FeesLocalSuperMicros { get; set; } // FeesLocalSuperMicros
        public long ReportId { get; set; } // ReportID
        public long? AdSlotDurationInSeconds { get; set; } // AdSlotDurationInSeconds
        public long? RawViews { get; set; } // RawViews
        public long? IabViews { get; set; } // IabViews
        public long? ViewDurationInSeconds { get; set; } // ViewDurationInSeconds
        
        public AdGroupGeoLocationPointRadiusReportId()
        {
            InitializePartial();
        }

        partial void InitializePartial();
    }

    // AdGroupGeoLocationReportID
    public partial class AdGroupGeoLocationReportId : Entity
    {
        public int BuyerAccountId { get; set; } // BuyerAccountID
        public int CampaignId { get; set; } // CampaignID
        public int AdGroupId { get; set; } // AdGroupID
        public int OptimizationModelId { get; set; } // OptimizationModelID
        public int GeoCountryId { get; set; } // GeoCountryID
        public int GeoRegionId { get; set; } // GeoRegionID
        public int GeoCityId { get; set; } // GeoCityID
        public DateTime UtcDate { get; set; } // UtcDate
        public DateTime LocalDate { get; set; } // LocalDate
        public DateTime UtcDateTime { get; set; } // UtcDateTime
        public DateTime LocalDateTime { get; set; } // LocalDateTime
        public long Bids { get; set; } // Bids
        public long Impressions { get; set; } // Impressions
        public long Clicks { get; set; } // Clicks
        public long Conversions { get; set; } // Conversions
        public long PostViewConversions { get; set; } // PostViewConversions
        public long PostClickConversions { get; set; } // PostClickConversions
        public long MediaCostUsdMicros { get; set; } // MediaCostUsdMicros
        public long MediaCostLocalMicros { get; set; } // MediaCostLocalMicros
        public long DataCostLocalMicros { get; set; } // DataCostLocalMicros
        public long? InvalidImpressions { get; set; } // InvalidImpressions
        public long? InvalidClicks { get; set; } // InvalidClicks
        public long? FeesUsdSuperMicros { get; set; } // FeesUsdSuperMicros
        public long? FeesLocalSuperMicros { get; set; } // FeesLocalSuperMicros
        public long ReportId { get; set; } // ReportID
        public long? AdSlotDurationInSeconds { get; set; } // AdSlotDurationInSeconds
        public long? RawViews { get; set; } // RawViews
        public long? IabViews { get; set; } // IabViews
        public long? ViewDurationInSeconds { get; set; } // ViewDurationInSeconds
        
        public AdGroupGeoLocationReportId()
        {
            InitializePartial();
        }

        partial void InitializePartial();
    }

    // AdGroupGeoPostcode
    public partial class AdGroupGeoPostcode : Entity
    {
        public int BuyerAccountId { get; set; } // BuyerAccountID
        public int CampaignId { get; set; } // CampaignID
        public int AdGroupId { get; set; } // AdGroupID
        public int OptimizationModelId { get; set; } // OptimizationModelID
        public int GeoCountryId { get; set; } // GeoCountryID
        public string Postcode { get; set; } // Postcode
        public DateTime UtcDate { get; set; } // UtcDate
        public DateTime LocalDate { get; set; } // LocalDate
        public DateTime UtcDateTime { get; set; } // UtcDateTime
        public DateTime LocalDateTime { get; set; } // LocalDateTime
        public long Bids { get; set; } // Bids
        public long Impressions { get; set; } // Impressions
        public long Clicks { get; set; } // Clicks
        public long Conversions { get; set; } // Conversions
        public long PostViewConversions { get; set; } // PostViewConversions
        public long PostClickConversions { get; set; } // PostClickConversions
        public long MediaCostUsdMicros { get; set; } // MediaCostUsdMicros
        public long MediaCostLocalMicros { get; set; } // MediaCostLocalMicros
        public long DataCostLocalMicros { get; set; } // DataCostLocalMicros
        public long? InvalidImpressions { get; set; } // InvalidImpressions
        public long? InvalidClicks { get; set; } // InvalidClicks
        public long? FeesUsdSuperMicros { get; set; } // FeesUsdSuperMicros
        public long? FeesLocalSuperMicros { get; set; } // FeesLocalSuperMicros
        public long? AdSlotDurationInSeconds { get; set; } // AdSlotDurationInSeconds
        public long? RawViews { get; set; } // RawViews
        public long? IabViews { get; set; } // IabViews
        public long? ViewDurationInSeconds { get; set; } // ViewDurationInSeconds
        
        public AdGroupGeoPostcode()
        {
            InitializePartial();
        }

        partial void InitializePartial();
    }

    // AdGroupGeoPostcodeAnalyticsReportID
    public partial class AdGroupGeoPostcodeAnalyticsReportId : Entity
    {
        public int BuyerAccountId { get; set; } // BuyerAccountID
        public int AdvertiserId { get; set; } // AdvertiserID
        public int AdvertiserProductId { get; set; } // AdvertiserProductID
        public int CampaignId { get; set; } // CampaignID
        public int AdGroupId { get; set; } // AdGroupID
        public int OptimizationModelId { get; set; } // OptimizationModelID
        public int GeoCountryId { get; set; } // GeoCountryID
        public string GeoCountryName { get; set; } // GeoCountryName
        public string Postcode { get; set; } // Postcode
        public DateTime LocalDate { get; set; } // LocalDate
        public long Bids { get; set; } // Bids
        public long Impressions { get; set; } // Impressions
        public long? Clicks { get; set; } // Clicks
        public long? UnfilteredClicks { get; set; } // UnfilteredClicks
        public long Conversions { get; set; } // Conversions
        public long PostViewConversions { get; set; } // PostViewConversions
        public long PostClickConversions { get; set; } // PostClickConversions
        public long? SpendLocalMicros { get; set; } // SpendLocalMicros
        public decimal? Spend { get; set; } // Spend
        public long? ClientCostLocalMicros { get; set; } // ClientCostLocalMicros
        public decimal? ClientCostDollars { get; set; } // ClientCostDollars
        public long? MediaCostLocalMicros { get; set; } // MediaCostLocalMicros
        public long? DataCostLocalMicros { get; set; } // DataCostLocalMicros
        public long? MediaClientCostLocalMicros { get; set; } // MediaClientCostLocalMicros
        public long? DataClientCostLocalMicros { get; set; } // DataClientCostLocalMicros
        public long? AdSlotDurationInSeconds { get; set; } // AdSlotDurationInSeconds
        public long? RawViews { get; set; } // RawViews
        public long? IabViews { get; set; } // IabViews
        public long? ViewDurationInSeconds { get; set; } // ViewDurationInSeconds
        public double? Ctr { get; set; } // CTR
        public decimal? Cpm { get; set; } // CPM
        public decimal? Cpc { get; set; } // CPC
        public decimal? Cpa { get; set; } // CPA
        public decimal? ClientCpm { get; set; } // ClientCPM
        public decimal? ClientCpc { get; set; } // ClientCPC
        public decimal? ClientCpa { get; set; } // ClientCPA
        public decimal? Cpms { get; set; } // CPMs
        public decimal? ClientCostCpms { get; set; } // ClientCostCpms
        public decimal? Cps { get; set; } // CPS
        public decimal? ClientCostCps { get; set; } // ClientCostCps
        public double? ViewableRatio { get; set; } // ViewableRatio
        
        public AdGroupGeoPostcodeAnalyticsReportId()
        {
            InitializePartial();
        }

        partial void InitializePartial();
    }

    // AdGroupGeoPostcodeCombined
    public partial class AdGroupGeoPostcodeCombined : Entity
    {
        public int BuyerAccountId { get; set; } // BuyerAccountID
        public int CampaignId { get; set; } // CampaignID
        public int AdGroupId { get; set; } // AdGroupID
        public int OptimizationModelId { get; set; } // OptimizationModelID
        public int GeoCountryId { get; set; } // GeoCountryID
        public string Postcode { get; set; } // Postcode
        public DateTime UtcDate { get; set; } // UtcDate
        public DateTime LocalDate { get; set; } // LocalDate
        public DateTime UtcDateTime { get; set; } // UtcDateTime
        public DateTime LocalDateTime { get; set; } // LocalDateTime
        public long Bids { get; set; } // Bids
        public long Impressions { get; set; } // Impressions
        public long Clicks { get; set; } // Clicks
        public long Conversions { get; set; } // Conversions
        public long PostViewConversions { get; set; } // PostViewConversions
        public long PostClickConversions { get; set; } // PostClickConversions
        public long MediaCostUsdMicros { get; set; } // MediaCostUsdMicros
        public long MediaCostLocalMicros { get; set; } // MediaCostLocalMicros
        public long DataCostLocalMicros { get; set; } // DataCostLocalMicros
        public long? InvalidImpressions { get; set; } // InvalidImpressions
        public long? InvalidClicks { get; set; } // InvalidClicks
        public long? FeesUsdSuperMicros { get; set; } // FeesUsdSuperMicros
        public long? FeesLocalSuperMicros { get; set; } // FeesLocalSuperMicros
        public long? AdSlotDurationInSeconds { get; set; } // AdSlotDurationInSeconds
        public long? RawViews { get; set; } // RawViews
        public long? IabViews { get; set; } // IabViews
        public long? ViewDurationInSeconds { get; set; } // ViewDurationInSeconds
        
        public AdGroupGeoPostcodeCombined()
        {
            InitializePartial();
        }

        partial void InitializePartial();
    }

    // AdGroupGeoPostcodeException
    public partial class AdGroupGeoPostcodeException : Entity
    {
        public int BuyerAccountId { get; set; } // BuyerAccountID
        public int CampaignId { get; set; } // CampaignID
        public int AdGroupId { get; set; } // AdGroupID
        public int OptimizationModelId { get; set; } // OptimizationModelID
        public int GeoCountryId { get; set; } // GeoCountryID
        public string Postcode { get; set; } // Postcode
        public DateTime UtcDate { get; set; } // UtcDate
        public DateTime LocalDate { get; set; } // LocalDate
        public DateTime UtcDateTime { get; set; } // UtcDateTime
        public DateTime LocalDateTime { get; set; } // LocalDateTime
        public long Bids { get; set; } // Bids
        public long Impressions { get; set; } // Impressions
        public long Clicks { get; set; } // Clicks
        public long Conversions { get; set; } // Conversions
        public long PostViewConversions { get; set; } // PostViewConversions
        public long PostClickConversions { get; set; } // PostClickConversions
        public long MediaCostUsdMicros { get; set; } // MediaCostUsdMicros
        public long MediaCostLocalMicros { get; set; } // MediaCostLocalMicros
        public long DataCostLocalMicros { get; set; } // DataCostLocalMicros
        public long? InvalidImpressions { get; set; } // InvalidImpressions
        public long? InvalidClicks { get; set; } // InvalidClicks
        public long? FeesUsdSuperMicros { get; set; } // FeesUsdSuperMicros
        public long? FeesLocalSuperMicros { get; set; } // FeesLocalSuperMicros
        public long? AdSlotDurationInSeconds { get; set; } // AdSlotDurationInSeconds
        public long? RawViews { get; set; } // RawViews
        public long? IabViews { get; set; } // IabViews
        public long? ViewDurationInSeconds { get; set; } // ViewDurationInSeconds
        
        public AdGroupGeoPostcodeException()
        {
            InitializePartial();
        }

        partial void InitializePartial();
    }

    // AdGroupGeoPostcodeImport
    public partial class AdGroupGeoPostcodeImport : Entity
    {
        public int BuyerAccountId { get; set; } // BuyerAccountID
        public int CampaignId { get; set; } // CampaignID
        public int AdGroupId { get; set; } // AdGroupID
        public int OptimizationModelId { get; set; } // OptimizationModelID
        public int GeoCountryId { get; set; } // GeoCountryID
        public string Postcode { get; set; } // Postcode
        public DateTime UtcDate { get; set; } // UtcDate
        public DateTime LocalDate { get; set; } // LocalDate
        public DateTime UtcDateTime { get; set; } // UtcDateTime
        public DateTime LocalDateTime { get; set; } // LocalDateTime
        public long Bids { get; set; } // Bids
        public long Impressions { get; set; } // Impressions
        public long Clicks { get; set; } // Clicks
        public long Conversions { get; set; } // Conversions
        public long PostViewConversions { get; set; } // PostViewConversions
        public long PostClickConversions { get; set; } // PostClickConversions
        public long MediaCostUsdMicros { get; set; } // MediaCostUsdMicros
        public long MediaCostLocalMicros { get; set; } // MediaCostLocalMicros
        public long DataCostLocalMicros { get; set; } // DataCostLocalMicros
        public long? InvalidImpressions { get; set; } // InvalidImpressions
        public long? InvalidClicks { get; set; } // InvalidClicks
        public long? FeesUsdSuperMicros { get; set; } // FeesUsdSuperMicros
        public long? FeesLocalSuperMicros { get; set; } // FeesLocalSuperMicros
        public long? AdSlotDurationInSeconds { get; set; } // AdSlotDurationInSeconds
        public long? RawViews { get; set; } // RawViews
        public long? IabViews { get; set; } // IabViews
        public long? ViewDurationInSeconds { get; set; } // ViewDurationInSeconds
        
        public AdGroupGeoPostcodeImport()
        {
            InitializePartial();
        }

        partial void InitializePartial();
    }

    // AdGroupGeoPostcodeImportReportID
    public partial class AdGroupGeoPostcodeImportReportId : Entity
    {
        public int BuyerAccountId { get; set; } // BuyerAccountID
        public int CampaignId { get; set; } // CampaignID
        public int AdGroupId { get; set; } // AdGroupID
        public int OptimizationModelId { get; set; } // OptimizationModelID
        public int GeoCountryId { get; set; } // GeoCountryID
        public string Postcode { get; set; } // Postcode
        public DateTime UtcDateTime { get; set; } // UtcDateTime
        public DateTime LocalDateTime { get; set; } // LocalDateTime
        public long Bids { get; set; } // Bids
        public long Impressions { get; set; } // Impressions
        public long Clicks { get; set; } // Clicks
        public long Conversions { get; set; } // Conversions
        public long PostViewConversions { get; set; } // PostViewConversions
        public long PostClickConversions { get; set; } // PostClickConversions
        public long MediaCostUsdMicros { get; set; } // MediaCostUsdMicros
        public long MediaCostLocalMicros { get; set; } // MediaCostLocalMicros
        public long DataCostLocalMicros { get; set; } // DataCostLocalMicros
        public long? InvalidImpressions { get; set; } // InvalidImpressions
        public long? InvalidClicks { get; set; } // InvalidClicks
        public long? FeesUsdSuperMicros { get; set; } // FeesUsdSuperMicros
        public long? FeesLocalSuperMicros { get; set; } // FeesLocalSuperMicros
        public long ReportId { get; set; } // ReportID
        public long? AdSlotDurationInSeconds { get; set; } // AdSlotDurationInSeconds
        public long? RawViews { get; set; } // RawViews
        public long? IabViews { get; set; } // IabViews
        public long? ViewDurationInSeconds { get; set; } // ViewDurationInSeconds
        
        public AdGroupGeoPostcodeImportReportId()
        {
            InitializePartial();
        }

        partial void InitializePartial();
    }

    // AdGroupGeoPostcodeReportID
    public partial class AdGroupGeoPostcodeReportId : Entity
    {
        public int BuyerAccountId { get; set; } // BuyerAccountID
        public int CampaignId { get; set; } // CampaignID
        public int AdGroupId { get; set; } // AdGroupID
        public int OptimizationModelId { get; set; } // OptimizationModelID
        public int GeoCountryId { get; set; } // GeoCountryID
        public string Postcode { get; set; } // Postcode
        public DateTime UtcDate { get; set; } // UtcDate
        public DateTime LocalDate { get; set; } // LocalDate
        public DateTime UtcDateTime { get; set; } // UtcDateTime
        public DateTime LocalDateTime { get; set; } // LocalDateTime
        public long Bids { get; set; } // Bids
        public long Impressions { get; set; } // Impressions
        public long Clicks { get; set; } // Clicks
        public long Conversions { get; set; } // Conversions
        public long PostViewConversions { get; set; } // PostViewConversions
        public long PostClickConversions { get; set; } // PostClickConversions
        public long MediaCostUsdMicros { get; set; } // MediaCostUsdMicros
        public long MediaCostLocalMicros { get; set; } // MediaCostLocalMicros
        public long DataCostLocalMicros { get; set; } // DataCostLocalMicros
        public long? InvalidImpressions { get; set; } // InvalidImpressions
        public long? InvalidClicks { get; set; } // InvalidClicks
        public long? FeesUsdSuperMicros { get; set; } // FeesUsdSuperMicros
        public long? FeesLocalSuperMicros { get; set; } // FeesLocalSuperMicros
        public long ReportId { get; set; } // ReportID
        public long? AdSlotDurationInSeconds { get; set; } // AdSlotDurationInSeconds
        public long? RawViews { get; set; } // RawViews
        public long? IabViews { get; set; } // IabViews
        public long? ViewDurationInSeconds { get; set; } // ViewDurationInSeconds
        
        public AdGroupGeoPostcodeReportId()
        {
            InitializePartial();
        }

        partial void InitializePartial();
    }

    // AdGroupGeoPostcodeTargetingReportID
    public partial class AdGroupGeoPostcodeTargetingReportId : Entity
    {
        public int BuyerAccountId { get; set; } // BuyerAccountID
        public int CampaignId { get; set; } // CampaignID
        public int AdGroupId { get; set; } // AdGroupID
        public int GeoCountryId { get; set; } // GeoCountryID
        public string CountryName { get; set; } // CountryName
        public string Postcode { get; set; } // Postcode
        public int IsTargeted { get; set; } // IsTargeted
        public int PackageInstalled { get; set; } // PackageInstalled
        public long? Bids { get; set; } // Bids
        public long? Impressions { get; set; } // Impressions
        public long? Clicks { get; set; } // Clicks
        public long? Conversions { get; set; } // Conversions
        public long? PostViewConversions { get; set; } // PostViewConversions
        public long? PostClickConversions { get; set; } // PostClickConversions
        public long? SpendLocalMicros { get; set; } // SpendLocalMicros
        public decimal? Spend { get; set; } // Spend
        public decimal? ClientCostLocalMicros { get; set; } // ClientCostLocalMicros
        public decimal? ClientCostDollars { get; set; } // ClientCostDollars
        public long? MediaCostLocalMicros { get; set; } // MediaCostLocalMicros
        public long? DataCostLocalMicros { get; set; } // DataCostLocalMicros
        public decimal? MediaClientCostLocalMicros { get; set; } // MediaClientCostLocalMicros
        public decimal? DataClientCostLocalMicros { get; set; } // DataClientCostLocalMicros
        public long? AdSlotDurationInSeconds { get; set; } // AdSlotDurationInSeconds
        public long? RawViews { get; set; } // RawViews
        public long? IabViews { get; set; } // IabViews
        public long? ViewDurationInSeconds { get; set; } // ViewDurationInSeconds
        public double? Ctr { get; set; } // CTR
        public decimal? Cpm { get; set; } // CPM
        public decimal? Cpc { get; set; } // CPC
        public decimal? Cpa { get; set; } // CPA
        public decimal? ClientCostCpm { get; set; } // ClientCostCPM
        public decimal? ClientCostCpc { get; set; } // ClientCostCPC
        public decimal? ClientCostCpa { get; set; } // ClientCostCPA
        public decimal? Cpms { get; set; } // CPMs
        public decimal? ClientCostCpms { get; set; } // ClientCostCpms
        public decimal? Cps { get; set; } // CPS
        public decimal? ClientCostCps { get; set; } // ClientCostCps
        public double? ViewableRatio { get; set; } // ViewableRatio
        
        public AdGroupGeoPostcodeTargetingReportId()
        {
            InitializePartial();
        }

        partial void InitializePartial();
    }

    // AdGroupIABVerticalImportReportID
    public partial class AdGroupIabVerticalImportReportId : Entity
    {
        public int BuyerAccountId { get; set; } // BuyerAccountID
        public int CampaignId { get; set; } // CampaignID
        public int AdGroupId { get; set; } // AdGroupID
        public int OptimizationModelId { get; set; } // OptimizationModelID
        public string IabVertical { get; set; } // IABVertical
        public DateTime UtcDateTime { get; set; } // UtcDateTime
        public DateTime LocalDateTime { get; set; } // LocalDateTime
        public long Bids { get; set; } // Bids
        public long Impressions { get; set; } // Impressions
        public long InvalidImpressions { get; set; } // InvalidImpressions
        public long Clicks { get; set; } // Clicks
        public long InvalidClicks { get; set; } // InvalidClicks
        public long Conversions { get; set; } // Conversions
        public long PostViewConversions { get; set; } // PostViewConversions
        public long PostClickConversions { get; set; } // PostClickConversions
        public long MediaCostUsdMicros { get; set; } // MediaCostUsdMicros
        public long MediaCostLocalMicros { get; set; } // MediaCostLocalMicros
        public long DataCostLocalMicros { get; set; } // DataCostLocalMicros
        public long FeesUsdSuperMicros { get; set; } // FeesUsdSuperMicros
        public long FeesLocalSuperMicros { get; set; } // FeesLocalSuperMicros
        public long ReportId { get; set; } // ReportID
        public long? AdSlotDurationInSeconds { get; set; } // AdSlotDurationInSeconds
        public long? RawViews { get; set; } // RawViews
        public long? IabViews { get; set; } // IabViews
        public long? ViewDurationInSeconds { get; set; } // ViewDurationInSeconds
        
        public AdGroupIabVerticalImportReportId()
        {
            InitializePartial();
        }

        partial void InitializePartial();
    }

    // AdGroupLanguage
    public partial class AdGroupLanguage : Entity
    {
        public int BuyerAccountId { get; set; } // BuyerAccountID
        public int CampaignId { get; set; } // CampaignID
        public int AdGroupId { get; set; } // AdGroupID
        public int OptimizationModelId { get; set; } // OptimizationModelID
        public int LanguageId { get; set; } // LanguageID
        public DateTime UtcDate { get; set; } // UtcDate
        public DateTime LocalDate { get; set; } // LocalDate
        public DateTime UtcDateTime { get; set; } // UtcDateTime
        public DateTime LocalDateTime { get; set; } // LocalDateTime
        public long Bids { get; set; } // Bids
        public long Impressions { get; set; } // Impressions
        public long Clicks { get; set; } // Clicks
        public long Conversions { get; set; } // Conversions
        public long PostViewConversions { get; set; } // PostViewConversions
        public long PostClickConversions { get; set; } // PostClickConversions
        public long MediaCostUsdMicros { get; set; } // MediaCostUsdMicros
        public long MediaCostLocalMicros { get; set; } // MediaCostLocalMicros
        public long DataCostLocalMicros { get; set; } // DataCostLocalMicros
        public long? InvalidImpressions { get; set; } // InvalidImpressions
        public long? InvalidClicks { get; set; } // InvalidClicks
        public long? FeesUsdSuperMicros { get; set; } // FeesUsdSuperMicros
        public long? FeesLocalSuperMicros { get; set; } // FeesLocalSuperMicros
        public long? AdSlotDurationInSeconds { get; set; } // AdSlotDurationInSeconds
        public long? RawViews { get; set; } // RawViews
        public long? IabViews { get; set; } // IabViews
        public long? ViewDurationInSeconds { get; set; } // ViewDurationInSeconds
        
        public AdGroupLanguage()
        {
            InitializePartial();
        }

        partial void InitializePartial();
    }

    // AdGroupLanguageAnalyticsReportID
    public partial class AdGroupLanguageAnalyticsReportId : Entity
    {
        public int BuyerAccountId { get; set; } // BuyerAccountID
        public int AdvertiserId { get; set; } // AdvertiserID
        public int AdvertiserProductId { get; set; } // AdvertiserProductID
        public int CampaignId { get; set; } // CampaignID
        public int AdGroupId { get; set; } // AdGroupID
        public int OptimizationModelId { get; set; } // OptimizationModelID
        public int LanguageId { get; set; } // LanguageID
        public string LanguageName { get; set; } // LanguageName
        public DateTime LocalDate { get; set; } // LocalDate
        public long Bids { get; set; } // Bids
        public long Impressions { get; set; } // Impressions
        public long? Clicks { get; set; } // Clicks
        public long? UnfilteredClicks { get; set; } // UnfilteredClicks
        public long Conversions { get; set; } // Conversions
        public long PostViewConversions { get; set; } // PostViewConversions
        public long PostClickConversions { get; set; } // PostClickConversions
        public long? SpendLocalMicros { get; set; } // SpendLocalMicros
        public decimal? Spend { get; set; } // Spend
        public long? ClientCostLocalMicros { get; set; } // ClientCostLocalMicros
        public decimal? ClientCostDollars { get; set; } // ClientCostDollars
        public long MediaCostLocalMicros { get; set; } // MediaCostLocalMicros
        public long DataCostLocalMicros { get; set; } // DataCostLocalMicros
        public long? MediaClientCostLocalMicros { get; set; } // MediaClientCostLocalMicros
        public long? DataClientCostLocalMicros { get; set; } // DataClientCostLocalMicros
        public long? AdSlotDurationInSeconds { get; set; } // AdSlotDurationInSeconds
        public long? RawViews { get; set; } // RawViews
        public long? IabViews { get; set; } // IabViews
        public long? ViewDurationInSeconds { get; set; } // ViewDurationInSeconds
        public double? Ctr { get; set; } // CTR
        public decimal? Cpm { get; set; } // CPM
        public decimal? Cpc { get; set; } // CPC
        public decimal? Cpa { get; set; } // CPA
        public decimal? ClientCpm { get; set; } // ClientCPM
        public decimal? ClientCpc { get; set; } // ClientCPC
        public decimal? ClientCpa { get; set; } // ClientCPA
        public decimal? Cpms { get; set; } // CPMs
        public decimal? ClientCostCpms { get; set; } // ClientCostCpms
        public decimal? Cps { get; set; } // CPS
        public decimal? ClientCostCps { get; set; } // ClientCostCps
        public double? ViewableRatio { get; set; } // ViewableRatio
        
        public AdGroupLanguageAnalyticsReportId()
        {
            InitializePartial();
        }

        partial void InitializePartial();
    }

    // AdGroupLanguageCombined
    public partial class AdGroupLanguageCombined : Entity
    {
        public int BuyerAccountId { get; set; } // BuyerAccountID
        public int CampaignId { get; set; } // CampaignID
        public int AdGroupId { get; set; } // AdGroupID
        public int OptimizationModelId { get; set; } // OptimizationModelID
        public int LanguageId { get; set; } // LanguageID
        public DateTime UtcDate { get; set; } // UtcDate
        public DateTime LocalDate { get; set; } // LocalDate
        public DateTime UtcDateTime { get; set; } // UtcDateTime
        public DateTime LocalDateTime { get; set; } // LocalDateTime
        public long Bids { get; set; } // Bids
        public long Impressions { get; set; } // Impressions
        public long Clicks { get; set; } // Clicks
        public long Conversions { get; set; } // Conversions
        public long PostViewConversions { get; set; } // PostViewConversions
        public long PostClickConversions { get; set; } // PostClickConversions
        public long MediaCostUsdMicros { get; set; } // MediaCostUsdMicros
        public long MediaCostLocalMicros { get; set; } // MediaCostLocalMicros
        public long DataCostLocalMicros { get; set; } // DataCostLocalMicros
        public long? InvalidImpressions { get; set; } // InvalidImpressions
        public long? InvalidClicks { get; set; } // InvalidClicks
        public long? FeesUsdSuperMicros { get; set; } // FeesUsdSuperMicros
        public long? FeesLocalSuperMicros { get; set; } // FeesLocalSuperMicros
        public long? AdSlotDurationInSeconds { get; set; } // AdSlotDurationInSeconds
        public long? RawViews { get; set; } // RawViews
        public long? IabViews { get; set; } // IabViews
        public long? ViewDurationInSeconds { get; set; } // ViewDurationInSeconds
        
        public AdGroupLanguageCombined()
        {
            InitializePartial();
        }

        partial void InitializePartial();
    }

    // AdGroupLanguageException
    public partial class AdGroupLanguageException : Entity
    {
        public int BuyerAccountId { get; set; } // BuyerAccountID
        public int CampaignId { get; set; } // CampaignID
        public int AdGroupId { get; set; } // AdGroupID
        public int OptimizationModelId { get; set; } // OptimizationModelID
        public int LanguageId { get; set; } // LanguageID
        public DateTime UtcDateTime { get; set; } // UtcDateTime
        public DateTime LocalDateTime { get; set; } // LocalDateTime
        public long Bids { get; set; } // Bids
        public long Impressions { get; set; } // Impressions
        public long InvalidImpressions { get; set; } // InvalidImpressions
        public long Clicks { get; set; } // Clicks
        public long InvalidClicks { get; set; } // InvalidClicks
        public long Conversions { get; set; } // Conversions
        public long PostViewConversions { get; set; } // PostViewConversions
        public long PostClickConversions { get; set; } // PostClickConversions
        public long MediaCostUsdMicros { get; set; } // MediaCostUsdMicros
        public long MediaCostLocalMicros { get; set; } // MediaCostLocalMicros
        public long DataCostLocalMicros { get; set; } // DataCostLocalMicros
        public long FeesUsdSuperMicros { get; set; } // FeesUsdSuperMicros
        public long FeesLocalSuperMicros { get; set; } // FeesLocalSuperMicros
        public long? AdSlotDurationInSeconds { get; set; } // AdSlotDurationInSeconds
        public long? RawViews { get; set; } // RawViews
        public long? IabViews { get; set; } // IabViews
        public long? ViewDurationInSeconds { get; set; } // ViewDurationInSeconds
        
        public AdGroupLanguageException()
        {
            InitializePartial();
        }

        partial void InitializePartial();
    }

    // AdGroupLanguageImport
    public partial class AdGroupLanguageImport : Entity
    {
        public int BuyerAccountId { get; set; } // BuyerAccountID
        public int CampaignId { get; set; } // CampaignID
        public int AdGroupId { get; set; } // AdGroupID
        public int OptimizationModelId { get; set; } // OptimizationModelID
        public int LanguageId { get; set; } // LanguageID
        public DateTime UtcDateTime { get; set; } // UtcDateTime
        public DateTime LocalDateTime { get; set; } // LocalDateTime
        public long Bids { get; set; } // Bids
        public long Impressions { get; set; } // Impressions
        public long InvalidImpressions { get; set; } // InvalidImpressions
        public long Clicks { get; set; } // Clicks
        public long InvalidClicks { get; set; } // InvalidClicks
        public long Conversions { get; set; } // Conversions
        public long PostViewConversions { get; set; } // PostViewConversions
        public long PostClickConversions { get; set; } // PostClickConversions
        public long MediaCostUsdMicros { get; set; } // MediaCostUsdMicros
        public long MediaCostLocalMicros { get; set; } // MediaCostLocalMicros
        public long DataCostLocalMicros { get; set; } // DataCostLocalMicros
        public long FeesUsdSuperMicros { get; set; } // FeesUsdSuperMicros
        public long FeesLocalSuperMicros { get; set; } // FeesLocalSuperMicros
        public long? AdSlotDurationInSeconds { get; set; } // AdSlotDurationInSeconds
        public long? RawViews { get; set; } // RawViews
        public long? IabViews { get; set; } // IabViews
        public long? ViewDurationInSeconds { get; set; } // ViewDurationInSeconds
        
        public AdGroupLanguageImport()
        {
            InitializePartial();
        }

        partial void InitializePartial();
    }

    // AdGroupLanguageImportReportID
    public partial class AdGroupLanguageImportReportId : Entity
    {
        public int BuyerAccountId { get; set; } // BuyerAccountID
        public int CampaignId { get; set; } // CampaignID
        public int AdGroupId { get; set; } // AdGroupID
        public int OptimizationModelId { get; set; } // OptimizationModelID
        public int LanguageId { get; set; } // LanguageID
        public DateTime UtcDateTime { get; set; } // UtcDateTime
        public DateTime LocalDateTime { get; set; } // LocalDateTime
        public long Bids { get; set; } // Bids
        public long Impressions { get; set; } // Impressions
        public long InvalidImpressions { get; set; } // InvalidImpressions
        public long Clicks { get; set; } // Clicks
        public long InvalidClicks { get; set; } // InvalidClicks
        public long Conversions { get; set; } // Conversions
        public long PostViewConversions { get; set; } // PostViewConversions
        public long PostClickConversions { get; set; } // PostClickConversions
        public long MediaCostUsdMicros { get; set; } // MediaCostUsdMicros
        public long MediaCostLocalMicros { get; set; } // MediaCostLocalMicros
        public long DataCostLocalMicros { get; set; } // DataCostLocalMicros
        public long FeesUsdSuperMicros { get; set; } // FeesUsdSuperMicros
        public long FeesLocalSuperMicros { get; set; } // FeesLocalSuperMicros
        public long ReportId { get; set; } // ReportID
        public long? AdSlotDurationInSeconds { get; set; } // AdSlotDurationInSeconds
        public long? RawViews { get; set; } // RawViews
        public long? IabViews { get; set; } // IabViews
        public long? ViewDurationInSeconds { get; set; } // ViewDurationInSeconds
        
        public AdGroupLanguageImportReportId()
        {
            InitializePartial();
        }

        partial void InitializePartial();
    }

    // AdGroupLanguageReportID
    public partial class AdGroupLanguageReportId : Entity
    {
        public int BuyerAccountId { get; set; } // BuyerAccountID
        public int CampaignId { get; set; } // CampaignID
        public int AdGroupId { get; set; } // AdGroupID
        public int OptimizationModelId { get; set; } // OptimizationModelID
        public int LanguageId { get; set; } // LanguageID
        public DateTime UtcDate { get; set; } // UtcDate
        public DateTime LocalDate { get; set; } // LocalDate
        public DateTime UtcDateTime { get; set; } // UtcDateTime
        public DateTime LocalDateTime { get; set; } // LocalDateTime
        public long Bids { get; set; } // Bids
        public long Impressions { get; set; } // Impressions
        public long Clicks { get; set; } // Clicks
        public long Conversions { get; set; } // Conversions
        public long PostViewConversions { get; set; } // PostViewConversions
        public long PostClickConversions { get; set; } // PostClickConversions
        public long MediaCostUsdMicros { get; set; } // MediaCostUsdMicros
        public long MediaCostLocalMicros { get; set; } // MediaCostLocalMicros
        public long DataCostLocalMicros { get; set; } // DataCostLocalMicros
        public long? InvalidImpressions { get; set; } // InvalidImpressions
        public long? InvalidClicks { get; set; } // InvalidClicks
        public long? FeesUsdSuperMicros { get; set; } // FeesUsdSuperMicros
        public long? FeesLocalSuperMicros { get; set; } // FeesLocalSuperMicros
        public long ReportId { get; set; } // ReportID
        public long? AdSlotDurationInSeconds { get; set; } // AdSlotDurationInSeconds
        public long? RawViews { get; set; } // RawViews
        public long? IabViews { get; set; } // IabViews
        public long? ViewDurationInSeconds { get; set; } // ViewDurationInSeconds
        
        public AdGroupLanguageReportId()
        {
            InitializePartial();
        }

        partial void InitializePartial();
    }

    // AdGroupLanguageTargetingReportID
    public partial class AdGroupLanguageTargetingReportId : Entity
    {
        public int? BuyerAccountId { get; set; } // BuyerAccountID
        public int? CampaignId { get; set; } // CampaignID
        public int? AdGroupId { get; set; } // AdGroupID
        public int LanguageId { get; set; } // LanguageID
        public string LanguageName { get; set; } // LanguageName
        public int IsTargeted { get; set; } // IsTargeted
        public int PackageInstalled { get; set; } // PackageInstalled
        public long? Bids { get; set; } // Bids
        public long? Impressions { get; set; } // Impressions
        public long? Clicks { get; set; } // Clicks
        public long? Conversions { get; set; } // Conversions
        public long? PostViewConversions { get; set; } // PostViewConversions
        public long? PostClickConversions { get; set; } // PostClickConversions
        public long? SpendLocalMicros { get; set; } // SpendLocalMicros
        public decimal? Spend { get; set; } // Spend
        public decimal? ClientCostLocalMicros { get; set; } // ClientCostLocalMicros
        public decimal? ClientCostDollars { get; set; } // ClientCostDollars
        public long? MediaCostLocalMicros { get; set; } // MediaCostLocalMicros
        public long? DataCostLocalMicros { get; set; } // DataCostLocalMicros
        public decimal? MediaClientCostLocalMicros { get; set; } // MediaClientCostLocalMicros
        public decimal? DataClientCostLocalMicros { get; set; } // DataClientCostLocalMicros
        public long? AdSlotDurationInSeconds { get; set; } // AdSlotDurationInSeconds
        public long? RawViews { get; set; } // RawViews
        public long? IabViews { get; set; } // IabViews
        public long? ViewDurationInSeconds { get; set; } // ViewDurationInSeconds
        public double? Ctr { get; set; } // CTR
        public decimal? Cpm { get; set; } // CPM
        public decimal? Cpc { get; set; } // CPC
        public decimal? Cpa { get; set; } // CPA
        public decimal? ClientCostCpm { get; set; } // ClientCostCPM
        public decimal? ClientCostCpc { get; set; } // ClientCostCPC
        public decimal? ClientCostCpa { get; set; } // ClientCostCPA
        public decimal? Cpms { get; set; } // CPMs
        public decimal? ClientCostCpms { get; set; } // ClientCostCpms
        public decimal? Cps { get; set; } // CPS
        public decimal? ClientCostCps { get; set; } // ClientCostCps
        public double? ViewableRatio { get; set; } // ViewableRatio
        
        public AdGroupLanguageTargetingReportId()
        {
            InitializePartial();
        }

        partial void InitializePartial();
    }

    // AdGroupLookup
    public partial class AdGroupLookup : Entity
    {
        public int AdGroupId { get; set; } // AdGroupID
        public string RtbAdGroupId { get; set; } // RtbAdGroupID
        public string AdGroupName { get; set; } // AdGroupName
        public decimal AdGroupBudget { get; set; } // AdGroupBudget
        public int GoalTypeId { get; set; } // GoalTypeID
        public decimal GoalTargetRate { get; set; } // GoalTargetRate
        public int CampaignId { get; set; } // CampaignID
        public string RtbCampaignId { get; set; } // RtbCampaignID
        public string CampaignName { get; set; } // CampaignName
        public string AgencyReference { get; set; } // AgencyReference
        public DateTime? UtcStartDateTime { get; set; } // UtcStartDateTime
        public DateTime? UtcEndDateTime { get; set; } // UtcEndDateTime
        public int AdvertiserProductId { get; set; } // AdvertiserProductID
        public string ProductName { get; set; } // ProductName
        public int ProductCategoryId { get; set; } // ProductCategoryID
        public string ProductCategoryName { get; set; } // ProductCategoryName
        public int IndustryCategoryId { get; set; } // IndustryCategoryID
        public string IndustryCategoryName { get; set; } // IndustryCategoryName
        public int AdvertiserId { get; set; } // AdvertiserID
        public string AdvertiserName { get; set; } // AdvertiserName
        public int BuyerAccountId { get; set; } // BuyerAccountID
        public string CompanyName { get; set; } // CompanyName
        public string BuyingGroupName { get; set; } // BuyingGroupName
        public string CurrencyCode { get; set; } // CurrencyCode
        public string CurrencyName { get; set; } // CurrencyName
        public decimal? LocalToUsdRate { get; set; } // LocalToUSDRate
        public string TimeZoneCode { get; set; } // TimeZoneCode
        public int MinutesOffset { get; set; } // MinutesOffset
        
        public AdGroupLookup()
        {
            InitializePartial();
        }

        partial void InitializePartial();
    }

    // AdGroupMobileCarrier
    public partial class AdGroupMobileCarrier : Entity
    {
        public int BuyerAccountId { get; set; } // BuyerAccountID
        public int CampaignId { get; set; } // CampaignID
        public int AdGroupId { get; set; } // AdGroupID
        public int OptimizationModelId { get; set; } // OptimizationModelID
        public int GeoCountryId { get; set; } // GeoCountryID
        public int Mcc { get; set; } // MCC
        public int Mnc { get; set; } // MNC
        public DateTime UtcDate { get; set; } // UtcDate
        public DateTime LocalDate { get; set; } // LocalDate
        public DateTime UtcDateTime { get; set; } // UtcDateTime
        public DateTime LocalDateTime { get; set; } // LocalDateTime
        public long Bids { get; set; } // Bids
        public long Impressions { get; set; } // Impressions
        public long Clicks { get; set; } // Clicks
        public long Conversions { get; set; } // Conversions
        public long PostViewConversions { get; set; } // PostViewConversions
        public long PostClickConversions { get; set; } // PostClickConversions
        public long MediaCostUsdMicros { get; set; } // MediaCostUsdMicros
        public long MediaCostLocalMicros { get; set; } // MediaCostLocalMicros
        public long DataCostLocalMicros { get; set; } // DataCostLocalMicros
        public long? InvalidImpressions { get; set; } // InvalidImpressions
        public long? InvalidClicks { get; set; } // InvalidClicks
        public long? FeesUsdSuperMicros { get; set; } // FeesUsdSuperMicros
        public long? FeesLocalSuperMicros { get; set; } // FeesLocalSuperMicros
        public long? AdSlotDurationInSeconds { get; set; } // AdSlotDurationInSeconds
        public long? RawViews { get; set; } // RawViews
        public long? IabViews { get; set; } // IabViews
        public long? ViewDurationInSeconds { get; set; } // ViewDurationInSeconds
        
        public AdGroupMobileCarrier()
        {
            InitializePartial();
        }

        partial void InitializePartial();
    }

    // AdGroupMobileCarrierAnalyticsReportID
    public partial class AdGroupMobileCarrierAnalyticsReportId : Entity
    {
        public int BuyerAccountId { get; set; } // BuyerAccountID
        public int AdvertiserId { get; set; } // AdvertiserID
        public int AdvertiserProductId { get; set; } // AdvertiserProductID
        public int CampaignId { get; set; } // CampaignID
        public int AdGroupId { get; set; } // AdGroupID
        public int OptimizationModelId { get; set; } // OptimizationModelID
        public int GeoCountryId { get; set; } // GeoCountryID
        public string CountryName { get; set; } // CountryName
        public string MobileCarrierName { get; set; } // MobileCarrierName
        public int Mcc { get; set; } // MCC
        public int Mnc { get; set; } // MNC
        public DateTime LocalDate { get; set; } // LocalDate
        public long Bids { get; set; } // Bids
        public long Impressions { get; set; } // Impressions
        public long? Clicks { get; set; } // Clicks
        public long? UnfilteredClicks { get; set; } // UnfilteredClicks
        public long Conversions { get; set; } // Conversions
        public long PostViewConversions { get; set; } // PostViewConversions
        public long PostClickConversions { get; set; } // PostClickConversions
        public long? SpendLocalMicros { get; set; } // SpendLocalMicros
        public decimal? Spend { get; set; } // Spend
        public long? ClientCostLocalMicros { get; set; } // ClientCostLocalMicros
        public decimal? ClientCostDollars { get; set; } // ClientCostDollars
        public long? MediaCostLocalMicros { get; set; } // MediaCostLocalMicros
        public long? DataCostLocalMicros { get; set; } // DataCostLocalMicros
        public long? MediaClientCostLocalMicros { get; set; } // MediaClientCostLocalMicros
        public long? DataClientCostLocalMicros { get; set; } // DataClientCostLocalMicros
        public long? AdSlotDurationInSeconds { get; set; } // AdSlotDurationInSeconds
        public long? RawViews { get; set; } // RawViews
        public long? IabViews { get; set; } // IabViews
        public long? ViewDurationInSeconds { get; set; } // ViewDurationInSeconds
        public double? Ctr { get; set; } // CTR
        public decimal? Cpm { get; set; } // CPM
        public decimal? Cpc { get; set; } // CPC
        public decimal? Cpa { get; set; } // CPA
        public decimal? ClientCpm { get; set; } // ClientCPM
        public decimal? ClientCpc { get; set; } // ClientCPC
        public decimal? ClientCpa { get; set; } // ClientCPA
        public decimal? Cpms { get; set; } // CPMs
        public decimal? ClientCostCpms { get; set; } // ClientCostCpms
        public decimal? Cps { get; set; } // CPS
        public decimal? ClientCostCps { get; set; } // ClientCostCps
        public double? ViewableRatio { get; set; } // ViewableRatio
        
        public AdGroupMobileCarrierAnalyticsReportId()
        {
            InitializePartial();
        }

        partial void InitializePartial();
    }

    // AdGroupMobileCarrierCombined
    public partial class AdGroupMobileCarrierCombined : Entity
    {
        public int BuyerAccountId { get; set; } // BuyerAccountID
        public int CampaignId { get; set; } // CampaignID
        public int AdGroupId { get; set; } // AdGroupID
        public int OptimizationModelId { get; set; } // OptimizationModelID
        public int GeoCountryId { get; set; } // GeoCountryID
        public int Mcc { get; set; } // MCC
        public int Mnc { get; set; } // MNC
        public DateTime UtcDate { get; set; } // UtcDate
        public DateTime LocalDate { get; set; } // LocalDate
        public DateTime UtcDateTime { get; set; } // UtcDateTime
        public DateTime LocalDateTime { get; set; } // LocalDateTime
        public long Bids { get; set; } // Bids
        public long Impressions { get; set; } // Impressions
        public long Clicks { get; set; } // Clicks
        public long Conversions { get; set; } // Conversions
        public long PostViewConversions { get; set; } // PostViewConversions
        public long PostClickConversions { get; set; } // PostClickConversions
        public long MediaCostUsdMicros { get; set; } // MediaCostUsdMicros
        public long MediaCostLocalMicros { get; set; } // MediaCostLocalMicros
        public long DataCostLocalMicros { get; set; } // DataCostLocalMicros
        public long? InvalidImpressions { get; set; } // InvalidImpressions
        public long? InvalidClicks { get; set; } // InvalidClicks
        public long? FeesUsdSuperMicros { get; set; } // FeesUsdSuperMicros
        public long? FeesLocalSuperMicros { get; set; } // FeesLocalSuperMicros
        public long? AdSlotDurationInSeconds { get; set; } // AdSlotDurationInSeconds
        public long? RawViews { get; set; } // RawViews
        public long? IabViews { get; set; } // IabViews
        public long? ViewDurationInSeconds { get; set; } // ViewDurationInSeconds
        
        public AdGroupMobileCarrierCombined()
        {
            InitializePartial();
        }

        partial void InitializePartial();
    }

    // AdGroupMobileCarrierException
    public partial class AdGroupMobileCarrierException : Entity
    {
        public int BuyerAccountId { get; set; } // BuyerAccountID
        public int CampaignId { get; set; } // CampaignID
        public int AdGroupId { get; set; } // AdGroupID
        public int OptimizationModelId { get; set; } // OptimizationModelID
        public int GeoCountryId { get; set; } // GeoCountryID
        public int Mcc { get; set; } // MCC
        public int Mnc { get; set; } // MNC
        public DateTime UtcDate { get; set; } // UtcDate
        public DateTime LocalDate { get; set; } // LocalDate
        public DateTime UtcDateTime { get; set; } // UtcDateTime
        public DateTime LocalDateTime { get; set; } // LocalDateTime
        public long Bids { get; set; } // Bids
        public long Impressions { get; set; } // Impressions
        public long Clicks { get; set; } // Clicks
        public long Conversions { get; set; } // Conversions
        public long PostViewConversions { get; set; } // PostViewConversions
        public long PostClickConversions { get; set; } // PostClickConversions
        public long MediaCostUsdMicros { get; set; } // MediaCostUsdMicros
        public long MediaCostLocalMicros { get; set; } // MediaCostLocalMicros
        public long DataCostLocalMicros { get; set; } // DataCostLocalMicros
        public long? InvalidImpressions { get; set; } // InvalidImpressions
        public long? InvalidClicks { get; set; } // InvalidClicks
        public long? FeesUsdSuperMicros { get; set; } // FeesUsdSuperMicros
        public long? FeesLocalSuperMicros { get; set; } // FeesLocalSuperMicros
        public long? AdSlotDurationInSeconds { get; set; } // AdSlotDurationInSeconds
        public long? RawViews { get; set; } // RawViews
        public long? IabViews { get; set; } // IabViews
        public long? ViewDurationInSeconds { get; set; } // ViewDurationInSeconds
        
        public AdGroupMobileCarrierException()
        {
            InitializePartial();
        }

        partial void InitializePartial();
    }

    // AdGroupMobileCarrierImport
    public partial class AdGroupMobileCarrierImport : Entity
    {
        public int BuyerAccountId { get; set; } // BuyerAccountID
        public int CampaignId { get; set; } // CampaignID
        public int AdGroupId { get; set; } // AdGroupID
        public int OptimizationModelId { get; set; } // OptimizationModelID
        public int GeoCountryId { get; set; } // GeoCountryID
        public int Mcc { get; set; } // MCC
        public int Mnc { get; set; } // MNC
        public DateTime UtcDate { get; set; } // UtcDate
        public DateTime LocalDate { get; set; } // LocalDate
        public DateTime UtcDateTime { get; set; } // UtcDateTime
        public DateTime LocalDateTime { get; set; } // LocalDateTime
        public long Bids { get; set; } // Bids
        public long Impressions { get; set; } // Impressions
        public long InvalidImpressions { get; set; } // InvalidImpressions
        public long Clicks { get; set; } // Clicks
        public long InvalidClicks { get; set; } // InvalidClicks
        public long Conversions { get; set; } // Conversions
        public long PostViewConversions { get; set; } // PostViewConversions
        public long PostClickConversions { get; set; } // PostClickConversions
        public long MediaCostUsdMicros { get; set; } // MediaCostUsdMicros
        public long MediaCostLocalMicros { get; set; } // MediaCostLocalMicros
        public long DataCostLocalMicros { get; set; } // DataCostLocalMicros
        public long FeesUsdSuperMicros { get; set; } // FeesUsdSuperMicros
        public long FeesLocalSuperMicros { get; set; } // FeesLocalSuperMicros
        public long ReportId { get; set; } // ReportID
        public long? AdSlotDurationInSeconds { get; set; } // AdSlotDurationInSeconds
        public long? RawViews { get; set; } // RawViews
        public long? IabViews { get; set; } // IabViews
        public long? ViewDurationInSeconds { get; set; } // ViewDurationInSeconds
        
        public AdGroupMobileCarrierImport()
        {
            InitializePartial();
        }

        partial void InitializePartial();
    }

    // AdGroupMobileCarrierImportReportID
    public partial class AdGroupMobileCarrierImportReportId : Entity
    {
        public int BuyerAccountId { get; set; } // BuyerAccountID
        public int CampaignId { get; set; } // CampaignID
        public int AdGroupId { get; set; } // AdGroupID
        public int OptimizationModelId { get; set; } // OptimizationModelID
        public int GeoCountryId { get; set; } // GeoCountryID
        public int Mcc { get; set; } // MCC
        public int Mnc { get; set; } // MNC
        public DateTime UtcDateTime { get; set; } // UtcDateTime
        public DateTime LocalDateTime { get; set; } // LocalDateTime
        public long Bids { get; set; } // Bids
        public long Impressions { get; set; } // Impressions
        public long InvalidImpressions { get; set; } // InvalidImpressions
        public long Clicks { get; set; } // Clicks
        public long InvalidClicks { get; set; } // InvalidClicks
        public long Conversions { get; set; } // Conversions
        public long PostViewConversions { get; set; } // PostViewConversions
        public long PostClickConversions { get; set; } // PostClickConversions
        public long MediaCostUsdMicros { get; set; } // MediaCostUsdMicros
        public long MediaCostLocalMicros { get; set; } // MediaCostLocalMicros
        public long DataCostLocalMicros { get; set; } // DataCostLocalMicros
        public long FeesUsdSuperMicros { get; set; } // FeesUsdSuperMicros
        public long FeesLocalSuperMicros { get; set; } // FeesLocalSuperMicros
        public long ReportId { get; set; } // ReportID
        public long? AdSlotDurationInSeconds { get; set; } // AdSlotDurationInSeconds
        public long? RawViews { get; set; } // RawViews
        public long? IabViews { get; set; } // IabViews
        public long? ViewDurationInSeconds { get; set; } // ViewDurationInSeconds
        
        public AdGroupMobileCarrierImportReportId()
        {
            InitializePartial();
        }

        partial void InitializePartial();
    }

    // AdGroupMobileCarrierReportID
    public partial class AdGroupMobileCarrierReportId : Entity
    {
        public int BuyerAccountId { get; set; } // BuyerAccountID
        public int CampaignId { get; set; } // CampaignID
        public int AdGroupId { get; set; } // AdGroupID
        public int OptimizationModelId { get; set; } // OptimizationModelID
        public int GeoCountryId { get; set; } // GeoCountryID
        public int Mcc { get; set; } // MCC
        public int Mnc { get; set; } // MNC
        public DateTime UtcDate { get; set; } // UtcDate
        public DateTime LocalDate { get; set; } // LocalDate
        public DateTime UtcDateTime { get; set; } // UtcDateTime
        public DateTime LocalDateTime { get; set; } // LocalDateTime
        public long Bids { get; set; } // Bids
        public long Impressions { get; set; } // Impressions
        public long Clicks { get; set; } // Clicks
        public long Conversions { get; set; } // Conversions
        public long PostViewConversions { get; set; } // PostViewConversions
        public long PostClickConversions { get; set; } // PostClickConversions
        public long MediaCostUsdMicros { get; set; } // MediaCostUsdMicros
        public long MediaCostLocalMicros { get; set; } // MediaCostLocalMicros
        public long DataCostLocalMicros { get; set; } // DataCostLocalMicros
        public long? InvalidImpressions { get; set; } // InvalidImpressions
        public long? InvalidClicks { get; set; } // InvalidClicks
        public long? FeesUsdSuperMicros { get; set; } // FeesUsdSuperMicros
        public long? FeesLocalSuperMicros { get; set; } // FeesLocalSuperMicros
        public long ReportId { get; set; } // ReportID
        public long? AdSlotDurationInSeconds { get; set; } // AdSlotDurationInSeconds
        public long? RawViews { get; set; } // RawViews
        public long? IabViews { get; set; } // IabViews
        public long? ViewDurationInSeconds { get; set; } // ViewDurationInSeconds
        
        public AdGroupMobileCarrierReportId()
        {
            InitializePartial();
        }

        partial void InitializePartial();
    }

    // AdGroupMobileCarrierTargetingReportID
    public partial class AdGroupMobileCarrierTargetingReportId : Entity
    {
        public int? BuyerAccountId { get; set; } // BuyerAccountID
        public int? CampaignId { get; set; } // CampaignID
        public int? AdGroupId { get; set; } // AdGroupID
        public int GeoCountryId { get; set; } // GeoCountryID
        public string CountryName { get; set; } // CountryName
        public string MobileCarrierName { get; set; } // MobileCarrierName
        public int Mcc { get; set; } // MCC
        public int Mnc { get; set; } // MNC
        public int IsTargeted { get; set; } // IsTargeted
        public int PackageInstalled { get; set; } // PackageInstalled
        public long? Bids { get; set; } // Bids
        public long? Impressions { get; set; } // Impressions
        public long? Clicks { get; set; } // Clicks
        public long? Conversions { get; set; } // Conversions
        public long? PostViewConversions { get; set; } // PostViewConversions
        public long? PostClickConversions { get; set; } // PostClickConversions
        public long? SpendLocalMicros { get; set; } // SpendLocalMicros
        public decimal? Spend { get; set; } // Spend
        public decimal? ClientCostLocalMicros { get; set; } // ClientCostLocalMicros
        public decimal? ClientCostDollars { get; set; } // ClientCostDollars
        public long? MediaCostLocalMicros { get; set; } // MediaCostLocalMicros
        public long? DataCostLocalMicros { get; set; } // DataCostLocalMicros
        public decimal? MediaClientCostLocalMicros { get; set; } // MediaClientCostLocalMicros
        public decimal? DataClientCostLocalMicros { get; set; } // DataClientCostLocalMicros
        public long? AdSlotDurationInSeconds { get; set; } // AdSlotDurationInSeconds
        public long? RawViews { get; set; } // RawViews
        public long? IabViews { get; set; } // IabViews
        public long? ViewDurationInSeconds { get; set; } // ViewDurationInSeconds
        public double? Ctr { get; set; } // CTR
        public decimal? Cpm { get; set; } // CPM
        public decimal? Cpc { get; set; } // CPC
        public decimal? Cpa { get; set; } // CPA
        public decimal? ClientCostCpm { get; set; } // ClientCostCPM
        public decimal? ClientCostCpc { get; set; } // ClientCostCPC
        public decimal? ClientCostCpa { get; set; } // ClientCostCPA
        public decimal? Cpms { get; set; } // CPMs
        public decimal? ClientCostCpms { get; set; } // ClientCostCpms
        public decimal? Cps { get; set; } // CPS
        public decimal? ClientCostCps { get; set; } // ClientCostCps
        public double? ViewableRatio { get; set; } // ViewableRatio
        
        public AdGroupMobileCarrierTargetingReportId()
        {
            InitializePartial();
        }

        partial void InitializePartial();
    }

    // AdGroupPagePosition
    public partial class AdGroupPagePosition : Entity
    {
        public int BuyerAccountId { get; set; } // BuyerAccountID
        public int CampaignId { get; set; } // CampaignID
        public int AdGroupId { get; set; } // AdGroupID
        public int OptimizationModelId { get; set; } // OptimizationModelID
        public int PagePositionId { get; set; } // PagePositionID
        public DateTime UtcDate { get; set; } // UtcDate
        public DateTime LocalDate { get; set; } // LocalDate
        public DateTime UtcDateTime { get; set; } // UtcDateTime
        public DateTime LocalDateTime { get; set; } // LocalDateTime
        public long Bids { get; set; } // Bids
        public long Impressions { get; set; } // Impressions
        public long Clicks { get; set; } // Clicks
        public long Conversions { get; set; } // Conversions
        public long PostViewConversions { get; set; } // PostViewConversions
        public long PostClickConversions { get; set; } // PostClickConversions
        public long MediaCostUsdMicros { get; set; } // MediaCostUsdMicros
        public long MediaCostLocalMicros { get; set; } // MediaCostLocalMicros
        public long DataCostLocalMicros { get; set; } // DataCostLocalMicros
        public long? InvalidImpressions { get; set; } // InvalidImpressions
        public long? InvalidClicks { get; set; } // InvalidClicks
        public long? FeesUsdSuperMicros { get; set; } // FeesUsdSuperMicros
        public long? FeesLocalSuperMicros { get; set; } // FeesLocalSuperMicros
        public long? AdSlotDurationInSeconds { get; set; } // AdSlotDurationInSeconds
        public long? RawViews { get; set; } // RawViews
        public long? IabViews { get; set; } // IabViews
        public long? ViewDurationInSeconds { get; set; } // ViewDurationInSeconds
        
        public AdGroupPagePosition()
        {
            InitializePartial();
        }

        partial void InitializePartial();
    }

    // AdGroupPagePositionAnalyticsReportID
    public partial class AdGroupPagePositionAnalyticsReportId : Entity
    {
        public int BuyerAccountId { get; set; } // BuyerAccountID
        public int AdvertiserId { get; set; } // AdvertiserID
        public int AdvertiserProductId { get; set; } // AdvertiserProductID
        public int CampaignId { get; set; } // CampaignID
        public int AdGroupId { get; set; } // AdGroupID
        public int OptimizationModelId { get; set; } // OptimizationModelID
        public int PagePositionId { get; set; } // PagePositionID
        public string PagePositionName { get; set; } // PagePositionName
        public DateTime LocalDate { get; set; } // LocalDate
        public long Bids { get; set; } // Bids
        public long Impressions { get; set; } // Impressions
        public long? Clicks { get; set; } // Clicks
        public long? UnfilteredClicks { get; set; } // UnfilteredClicks
        public long Conversions { get; set; } // Conversions
        public long PostViewConversions { get; set; } // PostViewConversions
        public long PostClickConversions { get; set; } // PostClickConversions
        public long? SpendLocalMicros { get; set; } // SpendLocalMicros
        public decimal? Spend { get; set; } // Spend
        public long? ClientCostLocalMicros { get; set; } // ClientCostLocalMicros
        public decimal? ClientCostDollars { get; set; } // ClientCostDollars
        public long MediaCostLocalMicros { get; set; } // MediaCostLocalMicros
        public long DataCostLocalMicros { get; set; } // DataCostLocalMicros
        public long? MediaClientCostLocalMicros { get; set; } // MediaClientCostLocalMicros
        public long? DataClientCostLocalMicros { get; set; } // DataClientCostLocalMicros
        public long? AdSlotDurationInSeconds { get; set; } // AdSlotDurationInSeconds
        public long? RawViews { get; set; } // RawViews
        public long? IabViews { get; set; } // IabViews
        public long? ViewDurationInSeconds { get; set; } // ViewDurationInSeconds
        public double? Ctr { get; set; } // CTR
        public decimal? Cpm { get; set; } // CPM
        public decimal? Cpc { get; set; } // CPC
        public decimal? Cpa { get; set; } // CPA
        public decimal? ClientCpm { get; set; } // ClientCPM
        public decimal? ClientCpc { get; set; } // ClientCPC
        public decimal? ClientCpa { get; set; } // ClientCPA
        public decimal? Cpms { get; set; } // CPMs
        public decimal? ClientCostCpms { get; set; } // ClientCostCpms
        public decimal? Cps { get; set; } // CPS
        public decimal? ClientCostCps { get; set; } // ClientCostCps
        public double? ViewableRatio { get; set; } // ViewableRatio
        
        public AdGroupPagePositionAnalyticsReportId()
        {
            InitializePartial();
        }

        partial void InitializePartial();
    }

    // AdGroupPagePositionCombined
    public partial class AdGroupPagePositionCombined : Entity
    {
        public int BuyerAccountId { get; set; } // BuyerAccountID
        public int CampaignId { get; set; } // CampaignID
        public int AdGroupId { get; set; } // AdGroupID
        public int OptimizationModelId { get; set; } // OptimizationModelID
        public int PagePositionId { get; set; } // PagePositionID
        public DateTime UtcDate { get; set; } // UtcDate
        public DateTime LocalDate { get; set; } // LocalDate
        public DateTime UtcDateTime { get; set; } // UtcDateTime
        public DateTime LocalDateTime { get; set; } // LocalDateTime
        public long Bids { get; set; } // Bids
        public long Impressions { get; set; } // Impressions
        public long Clicks { get; set; } // Clicks
        public long Conversions { get; set; } // Conversions
        public long PostViewConversions { get; set; } // PostViewConversions
        public long PostClickConversions { get; set; } // PostClickConversions
        public long MediaCostUsdMicros { get; set; } // MediaCostUsdMicros
        public long MediaCostLocalMicros { get; set; } // MediaCostLocalMicros
        public long DataCostLocalMicros { get; set; } // DataCostLocalMicros
        public long? InvalidImpressions { get; set; } // InvalidImpressions
        public long? InvalidClicks { get; set; } // InvalidClicks
        public long? FeesUsdSuperMicros { get; set; } // FeesUsdSuperMicros
        public long? FeesLocalSuperMicros { get; set; } // FeesLocalSuperMicros
        public long? AdSlotDurationInSeconds { get; set; } // AdSlotDurationInSeconds
        public long? RawViews { get; set; } // RawViews
        public long? IabViews { get; set; } // IabViews
        public long? ViewDurationInSeconds { get; set; } // ViewDurationInSeconds
        
        public AdGroupPagePositionCombined()
        {
            InitializePartial();
        }

        partial void InitializePartial();
    }

    // AdGroupPagePositionException
    public partial class AdGroupPagePositionException : Entity
    {
        public int BuyerAccountId { get; set; } // BuyerAccountID
        public int CampaignId { get; set; } // CampaignID
        public int AdGroupId { get; set; } // AdGroupID
        public int OptimizationModelId { get; set; } // OptimizationModelID
        public int PagePositionId { get; set; } // PagePositionID
        public DateTime UtcDateTime { get; set; } // UtcDateTime
        public DateTime LocalDateTime { get; set; } // LocalDateTime
        public long Bids { get; set; } // Bids
        public long Impressions { get; set; } // Impressions
        public long InvalidImpressions { get; set; } // InvalidImpressions
        public long Clicks { get; set; } // Clicks
        public long InvalidClicks { get; set; } // InvalidClicks
        public long Conversions { get; set; } // Conversions
        public long PostViewConversions { get; set; } // PostViewConversions
        public long PostClickConversions { get; set; } // PostClickConversions
        public long MediaCostUsdMicros { get; set; } // MediaCostUsdMicros
        public long MediaCostLocalMicros { get; set; } // MediaCostLocalMicros
        public long DataCostLocalMicros { get; set; } // DataCostLocalMicros
        public long FeesUsdSuperMicros { get; set; } // FeesUsdSuperMicros
        public long FeesLocalSuperMicros { get; set; } // FeesLocalSuperMicros
        public long? AdSlotDurationInSeconds { get; set; } // AdSlotDurationInSeconds
        public long? RawViews { get; set; } // RawViews
        public long? IabViews { get; set; } // IabViews
        public long? ViewDurationInSeconds { get; set; } // ViewDurationInSeconds
        
        public AdGroupPagePositionException()
        {
            InitializePartial();
        }

        partial void InitializePartial();
    }

    // AdGroupPagePositionImport
    public partial class AdGroupPagePositionImport : Entity
    {
        public int BuyerAccountId { get; set; } // BuyerAccountID
        public int CampaignId { get; set; } // CampaignID
        public int AdGroupId { get; set; } // AdGroupID
        public int OptimizationModelId { get; set; } // OptimizationModelID
        public int PagePositionId { get; set; } // PagePositionID
        public DateTime UtcDateTime { get; set; } // UtcDateTime
        public DateTime LocalDateTime { get; set; } // LocalDateTime
        public long Bids { get; set; } // Bids
        public long Impressions { get; set; } // Impressions
        public long InvalidImpressions { get; set; } // InvalidImpressions
        public long Clicks { get; set; } // Clicks
        public long InvalidClicks { get; set; } // InvalidClicks
        public long Conversions { get; set; } // Conversions
        public long PostViewConversions { get; set; } // PostViewConversions
        public long PostClickConversions { get; set; } // PostClickConversions
        public long MediaCostUsdMicros { get; set; } // MediaCostUsdMicros
        public long MediaCostLocalMicros { get; set; } // MediaCostLocalMicros
        public long DataCostLocalMicros { get; set; } // DataCostLocalMicros
        public long FeesUsdSuperMicros { get; set; } // FeesUsdSuperMicros
        public long FeesLocalSuperMicros { get; set; } // FeesLocalSuperMicros
        public long? AdSlotDurationInSeconds { get; set; } // AdSlotDurationInSeconds
        public long? RawViews { get; set; } // RawViews
        public long? IabViews { get; set; } // IabViews
        public long? ViewDurationInSeconds { get; set; } // ViewDurationInSeconds
        
        public AdGroupPagePositionImport()
        {
            InitializePartial();
        }

        partial void InitializePartial();
    }

    // AdGroupPagePositionImportReportID
    public partial class AdGroupPagePositionImportReportId : Entity
    {
        public int BuyerAccountId { get; set; } // BuyerAccountID
        public int CampaignId { get; set; } // CampaignID
        public int AdGroupId { get; set; } // AdGroupID
        public int OptimizationModelId { get; set; } // OptimizationModelID
        public int PagePositionId { get; set; } // PagePositionID
        public DateTime UtcDateTime { get; set; } // UtcDateTime
        public DateTime LocalDateTime { get; set; } // LocalDateTime
        public long Bids { get; set; } // Bids
        public long Impressions { get; set; } // Impressions
        public long InvalidImpressions { get; set; } // InvalidImpressions
        public long Clicks { get; set; } // Clicks
        public long InvalidClicks { get; set; } // InvalidClicks
        public long Conversions { get; set; } // Conversions
        public long PostViewConversions { get; set; } // PostViewConversions
        public long PostClickConversions { get; set; } // PostClickConversions
        public long MediaCostUsdMicros { get; set; } // MediaCostUsdMicros
        public long MediaCostLocalMicros { get; set; } // MediaCostLocalMicros
        public long DataCostLocalMicros { get; set; } // DataCostLocalMicros
        public long FeesUsdSuperMicros { get; set; } // FeesUsdSuperMicros
        public long FeesLocalSuperMicros { get; set; } // FeesLocalSuperMicros
        public long ReportId { get; set; } // ReportID
        public long? AdSlotDurationInSeconds { get; set; } // AdSlotDurationInSeconds
        public long? RawViews { get; set; } // RawViews
        public long? IabViews { get; set; } // IabViews
        public long? ViewDurationInSeconds { get; set; } // ViewDurationInSeconds
        
        public AdGroupPagePositionImportReportId()
        {
            InitializePartial();
        }

        partial void InitializePartial();
    }

    // AdGroupPagePositionReportID
    public partial class AdGroupPagePositionReportId : Entity
    {
        public int BuyerAccountId { get; set; } // BuyerAccountID
        public int CampaignId { get; set; } // CampaignID
        public int AdGroupId { get; set; } // AdGroupID
        public int OptimizationModelId { get; set; } // OptimizationModelID
        public int PagePositionId { get; set; } // PagePositionID
        public DateTime UtcDate { get; set; } // UtcDate
        public DateTime LocalDate { get; set; } // LocalDate
        public DateTime UtcDateTime { get; set; } // UtcDateTime
        public DateTime LocalDateTime { get; set; } // LocalDateTime
        public long Bids { get; set; } // Bids
        public long Impressions { get; set; } // Impressions
        public long Clicks { get; set; } // Clicks
        public long Conversions { get; set; } // Conversions
        public long PostViewConversions { get; set; } // PostViewConversions
        public long PostClickConversions { get; set; } // PostClickConversions
        public long MediaCostUsdMicros { get; set; } // MediaCostUsdMicros
        public long MediaCostLocalMicros { get; set; } // MediaCostLocalMicros
        public long DataCostLocalMicros { get; set; } // DataCostLocalMicros
        public long? InvalidImpressions { get; set; } // InvalidImpressions
        public long? InvalidClicks { get; set; } // InvalidClicks
        public long? FeesUsdSuperMicros { get; set; } // FeesUsdSuperMicros
        public long? FeesLocalSuperMicros { get; set; } // FeesLocalSuperMicros
        public long ReportId { get; set; } // ReportID
        public long? AdSlotDurationInSeconds { get; set; } // AdSlotDurationInSeconds
        public long? RawViews { get; set; } // RawViews
        public long? IabViews { get; set; } // IabViews
        public long? ViewDurationInSeconds { get; set; } // ViewDurationInSeconds
        
        public AdGroupPagePositionReportId()
        {
            InitializePartial();
        }

        partial void InitializePartial();
    }

    // AdGroupPagePositionTargetingReportID
    public partial class AdGroupPagePositionTargetingReportId : Entity
    {
        public int? BuyerAccountId { get; set; } // BuyerAccountID
        public int? CampaignId { get; set; } // CampaignID
        public int? AdGroupId { get; set; } // AdGroupID
        public int PagePositionId { get; set; } // PagePositionID
        public string PagePositionName { get; set; } // PagePositionName
        public int IsTargeted { get; set; } // IsTargeted
        public int PackageInstalled { get; set; } // PackageInstalled
        public long? Bids { get; set; } // Bids
        public long? Impressions { get; set; } // Impressions
        public long? Clicks { get; set; } // Clicks
        public long? Conversions { get; set; } // Conversions
        public long? PostViewConversions { get; set; } // PostViewConversions
        public long? PostClickConversions { get; set; } // PostClickConversions
        public long? SpendLocalMicros { get; set; } // SpendLocalMicros
        public decimal? Spend { get; set; } // Spend
        public decimal? ClientCostDollars { get; set; } // ClientCostDollars
        public decimal? ClientCostLocalMicros { get; set; } // ClientCostLocalMicros
        public long? MediaCostLocalMicros { get; set; } // MediaCostLocalMicros
        public long? DataCostLocalMicros { get; set; } // DataCostLocalMicros
        public decimal? MediaClientCostLocalMicros { get; set; } // MediaClientCostLocalMicros
        public decimal? DataClientCostLocalMicros { get; set; } // DataClientCostLocalMicros
        public long? AdSlotDurationInSeconds { get; set; } // AdSlotDurationInSeconds
        public long? RawViews { get; set; } // RawViews
        public long? IabViews { get; set; } // IabViews
        public long? ViewDurationInSeconds { get; set; } // ViewDurationInSeconds
        public double? Ctr { get; set; } // CTR
        public decimal? Cpm { get; set; } // CPM
        public decimal? Cpc { get; set; } // CPC
        public decimal? Cpa { get; set; } // CPA
        public decimal? ClientCostCpm { get; set; } // ClientCostCPM
        public decimal? ClientCostCpc { get; set; } // ClientCostCPC
        public decimal? ClientCostCpa { get; set; } // ClientCostCPA
        public decimal? Cpms { get; set; } // CPMs
        public decimal? ClientCostCpms { get; set; } // ClientCostCpms
        public decimal? Cps { get; set; } // CPS
        public decimal? ClientCostCps { get; set; } // ClientCostCps
        public double? ViewableRatio { get; set; } // ViewableRatio
        
        public AdGroupPagePositionTargetingReportId()
        {
            InitializePartial();
        }

        partial void InitializePartial();
    }

    // AdGroupPublisher
    public partial class AdGroupPublisher : Entity
    {
        public int BuyerAccountId { get; set; } // BuyerAccountID
        public int CampaignId { get; set; } // CampaignID
        public int AdGroupId { get; set; } // AdGroupID
        public int OptimizationModelId { get; set; } // OptimizationModelID
        public int PartnerId { get; set; } // PartnerID
        public int PublisherId { get; set; } // PublisherID
        public DateTime UtcDate { get; set; } // UtcDate
        public DateTime LocalDate { get; set; } // LocalDate
        public DateTime UtcDateTime { get; set; } // UtcDateTime
        public DateTime LocalDateTime { get; set; } // LocalDateTime
        public long Bids { get; set; } // Bids
        public long Impressions { get; set; } // Impressions
        public long Clicks { get; set; } // Clicks
        public long Conversions { get; set; } // Conversions
        public long PostViewConversions { get; set; } // PostViewConversions
        public long PostClickConversions { get; set; } // PostClickConversions
        public long MediaCostUsdMicros { get; set; } // MediaCostUsdMicros
        public long MediaCostLocalMicros { get; set; } // MediaCostLocalMicros
        public long DataCostLocalMicros { get; set; } // DataCostLocalMicros
        public long? InvalidImpressions { get; set; } // InvalidImpressions
        public long? InvalidClicks { get; set; } // InvalidClicks
        public long? FeesUsdSuperMicros { get; set; } // FeesUsdSuperMicros
        public long? FeesLocalSuperMicros { get; set; } // FeesLocalSuperMicros
        public long? AdSlotDurationInSeconds { get; set; } // AdSlotDurationInSeconds
        public long? RawViews { get; set; } // RawViews
        public long? IabViews { get; set; } // IabViews
        public long? ViewDurationInSeconds { get; set; } // ViewDurationInSeconds
        
        public AdGroupPublisher()
        {
            InitializePartial();
        }

        partial void InitializePartial();
    }

    // AdGroupPublisherAnalyticsReportID
    public partial class AdGroupPublisherAnalyticsReportId : Entity
    {
        public int BuyerAccountId { get; set; } // BuyerAccountID
        public int AdvertiserId { get; set; } // AdvertiserID
        public int AdvertiserProductId { get; set; } // AdvertiserProductID
        public int CampaignId { get; set; } // CampaignID
        public int AdGroupId { get; set; } // AdGroupID
        public int OptimizationModelId { get; set; } // OptimizationModelID
        public int? PartnerId { get; set; } // PartnerID
        public string PartnerName { get; set; } // PartnerName
        public int? PublisherId { get; set; } // PublisherID
        public string PublisherName { get; set; } // PublisherName
        public DateTime LocalDate { get; set; } // LocalDate
        public long Bids { get; set; } // Bids
        public long Impressions { get; set; } // Impressions
        public long? Clicks { get; set; } // Clicks
        public long? UnfilteredClicks { get; set; } // UnfilteredClicks
        public long Conversions { get; set; } // Conversions
        public long PostViewConversions { get; set; } // PostViewConversions
        public long PostClickConversions { get; set; } // PostClickConversions
        public long? SpendLocalMicros { get; set; } // SpendLocalMicros
        public decimal? Spend { get; set; } // Spend
        public long? ClientCostLocalMicros { get; set; } // ClientCostLocalMicros
        public decimal? ClientCostDollars { get; set; } // ClientCostDollars
        public long MediaCostLocalMicros { get; set; } // MediaCostLocalMicros
        public long DataCostLocalMicros { get; set; } // DataCostLocalMicros
        public long? MediaClientCostLocalMicros { get; set; } // MediaClientCostLocalMicros
        public long? DataClientCostLocalMicros { get; set; } // DataClientCostLocalMicros
        public long? AdSlotDurationInSeconds { get; set; } // AdSlotDurationInSeconds
        public long? RawViews { get; set; } // RawViews
        public long? IabViews { get; set; } // IabViews
        public long? ViewDurationInSeconds { get; set; } // ViewDurationInSeconds
        public double? Ctr { get; set; } // CTR
        public decimal? Cpm { get; set; } // CPM
        public decimal? Cpc { get; set; } // CPC
        public decimal? Cpa { get; set; } // CPA
        public decimal? ClientCpm { get; set; } // ClientCPM
        public decimal? ClientCpc { get; set; } // ClientCPC
        public decimal? ClientCpa { get; set; } // ClientCPA
        public decimal? Cpms { get; set; } // CPMs
        public decimal? ClientCostCpms { get; set; } // ClientCostCpms
        public decimal? Cps { get; set; } // CPS
        public decimal? ClientCostCps { get; set; } // ClientCostCps
        public double? ViewableRatio { get; set; } // ViewableRatio
        
        public AdGroupPublisherAnalyticsReportId()
        {
            InitializePartial();
        }

        partial void InitializePartial();
    }

    // AdGroupPublisherCombined
    public partial class AdGroupPublisherCombined : Entity
    {
        public int BuyerAccountId { get; set; } // BuyerAccountID
        public int CampaignId { get; set; } // CampaignID
        public int AdGroupId { get; set; } // AdGroupID
        public int OptimizationModelId { get; set; } // OptimizationModelID
        public int PartnerId { get; set; } // PartnerID
        public int PublisherId { get; set; } // PublisherID
        public DateTime UtcDate { get; set; } // UtcDate
        public DateTime LocalDate { get; set; } // LocalDate
        public DateTime UtcDateTime { get; set; } // UtcDateTime
        public DateTime LocalDateTime { get; set; } // LocalDateTime
        public long Bids { get; set; } // Bids
        public long Impressions { get; set; } // Impressions
        public long Clicks { get; set; } // Clicks
        public long Conversions { get; set; } // Conversions
        public long PostViewConversions { get; set; } // PostViewConversions
        public long PostClickConversions { get; set; } // PostClickConversions
        public long MediaCostUsdMicros { get; set; } // MediaCostUsdMicros
        public long MediaCostLocalMicros { get; set; } // MediaCostLocalMicros
        public long DataCostLocalMicros { get; set; } // DataCostLocalMicros
        public long? InvalidImpressions { get; set; } // InvalidImpressions
        public long? InvalidClicks { get; set; } // InvalidClicks
        public long? FeesUsdSuperMicros { get; set; } // FeesUsdSuperMicros
        public long? FeesLocalSuperMicros { get; set; } // FeesLocalSuperMicros
        public long? AdSlotDurationInSeconds { get; set; } // AdSlotDurationInSeconds
        public long? RawViews { get; set; } // RawViews
        public long? IabViews { get; set; } // IabViews
        public long? ViewDurationInSeconds { get; set; } // ViewDurationInSeconds
        
        public AdGroupPublisherCombined()
        {
            InitializePartial();
        }

        partial void InitializePartial();
    }

    // AdGroupPublisherException
    public partial class AdGroupPublisherException : Entity
    {
        public int BuyerAccountId { get; set; } // BuyerAccountID
        public int CampaignId { get; set; } // CampaignID
        public int AdGroupId { get; set; } // AdGroupID
        public int OptimizationModelId { get; set; } // OptimizationModelID
        public int PartnerId { get; set; } // PartnerID
        public int PublisherId { get; set; } // PublisherID
        public DateTime UtcDateTime { get; set; } // UtcDateTime
        public DateTime LocalDateTime { get; set; } // LocalDateTime
        public long Bids { get; set; } // Bids
        public long Impressions { get; set; } // Impressions
        public long InvalidImpressions { get; set; } // InvalidImpressions
        public long Clicks { get; set; } // Clicks
        public long InvalidClicks { get; set; } // InvalidClicks
        public long Conversions { get; set; } // Conversions
        public long PostViewConversions { get; set; } // PostViewConversions
        public long PostClickConversions { get; set; } // PostClickConversions
        public long MediaCostUsdMicros { get; set; } // MediaCostUsdMicros
        public long MediaCostLocalMicros { get; set; } // MediaCostLocalMicros
        public long DataCostLocalMicros { get; set; } // DataCostLocalMicros
        public long FeesUsdSuperMicros { get; set; } // FeesUsdSuperMicros
        public long FeesLocalSuperMicros { get; set; } // FeesLocalSuperMicros
        public long? AdSlotDurationInSeconds { get; set; } // AdSlotDurationInSeconds
        public long? RawViews { get; set; } // RawViews
        public long? IabViews { get; set; } // IabViews
        public long? ViewDurationInSeconds { get; set; } // ViewDurationInSeconds
        
        public AdGroupPublisherException()
        {
            InitializePartial();
        }

        partial void InitializePartial();
    }

    // AdGroupPublisherImport
    public partial class AdGroupPublisherImport : Entity
    {
        public int BuyerAccountId { get; set; } // BuyerAccountID
        public int CampaignId { get; set; } // CampaignID
        public int AdGroupId { get; set; } // AdGroupID
        public int OptimizationModelId { get; set; } // OptimizationModelID
        public int PartnerId { get; set; } // PartnerID
        public int PublisherId { get; set; } // PublisherID
        public DateTime UtcDateTime { get; set; } // UtcDateTime
        public DateTime LocalDateTime { get; set; } // LocalDateTime
        public long Bids { get; set; } // Bids
        public long Impressions { get; set; } // Impressions
        public long InvalidImpressions { get; set; } // InvalidImpressions
        public long Clicks { get; set; } // Clicks
        public long InvalidClicks { get; set; } // InvalidClicks
        public long Conversions { get; set; } // Conversions
        public long PostViewConversions { get; set; } // PostViewConversions
        public long PostClickConversions { get; set; } // PostClickConversions
        public long MediaCostUsdMicros { get; set; } // MediaCostUsdMicros
        public long MediaCostLocalMicros { get; set; } // MediaCostLocalMicros
        public long DataCostLocalMicros { get; set; } // DataCostLocalMicros
        public long FeesUsdSuperMicros { get; set; } // FeesUsdSuperMicros
        public long FeesLocalSuperMicros { get; set; } // FeesLocalSuperMicros
        public long? AdSlotDurationInSeconds { get; set; } // AdSlotDurationInSeconds
        public long? RawViews { get; set; } // RawViews
        public long? IabViews { get; set; } // IabViews
        public long? ViewDurationInSeconds { get; set; } // ViewDurationInSeconds
        
        public AdGroupPublisherImport()
        {
            InitializePartial();
        }

        partial void InitializePartial();
    }

    // AdGroupPublisherImportReportID
    public partial class AdGroupPublisherImportReportId : Entity
    {
        public int BuyerAccountId { get; set; } // BuyerAccountID
        public int CampaignId { get; set; } // CampaignID
        public int AdGroupId { get; set; } // AdGroupID
        public int OptimizationModelId { get; set; } // OptimizationModelID
        public int PartnerId { get; set; } // PartnerID
        public int PublisherId { get; set; } // PublisherID
        public DateTime UtcDateTime { get; set; } // UtcDateTime
        public DateTime LocalDateTime { get; set; } // LocalDateTime
        public long Bids { get; set; } // Bids
        public long Impressions { get; set; } // Impressions
        public long InvalidImpressions { get; set; } // InvalidImpressions
        public long Clicks { get; set; } // Clicks
        public long InvalidClicks { get; set; } // InvalidClicks
        public long Conversions { get; set; } // Conversions
        public long PostViewConversions { get; set; } // PostViewConversions
        public long PostClickConversions { get; set; } // PostClickConversions
        public long MediaCostUsdMicros { get; set; } // MediaCostUsdMicros
        public long MediaCostLocalMicros { get; set; } // MediaCostLocalMicros
        public long DataCostLocalMicros { get; set; } // DataCostLocalMicros
        public long FeesUsdSuperMicros { get; set; } // FeesUsdSuperMicros
        public long FeesLocalSuperMicros { get; set; } // FeesLocalSuperMicros
        public long ReportId { get; set; } // ReportID
        public long? AdSlotDurationInSeconds { get; set; } // AdSlotDurationInSeconds
        public long? RawViews { get; set; } // RawViews
        public long? IabViews { get; set; } // IabViews
        public long? ViewDurationInSeconds { get; set; } // ViewDurationInSeconds
        
        public AdGroupPublisherImportReportId()
        {
            InitializePartial();
        }

        partial void InitializePartial();
    }

    // AdGroupPublisherReportID
    public partial class AdGroupPublisherReportId : Entity
    {
        public int BuyerAccountId { get; set; } // BuyerAccountID
        public int CampaignId { get; set; } // CampaignID
        public int AdGroupId { get; set; } // AdGroupID
        public int OptimizationModelId { get; set; } // OptimizationModelID
        public int PartnerId { get; set; } // PartnerID
        public int PublisherId { get; set; } // PublisherID
        public DateTime UtcDate { get; set; } // UtcDate
        public DateTime LocalDate { get; set; } // LocalDate
        public DateTime UtcDateTime { get; set; } // UtcDateTime
        public DateTime LocalDateTime { get; set; } // LocalDateTime
        public long Bids { get; set; } // Bids
        public long Impressions { get; set; } // Impressions
        public long Clicks { get; set; } // Clicks
        public long Conversions { get; set; } // Conversions
        public long PostViewConversions { get; set; } // PostViewConversions
        public long PostClickConversions { get; set; } // PostClickConversions
        public long MediaCostUsdMicros { get; set; } // MediaCostUsdMicros
        public long MediaCostLocalMicros { get; set; } // MediaCostLocalMicros
        public long DataCostLocalMicros { get; set; } // DataCostLocalMicros
        public long? InvalidImpressions { get; set; } // InvalidImpressions
        public long? InvalidClicks { get; set; } // InvalidClicks
        public long? FeesUsdSuperMicros { get; set; } // FeesUsdSuperMicros
        public long? FeesLocalSuperMicros { get; set; } // FeesLocalSuperMicros
        public long ReportId { get; set; } // ReportID
        public long? AdSlotDurationInSeconds { get; set; } // AdSlotDurationInSeconds
        public long? RawViews { get; set; } // RawViews
        public long? IabViews { get; set; } // IabViews
        public long? ViewDurationInSeconds { get; set; } // ViewDurationInSeconds
        
        public AdGroupPublisherReportId()
        {
            InitializePartial();
        }

        partial void InitializePartial();
    }

    // AdGroupPublisherTargetingReportID
    public partial class AdGroupPublisherTargetingReportId : Entity
    {
        public int BuyerAccountId { get; set; } // BuyerAccountID
        public int CampaignId { get; set; } // CampaignID
        public int AdGroupId { get; set; } // AdGroupID
        public int? PartnerId { get; set; } // PartnerID
        public string PartnerName { get; set; } // PartnerName
        public int? PublisherId { get; set; } // PublisherID
        public string PublisherName { get; set; } // PublisherName
        public int IsTargeted { get; set; } // IsTargeted
        public int PackageInstalled { get; set; } // PackageInstalled
        public long? Bids { get; set; } // Bids
        public long? Impressions { get; set; } // Impressions
        public long? Clicks { get; set; } // Clicks
        public long? Conversions { get; set; } // Conversions
        public long? PostViewConversions { get; set; } // PostViewConversions
        public long? PostClickConversions { get; set; } // PostClickConversions
        public long? SpendLocalMicros { get; set; } // SpendLocalMicros
        public decimal? Spend { get; set; } // Spend
        public decimal? ClientCostLocalMicros { get; set; } // ClientCostLocalMicros
        public decimal? ClientCostDollars { get; set; } // ClientCostDollars
        public long? MediaCostLocalMicros { get; set; } // MediaCostLocalMicros
        public long? DataCostLocalMicros { get; set; } // DataCostLocalMicros
        public decimal? MediaClientCostLocalMicros { get; set; } // MediaClientCostLocalMicros
        public decimal? DataClientCostLocalMicros { get; set; } // DataClientCostLocalMicros
        public long? AdSlotDurationInSeconds { get; set; } // AdSlotDurationInSeconds
        public long? RawViews { get; set; } // RawViews
        public long? IabViews { get; set; } // IabViews
        public long? ViewDurationInSeconds { get; set; } // ViewDurationInSeconds
        public double? Ctr { get; set; } // CTR
        public decimal? Cpm { get; set; } // CPM
        public decimal? Cpc { get; set; } // CPC
        public decimal? Cpa { get; set; } // CPA
        public decimal? ClientCostCpm { get; set; } // ClientCostCPM
        public decimal? ClientCostCpc { get; set; } // ClientCostCPC
        public decimal? ClientCostCpa { get; set; } // ClientCostCPA
        public decimal? Cpms { get; set; } // CPMs
        public decimal? ClientCostCpms { get; set; } // ClientCostCpms
        public decimal? Cps { get; set; } // CPS
        public decimal? ClientCostCps { get; set; } // ClientCostCps
        public double? ViewableRatio { get; set; } // ViewableRatio
        
        public AdGroupPublisherTargetingReportId()
        {
            InitializePartial();
        }

        partial void InitializePartial();
    }

    // AdGroupRegionTargetingReportID
    public partial class AdGroupRegionTargetingReportId : Entity
    {
        public int BuyerAccountId { get; set; } // BuyerAccountID
        public int CampaignId { get; set; } // CampaignID
        public int AdGroupId { get; set; } // AdGroupID
        public int? GeoRegionId { get; set; } // GeoRegionID
        public string RegionName { get; set; } // RegionName
        public int GeoCountryId { get; set; } // GeoCountryID
        public string CountryName { get; set; } // CountryName
        public int IsTargeted { get; set; } // IsTargeted
        public int PackageInstalled { get; set; } // PackageInstalled
        public long? Bids { get; set; } // Bids
        public long? Impressions { get; set; } // Impressions
        public long? Clicks { get; set; } // Clicks
        public long? Conversions { get; set; } // Conversions
        public long? PostViewConversions { get; set; } // PostViewConversions
        public long? PostClickConversions { get; set; } // PostClickConversions
        public long? SpendLocalMicros { get; set; } // SpendLocalMicros
        public decimal? Spend { get; set; } // Spend
        public decimal? ClientCostLocalMicros { get; set; } // ClientCostLocalMicros
        public decimal? ClientCostDollars { get; set; } // ClientCostDollars
        public long? MediaCostLocalMicros { get; set; } // MediaCostLocalMicros
        public long? DataCostLocalMicros { get; set; } // DataCostLocalMicros
        public decimal? MediaClientCostLocalMicros { get; set; } // MediaClientCostLocalMicros
        public decimal? DataClientCostLocalMicros { get; set; } // DataClientCostLocalMicros
        public long? AdSlotDurationInSeconds { get; set; } // AdSlotDurationInSeconds
        public long? RawViews { get; set; } // RawViews
        public long? IabViews { get; set; } // IabViews
        public long? ViewDurationInSeconds { get; set; } // ViewDurationInSeconds
        public double? Ctr { get; set; } // CTR
        public decimal? Cpm { get; set; } // CPM
        public decimal? Cpc { get; set; } // CPC
        public decimal? Cpa { get; set; } // CPA
        public decimal? ClientCostCpm { get; set; } // ClientCostCPM
        public decimal? ClientCostCpc { get; set; } // ClientCostCPC
        public decimal? ClientCostCpa { get; set; } // ClientCostCPA
        public decimal? Cpms { get; set; } // CPMs
        public decimal? ClientCostCpms { get; set; } // ClientCostCpms
        public decimal? Cps { get; set; } // CPS
        public decimal? ClientCostCps { get; set; } // ClientCostCps
        public double? ViewableRatio { get; set; } // ViewableRatio
        
        public AdGroupRegionTargetingReportId()
        {
            InitializePartial();
        }

        partial void InitializePartial();
    }

    // AdGroupSegment
    public partial class AdGroupSegment : Entity
    {
        public int BuyerAccountId { get; set; } // BuyerAccountID
        public int CampaignId { get; set; } // CampaignID
        public int AdGroupId { get; set; } // AdGroupID
        public int OptimizationModelId { get; set; } // OptimizationModelID
        public int SegmentId { get; set; } // SegmentID
        public DateTime UtcDate { get; set; } // UtcDate
        public DateTime LocalDate { get; set; } // LocalDate
        public DateTime UtcDateTime { get; set; } // UtcDateTime
        public DateTime LocalDateTime { get; set; } // LocalDateTime
        public long Bids { get; set; } // Bids
        public long Impressions { get; set; } // Impressions
        public long Clicks { get; set; } // Clicks
        public long Conversions { get; set; } // Conversions
        public long PostViewConversions { get; set; } // PostViewConversions
        public long PostClickConversions { get; set; } // PostClickConversions
        public long MediaCostUsdMicros { get; set; } // MediaCostUsdMicros
        public long MediaCostLocalMicros { get; set; } // MediaCostLocalMicros
        public long DataCostLocalMicros { get; set; } // DataCostLocalMicros
        public long? InvalidImpressions { get; set; } // InvalidImpressions
        public long? InvalidClicks { get; set; } // InvalidClicks
        public long? FeesUsdSuperMicros { get; set; } // FeesUsdSuperMicros
        public long? FeesLocalSuperMicros { get; set; } // FeesLocalSuperMicros
        public long? AdSlotDurationInSeconds { get; set; } // AdSlotDurationInSeconds
        public long? RawViews { get; set; } // RawViews
        public long? IabViews { get; set; } // IabViews
        public long? ViewDurationInSeconds { get; set; } // ViewDurationInSeconds
        
        public AdGroupSegment()
        {
            InitializePartial();
        }

        partial void InitializePartial();
    }

    // AdGroupSegmentAnalytics
    public partial class AdGroupSegmentAnalytic : Entity
    {
        public int BuyerAccountId { get; set; } // BuyerAccountID
        public int AdvertiserProductId { get; set; } // AdvertiserProductID
        public int AdvertiserId { get; set; } // AdvertiserID
        public int CampaignId { get; set; } // CampaignID
        public int AdGroupId { get; set; } // AdGroupID
        public int OptimizationModelId { get; set; } // OptimizationModelID
        public int SegmentId { get; set; } // SegmentID
        public string SegmentName { get; set; } // SegmentName
        public DateTime LocalDate { get; set; } // LocalDate
        public long Bids { get; set; } // Bids
        public long Impressions { get; set; } // Impressions
        public long Clicks { get; set; } // Clicks
        public long? UnfilteredClicks { get; set; } // UnfilteredClicks
        public long Conversions { get; set; } // Conversions
        public long PostViewConversions { get; set; } // PostViewConversions
        public long PostClickConversions { get; set; } // PostClickConversions
        public long? SpendLocalMicros { get; set; } // SpendLocalMicros
        public decimal? Spend { get; set; } // Spend
        public long? ClientCostLocalMicros { get; set; } // ClientCostLocalMicros
        public decimal? ClientCostDollars { get; set; } // ClientCostDollars
        public long MediaCostLocalMicros { get; set; } // MediaCostLocalMicros
        public long DataCostLocalMicros { get; set; } // DataCostLocalMicros
        public long? MediaClientCostLocalMicros { get; set; } // MediaClientCostLocalMicros
        public long? DataClientCostLocalMicros { get; set; } // DataClientCostLocalMicros
        public long? AdSlotDurationInSeconds { get; set; } // AdSlotDurationInSeconds
        public long? RawViews { get; set; } // RawViews
        public long? IabViews { get; set; } // IabViews
        public long? ViewDurationInSeconds { get; set; } // ViewDurationInSeconds
        public double? Ctr { get; set; } // CTR
        public decimal? Cpm { get; set; } // CPM
        public decimal? Cpc { get; set; } // CPC
        public decimal? Cpa { get; set; } // CPA
        public decimal? ClientCpm { get; set; } // ClientCPM
        public decimal? ClientCpc { get; set; } // ClientCPC
        public decimal? ClientCpa { get; set; } // ClientCPA
        public decimal? Cpms { get; set; } // CPMs
        public decimal? ClientCostCpms { get; set; } // ClientCostCpms
        public decimal? Cps { get; set; } // CPS
        public decimal? ClientCostCps { get; set; } // ClientCostCps
        public double? ViewableRatio { get; set; } // ViewableRatio
        
        public AdGroupSegmentAnalytic()
        {
            InitializePartial();
        }

        partial void InitializePartial();
    }

    // AdGroupSegmentException
    public partial class AdGroupSegmentException : Entity
    {
        public int BuyerAccountId { get; set; } // BuyerAccountID
        public int CampaignId { get; set; } // CampaignID
        public int AdGroupId { get; set; } // AdGroupID
        public int OptimizationModelId { get; set; } // OptimizationModelID
        public int SegmentId { get; set; } // SegmentID
        public DateTime UtcDateTime { get; set; } // UtcDateTime
        public DateTime LocalDateTime { get; set; } // LocalDateTime
        public long Bids { get; set; } // Bids
        public long Impressions { get; set; } // Impressions
        public long InvalidImpressions { get; set; } // InvalidImpressions
        public long Clicks { get; set; } // Clicks
        public long InvalidClicks { get; set; } // InvalidClicks
        public long Conversions { get; set; } // Conversions
        public long PostViewConversions { get; set; } // PostViewConversions
        public long PostClickConversions { get; set; } // PostClickConversions
        public long MediaCostUsdMicros { get; set; } // MediaCostUsdMicros
        public long MediaCostLocalMicros { get; set; } // MediaCostLocalMicros
        public long DataCostLocalMicros { get; set; } // DataCostLocalMicros
        public long FeesUsdSuperMicros { get; set; } // FeesUsdSuperMicros
        public long FeesLocalSuperMicros { get; set; } // FeesLocalSuperMicros
        public long? AdSlotDurationInSeconds { get; set; } // AdSlotDurationInSeconds
        public long? RawViews { get; set; } // RawViews
        public long? IabViews { get; set; } // IabViews
        public long? ViewDurationInSeconds { get; set; } // ViewDurationInSeconds
        
        public AdGroupSegmentException()
        {
            InitializePartial();
        }

        partial void InitializePartial();
    }

    // AdGroupSegmentImport
    public partial class AdGroupSegmentImport : Entity
    {
        public int BuyerAccountId { get; set; } // BuyerAccountID
        public int CampaignId { get; set; } // CampaignID
        public int AdGroupId { get; set; } // AdGroupID
        public int OptimizationModelId { get; set; } // OptimizationModelID
        public int SegmentId { get; set; } // SegmentID
        public DateTime UtcDateTime { get; set; } // UtcDateTime
        public DateTime LocalDateTime { get; set; } // LocalDateTime
        public long Bids { get; set; } // Bids
        public long Impressions { get; set; } // Impressions
        public long InvalidImpressions { get; set; } // InvalidImpressions
        public long Clicks { get; set; } // Clicks
        public long InvalidClicks { get; set; } // InvalidClicks
        public long Conversions { get; set; } // Conversions
        public long PostViewConversions { get; set; } // PostViewConversions
        public long PostClickConversions { get; set; } // PostClickConversions
        public long MediaCostUsdMicros { get; set; } // MediaCostUsdMicros
        public long MediaCostLocalMicros { get; set; } // MediaCostLocalMicros
        public long DataCostLocalMicros { get; set; } // DataCostLocalMicros
        public long FeesUsdSuperMicros { get; set; } // FeesUsdSuperMicros
        public long FeesLocalSuperMicros { get; set; } // FeesLocalSuperMicros
        public long? AdSlotDurationInSeconds { get; set; } // AdSlotDurationInSeconds
        public long? RawViews { get; set; } // RawViews
        public long? IabViews { get; set; } // IabViews
        public long? ViewDurationInSeconds { get; set; } // ViewDurationInSeconds
        
        public AdGroupSegmentImport()
        {
            InitializePartial();
        }

        partial void InitializePartial();
    }

    // AdGroupSegmentTargeting
    public partial class AdGroupSegmentTargeting : Entity
    {
        public int? BuyerAccountId { get; set; } // BuyerAccountID
        public int? CampaignId { get; set; } // CampaignID
        public int AdGroupId { get; set; } // AdGroupID
        public int SegmentId { get; set; } // SegmentID
        public string SegmentName { get; set; } // SegmentName
        public int SegmentStatusId { get; set; } // SegmentStatusID
        public Guid? AdvertiserUuid { get; set; } // AdvertiserUuid
        public string AdvertiserName { get; set; } // AdvertiserName
        public int SegmentTypeId { get; set; } // SegmentTypeID
        public int RemarketingRecency { get; set; } // RemarketingRecency
        public int? Uniques { get; set; } // Uniques
        public int TargetingActionId { get; set; } // TargetingActionID
        public int? ThirdPartyCampaignId { get; set; } // ThirdPartyCampaignId
        public int IsTargeted { get; set; } // IsTargeted
        public int PackageInstalled { get; set; } // PackageInstalled
        public long? Bids { get; set; } // Bids
        public long? Impressions { get; set; } // Impressions
        public long? Clicks { get; set; } // Clicks
        public long? Conversions { get; set; } // Conversions
        public long? PostViewConversions { get; set; } // PostViewConversions
        public long? PostClickConversions { get; set; } // PostClickConversions
        public long? SpendLocalMicros { get; set; } // SpendLocalMicros
        public decimal? Spend { get; set; } // Spend
        public long? ClientCostLocalMicros { get; set; } // ClientCostLocalMicros
        public decimal? ClientCostDollars { get; set; } // ClientCostDollars
        public decimal? ThirdPartyCost { get; set; } // ThirdPartyCost
        public long? MediaCostLocalMicros { get; set; } // MediaCostLocalMicros
        public long? DataCostLocalMicros { get; set; } // DataCostLocalMicros
        public long? MediaClientCostLocalMicros { get; set; } // MediaClientCostLocalMicros
        public long? DataClientCostLocalMicros { get; set; } // DataClientCostLocalMicros
        public long? AdSlotDurationInSeconds { get; set; } // AdSlotDurationInSeconds
        public long? RawViews { get; set; } // RawViews
        public long? IabViews { get; set; } // IabViews
        public long? ViewDurationInSeconds { get; set; } // ViewDurationInSeconds
        public double? Ctr { get; set; } // CTR
        public decimal? Cpm { get; set; } // CPM
        public decimal? Cpc { get; set; } // CPC
        public decimal? Cpa { get; set; } // CPA
        public decimal? ClientCostCpm { get; set; } // ClientCostCPM
        public decimal? ClientCostCpc { get; set; } // ClientCostCPC
        public decimal? ClientCostCpa { get; set; } // ClientCostCPA
        public decimal? Cpms { get; set; } // CPMs
        public decimal? ClientCostCpms { get; set; } // ClientCostCpms
        public decimal? Cps { get; set; } // CPS
        public decimal? ClientCostCps { get; set; } // ClientCostCps
        public double? ViewableRatio { get; set; } // ViewableRatio
        
        public AdGroupSegmentTargeting()
        {
            InitializePartial();
        }

        partial void InitializePartial();
    }

    // AdGroupVertical
    public partial class AdGroupVertical : Entity
    {
        public int BuyerAccountId { get; set; } // BuyerAccountID
        public int CampaignId { get; set; } // CampaignID
        public int AdGroupId { get; set; } // AdGroupID
        public int OptimizationModelId { get; set; } // OptimizationModelID
        public int Vertical1Id { get; set; } // Vertical1ID
        public int Vertical2Id { get; set; } // Vertical2ID
        public int Vertical3Id { get; set; } // Vertical3ID
        public DateTime UtcDate { get; set; } // UtcDate
        public DateTime LocalDate { get; set; } // LocalDate
        public DateTime UtcDateTime { get; set; } // UtcDateTime
        public DateTime LocalDateTime { get; set; } // LocalDateTime
        public long Bids { get; set; } // Bids
        public long Impressions { get; set; } // Impressions
        public long Clicks { get; set; } // Clicks
        public long Conversions { get; set; } // Conversions
        public long PostViewConversions { get; set; } // PostViewConversions
        public long PostClickConversions { get; set; } // PostClickConversions
        public long MediaCostUsdMicros { get; set; } // MediaCostUsdMicros
        public long MediaCostLocalMicros { get; set; } // MediaCostLocalMicros
        public long DataCostLocalMicros { get; set; } // DataCostLocalMicros
        public long? InvalidImpressions { get; set; } // InvalidImpressions
        public long? InvalidClicks { get; set; } // InvalidClicks
        public long? FeesUsdSuperMicros { get; set; } // FeesUsdSuperMicros
        public long? FeesLocalSuperMicros { get; set; } // FeesLocalSuperMicros
        public long? AdSlotDurationInSeconds { get; set; } // AdSlotDurationInSeconds
        public long? RawViews { get; set; } // RawViews
        public long? IabViews { get; set; } // IabViews
        public long? ViewDurationInSeconds { get; set; } // ViewDurationInSeconds
        
        public AdGroupVertical()
        {
            InitializePartial();
        }

        partial void InitializePartial();
    }

    // AdGroupVertical1IABMappedTargetingReportID
    public partial class AdGroupVertical1IabMappedTargetingReportId : Entity
    {
        public int? BuyerAccountId { get; set; } // BuyerAccountID
        public int? CampaignId { get; set; } // CampaignID
        public int? AdGroupId { get; set; } // AdGroupID
        public int Vertical1Id { get; set; } // Vertical1ID
        public string Vertical1Name { get; set; } // Vertical1Name
        public int IsTargeted { get; set; } // IsTargeted
        public int PackageInstalled { get; set; } // PackageInstalled
        public long? Bids { get; set; } // Bids
        public long? Impressions { get; set; } // Impressions
        public long? Clicks { get; set; } // Clicks
        public long? Conversions { get; set; } // Conversions
        public long? PostViewConversions { get; set; } // PostViewConversions
        public long? PostClickConversions { get; set; } // PostClickConversions
        public long? SpendLocalMicros { get; set; } // SpendLocalMicros
        public decimal? Spend { get; set; } // Spend
        public decimal? ClientCostLocalMicros { get; set; } // ClientCostLocalMicros
        public decimal? ClientCostDollars { get; set; } // ClientCostDollars
        public long? MediaCostLocalMicros { get; set; } // MediaCostLocalMicros
        public long? DataCostLocalMicros { get; set; } // DataCostLocalMicros
        public decimal? MediaClientCostLocalMicros { get; set; } // MediaClientCostLocalMicros
        public decimal? DataClientCostLocalMicros { get; set; } // DataClientCostLocalMicros
        public long? AdSlotDurationInSeconds { get; set; } // AdSlotDurationInSeconds
        public long? RawViews { get; set; } // RawViews
        public long? IabViews { get; set; } // IabViews
        public long? ViewDurationInSeconds { get; set; } // ViewDurationInSeconds
        public double? Ctr { get; set; } // CTR
        public decimal? Cpm { get; set; } // CPM
        public decimal? Cpc { get; set; } // CPC
        public decimal? Cpa { get; set; } // CPA
        public decimal? ClientCostCpm { get; set; } // ClientCostCPM
        public decimal? ClientCostCpc { get; set; } // ClientCostCPC
        public decimal? ClientCostCpa { get; set; } // ClientCostCPA
        public decimal? Cpms { get; set; } // CPMs
        public decimal? ClientCostCpms { get; set; } // ClientCostCpms
        public decimal? Cps { get; set; } // CPS
        public decimal? ClientCostCps { get; set; } // ClientCostCps
        public double? ViewableRatio { get; set; } // ViewableRatio
        
        public AdGroupVertical1IabMappedTargetingReportId()
        {
            InitializePartial();
        }

        partial void InitializePartial();
    }

    // AdGroupVertical1TargetingReportID
    public partial class AdGroupVertical1TargetingReportId : Entity
    {
        public int? BuyerAccountId { get; set; } // BuyerAccountID
        public int? CampaignId { get; set; } // CampaignID
        public int? AdGroupId { get; set; } // AdGroupID
        public int Vertical1Id { get; set; } // Vertical1ID
        public string Vertical1Name { get; set; } // Vertical1Name
        public int IsTargeted { get; set; } // IsTargeted
        public int PackageInstalled { get; set; } // PackageInstalled
        public long? Bids { get; set; } // Bids
        public long? Impressions { get; set; } // Impressions
        public long? Clicks { get; set; } // Clicks
        public long? Conversions { get; set; } // Conversions
        public long? PostViewConversions { get; set; } // PostViewConversions
        public long? PostClickConversions { get; set; } // PostClickConversions
        public long? SpendLocalMicros { get; set; } // SpendLocalMicros
        public decimal? Spend { get; set; } // Spend
        public decimal? ClientCostLocalMicros { get; set; } // ClientCostLocalMicros
        public decimal? ClientCostDollars { get; set; } // ClientCostDollars
        public long? MediaCostLocalMicros { get; set; } // MediaCostLocalMicros
        public long? DataCostLocalMicros { get; set; } // DataCostLocalMicros
        public decimal? MediaClientCostLocalMicros { get; set; } // MediaClientCostLocalMicros
        public decimal? DataClientCostLocalMicros { get; set; } // DataClientCostLocalMicros
        public long? AdSlotDurationInSeconds { get; set; } // AdSlotDurationInSeconds
        public long? RawViews { get; set; } // RawViews
        public long? IabViews { get; set; } // IabViews
        public long? ViewDurationInSeconds { get; set; } // ViewDurationInSeconds
        public double? Ctr { get; set; } // CTR
        public decimal? Cpm { get; set; } // CPM
        public decimal? Cpc { get; set; } // CPC
        public decimal? Cpa { get; set; } // CPA
        public decimal? ClientCostCpm { get; set; } // ClientCostCPM
        public decimal? ClientCostCpc { get; set; } // ClientCostCPC
        public decimal? ClientCostCpa { get; set; } // ClientCostCPA
        public decimal? Cpms { get; set; } // CPMs
        public decimal? ClientCostCpms { get; set; } // ClientCostCpms
        public decimal? Cps { get; set; } // CPS
        public decimal? ClientCostCps { get; set; } // ClientCostCps
        public double? ViewableRatio { get; set; } // ViewableRatio
        
        public AdGroupVertical1TargetingReportId()
        {
            InitializePartial();
        }

        partial void InitializePartial();
    }

    // AdGroupVertical2IABMappedTargetingReportID
    public partial class AdGroupVertical2IabMappedTargetingReportId : Entity
    {
        public int? BuyerAccountId { get; set; } // BuyerAccountID
        public int? CampaignId { get; set; } // CampaignID
        public int? AdGroupId { get; set; } // AdGroupID
        public int Vertical1Id { get; set; } // Vertical1ID
        public string Vertical1Name { get; set; } // Vertical1Name
        public int Vertical2Id { get; set; } // Vertical2ID
        public string Vertical2Name { get; set; } // Vertical2Name
        public int IsTargeted { get; set; } // IsTargeted
        public int PackageInstalled { get; set; } // PackageInstalled
        public long? Bids { get; set; } // Bids
        public long? Impressions { get; set; } // Impressions
        public long? Clicks { get; set; } // Clicks
        public long? Conversions { get; set; } // Conversions
        public long? PostViewConversions { get; set; } // PostViewConversions
        public long? PostClickConversions { get; set; } // PostClickConversions
        public long? SpendLocalMicros { get; set; } // SpendLocalMicros
        public decimal? Spend { get; set; } // Spend
        public decimal? ClientCostLocalMicros { get; set; } // ClientCostLocalMicros
        public decimal? ClientCostDollars { get; set; } // ClientCostDollars
        public long? MediaCostLocalMicros { get; set; } // MediaCostLocalMicros
        public long? DataCostLocalMicros { get; set; } // DataCostLocalMicros
        public decimal? MediaClientCostLocalMicros { get; set; } // MediaClientCostLocalMicros
        public decimal? DataClientCostLocalMicros { get; set; } // DataClientCostLocalMicros
        public long? AdSlotDurationInSeconds { get; set; } // AdSlotDurationInSeconds
        public long? RawViews { get; set; } // RawViews
        public long? IabViews { get; set; } // IabViews
        public long? ViewDurationInSeconds { get; set; } // ViewDurationInSeconds
        public double? Ctr { get; set; } // CTR
        public decimal? Cpm { get; set; } // CPM
        public decimal? Cpc { get; set; } // CPC
        public decimal? Cpa { get; set; } // CPA
        public decimal? ClientCostCpm { get; set; } // ClientCostCPM
        public decimal? ClientCostCpc { get; set; } // ClientCostCPC
        public decimal? ClientCostCpa { get; set; } // ClientCostCPA
        public decimal? Cpms { get; set; } // CPMs
        public decimal? ClientCostCpms { get; set; } // ClientCostCpms
        public decimal? Cps { get; set; } // CPS
        public decimal? ClientCostCps { get; set; } // ClientCostCps
        public double? ViewableRatio { get; set; } // ViewableRatio
        
        public AdGroupVertical2IabMappedTargetingReportId()
        {
            InitializePartial();
        }

        partial void InitializePartial();
    }

    // AdGroupVertical2TargetingReportID
    public partial class AdGroupVertical2TargetingReportId : Entity
    {
        public int? BuyerAccountId { get; set; } // BuyerAccountID
        public int? CampaignId { get; set; } // CampaignID
        public int? AdGroupId { get; set; } // AdGroupID
        public int Vertical1Id { get; set; } // Vertical1ID
        public string Vertical1Name { get; set; } // Vertical1Name
        public int Vertical2Id { get; set; } // Vertical2ID
        public string Vertical2Name { get; set; } // Vertical2Name
        public int IsTargeted { get; set; } // IsTargeted
        public int PackageInstalled { get; set; } // PackageInstalled
        public long? Bids { get; set; } // Bids
        public long? Impressions { get; set; } // Impressions
        public long? Clicks { get; set; } // Clicks
        public long? Conversions { get; set; } // Conversions
        public long? PostViewConversions { get; set; } // PostViewConversions
        public long? PostClickConversions { get; set; } // PostClickConversions
        public long? SpendLocalMicros { get; set; } // SpendLocalMicros
        public decimal? Spend { get; set; } // Spend
        public decimal? ClientCostLocalMicros { get; set; } // ClientCostLocalMicros
        public decimal? ClientCostDollars { get; set; } // ClientCostDollars
        public long? MediaCostLocalMicros { get; set; } // MediaCostLocalMicros
        public long? DataCostLocalMicros { get; set; } // DataCostLocalMicros
        public decimal? MediaClientCostLocalMicros { get; set; } // MediaClientCostLocalMicros
        public decimal? DataClientCostLocalMicros { get; set; } // DataClientCostLocalMicros
        public long? AdSlotDurationInSeconds { get; set; } // AdSlotDurationInSeconds
        public long? RawViews { get; set; } // RawViews
        public long? IabViews { get; set; } // IabViews
        public long? ViewDurationInSeconds { get; set; } // ViewDurationInSeconds
        public double? Ctr { get; set; } // CTR
        public decimal? Cpm { get; set; } // CPM
        public decimal? Cpc { get; set; } // CPC
        public decimal? Cpa { get; set; } // CPA
        public decimal? ClientCostCpm { get; set; } // ClientCostCPM
        public decimal? ClientCostCpc { get; set; } // ClientCostCPC
        public decimal? ClientCostCpa { get; set; } // ClientCostCPA
        public decimal? Cpms { get; set; } // CPMs
        public decimal? ClientCostCpms { get; set; } // ClientCostCpms
        public decimal? Cps { get; set; } // CPS
        public decimal? ClientCostCps { get; set; } // ClientCostCps
        public double? ViewableRatio { get; set; } // ViewableRatio
        
        public AdGroupVertical2TargetingReportId()
        {
            InitializePartial();
        }

        partial void InitializePartial();
    }

    // AdGroupVertical3TargetingReportID
    public partial class AdGroupVertical3TargetingReportId : Entity
    {
        public int? BuyerAccountId { get; set; } // BuyerAccountID
        public int? CampaignId { get; set; } // CampaignID
        public int? AdGroupId { get; set; } // AdGroupID
        public int Vertical1Id { get; set; } // Vertical1ID
        public string Vertical1Name { get; set; } // Vertical1Name
        public int Vertical2Id { get; set; } // Vertical2ID
        public string Vertical2Name { get; set; } // Vertical2Name
        public int Vertical3Id { get; set; } // Vertical3ID
        public string Vertical3Name { get; set; } // Vertical3Name
        public int IsTargeted { get; set; } // IsTargeted
        public int PackageInstalled { get; set; } // PackageInstalled
        public long? Bids { get; set; } // Bids
        public long? Impressions { get; set; } // Impressions
        public long? Clicks { get; set; } // Clicks
        public long? Conversions { get; set; } // Conversions
        public long? PostViewConversions { get; set; } // PostViewConversions
        public long? PostClickConversions { get; set; } // PostClickConversions
        public long? SpendLocalMicros { get; set; } // SpendLocalMicros
        public decimal? Spend { get; set; } // Spend
        public decimal? ClientCostLocalMicros { get; set; } // ClientCostLocalMicros
        public decimal? ClientCostDollars { get; set; } // ClientCostDollars
        public long? MediaCostLocalMicros { get; set; } // MediaCostLocalMicros
        public long? DataCostLocalMicros { get; set; } // DataCostLocalMicros
        public decimal? MediaClientCostLocalMicros { get; set; } // MediaClientCostLocalMicros
        public decimal? DataClientCostLocalMicros { get; set; } // DataClientCostLocalMicros
        public long? AdSlotDurationInSeconds { get; set; } // AdSlotDurationInSeconds
        public long? RawViews { get; set; } // RawViews
        public long? IabViews { get; set; } // IabViews
        public long? ViewDurationInSeconds { get; set; } // ViewDurationInSeconds
        public double? Ctr { get; set; } // CTR
        public decimal? Cpm { get; set; } // CPM
        public decimal? Cpc { get; set; } // CPC
        public decimal? Cpa { get; set; } // CPA
        public decimal? ClientCostCpm { get; set; } // ClientCostCPM
        public decimal? ClientCostCpc { get; set; } // ClientCostCPC
        public decimal? ClientCostCpa { get; set; } // ClientCostCPA
        public decimal? Cpms { get; set; } // CPMs
        public decimal? ClientCostCpms { get; set; } // ClientCostCpms
        public decimal? Cps { get; set; } // CPS
        public decimal? ClientCostCps { get; set; } // ClientCostCps
        public double? ViewableRatio { get; set; } // ViewableRatio
        
        public AdGroupVertical3TargetingReportId()
        {
            InitializePartial();
        }

        partial void InitializePartial();
    }

    // AdGroupVerticalAnalyticsReportID
    public partial class AdGroupVerticalAnalyticsReportId : Entity
    {
        public int BuyerAccountId { get; set; } // BuyerAccountID
        public int AdvertiserId { get; set; } // AdvertiserID
        public int AdvertiserProductId { get; set; } // AdvertiserProductID
        public int CampaignId { get; set; } // CampaignID
        public int AdGroupId { get; set; } // AdGroupID
        public int OptimizationModelId { get; set; } // OptimizationModelID
        public int Vertical1Id { get; set; } // Vertical1ID
        public string Vertical1Name { get; set; } // Vertical1Name
        public int Vertical2Id { get; set; } // Vertical2ID
        public string Vertical2Name { get; set; } // Vertical2Name
        public int Vertical3Id { get; set; } // Vertical3ID
        public string Vertical3Name { get; set; } // Vertical3Name
        public DateTime LocalDate { get; set; } // LocalDate
        public long Bids { get; set; } // Bids
        public long Impressions { get; set; } // Impressions
        public long Clicks { get; set; } // Clicks
        public long? UnfilteredClicks { get; set; } // UnfilteredClicks
        public long Conversions { get; set; } // Conversions
        public long PostViewConversions { get; set; } // PostViewConversions
        public long PostClickConversions { get; set; } // PostClickConversions
        public long? SpendLocalMicros { get; set; } // SpendLocalMicros
        public decimal? Spend { get; set; } // Spend
        public long? ClientCostLocalMicros { get; set; } // ClientCostLocalMicros
        public decimal? ClientCostDollars { get; set; } // ClientCostDollars
        public long MediaCostLocalMicros { get; set; } // MediaCostLocalMicros
        public long DataCostLocalMicros { get; set; } // DataCostLocalMicros
        public long? MediaClientCostLocalMicros { get; set; } // MediaClientCostLocalMicros
        public long? DataClientCostLocalMicros { get; set; } // DataClientCostLocalMicros
        public long? AdSlotDurationInSeconds { get; set; } // AdSlotDurationInSeconds
        public long? RawViews { get; set; } // RawViews
        public long? IabViews { get; set; } // IabViews
        public long? ViewDurationInSeconds { get; set; } // ViewDurationInSeconds
        public double? Ctr { get; set; } // CTR
        public decimal? Cpm { get; set; } // CPM
        public decimal? Cpc { get; set; } // CPC
        public decimal? Cpa { get; set; } // CPA
        public decimal? ClientCpm { get; set; } // ClientCPM
        public decimal? ClientCpc { get; set; } // ClientCPC
        public decimal? ClientCpa { get; set; } // ClientCPA
        public decimal? Cpms { get; set; } // CPMs
        public decimal? ClientCostCpms { get; set; } // ClientCostCpms
        public decimal? Cps { get; set; } // CPS
        public decimal? ClientCostCps { get; set; } // ClientCostCps
        public double? ViewableRatio { get; set; } // ViewableRatio
        
        public AdGroupVerticalAnalyticsReportId()
        {
            InitializePartial();
        }

        partial void InitializePartial();
    }

    // AdGroupVerticalCombined
    public partial class AdGroupVerticalCombined : Entity
    {
        public int BuyerAccountId { get; set; } // BuyerAccountID
        public int CampaignId { get; set; } // CampaignID
        public int AdGroupId { get; set; } // AdGroupID
        public int OptimizationModelId { get; set; } // OptimizationModelID
        public int Vertical1Id { get; set; } // Vertical1ID
        public int Vertical2Id { get; set; } // Vertical2ID
        public int Vertical3Id { get; set; } // Vertical3ID
        public DateTime UtcDate { get; set; } // UtcDate
        public DateTime LocalDate { get; set; } // LocalDate
        public DateTime UtcDateTime { get; set; } // UtcDateTime
        public DateTime LocalDateTime { get; set; } // LocalDateTime
        public long Bids { get; set; } // Bids
        public long Impressions { get; set; } // Impressions
        public long Clicks { get; set; } // Clicks
        public long Conversions { get; set; } // Conversions
        public long PostViewConversions { get; set; } // PostViewConversions
        public long PostClickConversions { get; set; } // PostClickConversions
        public long MediaCostUsdMicros { get; set; } // MediaCostUsdMicros
        public long MediaCostLocalMicros { get; set; } // MediaCostLocalMicros
        public long DataCostLocalMicros { get; set; } // DataCostLocalMicros
        public long? InvalidImpressions { get; set; } // InvalidImpressions
        public long? InvalidClicks { get; set; } // InvalidClicks
        public long? FeesUsdSuperMicros { get; set; } // FeesUsdSuperMicros
        public long? FeesLocalSuperMicros { get; set; } // FeesLocalSuperMicros
        public long? AdSlotDurationInSeconds { get; set; } // AdSlotDurationInSeconds
        public long? RawViews { get; set; } // RawViews
        public long? IabViews { get; set; } // IabViews
        public long? ViewDurationInSeconds { get; set; } // ViewDurationInSeconds
        
        public AdGroupVerticalCombined()
        {
            InitializePartial();
        }

        partial void InitializePartial();
    }

    // AdGroupVerticalException
    public partial class AdGroupVerticalException : Entity
    {
        public int BuyerAccountId { get; set; } // BuyerAccountID
        public int CampaignId { get; set; } // CampaignID
        public int AdGroupId { get; set; } // AdGroupID
        public int OptimizationModelId { get; set; } // OptimizationModelID
        public int Vertical1Id { get; set; } // Vertical1ID
        public int Vertical2Id { get; set; } // Vertical2ID
        public int Vertical3Id { get; set; } // Vertical3ID
        public DateTime UtcDateTime { get; set; } // UtcDateTime
        public DateTime LocalDateTime { get; set; } // LocalDateTime
        public long Bids { get; set; } // Bids
        public long Impressions { get; set; } // Impressions
        public long InvalidImpressions { get; set; } // InvalidImpressions
        public long Clicks { get; set; } // Clicks
        public long InvalidClicks { get; set; } // InvalidClicks
        public long Conversions { get; set; } // Conversions
        public long PostViewConversions { get; set; } // PostViewConversions
        public long PostClickConversions { get; set; } // PostClickConversions
        public long MediaCostUsdMicros { get; set; } // MediaCostUsdMicros
        public long MediaCostLocalMicros { get; set; } // MediaCostLocalMicros
        public long DataCostLocalMicros { get; set; } // DataCostLocalMicros
        public long FeesUsdSuperMicros { get; set; } // FeesUsdSuperMicros
        public long FeesLocalSuperMicros { get; set; } // FeesLocalSuperMicros
        public long? AdSlotDurationInSeconds { get; set; } // AdSlotDurationInSeconds
        public long? RawViews { get; set; } // RawViews
        public long? IabViews { get; set; } // IabViews
        public long? ViewDurationInSeconds { get; set; } // ViewDurationInSeconds
        
        public AdGroupVerticalException()
        {
            InitializePartial();
        }

        partial void InitializePartial();
    }

    // AdGroupVerticalIABMappedAnalyticsReportID
    public partial class AdGroupVerticalIabMappedAnalyticsReportId : Entity
    {
        public int BuyerAccountId { get; set; } // BuyerAccountID
        public int AdvertiserId { get; set; } // AdvertiserID
        public int AdvertiserProductId { get; set; } // AdvertiserProductID
        public int CampaignId { get; set; } // CampaignID
        public int AdGroupId { get; set; } // AdGroupID
        public int OptimizationModelId { get; set; } // OptimizationModelID
        public int Vertical1Id { get; set; } // Vertical1ID
        public string Vertical1Name { get; set; } // Vertical1Name
        public int Vertical2Id { get; set; } // Vertical2ID
        public string Vertical2Name { get; set; } // Vertical2Name
        public DateTime LocalDate { get; set; } // LocalDate
        public long Bids { get; set; } // Bids
        public long Impressions { get; set; } // Impressions
        public long Clicks { get; set; } // Clicks
        public long? UnfilteredClicks { get; set; } // UnfilteredClicks
        public long Conversions { get; set; } // Conversions
        public long PostViewConversions { get; set; } // PostViewConversions
        public long PostClickConversions { get; set; } // PostClickConversions
        public long? SpendLocalMicros { get; set; } // SpendLocalMicros
        public decimal? Spend { get; set; } // Spend
        public long? ClientCostLocalMicros { get; set; } // ClientCostLocalMicros
        public decimal? ClientCostDollars { get; set; } // ClientCostDollars
        public long MediaCostLocalMicros { get; set; } // MediaCostLocalMicros
        public long DataCostLocalMicros { get; set; } // DataCostLocalMicros
        public long? MediaClientCostLocalMicros { get; set; } // MediaClientCostLocalMicros
        public long? DataClientCostLocalMicros { get; set; } // DataClientCostLocalMicros
        public long? AdSlotDurationInSeconds { get; set; } // AdSlotDurationInSeconds
        public long? RawViews { get; set; } // RawViews
        public long? IabViews { get; set; } // IabViews
        public long? ViewDurationInSeconds { get; set; } // ViewDurationInSeconds
        public double? Ctr { get; set; } // CTR
        public decimal? Cpm { get; set; } // CPM
        public decimal? Cpc { get; set; } // CPC
        public decimal? Cpa { get; set; } // CPA
        public decimal? ClientCpm { get; set; } // ClientCPM
        public decimal? ClientCpc { get; set; } // ClientCPC
        public decimal? ClientCpa { get; set; } // ClientCPA
        public decimal? Cpms { get; set; } // CPMs
        public decimal? ClientCostCpms { get; set; } // ClientCostCpms
        public decimal? Cps { get; set; } // CPS
        public decimal? ClientCostCps { get; set; } // ClientCostCps
        public double? ViewableRatio { get; set; } // ViewableRatio
        
        public AdGroupVerticalIabMappedAnalyticsReportId()
        {
            InitializePartial();
        }

        partial void InitializePartial();
    }

    // AdGroupVerticalIABMappedCombined
    public partial class AdGroupVerticalIabMappedCombined : Entity
    {
        public int BuyerAccountId { get; set; } // BuyerAccountID
        public int CampaignId { get; set; } // CampaignID
        public int AdGroupId { get; set; } // AdGroupID
        public int OptimizationModelId { get; set; } // OptimizationModelID
        public int? Vertical1Id { get; set; } // Vertical1ID
        public int? Vertical2Id { get; set; } // Vertical2ID
        public int? Vertical3Id { get; set; } // Vertical3ID
        public DateTime UtcDate { get; set; } // UtcDate
        public DateTime LocalDate { get; set; } // LocalDate
        public DateTime UtcDateTime { get; set; } // UtcDateTime
        public DateTime LocalDateTime { get; set; } // LocalDateTime
        public long Bids { get; set; } // Bids
        public long Impressions { get; set; } // Impressions
        public long Clicks { get; set; } // Clicks
        public long Conversions { get; set; } // Conversions
        public long PostViewConversions { get; set; } // PostViewConversions
        public long PostClickConversions { get; set; } // PostClickConversions
        public long MediaCostUsdMicros { get; set; } // MediaCostUsdMicros
        public long MediaCostLocalMicros { get; set; } // MediaCostLocalMicros
        public long DataCostLocalMicros { get; set; } // DataCostLocalMicros
        public long? InvalidImpressions { get; set; } // InvalidImpressions
        public long? InvalidClicks { get; set; } // InvalidClicks
        public long? FeesUsdSuperMicros { get; set; } // FeesUsdSuperMicros
        public long? FeesLocalSuperMicros { get; set; } // FeesLocalSuperMicros
        public long? AdSlotDurationInSeconds { get; set; } // AdSlotDurationInSeconds
        public long? RawViews { get; set; } // RawViews
        public long? IabViews { get; set; } // IabViews
        public long? ViewDurationInSeconds { get; set; } // ViewDurationInSeconds
        
        public AdGroupVerticalIabMappedCombined()
        {
            InitializePartial();
        }

        partial void InitializePartial();
    }

    // AdGroupVerticalImport
    public partial class AdGroupVerticalImport : Entity
    {
        public int BuyerAccountId { get; set; } // BuyerAccountID
        public int CampaignId { get; set; } // CampaignID
        public int AdGroupId { get; set; } // AdGroupID
        public int OptimizationModelId { get; set; } // OptimizationModelID
        public int Vertical1Id { get; set; } // Vertical1ID
        public int Vertical2Id { get; set; } // Vertical2ID
        public int Vertical3Id { get; set; } // Vertical3ID
        public DateTime UtcDateTime { get; set; } // UtcDateTime
        public DateTime LocalDateTime { get; set; } // LocalDateTime
        public long Bids { get; set; } // Bids
        public long Impressions { get; set; } // Impressions
        public long InvalidImpressions { get; set; } // InvalidImpressions
        public long Clicks { get; set; } // Clicks
        public long InvalidClicks { get; set; } // InvalidClicks
        public long Conversions { get; set; } // Conversions
        public long PostViewConversions { get; set; } // PostViewConversions
        public long PostClickConversions { get; set; } // PostClickConversions
        public long MediaCostUsdMicros { get; set; } // MediaCostUsdMicros
        public long MediaCostLocalMicros { get; set; } // MediaCostLocalMicros
        public long DataCostLocalMicros { get; set; } // DataCostLocalMicros
        public long FeesUsdSuperMicros { get; set; } // FeesUsdSuperMicros
        public long FeesLocalSuperMicros { get; set; } // FeesLocalSuperMicros
        public long? AdSlotDurationInSeconds { get; set; } // AdSlotDurationInSeconds
        public long? RawViews { get; set; } // RawViews
        public long? IabViews { get; set; } // IabViews
        public long? ViewDurationInSeconds { get; set; } // ViewDurationInSeconds
        
        public AdGroupVerticalImport()
        {
            InitializePartial();
        }

        partial void InitializePartial();
    }

    // AdGroupVerticalImportReportID
    public partial class AdGroupVerticalImportReportId : Entity
    {
        public int BuyerAccountId { get; set; } // BuyerAccountID
        public int CampaignId { get; set; } // CampaignID
        public int AdGroupId { get; set; } // AdGroupID
        public int OptimizationModelId { get; set; } // OptimizationModelID
        public int Vertical1Id { get; set; } // Vertical1ID
        public int Vertical2Id { get; set; } // Vertical2ID
        public int Vertical3Id { get; set; } // Vertical3ID
        public DateTime UtcDateTime { get; set; } // UtcDateTime
        public DateTime LocalDateTime { get; set; } // LocalDateTime
        public long Bids { get; set; } // Bids
        public long Impressions { get; set; } // Impressions
        public long InvalidImpressions { get; set; } // InvalidImpressions
        public long Clicks { get; set; } // Clicks
        public long InvalidClicks { get; set; } // InvalidClicks
        public long Conversions { get; set; } // Conversions
        public long PostViewConversions { get; set; } // PostViewConversions
        public long PostClickConversions { get; set; } // PostClickConversions
        public long MediaCostUsdMicros { get; set; } // MediaCostUsdMicros
        public long MediaCostLocalMicros { get; set; } // MediaCostLocalMicros
        public long DataCostLocalMicros { get; set; } // DataCostLocalMicros
        public long FeesUsdSuperMicros { get; set; } // FeesUsdSuperMicros
        public long FeesLocalSuperMicros { get; set; } // FeesLocalSuperMicros
        public long ReportId { get; set; } // ReportID
        public long? AdSlotDurationInSeconds { get; set; } // AdSlotDurationInSeconds
        public long? RawViews { get; set; } // RawViews
        public long? IabViews { get; set; } // IabViews
        public long? ViewDurationInSeconds { get; set; } // ViewDurationInSeconds
        
        public AdGroupVerticalImportReportId()
        {
            InitializePartial();
        }

        partial void InitializePartial();
    }

    // AdGroupVerticalReportID
    public partial class AdGroupVerticalReportId : Entity
    {
        public int BuyerAccountId { get; set; } // BuyerAccountID
        public int CampaignId { get; set; } // CampaignID
        public int AdGroupId { get; set; } // AdGroupID
        public int OptimizationModelId { get; set; } // OptimizationModelID
        public int Vertical1Id { get; set; } // Vertical1ID
        public int Vertical2Id { get; set; } // Vertical2ID
        public int Vertical3Id { get; set; } // Vertical3ID
        public DateTime UtcDate { get; set; } // UtcDate
        public DateTime LocalDate { get; set; } // LocalDate
        public DateTime UtcDateTime { get; set; } // UtcDateTime
        public DateTime LocalDateTime { get; set; } // LocalDateTime
        public long Bids { get; set; } // Bids
        public long Impressions { get; set; } // Impressions
        public long Clicks { get; set; } // Clicks
        public long Conversions { get; set; } // Conversions
        public long PostViewConversions { get; set; } // PostViewConversions
        public long PostClickConversions { get; set; } // PostClickConversions
        public long MediaCostUsdMicros { get; set; } // MediaCostUsdMicros
        public long MediaCostLocalMicros { get; set; } // MediaCostLocalMicros
        public long DataCostLocalMicros { get; set; } // DataCostLocalMicros
        public long? InvalidImpressions { get; set; } // InvalidImpressions
        public long? InvalidClicks { get; set; } // InvalidClicks
        public long? FeesUsdSuperMicros { get; set; } // FeesUsdSuperMicros
        public long? FeesLocalSuperMicros { get; set; } // FeesLocalSuperMicros
        public long ReportId { get; set; } // ReportID
        public long? AdSlotDurationInSeconds { get; set; } // AdSlotDurationInSeconds
        public long? RawViews { get; set; } // RawViews
        public long? IabViews { get; set; } // IabViews
        public long? ViewDurationInSeconds { get; set; } // ViewDurationInSeconds
        
        public AdGroupVerticalReportId()
        {
            InitializePartial();
        }

        partial void InitializePartial();
    }

    // AdGroupVideoActivity
    public partial class AdGroupVideoActivity : Entity
    {
        public int BuyerAccountId { get; set; } // BuyerAccountID
        public int AdvertiserId { get; set; } // AdvertiserID
        public int AdvertiserProductId { get; set; } // AdvertiserProductID
        public int CampaignId { get; set; } // CampaignID
        public int AdGroupId { get; set; } // AdGroupID
        public int PlacementId { get; set; } // PlacementID (Primary key)
        public int PartnerId { get; set; } // PartnerID (Primary key)
        public DateTime UtcDate { get; set; } // UtcDate
        public DateTime LocalDate { get; set; } // LocalDate
        public DateTime UtcDateTime { get; set; } // UtcDateTime (Primary key)
        public DateTime LocalDateTime { get; set; } // LocalDateTime
        public long CreativeView { get; set; } // CreativeView
        public long Start { get; set; } // Start
        public long Midpoint { get; set; } // Midpoint
        public long FirstQuartile { get; set; } // FirstQuartile
        public long ThirdQuartile { get; set; } // ThirdQuartile
        public long Complete { get; set; } // Complete
        public long Mute { get; set; } // Mute
        public long Unmute { get; set; } // Unmute
        public long Pause { get; set; } // Pause
        public long Rewind { get; set; } // Rewind
        public long Resume { get; set; } // Resume
        public long Fullscreen { get; set; } // Fullscreen
        public long Expand { get; set; } // Expand
        public long Collapse { get; set; } // Collapse
        public long AcceptInvitation { get; set; } // AcceptInvitation
        public long Close { get; set; } // Close
        public long? AdSlotDurationInSeconds { get; set; } // AdSlotDurationInSeconds
        public long? RawViews { get; set; } // RawViews
        public long? IabViews { get; set; } // IabViews
        public long? ViewDurationInSeconds { get; set; } // ViewDurationInSeconds
        
        public AdGroupVideoActivity()
        {
            InitializePartial();
        }

        partial void InitializePartial();
    }

    // AdGroupVideoActivityCombined
    public partial class AdGroupVideoActivityCombined : Entity
    {
        public int BuyerAccountId { get; set; } // BuyerAccountID
        public int AdvertiserId { get; set; } // AdvertiserID
        public int AdvertiserProductId { get; set; } // AdvertiserProductID
        public int CampaignId { get; set; } // CampaignID
        public int AdGroupId { get; set; } // AdGroupID
        public int PlacementId { get; set; } // PlacementID
        public int PartnerId { get; set; } // PartnerID
        public DateTime UtcDate { get; set; } // UtcDate
        public DateTime LocalDate { get; set; } // LocalDate
        public DateTime UtcDateTime { get; set; } // UtcDateTime
        public DateTime LocalDateTime { get; set; } // LocalDateTime
        public long CreativeView { get; set; } // CreativeView
        public long Start { get; set; } // Start
        public long Midpoint { get; set; } // Midpoint
        public long FirstQuartile { get; set; } // FirstQuartile
        public long ThirdQuartile { get; set; } // ThirdQuartile
        public long Complete { get; set; } // Complete
        public long Mute { get; set; } // Mute
        public long Unmute { get; set; } // Unmute
        public long Pause { get; set; } // Pause
        public long Rewind { get; set; } // Rewind
        public long Resume { get; set; } // Resume
        public long Fullscreen { get; set; } // Fullscreen
        public long Expand { get; set; } // Expand
        public long Collapse { get; set; } // Collapse
        public long AcceptInvitation { get; set; } // AcceptInvitation
        public long Close { get; set; } // Close
        
        public AdGroupVideoActivityCombined()
        {
            InitializePartial();
        }

        partial void InitializePartial();
    }

    // AdGroupVideoActivityException
    public partial class AdGroupVideoActivityException : Entity
    {
        public int BuyerAccountId { get; set; } // BuyerAccountID
        public int CampaignId { get; set; } // CampaignID
        public int AdGroupId { get; set; } // AdGroupID
        public int PlacementId { get; set; } // PlacementID
        public int PartnerId { get; set; } // PartnerID
        public DateTime UtcDateTime { get; set; } // UtcDateTime
        public DateTime LocalDateTime { get; set; } // LocalDateTime
        public int ActivityTypeId { get; set; } // ActivityTypeID
        public long ActivityCount { get; set; } // ActivityCount
        public long? AdSlotDurationInSeconds { get; set; } // AdSlotDurationInSeconds
        public long? RawViews { get; set; } // RawViews
        public long? IabViews { get; set; } // IabViews
        public long? ViewDurationInSeconds { get; set; } // ViewDurationInSeconds
        
        public AdGroupVideoActivityException()
        {
            InitializePartial();
        }

        partial void InitializePartial();
    }

    // AdGroupVideoActivityExceptionReportID
    public partial class AdGroupVideoActivityExceptionReportId : Entity
    {
        public int BuyerAccountId { get; set; } // BuyerAccountID
        public int CampaignId { get; set; } // CampaignID
        public int AdGroupId { get; set; } // AdGroupID
        public int PlacementId { get; set; } // PlacementID
        public int PartnerId { get; set; } // PartnerID
        public DateTime UtcDateTime { get; set; } // UtcDateTime
        public DateTime LocalDateTime { get; set; } // LocalDateTime
        public int ActivityTypeId { get; set; } // ActivityTypeID
        public long ActivityCount { get; set; } // ActivityCount
        public long ReportId { get; set; } // ReportID
        public long? AdSlotDurationInSeconds { get; set; } // AdSlotDurationInSeconds
        public long? RawViews { get; set; } // RawViews
        public long? IabViews { get; set; } // IabViews
        public long? ViewDurationInSeconds { get; set; } // ViewDurationInSeconds
        
        public AdGroupVideoActivityExceptionReportId()
        {
            InitializePartial();
        }

        partial void InitializePartial();
    }

    // AdGroupVideoActivityImport
    public partial class AdGroupVideoActivityImport : Entity
    {
        public int BuyerAccountId { get; set; } // BuyerAccountID
        public int CampaignId { get; set; } // CampaignID
        public int AdGroupId { get; set; } // AdGroupID
        public int PlacementId { get; set; } // PlacementID
        public int PartnerId { get; set; } // PartnerID
        public DateTime UtcDateTime { get; set; } // UtcDateTime
        public DateTime LocalDateTime { get; set; } // LocalDateTime
        public int ActivityTypeId { get; set; } // ActivityTypeID
        public long ActivityCount { get; set; } // ActivityCount
        public long? AdSlotDurationInSeconds { get; set; } // AdSlotDurationInSeconds
        public long? RawViews { get; set; } // RawViews
        public long? IabViews { get; set; } // IabViews
        public long? ViewDurationInSeconds { get; set; } // ViewDurationInSeconds
        
        public AdGroupVideoActivityImport()
        {
            InitializePartial();
        }

        partial void InitializePartial();
    }

    // AdGroupVideoActivityImportReportID
    public partial class AdGroupVideoActivityImportReportId : Entity
    {
        public int BuyerAccountId { get; set; } // BuyerAccountID
        public int CampaignId { get; set; } // CampaignID
        public int AdGroupId { get; set; } // AdGroupID
        public int PlacementId { get; set; } // PlacementID
        public int PartnerId { get; set; } // PartnerID
        public DateTime UtcDateTime { get; set; } // UtcDateTime
        public DateTime LocalDateTime { get; set; } // LocalDateTime
        public int ActivityTypeId { get; set; } // ActivityTypeID
        public long ActivityCount { get; set; } // ActivityCount
        public long ReportId { get; set; } // ReportID
        public long? AdSlotDurationInSeconds { get; set; } // AdSlotDurationInSeconds
        public long? RawViews { get; set; } // RawViews
        public long? IabViews { get; set; } // IabViews
        public long? ViewDurationInSeconds { get; set; } // ViewDurationInSeconds
        
        public AdGroupVideoActivityImportReportId()
        {
            InitializePartial();
        }

        partial void InitializePartial();
    }

    // AdGroupVideoActivityReportID
    public partial class AdGroupVideoActivityReportId : Entity
    {
        public int BuyerAccountId { get; set; } // BuyerAccountID
        public int AdvertiserId { get; set; } // AdvertiserID
        public int AdvertiserProductId { get; set; } // AdvertiserProductID
        public int CampaignId { get; set; } // CampaignID
        public int AdGroupId { get; set; } // AdGroupID
        public int PlacementId { get; set; } // PlacementID (Primary key)
        public int PartnerId { get; set; } // PartnerID (Primary key)
        public DateTime UtcDate { get; set; } // UtcDate
        public DateTime LocalDate { get; set; } // LocalDate
        public DateTime UtcDateTime { get; set; } // UtcDateTime (Primary key)
        public DateTime LocalDateTime { get; set; } // LocalDateTime
        public long CreativeView { get; set; } // CreativeView
        public long Start { get; set; } // Start
        public long Midpoint { get; set; } // Midpoint
        public long FirstQuartile { get; set; } // FirstQuartile
        public long ThirdQuartile { get; set; } // ThirdQuartile
        public long Complete { get; set; } // Complete
        public long Mute { get; set; } // Mute
        public long Unmute { get; set; } // Unmute
        public long Pause { get; set; } // Pause
        public long Rewind { get; set; } // Rewind
        public long Resume { get; set; } // Resume
        public long Fullscreen { get; set; } // Fullscreen
        public long Expand { get; set; } // Expand
        public long Collapse { get; set; } // Collapse
        public long AcceptInvitation { get; set; } // AcceptInvitation
        public long Close { get; set; } // Close
        public long ReportId { get; set; } // ReportID
        
        public AdGroupVideoActivityReportId()
        {
            InitializePartial();
        }

        partial void InitializePartial();
    }

    // AdGroupWebsite
    public partial class AdGroupWebsite : Entity
    {
        public int BuyerAccountId { get; set; } // BuyerAccountID
        public int CampaignId { get; set; } // CampaignID
        public int AdGroupId { get; set; } // AdGroupID
        public long InventoryId { get; set; } // InventoryID
        public DateTime UtcDate { get; set; } // UtcDate
        public long Bids { get; set; } // Bids
        public long Impressions { get; set; } // Impressions
        public long Clicks { get; set; } // Clicks
        public long Conversions { get; set; } // Conversions
        public long PostViewConversions { get; set; } // PostViewConversions
        public long PostClickConversions { get; set; } // PostClickConversions
        public long MediaCostUsdMicros { get; set; } // MediaCostUsdMicros
        public long MediaCostLocalMicros { get; set; } // MediaCostLocalMicros
        public long DataCostLocalMicros { get; set; } // DataCostLocalMicros
        public long? InvalidImpressions { get; set; } // InvalidImpressions
        public long? InvalidClicks { get; set; } // InvalidClicks
        public long? FeesUsdSuperMicros { get; set; } // FeesUsdSuperMicros
        public long? FeesLocalSuperMicros { get; set; } // FeesLocalSuperMicros
        public long? AdSlotDurationInSeconds { get; set; } // AdSlotDurationInSeconds
        public long? RawViews { get; set; } // RawViews
        public long? IabViews { get; set; } // IabViews
        public long? ViewDurationInSeconds { get; set; } // ViewDurationInSeconds
        
        public AdGroupWebsite()
        {
            InitializePartial();
        }

        partial void InitializePartial();
    }

    // AdGroupWebsiteAnalytics
    public partial class AdGroupWebsiteAnalytic : Entity
    {
        public int BuyerAccountId { get; set; } // BuyerAccountID
        public int AdvertiserId { get; set; } // AdvertiserID
        public int AdvertiserProductId { get; set; } // AdvertiserProductID
        public int CampaignId { get; set; } // CampaignID
        public int AdGroupId { get; set; } // AdGroupID
        public int OptimizationModelId { get; set; } // OptimizationModelID
        public long WebsiteId { get; set; } // WebsiteID
        public string WebsiteUrl { get; set; } // WebsiteUrl
        public string LocalDate { get; set; } // LocalDate
        public long? Bids { get; set; } // Bids
        public long? Impressions { get; set; } // Impressions
        public long? Clicks { get; set; } // Clicks
        public long? UnfilteredClicks { get; set; } // UnfilteredClicks
        public long? Conversions { get; set; } // Conversions
        public long? PostViewConversions { get; set; } // PostViewConversions
        public long? PostClickConversions { get; set; } // PostClickConversions
        public long? SpendLocalMicros { get; set; } // SpendLocalMicros
        public decimal? Spend { get; set; } // Spend
        public long? ClientCostLocalMicros { get; set; } // ClientCostLocalMicros
        public decimal? ClientCostDollars { get; set; } // ClientCostDollars
        public long? MediaCostLocalMicros { get; set; } // MediaCostLocalMicros
        public long? DataCostLocalMicros { get; set; } // DataCostLocalMicros
        public long? MediaClientCostLocalMicros { get; set; } // MediaClientCostLocalMicros
        public long? DataClientCostLocalMicros { get; set; } // DataClientCostLocalMicros
        public long? AdSlotDurationInSeconds { get; set; } // AdSlotDurationInSeconds
        public long? RawViews { get; set; } // RawViews
        public long? IabViews { get; set; } // IabViews
        public long? ViewDurationInSeconds { get; set; } // ViewDurationInSeconds
        public double? Ctr { get; set; } // CTR
        public decimal? Cpm { get; set; } // CPM
        public decimal? Cpc { get; set; } // CPC
        public decimal? Cpa { get; set; } // CPA
        public decimal? ClientCpm { get; set; } // ClientCPM
        public decimal? ClientCpc { get; set; } // ClientCPC
        public decimal? ClientCpa { get; set; } // ClientCPA
        public decimal? Cpms { get; set; } // CPMs
        public decimal? ClientCostCpms { get; set; } // ClientCostCpms
        public decimal? Cps { get; set; } // CPS
        public decimal? ClientCostCps { get; set; } // ClientCostCps
        public double? ViewableRatio { get; set; } // ViewableRatio
        
        public AdGroupWebsiteAnalytic()
        {
            InitializePartial();
        }

        partial void InitializePartial();
    }

    // AdGroupWebsiteException
    public partial class AdGroupWebsiteException : Entity
    {
        public int BuyerAccountId { get; set; } // BuyerAccountID
        public int CampaignId { get; set; } // CampaignID
        public int AdGroupId { get; set; } // AdGroupID
        public long InventoryId { get; set; } // InventoryID
        public DateTime UtcDate { get; set; } // UtcDate
        public long Bids { get; set; } // Bids
        public long Impressions { get; set; } // Impressions
        public long InvalidImpressions { get; set; } // InvalidImpressions
        public long Clicks { get; set; } // Clicks
        public long InvalidClicks { get; set; } // InvalidClicks
        public long Conversions { get; set; } // Conversions
        public long PostViewConversions { get; set; } // PostViewConversions
        public long PostClickConversions { get; set; } // PostClickConversions
        public long MediaCostUsdMicros { get; set; } // MediaCostUsdMicros
        public long MediaCostLocalMicros { get; set; } // MediaCostLocalMicros
        public long DataCostLocalMicros { get; set; } // DataCostLocalMicros
        public long FeesUsdSuperMicros { get; set; } // FeesUsdSuperMicros
        public long FeesLocalSuperMicros { get; set; } // FeesLocalSuperMicros
        public long? AdSlotDurationInSeconds { get; set; } // AdSlotDurationInSeconds
        public long? RawViews { get; set; } // RawViews
        public long? IabViews { get; set; } // IabViews
        public long? ViewDurationInSeconds { get; set; } // ViewDurationInSeconds
        
        public AdGroupWebsiteException()
        {
            InitializePartial();
        }

        partial void InitializePartial();
    }

    // AdGroupWebsiteImport
    public partial class AdGroupWebsiteImport : Entity
    {
        public int BuyerAccountId { get; set; } // BuyerAccountID
        public int CampaignId { get; set; } // CampaignID
        public int AdGroupId { get; set; } // AdGroupID
        public long InventoryId { get; set; } // InventoryID
        public DateTime UtcDate { get; set; } // UtcDate
        public long Bids { get; set; } // Bids
        public long Impressions { get; set; } // Impressions
        public long InvalidImpressions { get; set; } // InvalidImpressions
        public long Clicks { get; set; } // Clicks
        public long InvalidClicks { get; set; } // InvalidClicks
        public long Conversions { get; set; } // Conversions
        public long PostViewConversions { get; set; } // PostViewConversions
        public long PostClickConversions { get; set; } // PostClickConversions
        public long MediaCostUsdMicros { get; set; } // MediaCostUsdMicros
        public long MediaCostLocalMicros { get; set; } // MediaCostLocalMicros
        public long DataCostLocalMicros { get; set; } // DataCostLocalMicros
        public long FeesUsdSuperMicros { get; set; } // FeesUsdSuperMicros
        public long FeesLocalSuperMicros { get; set; } // FeesLocalSuperMicros
        public long? AdSlotDurationInSeconds { get; set; } // AdSlotDurationInSeconds
        public long? RawViews { get; set; } // RawViews
        public long? IabViews { get; set; } // IabViews
        public long? ViewDurationInSeconds { get; set; } // ViewDurationInSeconds
        
        public AdGroupWebsiteImport()
        {
            InitializePartial();
        }

        partial void InitializePartial();
    }

    // AdGroupWebsiteInventoryOnly
    public partial class AdGroupWebsiteInventoryOnly : Entity
    {
        public int BuyerAccountId { get; set; } // BuyerAccountID
        public int CampaignId { get; set; } // CampaignID
        public int AdGroupId { get; set; } // AdGroupID
        public long InventoryId { get; set; } // InventoryID
        public int PartnerId { get; set; } // PartnerID
        public string PartnerName { get; set; } // PartnerName
        public int PublisherId { get; set; } // PublisherID
        public string PublisherName { get; set; } // PublisherName
        public long WebsiteId { get; set; } // WebsiteID
        public string WebsiteUrl { get; set; } // WebsiteUrl
        public int IsTargeted { get; set; } // IsTargeted
        public int PackageInstalled { get; set; } // PackageInstalled
        public int BinomialFiltered { get; set; } // BinomialFiltered
        public int BinomialFilterOverride { get; set; } // BinomialFilterOverride
        public int WhiteListedInSiteLevel { get; set; } // WhiteListedInSiteLevel
        public long? Bids { get; set; } // Bids
        public long? Impressions { get; set; } // Impressions
        public long? Clicks { get; set; } // Clicks
        public long? Conversions { get; set; } // Conversions
        public long? PostViewConversions { get; set; } // PostViewConversions
        public long? PostClickConversions { get; set; } // PostClickConversions
        public long? SpendLocalMicros { get; set; } // SpendLocalMicros
        public decimal? Spend { get; set; } // Spend
        public long? ClientCostLocalMicros { get; set; } // ClientCostLocalMicros
        public decimal? ClientCostDollars { get; set; } // ClientCostDollars
        public double? Ctr { get; set; } // Ctr
        public decimal? Cpm { get; set; } // Cpm
        public decimal? Cpc { get; set; } // Cpc
        public decimal? Cpa { get; set; } // Cpa
        public decimal? ClientCostCpm { get; set; } // ClientCostCpm
        public decimal? ClientCostCpc { get; set; } // ClientCostCpc
        public decimal? ClientCostCpa { get; set; } // ClientCostCpa
        public long? MediaCostLocalMicros { get; set; } // MediaCostLocalMicros
        public long? DataCostLocalMicros { get; set; } // DataCostLocalMicros
        public long? MediaClientCostLocalMicros { get; set; } // MediaClientCostLocalMicros
        public long? DataClientCostLocalMicros { get; set; } // DataClientCostLocalMicros
        public long? AdSlotDurationInSeconds { get; set; } // AdSlotDurationInSeconds
        public decimal? Cpms { get; set; } // Cpms
        public decimal? ClientCostCpms { get; set; } // ClientCostCpms
        public long? RawViews { get; set; } // RawViews
        public long? IabViews { get; set; } // IabViews
        public long? ViewDurationInSeconds { get; set; } // ViewDurationInSeconds
        public decimal? Cps { get; set; } // Cps
        public decimal? ClientCostCps { get; set; } // ClientCostCps
        
        public AdGroupWebsiteInventoryOnly()
        {
            InitializePartial();
        }

        partial void InitializePartial();
    }

    // AdGroupWebsiteNew
    public partial class AdGroupWebsiteNew : Entity
    {
        public int BuyerAccountId { get; set; } // BuyerAccountID
        public int CampaignId { get; set; } // CampaignID
        public int AdGroupId { get; set; } // AdGroupID
        public long InventoryId { get; set; } // InventoryID
        public DateTime UtcDate { get; set; } // UtcDate
        public long Bids { get; set; } // Bids
        public long Impressions { get; set; } // Impressions
        public long Clicks { get; set; } // Clicks
        public long Conversions { get; set; } // Conversions
        public long PostViewConversions { get; set; } // PostViewConversions
        public long PostClickConversions { get; set; } // PostClickConversions
        public long MediaCostUsdMicros { get; set; } // MediaCostUsdMicros
        public long MediaCostLocalMicros { get; set; } // MediaCostLocalMicros
        public long DataCostLocalMicros { get; set; } // DataCostLocalMicros
        public long? InvalidImpressions { get; set; } // InvalidImpressions
        public long? InvalidClicks { get; set; } // InvalidClicks
        public long? FeesUsdSuperMicros { get; set; } // FeesUsdSuperMicros
        public long? FeesLocalSuperMicros { get; set; } // FeesLocalSuperMicros
        public long? AdSlotDurationInSeconds { get; set; } // AdSlotDurationInSeconds
        public long? RawViews { get; set; } // RawViews
        public long? IabViews { get; set; } // IabViews
        public long? ViewDurationInSeconds { get; set; } // ViewDurationInSeconds
        
        public AdGroupWebsiteNew()
        {
            InitializePartial();
        }

        partial void InitializePartial();
    }

    // AdGroupWebsitePerformanceAndTargetingOnly
    public partial class AdGroupWebsitePerformanceAndTargetingOnly : Entity
    {
        public int BuyerAccountId { get; set; } // BuyerAccountID
        public int CampaignId { get; set; } // CampaignID
        public int AdGroupId { get; set; } // AdGroupID
        public long InventoryId { get; set; } // InventoryID
        public int PartnerId { get; set; } // PartnerID
        public string PartnerName { get; set; } // PartnerName
        public int PublisherId { get; set; } // PublisherID
        public string PublisherName { get; set; } // PublisherName
        public long WebsiteId { get; set; } // WebsiteID
        public string WebsiteUrl { get; set; } // WebsiteUrl
        public long? Bids { get; set; } // Bids
        public long? Impressions { get; set; } // Impressions
        public long? Clicks { get; set; } // Clicks
        public long? Conversions { get; set; } // Conversions
        public long? PostViewConversions { get; set; } // PostViewConversions
        public long? PostClickConversions { get; set; } // PostClickConversions
        public long? SpendLocalMicros { get; set; } // SpendLocalMicros
        public decimal? Spend { get; set; } // Spend
        public long? ClientCostLocalMicros { get; set; } // ClientCostLocalMicros
        public decimal? ClientCostDollars { get; set; } // ClientCostDollars
        public long? MediaCostLocalMicros { get; set; } // MediaCostLocalMicros
        public long? DataCostLocalMicros { get; set; } // DataCostLocalMicros
        public long? MediaClientCostLocalMicros { get; set; } // MediaClientCostLocalMicros
        public long? DataClientCostLocalMicros { get; set; } // DataClientCostLocalMicros
        public long? AdSlotDurationInSeconds { get; set; } // AdSlotDurationInSeconds
        public long? RawViews { get; set; } // RawViews
        public long? IabViews { get; set; } // IabViews
        public long? ViewDurationInSeconds { get; set; } // ViewDurationInSeconds
        public int PackageInstalled { get; set; } // PackageInstalled
        public int BinomialFiltered { get; set; } // BinomialFiltered
        public int BinomialFilterOverride { get; set; } // BinomialFilterOverride
        public int WhiteListedInSiteLevel { get; set; } // WhiteListedInSiteLevel
        public int IsTargeted { get; set; } // IsTargeted
        public double? Ctr { get; set; } // CTR
        public decimal? Cpm { get; set; } // CPM
        public decimal? Cpc { get; set; } // CPC
        public decimal? Cpa { get; set; } // CPA
        public decimal? ClientCostCpm { get; set; } // ClientCostCPM
        public decimal? ClientCostCpc { get; set; } // ClientCostCPC
        public decimal? ClientCostCpa { get; set; } // ClientCostCPA
        public decimal? Cpms { get; set; } // CPMs
        public decimal? ClientCostCpms { get; set; } // ClientCostCpms
        public decimal? Cps { get; set; } // CPS
        public decimal? ClientCostCps { get; set; } // ClientCostCps
        public double? ViewableRatio { get; set; } // ViewableRatio
        
        public AdGroupWebsitePerformanceAndTargetingOnly()
        {
            InitializePartial();
        }

        partial void InitializePartial();
    }

    // AdGroupWebsiteTargeting
    public partial class AdGroupWebsiteTargeting : Entity
    {
        public int BuyerAccountId { get; set; } // BuyerAccountID
        public int CampaignId { get; set; } // CampaignID
        public int AdGroupId { get; set; } // AdGroupID
        public long InventoryId { get; set; } // InventoryID
        public int PartnerId { get; set; } // PartnerID
        public string PartnerName { get; set; } // PartnerName
        public int PublisherId { get; set; } // PublisherID
        public string PublisherName { get; set; } // PublisherName
        public long WebsiteId { get; set; } // WebsiteID
        public string WebsiteUrl { get; set; } // WebsiteUrl
        public int IsTargeted { get; set; } // IsTargeted
        public int PackageInstalled { get; set; } // PackageInstalled
        public long? Bids { get; set; } // Bids
        public long? Impressions { get; set; } // Impressions
        public long? Clicks { get; set; } // Clicks
        public long? Conversions { get; set; } // Conversions
        public long? PostViewConversions { get; set; } // PostViewConversions
        public long? PostClickConversions { get; set; } // PostClickConversions
        public long? SpendLocalMicros { get; set; } // SpendLocalMicros
        public decimal? Spend { get; set; } // Spend
        public decimal? ClientCostLocalMicros { get; set; } // ClientCostLocalMicros
        public decimal? ClientCostDollars { get; set; } // ClientCostDollars
        public long? MediaCostLocalMicros { get; set; } // MediaCostLocalMicros
        public long? DataCostLocalMicros { get; set; } // DataCostLocalMicros
        public decimal? MediaClientCostLocalMicros { get; set; } // MediaClientCostLocalMicros
        public decimal? DataClientCostLocalMicros { get; set; } // DataClientCostLocalMicros
        public long? AdSlotDurationInSeconds { get; set; } // AdSlotDurationInSeconds
        public long? RawViews { get; set; } // RawViews
        public long? IabViews { get; set; } // IabViews
        public long? ViewDurationInSeconds { get; set; } // ViewDurationInSeconds
        public double? Ctr { get; set; } // CTR
        public decimal? Cpm { get; set; } // CPM
        public decimal? Cpc { get; set; } // CPC
        public decimal? Cpa { get; set; } // CPA
        public decimal? ClientCostCpm { get; set; } // ClientCostCPM
        public decimal? ClientCostCpc { get; set; } // ClientCostCPC
        public decimal? ClientCostCpa { get; set; } // ClientCostCPA
        public decimal? Cpms { get; set; } // CPMs
        public decimal? ClientCostCpms { get; set; } // ClientCostCpms
        public decimal? Cps { get; set; } // CPS
        public decimal? ClientCostCps { get; set; } // ClientCostCps
        public double? ViewableRatio { get; set; } // ViewableRatio
        
        public AdGroupWebsiteTargeting()
        {
            InitializePartial();
        }

        partial void InitializePartial();
    }

    // AdLookup
    public partial class AdLookup : Entity
    {
        public int PlacementId { get; set; } // PlacementID
        public string RtbAdId { get; set; } // RtbAdID
        public string AdName { get; set; } // AdName
        public string DestinationUrl { get; set; } // DestinationUrl
        public int? Width { get; set; } // Width
        public int? Height { get; set; } // Height
        public int AdGroupId { get; set; } // AdGroupID
        public string RtbAdGroupId { get; set; } // RtbAdGroupID
        public string AdGroupName { get; set; } // AdGroupName
        public decimal AdGroupBudget { get; set; } // AdGroupBudget
        public int GoalTypeId { get; set; } // GoalTypeID
        public decimal GoalTargetRate { get; set; } // GoalTargetRate
        public int CampaignId { get; set; } // CampaignID
        public string RtbCampaignId { get; set; } // RtbCampaignID
        public string CampaignName { get; set; } // CampaignName
        public string AgencyReference { get; set; } // AgencyReference
        public DateTime? UtcStartDateTime { get; set; } // UtcStartDateTime
        public DateTime? UtcEndDateTime { get; set; } // UtcEndDateTime
        public long? CampaignBudgetDouble { get; set; } // CampaignBudgetDouble
        public int AdvertiserProductId { get; set; } // AdvertiserProductID
        public string ProductName { get; set; } // ProductName
        public int ProductCategoryId { get; set; } // ProductCategoryID
        public string ProductCategoryName { get; set; } // ProductCategoryName
        public int IndustryCategoryId { get; set; } // IndustryCategoryID
        public string IndustryCategoryName { get; set; } // IndustryCategoryName
        public int AdvertiserId { get; set; } // AdvertiserID
        public string AdvertiserName { get; set; } // AdvertiserName
        public int BuyerAccountId { get; set; } // BuyerAccountID
        public string CompanyName { get; set; } // CompanyName
        public string BuyingGroupName { get; set; } // BuyingGroupName
        public string CurrencyCode { get; set; } // CurrencyCode
        public string CurrencyName { get; set; } // CurrencyName
        public decimal? LocalToUsdRate { get; set; } // LocalToUSDRate
        public string TimeZoneCode { get; set; } // TimeZoneCode
        public int MinutesOffset { get; set; } // MinutesOffset
        public string CampaignStatusName { get; set; } // CampaignStatusName
        public int CreativeId { get; set; } // CreativeID
        
        public AdLookup()
        {
            InitializePartial();
        }

        partial void InitializePartial();
    }

    // AdPartner
    public partial class AdPartner : Entity
    {
        public int BuyerAccountId { get; set; } // BuyerAccountID
        public int CampaignId { get; set; } // CampaignID
        public int AdGroupId { get; set; } // AdGroupID
        public int PlacementId { get; set; } // PlacementID
        public int PartnerId { get; set; } // PartnerID
        public DateTime UtcDate { get; set; } // UtcDate
        public DateTime LocalDate { get; set; } // LocalDate
        public DateTime UtcDateTime { get; set; } // UtcDateTime
        public DateTime LocalDateTime { get; set; } // LocalDateTime
        public long Bids { get; set; } // Bids
        public long Impressions { get; set; } // Impressions
        public long Clicks { get; set; } // Clicks
        public long Conversions { get; set; } // Conversions
        public long PostViewConversions { get; set; } // PostViewConversions
        public long PostClickConversions { get; set; } // PostClickConversions
        public long MediaCostUsdMicros { get; set; } // MediaCostUsdMicros
        public long MediaCostLocalMicros { get; set; } // MediaCostLocalMicros
        public long DataCostLocalMicros { get; set; } // DataCostLocalMicros
        public bool IsBilled { get; set; } // IsBilled
        public int FraudReasonId { get; set; } // FraudReasonID
        public long? FeesUsdSuperMicros { get; set; } // FeesUsdSuperMicros
        public long? FeesLocalSuperMicros { get; set; } // FeesLocalSuperMicros
        public long? AdSlotDurationInSeconds { get; set; } // AdSlotDurationInSeconds
        public long? RawViews { get; set; } // RawViews
        public long? IabViews { get; set; } // IabViews
        public long? ViewDurationInSeconds { get; set; } // ViewDurationInSeconds
        
        public AdPartner()
        {
            PostViewConversions = 0;
            PostClickConversions = 0;
            DataCostLocalMicros = 0;
            FraudReasonId = 0;
            InitializePartial();
        }

        partial void InitializePartial();
    }

    // AdPartnerCombined
    public partial class AdPartnerCombined : Entity
    {
        public int BuyerAccountId { get; set; } // BuyerAccountID
        public int CampaignId { get; set; } // CampaignID
        public int AdGroupId { get; set; } // AdGroupID
        public int PlacementId { get; set; } // PlacementID
        public int PartnerId { get; set; } // PartnerID
        public DateTime UtcDate { get; set; } // UtcDate
        public DateTime LocalDate { get; set; } // LocalDate
        public DateTime UtcDateTime { get; set; } // UtcDateTime
        public DateTime LocalDateTime { get; set; } // LocalDateTime
        public long Bids { get; set; } // Bids
        public long Impressions { get; set; } // Impressions
        public long Clicks { get; set; } // Clicks
        public long Conversions { get; set; } // Conversions
        public long PostViewConversions { get; set; } // PostViewConversions
        public long PostClickConversions { get; set; } // PostClickConversions
        public long MediaCostUsdMicros { get; set; } // MediaCostUsdMicros
        public long MediaCostLocalMicros { get; set; } // MediaCostLocalMicros
        public long DataCostLocalMicros { get; set; } // DataCostLocalMicros
        public bool IsBilled { get; set; } // IsBilled
        public int FraudReasonId { get; set; } // FraudReasonID
        public long? FeesUsdSuperMicros { get; set; } // FeesUsdSuperMicros
        public long? FeesLocalSuperMicros { get; set; } // FeesLocalSuperMicros
        public long? AdSlotDurationInSeconds { get; set; } // AdSlotDurationInSeconds
        public long? RawViews { get; set; } // RawViews
        public long? IabViews { get; set; } // IabViews
        public long? ViewDurationInSeconds { get; set; } // ViewDurationInSeconds
        
        public AdPartnerCombined()
        {
            InitializePartial();
        }

        partial void InitializePartial();
    }

    // AdPartnerCombinedValidOnly
    public partial class AdPartnerCombinedValidOnly : Entity
    {
        public int BuyerAccountId { get; set; } // BuyerAccountID
        public int CampaignId { get; set; } // CampaignID
        public int AdGroupId { get; set; } // AdGroupID
        public int PlacementId { get; set; } // PlacementID
        public int PartnerId { get; set; } // PartnerID
        public DateTime UtcDate { get; set; } // UtcDate
        public DateTime LocalDate { get; set; } // LocalDate
        public DateTime UtcDateTime { get; set; } // UtcDateTime
        public DateTime LocalDateTime { get; set; } // LocalDateTime
        public long Bids { get; set; } // Bids
        public long Impressions { get; set; } // Impressions
        public long Clicks { get; set; } // Clicks
        public long Conversions { get; set; } // Conversions
        public long PostViewConversions { get; set; } // PostViewConversions
        public long PostClickConversions { get; set; } // PostClickConversions
        public long MediaCostUsdMicros { get; set; } // MediaCostUsdMicros
        public long MediaCostLocalMicros { get; set; } // MediaCostLocalMicros
        public long DataCostLocalMicros { get; set; } // DataCostLocalMicros
        public bool IsBilled { get; set; } // IsBilled
        public int FraudReasonId { get; set; } // FraudReasonID
        public long? FeesUsdSuperMicros { get; set; } // FeesUsdSuperMicros
        public long? FeesLocalSuperMicros { get; set; } // FeesLocalSuperMicros
        public long? AdSlotDurationInSeconds { get; set; } // AdSlotDurationInSeconds
        public long? RawViews { get; set; } // RawViews
        public long? IabViews { get; set; } // IabViews
        public long? ViewDurationInSeconds { get; set; } // ViewDurationInSeconds
        
        public AdPartnerCombinedValidOnly()
        {
            InitializePartial();
        }

        partial void InitializePartial();
    }

    // AdPartnerException
    public partial class AdPartnerException : Entity
    {
        public int BuyerAccountId { get; set; } // BuyerAccountID
        public int CampaignId { get; set; } // CampaignID
        public int AdGroupId { get; set; } // AdGroupID
        public int PlacementId { get; set; } // PlacementID
        public int PartnerId { get; set; } // PartnerID
        public DateTime UtcDateTime { get; set; } // UtcDateTime
        public DateTime LocalDateTime { get; set; } // LocalDateTime
        public int FraudReasonId { get; set; } // FraudReasonID
        public long Bids { get; set; } // Bids
        public long Impressions { get; set; } // Impressions
        public long Clicks { get; set; } // Clicks
        public long Conversions { get; set; } // Conversions
        public long PostViewConversions { get; set; } // PostViewConversions
        public long PostClickConversions { get; set; } // PostClickConversions
        public long MediaCostUsdMicros { get; set; } // MediaCostUsdMicros
        public long MediaCostLocalMicros { get; set; } // MediaCostLocalMicros
        public long DataCostLocalMicros { get; set; } // DataCostLocalMicros
        public long FeesUsdSuperMicros { get; set; } // FeesUsdSuperMicros
        public long FeesLocalSuperMicros { get; set; } // FeesLocalSuperMicros
        public bool IsBilled { get; set; } // IsBilled
        public long? AdSlotDurationInSeconds { get; set; } // AdSlotDurationInSeconds
        public long? RawViews { get; set; } // RawViews
        public long? IabViews { get; set; } // IabViews
        public long? ViewDurationInSeconds { get; set; } // ViewDurationInSeconds
        
        public AdPartnerException()
        {
            InitializePartial();
        }

        partial void InitializePartial();
    }

    // AdPartnerExceptionReportID
    public partial class AdPartnerExceptionReportId : Entity
    {
        public int BuyerAccountId { get; set; } // BuyerAccountID
        public int CampaignId { get; set; } // CampaignID
        public int AdGroupId { get; set; } // AdGroupID
        public int PlacementId { get; set; } // PlacementID
        public int PartnerId { get; set; } // PartnerID
        public DateTime UtcDateTime { get; set; } // UtcDateTime
        public DateTime LocalDateTime { get; set; } // LocalDateTime
        public int FraudReasonId { get; set; } // FraudReasonID
        public long Bids { get; set; } // Bids
        public long Impressions { get; set; } // Impressions
        public long Clicks { get; set; } // Clicks
        public long Conversions { get; set; } // Conversions
        public long PostViewConversions { get; set; } // PostViewConversions
        public long PostClickConversions { get; set; } // PostClickConversions
        public long MediaCostUsdMicros { get; set; } // MediaCostUsdMicros
        public long MediaCostLocalMicros { get; set; } // MediaCostLocalMicros
        public long DataCostLocalMicros { get; set; } // DataCostLocalMicros
        public long FeesUsdSuperMicros { get; set; } // FeesUsdSuperMicros
        public long FeesLocalSuperMicros { get; set; } // FeesLocalSuperMicros
        public bool IsBilled { get; set; } // IsBilled
        public long ReportId { get; set; } // ReportID
        public long? AdSlotDurationInSeconds { get; set; } // AdSlotDurationInSeconds
        public long? RawViews { get; set; } // RawViews
        public long? IabViews { get; set; } // IabViews
        public long? ViewDurationInSeconds { get; set; } // ViewDurationInSeconds
        
        public AdPartnerExceptionReportId()
        {
            InitializePartial();
        }

        partial void InitializePartial();
    }

    // AdPartnerImport
    public partial class AdPartnerImport : Entity
    {
        public int BuyerAccountId { get; set; } // BuyerAccountID
        public int CampaignId { get; set; } // CampaignID
        public int AdGroupId { get; set; } // AdGroupID
        public int PlacementId { get; set; } // PlacementID
        public int PartnerId { get; set; } // PartnerID
        public DateTime UtcDateTime { get; set; } // UtcDateTime
        public DateTime LocalDateTime { get; set; } // LocalDateTime
        public int FraudReasonId { get; set; } // FraudReasonID
        public long Bids { get; set; } // Bids
        public long Impressions { get; set; } // Impressions
        public long Clicks { get; set; } // Clicks
        public long Conversions { get; set; } // Conversions
        public long PostViewConversions { get; set; } // PostViewConversions
        public long PostClickConversions { get; set; } // PostClickConversions
        public long MediaCostUsdMicros { get; set; } // MediaCostUsdMicros
        public long MediaCostLocalMicros { get; set; } // MediaCostLocalMicros
        public long DataCostLocalMicros { get; set; } // DataCostLocalMicros
        public long FeesUsdSuperMicros { get; set; } // FeesUsdSuperMicros
        public long FeesLocalSuperMicros { get; set; } // FeesLocalSuperMicros
        public bool IsBilled { get; set; } // IsBilled
        public long? AdSlotDurationInSeconds { get; set; } // AdSlotDurationInSeconds
        public long? RawViews { get; set; } // RawViews
        public long? IabViews { get; set; } // IabViews
        public long? ViewDurationInSeconds { get; set; } // ViewDurationInSeconds
        
        public AdPartnerImport()
        {
            InitializePartial();
        }

        partial void InitializePartial();
    }

    // AdPartnerImportReportID
    public partial class AdPartnerImportReportId : Entity
    {
        public int BuyerAccountId { get; set; } // BuyerAccountID
        public int CampaignId { get; set; } // CampaignID
        public int AdGroupId { get; set; } // AdGroupID
        public int PlacementId { get; set; } // PlacementID
        public int PartnerId { get; set; } // PartnerID
        public DateTime UtcDateTime { get; set; } // UtcDateTime
        public DateTime LocalDateTime { get; set; } // LocalDateTime
        public int FraudReasonId { get; set; } // FraudReasonID
        public long Bids { get; set; } // Bids
        public long Impressions { get; set; } // Impressions
        public long Clicks { get; set; } // Clicks
        public long Conversions { get; set; } // Conversions
        public long PostViewConversions { get; set; } // PostViewConversions
        public long PostClickConversions { get; set; } // PostClickConversions
        public long MediaCostUsdMicros { get; set; } // MediaCostUsdMicros
        public long MediaCostLocalMicros { get; set; } // MediaCostLocalMicros
        public long DataCostLocalMicros { get; set; } // DataCostLocalMicros
        public long FeesUsdSuperMicros { get; set; } // FeesUsdSuperMicros
        public long FeesLocalSuperMicros { get; set; } // FeesLocalSuperMicros
        public bool IsBilled { get; set; } // IsBilled
        public long ReportId { get; set; } // ReportID
        public long? AdSlotDurationInSeconds { get; set; } // AdSlotDurationInSeconds
        public long? RawViews { get; set; } // RawViews
        public long? IabViews { get; set; } // IabViews
        public long? ViewDurationInSeconds { get; set; } // ViewDurationInSeconds
        
        public AdPartnerImportReportId()
        {
            InitializePartial();
        }

        partial void InitializePartial();
    }

    // AdPartnerPerformance
    public partial class AdPartnerPerformance : Entity
    {
        public int BuyerAccountId { get; set; } // BuyerAccountID
        public int CampaignId { get; set; } // CampaignID
        public int AdGroupId { get; set; } // AdGroupID
        public int PlacementId { get; set; } // PlacementID
        public int PartnerId { get; set; } // PartnerID
        public DateTime UtcDate { get; set; } // UtcDate
        public DateTime LocalDate { get; set; } // LocalDate
        public DateTime UtcDateTime { get; set; } // UtcDateTime
        public DateTime LocalDateTime { get; set; } // LocalDateTime
        public long Bids { get; set; } // Bids
        public long Impressions { get; set; } // Impressions
        public long Clicks { get; set; } // Clicks
        public long Conversions { get; set; } // Conversions
        public long PostViewConversions { get; set; } // PostViewConversions
        public long PostClickConversions { get; set; } // PostClickConversions
        public long MediaCostLocalMicros { get; set; } // MediaCostLocalMicros
        public long DataCostLocalMicros { get; set; } // DataCostLocalMicros
        public long MediaCostUsdMicros { get; set; } // MediaCostUsdMicros
        public bool IsBilled { get; set; } // IsBilled
        public int FraudReasonId { get; set; } // FraudReasonID
        public long? FeesUsdSuperMicros { get; set; } // FeesUsdSuperMicros
        public long? FeesLocalSuperMicros { get; set; } // FeesLocalSuperMicros
        public long? AdSlotDurationInSeconds { get; set; } // AdSlotDurationInSeconds
        public long? RawViews { get; set; } // RawViews
        public long? IabViews { get; set; } // IabViews
        public long? ViewDurationInSeconds { get; set; } // ViewDurationInSeconds
        
        public AdPartnerPerformance()
        {
            InitializePartial();
        }

        partial void InitializePartial();
    }

    // AdPartnerReconciliation
    public partial class AdPartnerReconciliation : Entity
    {
        public int BuyerAccountId { get; set; } // BuyerAccountID
        public int CampaignId { get; set; } // CampaignID
        public int AdGroupId { get; set; } // AdGroupID
        public int PlacementId { get; set; } // PlacementID
        public int PartnerId { get; set; } // PartnerID
        public DateTime UtcDate { get; set; } // UtcDate
        public DateTime LocalDate { get; set; } // LocalDate
        public DateTime UtcDateTime { get; set; } // UtcDateTime
        public DateTime LocalDateTime { get; set; } // LocalDateTime
        public long Bids { get; set; } // Bids
        public long Impressions { get; set; } // Impressions
        public long Clicks { get; set; } // Clicks
        public long Conversions { get; set; } // Conversions
        public long PostViewConversions { get; set; } // PostViewConversions
        public long PostClickConversions { get; set; } // PostClickConversions
        public long UsdSpend { get; set; } // UsdSpend
        public long MediaCostLocalMicros { get; set; } // MediaCostLocalMicros
        public long DataCostLocalMicros { get; set; } // DataCostLocalMicros
        public bool IsBilled { get; set; } // IsBilled
        public long? AdSlotDurationInSeconds { get; set; } // AdSlotDurationInSeconds
        public long? RawViews { get; set; } // RawViews
        public long? IabViews { get; set; } // IabViews
        public long? ViewDurationInSeconds { get; set; } // ViewDurationInSeconds
        
        public AdPartnerReconciliation()
        {
            InitializePartial();
        }

        partial void InitializePartial();
    }

    // AdPartnerReportID
    public partial class AdPartnerReportId : Entity
    {
        public int BuyerAccountId { get; set; } // BuyerAccountID
        public int CampaignId { get; set; } // CampaignID
        public int AdGroupId { get; set; } // AdGroupID
        public int PlacementId { get; set; } // PlacementID
        public int PartnerId { get; set; } // PartnerID
        public DateTime UtcDate { get; set; } // UtcDate
        public DateTime LocalDate { get; set; } // LocalDate
        public DateTime UtcDateTime { get; set; } // UtcDateTime
        public DateTime LocalDateTime { get; set; } // LocalDateTime
        public long Bids { get; set; } // Bids
        public long Impressions { get; set; } // Impressions
        public long Clicks { get; set; } // Clicks
        public long Conversions { get; set; } // Conversions
        public long PostViewConversions { get; set; } // PostViewConversions
        public long PostClickConversions { get; set; } // PostClickConversions
        public long MediaCostUsdMicros { get; set; } // MediaCostUsdMicros
        public long MediaCostLocalMicros { get; set; } // MediaCostLocalMicros
        public long DataCostLocalMicros { get; set; } // DataCostLocalMicros
        public bool IsBilled { get; set; } // IsBilled
        public int FraudReasonId { get; set; } // FraudReasonID
        public long? FeesUsdSuperMicros { get; set; } // FeesUsdSuperMicros
        public long? FeesLocalSuperMicros { get; set; } // FeesLocalSuperMicros
        public long ReportId { get; set; } // ReportID
        public long? AdSlotDurationInSeconds { get; set; } // AdSlotDurationInSeconds
        public long? RawViews { get; set; } // RawViews
        public long? IabViews { get; set; } // IabViews
        public long? ViewDurationInSeconds { get; set; } // ViewDurationInSeconds
        
        public AdPartnerReportId()
        {
            PostViewConversions = 0;
            PostClickConversions = 0;
            DataCostLocalMicros = 0;
            FraudReasonId = 0;
            InitializePartial();
        }

        partial void InitializePartial();
    }

    // AdSlotLookup
    public partial class AdSlotLookup : Entity
    {
        public int AdSlotId { get; set; } // AdSlotID
        public string DealKey { get; set; } // DealKey
        public int BuyerAccountId { get; set; } // BuyerAccountID
        
        public AdSlotLookup()
        {
            InitializePartial();
        }

        partial void InitializePartial();
    }

    // AdvertiserBILookup
    public partial class AdvertiserBiLookup : Entity
    {
        public int AdvertiserId { get; set; } // AdvertiserID
        public Guid AdvertiserUuid { get; set; } // AdvertiserUuid
        public int BuyerAccountId { get; set; } // BuyerAccountID
        public string AdvertiserName { get; set; } // AdvertiserName
        public string AdvertiserHomepageUrl { get; set; } // AdvertiserHomepageUrl
        public int IndustryCategoryId { get; set; } // IndustryCategoryID
        public int AdTagServerId { get; set; } // AdTagServerID
        public int PixelTagServerId { get; set; } // PixelTagServerID
        public bool IsDeleted { get; set; } // IsDeleted
        public DateTime UtcCreatedDateTime { get; set; } // UtcCreatedDateTime
        public DateTime UtcModifiedDateTime { get; set; } // UtcModifiedDateTime
        
        public AdvertiserBiLookup()
        {
            InitializePartial();
        }

        partial void InitializePartial();
    }

    // AdvertiserProductBILookup
    public partial class AdvertiserProductBiLookup : Entity
    {
        public int AdvertiserProductId { get; set; } // AdvertiserProductID
        public Guid AdvertiserProductUuid { get; set; } // AdvertiserProductUuid
        public int AdvertiserId { get; set; } // AdvertiserID
        public int BuyerAccountId { get; set; } // BuyerAccountID
        public string ProductName { get; set; } // ProductName
        public int? ProductCategoryId { get; set; } // ProductCategoryID
        public string AdvertiserProductHomepageUrl { get; set; } // AdvertiserProductHomepageUrl
        public bool IsDeleted { get; set; } // IsDeleted
        public DateTime UtcCreatedDateTime { get; set; } // UtcCreatedDateTime
        public DateTime UtcModifiedDateTime { get; set; } // UtcModifiedDateTime
        public int BrandSafetyModeId { get; set; } // BrandSafetyModeID
        
        public AdvertiserProductBiLookup()
        {
            InitializePartial();
        }

        partial void InitializePartial();
    }

    // BrandSafetyLookup
    public partial class BrandSafetyLookup : Entity
    {
        public int AdvertiserProductId { get; set; } // AdvertiserProductID
        public int BrandSafetyTypeId { get; set; } // BrandSafetyTypeID
        public int BrandSafetyLevelId { get; set; } // BrandSafetyLevelID
        
        public BrandSafetyLookup()
        {
            InitializePartial();
        }

        partial void InitializePartial();
    }

    // BrandSafetySiteCounts
    public partial class BrandSafetySiteCount : Entity
    {
        public int Id { get; set; } // ID (Primary key)
        public long AllSitesCount { get; set; } // AllSitesCount
        public long SystemBlackListedSitesCount { get; set; } // SystemBlackListedSitesCount
        public long SystemWhiteListedSitesCount { get; set; } // SystemWhiteListedSitesCount
        
        public BrandSafetySiteCount()
        {
            InitializePartial();
        }

        partial void InitializePartial();
    }

    // BuyerAccountBILookup
    public partial class BuyerAccountBiLookup : Entity
    {
        public int BuyerAccountId { get; set; } // BuyerAccountID
        public Guid BuyerAccountUuid { get; set; } // BuyerAccountUuid
        public string CompanyName { get; set; } // CompanyName
        public string BuyingGroupName { get; set; } // BuyingGroupName
        public string AddressLine1 { get; set; } // AddressLine1
        public string AddressLine2 { get; set; } // AddressLine2
        public string City { get; set; } // City
        public string StateProvince { get; set; } // StateProvince
        public string PostalCode { get; set; } // PostalCode
        public int GeoCountryId { get; set; } // GeoCountryID
        public int? CurrencyId { get; set; } // CurrencyID
        public DateTime? TermsConditionsAgreedDate { get; set; } // TermsConditionsAgreedDate
        public bool IsAgent { get; set; } // IsAgent
        public decimal CreditLimit { get; set; } // CreditLimit
        public DateTime? TrialEndDate { get; set; } // TrialEndDate
        public int? BillingTypeId { get; set; } // BillingTypeID
        public int? TimeZoneId { get; set; } // TimeZoneID
        public Guid? CommercialContactUserId { get; set; } // CommercialContactUserID
        public int? PaymentTermsId { get; set; } // PaymentTermsID
        public int? BillingCycleId { get; set; } // BillingCycleID
        public decimal Brokerage { get; set; } // Brokerage
        public int LanguageId { get; set; } // LanguageID
        public bool IsActive { get; set; } // IsActive
        public bool IsDeleted { get; set; } // IsDeleted
        public DateTime UtcCreatedDateTime { get; set; } // UtcCreatedDateTime
        public DateTime UtcModifiedDateTime { get; set; } // UtcModifiedDateTime
        public int CompanyTypeId { get; set; } // CompanyTypeID
        public bool IsApproved { get; set; } // IsApproved
        public decimal BrandSafetyFee { get; set; } // BrandSafetyFee
        public decimal ServiceFee { get; set; } // ServiceFee
        public long? ThemeId { get; set; } // ThemeID
        public string Website { get; set; } // Website
        public int? MonthlyCreditId { get; set; } // MonthlyCreditId
        public string BillingContactEmail { get; set; } // BillingContactEmail
        
        public BuyerAccountBiLookup()
        {
            InitializePartial();
        }

        partial void InitializePartial();
    }

    // BuyerAccountCreditLimitLookup
    public partial class BuyerAccountCreditLimitLookup : Entity
    {
        public int BuyerAccountId { get; set; } // BuyerAccountID
        public string CompanyName { get; set; } // CompanyName
        public decimal CreditLimit { get; set; } // CreditLimit
        public string Iso4217Code { get; set; } // ISO4217Code
        
        public BuyerAccountCreditLimitLookup()
        {
            InitializePartial();
        }

        partial void InitializePartial();
    }

    // BuyerAccountLookup
    public partial class BuyerAccountLookup : Entity
    {
        public int BuyerAccountId { get; set; } // BuyerAccountID
        public string CompanyName { get; set; } // CompanyName
        public string BuyingGroupName { get; set; } // BuyingGroupName
        public string CurrencyCode { get; set; } // CurrencyCode
        public string CurrencyName { get; set; } // CurrencyName
        public decimal? LocalToUsdRate { get; set; } // LocalToUSDRate
        public string TimeZoneCode { get; set; } // TimeZoneCode
        public int MinutesOffset { get; set; } // MinutesOffset
        
        public BuyerAccountLookup()
        {
            InitializePartial();
        }

        partial void InitializePartial();
    }

    // BuyerAccountRecentAdGroupLookup
    public partial class BuyerAccountRecentAdGroupLookup : Entity
    {
        public int BuyerAccountId { get; set; } // BuyerAccountID
        public string AdGroupLongId { get; set; } // AdGroupLongID
        
        public BuyerAccountRecentAdGroupLookup()
        {
            InitializePartial();
        }

        partial void InitializePartial();
    }

    // BuyerAccountShardLookup
    public partial class BuyerAccountShardLookup : Entity
    {
        public int BuyerAccountId { get; set; } // BuyerAccountID
        public int ShardId { get; set; } // ShardID
        
        public BuyerAccountShardLookup()
        {
            InitializePartial();
        }

        partial void InitializePartial();
    }

    // CampaignBILookup
    public partial class CampaignBiLookup : Entity
    {
        public int CampaignId { get; set; } // CampaignID
        public Guid CampaignUuid { get; set; } // CampaignUuid
        public int BuyerAccountId { get; set; } // BuyerAccountID
        public int AdvertiserProductId { get; set; } // AdvertiserProductID
        public string CampaignName { get; set; } // CampaignName
        public string AgencyReference { get; set; } // AgencyReference
        public bool IsDeleted { get; set; } // IsDeleted
        public DateTime UtcCreatedDateTime { get; set; } // UtcCreatedDateTime
        public DateTime UtcModifiedDateTime { get; set; } // UtcModifiedDateTime
        public int? CloneFromCampaignId { get; set; } // CloneFromCampaignID
        public decimal Margin { get; set; } // Margin
        
        public CampaignBiLookup()
        {
            InitializePartial();
        }

        partial void InitializePartial();
    }

    // CampaignLookup
    public partial class CampaignLookup : Entity
    {
        public int CampaignId { get; set; } // CampaignID
        public string RtbCampaignId { get; set; } // RtbCampaignID
        public string CampaignName { get; set; } // CampaignName
        public string AgencyReference { get; set; } // AgencyReference
        public int AdvertiserProductId { get; set; } // AdvertiserProductID
        public string ProductName { get; set; } // ProductName
        public int ProductCategoryId { get; set; } // ProductCategoryID
        public string ProductCategoryName { get; set; } // ProductCategoryName
        public int IndustryCategoryId { get; set; } // IndustryCategoryID
        public string IndustryCategoryName { get; set; } // IndustryCategoryName
        public int AdvertiserId { get; set; } // AdvertiserID
        public string AdvertiserName { get; set; } // AdvertiserName
        public int BuyerAccountId { get; set; } // BuyerAccountID
        public string CompanyName { get; set; } // CompanyName
        public string BuyingGroupName { get; set; } // BuyingGroupName
        public string CurrencyCode { get; set; } // CurrencyCode
        public string CurrencyName { get; set; } // CurrencyName
        public decimal? LocalToUsdRate { get; set; } // LocalToUSDRate
        public string TimeZoneCode { get; set; } // TimeZoneCode
        public int MinutesOffset { get; set; } // MinutesOffset
        
        public CampaignLookup()
        {
            InitializePartial();
        }

        partial void InitializePartial();
    }

    // Conversion
    public partial class Conversion : Entity
    {
        public DateTime UtcDateTime { get; set; } // UtcDateTime
        public DateTime LocalDateTime { get; set; } // LocalDateTime
        public int BuyerAccountId { get; set; } // BuyerAccountID
        public int CampaignId { get; set; } // CampaignID
        public int AdGroupId { get; set; } // AdGroupID
        public int AdvertiserId { get; set; } // AdvertiserID
        public int PartnerId { get; set; } // PartnerID
        public string SegmentId { get; set; } // SegmentID
        public string Id { get; set; } // ID
        public string ClientIp { get; set; } // ClientIp
        public string OrderId { get; set; } // OrderID
        public int ConversionQuantity { get; set; } // ConversionQuantity
        public string RevenueCurrency { get; set; } // RevenueCurrency
        public decimal RevenueToUsdRate { get; set; } // RevenueToUsdRate
        public long PostViewConversions { get; set; } // PostViewConversions
        public long PostClickConversions { get; set; } // PostClickConversions
        public long RevenueUsd { get; set; } // RevenueUsd
        
        public Conversion()
        {
            InitializePartial();
        }

        partial void InitializePartial();
    }

    // ConversionCombined
    public partial class ConversionCombined : Entity
    {
        public DateTime UtcDateTime { get; set; } // UtcDateTime
        public DateTime LocalDateTime { get; set; } // LocalDateTime
        public int BuyerAccountId { get; set; } // BuyerAccountID
        public int CampaignId { get; set; } // CampaignID
        public int AdGroupId { get; set; } // AdGroupID
        public int AdvertiserId { get; set; } // AdvertiserID
        public int PartnerId { get; set; } // PartnerID
        public string SegmentId { get; set; } // SegmentID
        public string Id { get; set; } // ID
        public string ClientIp { get; set; } // ClientIp
        public string OrderId { get; set; } // OrderID
        public int ConversionQuantity { get; set; } // ConversionQuantity
        public string RevenueCurrency { get; set; } // RevenueCurrency
        public decimal RevenueToUsdRate { get; set; } // RevenueToUsdRate
        public long PostViewConversions { get; set; } // PostViewConversions
        public long PostClickConversions { get; set; } // PostClickConversions
        public long RevenueUsd { get; set; } // RevenueUsd
        
        public ConversionCombined()
        {
            InitializePartial();
        }

        partial void InitializePartial();
    }

    // ConversionException
    public partial class ConversionException : Entity
    {
        public DateTime UtcDateTime { get; set; } // UtcDateTime
        public DateTime LocalDateTime { get; set; } // LocalDateTime
        public int BuyerAccountId { get; set; } // BuyerAccountID
        public int CampaignId { get; set; } // CampaignID
        public int AdGroupId { get; set; } // AdGroupID
        public int AdvertiserId { get; set; } // AdvertiserID
        public int PartnerId { get; set; } // PartnerID
        public string SegmentId { get; set; } // SegmentID
        public string Id { get; set; } // ID
        public string ClientIp { get; set; } // ClientIp
        public string OrderId { get; set; } // OrderID
        public int ConversionQuantity { get; set; } // ConversionQuantity
        public string RevenueCurrency { get; set; } // RevenueCurrency
        public decimal RevenueToUsdRate { get; set; } // RevenueToUsdRate
        public long PostViewConversions { get; set; } // PostViewConversions
        public long PostClickConversions { get; set; } // PostClickConversions
        public long RevenueUsd { get; set; } // RevenueUsd
        
        public ConversionException()
        {
            InitializePartial();
        }

        partial void InitializePartial();
    }

    // ConversionExceptionReportID
    public partial class ConversionExceptionReportId : Entity
    {
        public DateTime UtcDateTime { get; set; } // UtcDateTime
        public DateTime LocalDateTime { get; set; } // LocalDateTime
        public int BuyerAccountId { get; set; } // BuyerAccountID
        public int CampaignId { get; set; } // CampaignID
        public int AdGroupId { get; set; } // AdGroupID
        public int AdvertiserId { get; set; } // AdvertiserID
        public int PartnerId { get; set; } // PartnerID
        public string SegmentId { get; set; } // SegmentID
        public string Id { get; set; } // ID
        public string ClientIp { get; set; } // ClientIp
        public string OrderId { get; set; } // OrderID
        public int ConversionQuantity { get; set; } // ConversionQuantity
        public string RevenueCurrency { get; set; } // RevenueCurrency
        public decimal RevenueToUsdRate { get; set; } // RevenueToUsdRate
        public long PostViewConversions { get; set; } // PostViewConversions
        public long PostClickConversions { get; set; } // PostClickConversions
        public long RevenueUsd { get; set; } // RevenueUsd
        public long ReportId { get; set; } // ReportID
        
        public ConversionExceptionReportId()
        {
            InitializePartial();
        }

        partial void InitializePartial();
    }

    // ConversionImport
    public partial class ConversionImport : Entity
    {
        public DateTime UtcDateTime { get; set; } // UtcDateTime
        public DateTime LocalDateTime { get; set; } // LocalDateTime
        public int BuyerAccountId { get; set; } // BuyerAccountID
        public int CampaignId { get; set; } // CampaignID
        public int AdGroupId { get; set; } // AdGroupID
        public int AdvertiserId { get; set; } // AdvertiserID
        public int PartnerId { get; set; } // PartnerID
        public string SegmentId { get; set; } // SegmentID
        public string Id { get; set; } // ID
        public string ClientIp { get; set; } // ClientIp
        public string OrderId { get; set; } // OrderID
        public int ConversionQuantity { get; set; } // ConversionQuantity
        public string RevenueCurrency { get; set; } // RevenueCurrency
        public decimal RevenueToUsdRate { get; set; } // RevenueToUsdRate
        public long PostViewConversions { get; set; } // PostViewConversions
        public long PostClickConversions { get; set; } // PostClickConversions
        public long RevenueUsd { get; set; } // RevenueUsd
        
        public ConversionImport()
        {
            InitializePartial();
        }

        partial void InitializePartial();
    }

    // ConversionImportReportID
    public partial class ConversionImportReportId : Entity
    {
        public DateTime UtcDateTime { get; set; } // UtcDateTime
        public DateTime LocalDateTime { get; set; } // LocalDateTime
        public int BuyerAccountId { get; set; } // BuyerAccountID
        public int CampaignId { get; set; } // CampaignID
        public int AdGroupId { get; set; } // AdGroupID
        public int AdvertiserId { get; set; } // AdvertiserID
        public int PartnerId { get; set; } // PartnerID
        public string SegmentId { get; set; } // SegmentID
        public string Id { get; set; } // ID
        public string ClientIp { get; set; } // ClientIp
        public string OrderId { get; set; } // OrderID
        public int ConversionQuantity { get; set; } // ConversionQuantity
        public string RevenueCurrency { get; set; } // RevenueCurrency
        public decimal RevenueToUsdRate { get; set; } // RevenueToUsdRate
        public long PostViewConversions { get; set; } // PostViewConversions
        public long PostClickConversions { get; set; } // PostClickConversions
        public long RevenueUsd { get; set; } // RevenueUsd
        public long ReportId { get; set; } // ReportID
        
        public ConversionImportReportId()
        {
            InitializePartial();
        }

        partial void InitializePartial();
    }

    // ConversionReportID
    public partial class ConversionReportId : Entity
    {
        public DateTime UtcDateTime { get; set; } // UtcDateTime
        public DateTime LocalDateTime { get; set; } // LocalDateTime
        public int BuyerAccountId { get; set; } // BuyerAccountID
        public int CampaignId { get; set; } // CampaignID
        public int AdGroupId { get; set; } // AdGroupID
        public int AdvertiserId { get; set; } // AdvertiserID
        public int PartnerId { get; set; } // PartnerID
        public string SegmentId { get; set; } // SegmentID
        public string Id { get; set; } // ID
        public string ClientIp { get; set; } // ClientIp
        public string OrderId { get; set; } // OrderID
        public int ConversionQuantity { get; set; } // ConversionQuantity
        public string RevenueCurrency { get; set; } // RevenueCurrency
        public decimal RevenueToUsdRate { get; set; } // RevenueToUsdRate
        public long PostViewConversions { get; set; } // PostViewConversions
        public long PostClickConversions { get; set; } // PostClickConversions
        public long RevenueUsd { get; set; } // RevenueUsd
        public long ReportId { get; set; } // ReportID
        
        public ConversionReportId()
        {
            InitializePartial();
        }

        partial void InitializePartial();
    }

    // CountrySalesRegionLookup
    public partial class CountrySalesRegionLookup : Entity
    {
        public int GeoCountryId { get; set; } // GeoCountryID
        public int SalesRegionId { get; set; } // SalesRegionID
        
        public CountrySalesRegionLookup()
        {
            InitializePartial();
        }

        partial void InitializePartial();
    }

    // CreativeBILookup
    public partial class CreativeBiLookup : Entity
    {
        public int CreativeId { get; set; } // CreativeID
        public Guid CreativeUuid { get; set; } // CreativeUuid
        public int BuyerAccountId { get; set; } // BuyerAccountID
        public string CreativeName { get; set; } // CreativeName
        public int CreativeTypeId { get; set; } // CreativeTypeID
        public int CreativeSizeId { get; set; } // CreativeSizeID
        public int? CreativeFileId { get; set; } // CreativeFileID
        public int? AdTagTemplateId { get; set; } // AdTagTemplateID
        public string ClickThroughUrl { get; set; } // ClickThroughURL
        public string ClickTrackerUrl { get; set; } // ClickTrackerURL
        public string BeaconUrl { get; set; } // BeaconURL
        public int CreativeStatusId { get; set; } // CreativeStatusID
        public bool IsDeleted { get; set; } // IsDeleted
        public DateTime UtcCreatedDateTime { get; set; } // UtcCreatedDateTime
        public DateTime UtcModifiedDateTime { get; set; } // UtcModifiedDateTime
        public int LanguageId { get; set; } // LanguageID
        public int? CloneFromCreativeId { get; set; } // CloneFromCreativeID
        public string VideoSpecUrl { get; set; } // VideoSpecUrl
        public bool? UrlValidated { get; set; } // UrlValidated
        public int ExpandableDirectionId { get; set; } // ExpandableDirectionID
        public int AdvertiserProductId { get; set; } // AdvertiserProductID
        
        public CreativeBiLookup()
        {
            InitializePartial();
        }

        partial void InitializePartial();
    }

    // DateLookup
    public partial class DateLookup : Entity
    {
        public DateTime DayDate { get; set; } // DayDate (Primary key)
        public DateTime? YearDate { get; set; } // YearDate
        public DateTime? MonthDate { get; set; } // MonthDate
        public DateTime? WeekDate { get; set; } // WeekDate
        public DateTime? QuarterDate { get; set; } // QuarterDate
        public int? MonthDay { get; set; } // MonthDay
        public int? MonthDays { get; set; } // MonthDays
        public string MonthName { get; set; } // MonthName
        public string MonthShortName { get; set; } // MonthShortName
        public int? CalendarYear { get; set; } // CalendarYear
        public int? CalendarMonth { get; set; } // CalendarMonth
        public int? CalendarWeek { get; set; } // CalendarWeek
        public int? CalendarQuarter { get; set; } // CalendarQuarter
        public string LeapYear { get; set; } // LeapYear
        public int? MonthWeek { get; set; } // MonthWeek
        public int? YearDay { get; set; } // YearDay
        public int? WeekDay { get; set; } // WeekDay
        public string DayName { get; set; } // DayName
        public string DayShortName { get; set; } // DayShortName
        public string NorthSeason { get; set; } // NorthSeason
        public string SouthSeason { get; set; } // SouthSeason
        public int? WeekNo { get; set; } // WeekNo
        public DateTime? MonthEndDate { get; set; } // MonthEndDate
        
        public DateLookup()
        {
            InitializePartial();
        }

        partial void InitializePartial();
    }

    // DealBILookup
    public partial class DealBiLookup : Entity
    {
        public int DealId { get; set; } // DealID
        public string DealKey { get; set; } // DealKey
        public string DealName { get; set; } // DealName
        public int PublisherId { get; set; } // PublisherID
        public int BuyerAccountId { get; set; } // BuyerAccountID
        public int DealTypeId { get; set; } // DealTypeID
        public int FloorPriceCents { get; set; } // FloorPriceCents
        public int CeilingPriceCents { get; set; } // CeilingPriceCents
        public DateTime UtcStartDateTime { get; set; } // UtcStartDateTime
        public DateTime UtcEndDateTime { get; set; } // UtcEndDateTime
        public int DealStatusId { get; set; } // DealStatusID
        public DateTime UtcCreatedDateTime { get; set; } // UtcCreatedDateTime
        public DateTime? UtcModifiedDateTime { get; set; } // UtcModifiedDateTime
        
        public DealBiLookup()
        {
            InitializePartial();
        }

        partial void InitializePartial();
    }

    // DirectBuyDefaultImpression
    public partial class DirectBuyDefaultImpression : Entity
    {
        public string DealKey { get; set; } // DealKey
        public int AdSlotId { get; set; } // AdSlotID
        public int BuyerAccountId { get; set; } // BuyerAccountID
        public long DefaultImpressions { get; set; } // DefaultImpressions
        public DateTime UtcDate { get; set; } // UtcDate
        public DateTime LocalDate { get; set; } // LocalDate
        public DateTime UtcDateTime { get; set; } // UtcDateTime
        public DateTime LocalDateTime { get; set; } // LocalDateTime
        public long ReportId { get; set; } // ReportID
        
        public DirectBuyDefaultImpression()
        {
            InitializePartial();
        }

        partial void InitializePartial();
    }

    // DirectBuyDefaultImpressionImport
    public partial class DirectBuyDefaultImpressionImport : Entity
    {
        public string DealKey { get; set; } // DealKey
        public int AdSlotId { get; set; } // AdSlotID
        public int BuyerAccountId { get; set; } // BuyerAccountID
        public long DefaultImpressions { get; set; } // DefaultImpressions
        public DateTime UtcDate { get; set; } // UtcDate
        public DateTime LocalDate { get; set; } // LocalDate
        public DateTime UtcDateTime { get; set; } // UtcDateTime
        public DateTime LocalDateTime { get; set; } // LocalDateTime
        public long ReportId { get; set; } // ReportID
        
        public DirectBuyDefaultImpressionImport()
        {
            InitializePartial();
        }

        partial void InitializePartial();
    }

    // DirectBuyDefaultImpressionImportReportID
    public partial class DirectBuyDefaultImpressionImportReportId : Entity
    {
        public string DealKey { get; set; } // DealKey
        public int AdSlotId { get; set; } // AdSlotID
        public int BuyerAccountId { get; set; } // BuyerAccountID
        public long DefaultImpressions { get; set; } // DefaultImpressions
        public DateTime UtcDate { get; set; } // UtcDate
        public DateTime LocalDate { get; set; } // LocalDate
        public DateTime UtcDateTime { get; set; } // UtcDateTime
        public DateTime LocalDateTime { get; set; } // LocalDateTime
        public long ReportId { get; set; } // ReportID
        
        public DirectBuyDefaultImpressionImportReportId()
        {
            InitializePartial();
        }

        partial void InitializePartial();
    }

    // DirectBuyDefaultImpressionReportID
    public partial class DirectBuyDefaultImpressionReportId : Entity
    {
        public string DealKey { get; set; } // DealKey
        public int AdSlotId { get; set; } // AdSlotID
        public int BuyerAccountId { get; set; } // BuyerAccountID
        public long DefaultImpressions { get; set; } // DefaultImpressions
        public DateTime UtcDate { get; set; } // UtcDate
        public DateTime LocalDate { get; set; } // LocalDate
        public DateTime UtcDateTime { get; set; } // UtcDateTime
        public DateTime LocalDateTime { get; set; } // LocalDateTime
        public long ReportId { get; set; } // ReportID
        
        public DirectBuyDefaultImpressionReportId()
        {
            InitializePartial();
        }

        partial void InitializePartial();
    }

    // DomainStats
    public partial class DomainStat : Entity
    {
        public string DomainName { get; set; } // DomainName
        public int GeoCountryId { get; set; } // GeoCountryID
        public long? Bids { get; set; } // Bids
        public decimal? Cpm { get; set; } // CPM
        
        public DomainStat()
        {
            InitializePartial();
        }

        partial void InitializePartial();
    }

    // DomainStats_Alternate
    public partial class DomainStatsAlternate : Entity
    {
        public string DomainName { get; set; } // DomainName
        public int GeoCountryId { get; set; } // GeoCountryID
        public long? Bids { get; set; } // Bids
        public decimal? Cpm { get; set; } // CPM
        
        public DomainStatsAlternate()
        {
            InitializePartial();
        }

        partial void InitializePartial();
    }

    // DomainStats_Import
    public partial class DomainStatsImport : Entity
    {
        public string DomainName { get; set; } // DomainName
        public int GeoCountryId { get; set; } // GeoCountryID
        public long? Bids { get; set; } // Bids
        public decimal? Cpm { get; set; } // CPM
        
        public DomainStatsImport()
        {
            InitializePartial();
        }

        partial void InitializePartial();
    }

    // ExchangeSpendSummaryLookup
    public partial class ExchangeSpendSummaryLookup : Entity
    {
        public int PartnerId { get; set; } // PartnerID
        public DateTime? ReportingDate { get; set; } // ReportingDate
        public long? Impressions { get; set; } // Impressions
        public decimal? MediaCostUsd { get; set; } // MediaCostUsd
        
        public ExchangeSpendSummaryLookup()
        {
            InitializePartial();
        }

        partial void InitializePartial();
    }

    // GeoCityLookup
    public partial class GeoCityLookup : Entity
    {
        public int GeoCityId { get; set; } // GeoCityID
        public string CityName { get; set; } // CityName
        public double Latitude { get; set; } // Latitude
        public double Longitude { get; set; } // Longitude
        public int GeoMetroId { get; set; } // GeoMetroID
        public string MetroName { get; set; } // MetroName
        public int GeoRegionId { get; set; } // GeoRegionID
        public string RegionCode { get; set; } // RegionCode
        public string RegionName { get; set; } // RegionName
        public string RegionShortName { get; set; } // RegionShortName
        public int GeoCountryId { get; set; } // GeoCountryID
        public string Iso3166Code { get; set; } // ISO3166Code
        public string CountryName { get; set; } // CountryName
        public bool IsGeoTarget { get; set; } // IsGeoTarget
        
        public GeoCityLookup()
        {
            InitializePartial();
        }

        partial void InitializePartial();
    }

    // GeoCountryLookup
    public partial class GeoCountryLookup : Entity
    {
        public int GeoCountryId { get; set; } // GeoCountryID
        public string Iso3166Code { get; set; } // ISO3166Code
        public string CountryName { get; set; } // CountryName
        public bool IsGeoTarget { get; set; } // IsGeoTarget
        
        public GeoCountryLookup()
        {
            InitializePartial();
        }

        partial void InitializePartial();
    }

    // GeoMetroLookup
    public partial class GeoMetroLookup : Entity
    {
        public int GeoMetroId { get; set; } // GeoMetroID
        public string MetroName { get; set; } // MetroName
        public int GeoRegionId { get; set; } // GeoRegionID
        public string RegionCode { get; set; } // RegionCode
        public string RegionName { get; set; } // RegionName
        public string RegionShortName { get; set; } // RegionShortName
        public int GeoCountryId { get; set; } // GeoCountryID
        public string Iso3166Code { get; set; } // ISO3166Code
        public string CountryName { get; set; } // CountryName
        public bool IsGeoTarget { get; set; } // IsGeoTarget
        
        public GeoMetroLookup()
        {
            InitializePartial();
        }

        partial void InitializePartial();
    }

    // GeoRegionLookup
    public partial class GeoRegionLookup : Entity
    {
        public int GeoRegionId { get; set; } // GeoRegionID
        public string RegionCode { get; set; } // RegionCode
        public string RegionName { get; set; } // RegionName
        public string RegionShortName { get; set; } // RegionShortName
        public int GeoCountryId { get; set; } // GeoCountryID
        public string Iso3166Code { get; set; } // ISO3166Code
        public string CountryName { get; set; } // CountryName
        public bool IsGeoTarget { get; set; } // IsGeoTarget
        
        public GeoRegionLookup()
        {
            InitializePartial();
        }

        partial void InitializePartial();
    }

    // ImportSummary
    public partial class ImportSummary : Entity
    {
        public string TableName { get; set; } // TableName (Primary key)
        public DateTime ProcessedUtcDateTime { get; set; } // ProcessedUtcDateTime (Primary key)
        public DateTime UtcDateTime { get; set; } // UtcDateTime (Primary key)
        public DateTime UtcDate { get; set; } // UtcDate
        public long Bids { get; set; } // Bids
        public long Impressions { get; set; } // Impressions
        public long Clicks { get; set; } // Clicks
        public long Conversions { get; set; } // Conversions
        public long PostViewConversions { get; set; } // PostViewConversions
        public long PostClickConversions { get; set; } // PostClickConversions
        public long MediaCostUsdMicros { get; set; } // MediaCostUsdMicros
        public long MediaCostLocalMicros { get; set; } // MediaCostLocalMicros
        public long DataCostLocalMicros { get; set; } // DataCostLocalMicros
        public long InvalidImpressions { get; set; } // InvalidImpressions
        public long InvalidClicks { get; set; } // InvalidClicks
        public long FeesUsdSuperMicros { get; set; } // FeesUsdSuperMicros
        public long FeesLocalSuperMicros { get; set; } // FeesLocalSuperMicros
        public long? AdSlotDurationInSeconds { get; set; } // AdSlotDurationInSeconds
        public long? RawViews { get; set; } // RawViews
        public long? IabViews { get; set; } // IabViews
        public long? ViewDurationInSeconds { get; set; } // ViewDurationInSeconds
        
        public ImportSummary()
        {
            InitializePartial();
        }

        partial void InitializePartial();
    }

    // ImportSummaryReportID
    public partial class ImportSummaryReportId : Entity
    {
        public string TableName { get; set; } // TableName (Primary key)
        public DateTime ProcessedUtcDateTime { get; set; } // ProcessedUtcDateTime (Primary key)
        public long ReportId { get; set; } // ReportID (Primary key)
        public DateTime UtcDateTime { get; set; } // UtcDateTime (Primary key)
        public DateTime UtcDate { get; set; } // UtcDate
        public long Bids { get; set; } // Bids
        public long Impressions { get; set; } // Impressions
        public long Clicks { get; set; } // Clicks
        public long Conversions { get; set; } // Conversions
        public long PostViewConversions { get; set; } // PostViewConversions
        public long PostClickConversions { get; set; } // PostClickConversions
        public long MediaCostUsdMicros { get; set; } // MediaCostUsdMicros
        public long MediaCostLocalMicros { get; set; } // MediaCostLocalMicros
        public long DataCostLocalMicros { get; set; } // DataCostLocalMicros
        public long InvalidImpressions { get; set; } // InvalidImpressions
        public long InvalidClicks { get; set; } // InvalidClicks
        public long FeesUsdSuperMicros { get; set; } // FeesUsdSuperMicros
        public long FeesLocalSuperMicros { get; set; } // FeesLocalSuperMicros
        public long? AdSlotDurationInSeconds { get; set; } // AdSlotDurationInSeconds
        public long? RawViews { get; set; } // RawViews
        public long? IabViews { get; set; } // IabViews
        public long? ViewDurationInSeconds { get; set; } // ViewDurationInSeconds
        
        public ImportSummaryReportId()
        {
            InitializePartial();
        }

        partial void InitializePartial();
    }

    // InventoryLookup
    public partial class InventoryLookup : Entity
    {
        public long InventoryId { get; set; } // InventoryID (Primary key)
        public int PartnerId { get; set; } // PartnerID
        public int PublisherId { get; set; } // PublisherID
        public long WebsiteId { get; set; } // WebsiteID
        public string WebsiteUrl { get; set; } // WebsiteUrl
        
        public InventoryLookup()
        {
            InitializePartial();
        }

        partial void InitializePartial();
    }

    // InventoryLookupException
    public partial class InventoryLookupException : Entity
    {
        public long InventoryId { get; set; } // InventoryID
        public int PartnerId { get; set; } // PartnerID
        public int PublisherId { get; set; } // PublisherID
        public long WebsiteId { get; set; } // WebsiteID
        public string WebsiteUrl { get; set; } // WebsiteUrl
        
        public InventoryLookupException()
        {
            InitializePartial();
        }

        partial void InitializePartial();
    }

    // InventoryLookupImport
    public partial class InventoryLookupImport : Entity
    {
        public long InventoryId { get; set; } // InventoryID
        public int PartnerId { get; set; } // PartnerID
        public int PublisherId { get; set; } // PublisherID
        public long WebsiteId { get; set; } // WebsiteID
        public string WebsiteUrl { get; set; } // WebsiteUrl
        
        public InventoryLookupImport()
        {
            InitializePartial();
        }

        partial void InitializePartial();
    }

    // JobHistory
    public partial class JobHistory : Entity
    {
        public string JobId { get; set; } // JobID
        public DateTime UtcDateTime { get; set; } // UtcDateTime
        
        public JobHistory()
        {
            InitializePartial();
        }

        partial void InitializePartial();
    }

    // LanguageLookup
    public partial class LanguageLookup : Entity
    {
        public int LanguageId { get; set; } // LanguageID
        public string LanguageCode { get; set; } // LanguageCode
        public string LanguageName { get; set; } // LanguageName
        
        public LanguageLookup()
        {
            InitializePartial();
        }

        partial void InitializePartial();
    }

    // PacingAndPricingHealth
    public partial class PacingAndPricingHealth : Entity
    {
        public int AdGroupId { get; set; } // AdGroupID
        public long? Impressions { get; set; } // Impressions
        public long? Clicks { get; set; } // Clicks
        public long? Conversions { get; set; } // Conversions
        public decimal? Spend { get; set; } // Spend
        public decimal? Cpm { get; set; } // Cpm
        public decimal? Cpc { get; set; } // Cpc
        public decimal? Cpa { get; set; } // Cpa
        public long? ImpressionsLast7Days { get; set; } // ImpressionsLast7Days
        public long? ClicksLast7Days { get; set; } // ClicksLast7Days
        public long? ConversionsLast7Days { get; set; } // ConversionsLast7Days
        public decimal? SpendLast7Days { get; set; } // SpendLast7Days
        public decimal? CpmLast7Days { get; set; } // CpmLast7Days
        public decimal? CpcLast7Days { get; set; } // CpcLast7Days
        public decimal? CpaLast7Days { get; set; } // CpaLast7Days
        public long? ImpressionsLast30Days { get; set; } // ImpressionsLast30Days
        public long? ClicksLast30Days { get; set; } // ClicksLast30Days
        public long? ConversionsLast30Days { get; set; } // ConversionsLast30Days
        public decimal? SpendLast30Days { get; set; } // SpendLast30Days
        public decimal? CpmLast30Days { get; set; } // CpmLast30Days
        public decimal? CpcLast30Days { get; set; } // CpcLast30Days
        public decimal? CpaLast30Days { get; set; } // CpaLast30Days
        public decimal? Tpi { get; set; } // TPI
        public double? Spi { get; set; } // SPI
        public int PricingHealth { get; set; } // PricingHealth
        public int PacingHealth { get; set; } // PacingHealth
        
        public PacingAndPricingHealth()
        {
            InitializePartial();
        }

        partial void InitializePartial();
    }

    // PartnerBILookup
    public partial class PartnerBiLookup : Entity
    {
        public int PartnerId { get; set; } // PartnerID
        public string PartnerName { get; set; } // PartnerName
        public bool IsExchangeTarget { get; set; } // IsExchangeTarget
        public int? TimeZoneId { get; set; } // TimeZoneID
        
        public PartnerBiLookup()
        {
            InitializePartial();
        }

        partial void InitializePartial();
    }

    // PartnerLookup
    public partial class PartnerLookup : Entity
    {
        public int PartnerId { get; set; } // PartnerID
        public string PartnerName { get; set; } // PartnerName
        
        public PartnerLookup()
        {
            InitializePartial();
        }

        partial void InitializePartial();
    }

    // PlacementBILookup
    public partial class PlacementBiLookup : Entity
    {
        public int PlacementId { get; set; } // PlacementID
        public int AdGroupId { get; set; } // AdGroupID
        public int CreativeId { get; set; } // CreativeID
        public int BuyerAccountId { get; set; } // BuyerAccountID
        public int PlacementStatusId { get; set; } // PlacementStatusID
        public bool IsDeleted { get; set; } // IsDeleted
        public DateTime UtcCreatedDateTime { get; set; } // UtcCreatedDateTime
        public DateTime UtcModifiedDateTime { get; set; } // UtcModifiedDateTime
        public Guid PlacementUuid { get; set; } // PlacementUuid
        public int? CloneFromPlacementId { get; set; } // CloneFromPlacementID
        
        public PlacementBiLookup()
        {
            InitializePartial();
        }

        partial void InitializePartial();
    }

    // PublisherBILookup
    public partial class PublisherBiLookup : Entity
    {
        public int PublisherId { get; set; } // PublisherID
        public Guid PublisherUuid { get; set; } // PublisherUuid
        public string PublisherName { get; set; } // PublisherName
        public int PartnerId { get; set; } // PartnerID
        public string PartnerKey { get; set; } // PartnerKey
        public int PrivateMarketModeId { get; set; } // PrivateMarketModeID
        public bool IsActive { get; set; } // IsActive
        
        public PublisherBiLookup()
        {
            InitializePartial();
        }

        partial void InitializePartial();
    }

    // PublisherLookup
    public partial class PublisherLookup : Entity
    {
        public int PublisherId { get; set; } // PublisherID
        public string PublisherName { get; set; } // PublisherName
        public int PartnerId { get; set; } // PartnerID
        
        public PublisherLookup()
        {
            InitializePartial();
        }

        partial void InitializePartial();
    }

    // SalesRegionLookup
    public partial class SalesRegionLookup : Entity
    {
        public int SalesRegionId { get; set; } // SalesRegionID
        public string SalesRegionName { get; set; } // SalesRegionName
        
        public SalesRegionLookup()
        {
            InitializePartial();
        }

        partial void InitializePartial();
    }

    // SchemaMigration
    public partial class SchemaMigration : Entity
    {
        public int SchemaVersion { get; set; } // SchemaVersion (Primary key)
        public DateTime? DateApplied { get; set; } // DateApplied
        
        public SchemaMigration()
        {
            InitializePartial();
        }

        partial void InitializePartial();
    }

    // Segment
    public partial class Segment : Entity
    {
        public string RtbSegmentId { get; set; } // RtbSegmentID
        public DateTime UtcDate { get; set; } // UtcDate
        public DateTime LocalDate { get; set; } // LocalDate
        public DateTime UtcDateTime { get; set; } // UtcDateTime
        public DateTime LocalDateTime { get; set; } // LocalDateTime
        public int? MemberCount { get; set; } // MemberCount
        
        public Segment()
        {
            InitializePartial();
        }

        partial void InitializePartial();
    }

    // SegmentCombined
    public partial class SegmentCombined : Entity
    {
        public string RtbSegmentId { get; set; } // RtbSegmentID
        public DateTime UtcDate { get; set; } // UtcDate
        public DateTime LocalDate { get; set; } // LocalDate
        public DateTime UtcDateTime { get; set; } // UtcDateTime
        public DateTime LocalDateTime { get; set; } // LocalDateTime
        public int? MemberCount { get; set; } // MemberCount
        
        public SegmentCombined()
        {
            InitializePartial();
        }

        partial void InitializePartial();
    }

    // SegmentExceptionReportID
    public partial class SegmentExceptionReportId : Entity
    {
        public string RtbSegmentId { get; set; } // RtbSegmentID
        public DateTime? UtcDate { get; set; } // UtcDate
        public int? UtcHour { get; set; } // UtcHour
        public int? MemberCount { get; set; } // MemberCount
        public long ReportId { get; set; } // ReportID
        
        public SegmentExceptionReportId()
        {
            InitializePartial();
        }

        partial void InitializePartial();
    }

    // SegmentImport
    public partial class SegmentImport : Entity
    {
        public string RtbSegmentId { get; set; } // RtbSegmentID
        public DateTime UtcDate { get; set; } // UtcDate
        public int UtcHour { get; set; } // UtcHour
        public int MemberCount { get; set; } // MemberCount
        
        public SegmentImport()
        {
            InitializePartial();
        }

        partial void InitializePartial();
    }

    // SegmentImportReportID
    public partial class SegmentImportReportId : Entity
    {
        public string RtbSegmentId { get; set; } // RtbSegmentID
        public DateTime UtcDate { get; set; } // UtcDate
        public int UtcHour { get; set; } // UtcHour
        public int MemberCount { get; set; } // MemberCount
        public long ReportId { get; set; } // ReportID
        
        public SegmentImportReportId()
        {
            InitializePartial();
        }

        partial void InitializePartial();
    }

    // SegmentLookup
    public partial class SegmentLookup : Entity
    {
        public int SegmentId { get; set; } // SegmentID
        public string RtbSegmentId { get; set; } // RtbSegmentID
        public DateTime? ThirdPartyUtcStartDate { get; set; } // ThirdPartyUtcStartDate
        public DateTime? ThirdPartyUtcEndDate { get; set; } // ThirdPartyUtcEndDate
        public int? BuyerAccountId { get; set; } // BuyerAccountID
        public string CompanyName { get; set; } // CompanyName
        public string SegmentName { get; set; } // SegmentName
        public int SegmentTypeId { get; set; } // SegmentTypeID
        public int? Uniques { get; set; } // Uniques
        public int AttributionWindowInMinutes { get; set; } // AttributionWindowInMinutes
        public int? RecencyInDays { get; set; } // RecencyInDays
        public int RecencyInMinutes { get; set; } // RecencyInMinutes
        public int PostViewLifeTimeInMinutes { get; set; } // PostViewLifeTimeInMinutes
        public int PostClickLifeTimeInMinutes { get; set; } // PostClickLifeTimeInMinutes
        public string LastActivityTimestamp { get; set; } // LastActivityTimestamp
        public int SegmentStatusId { get; set; } // SegmentStatusID
        public int? TimeZoneId { get; set; } // TimeZoneID
        public int? MinutesOffset { get; set; } // MinutesOffset
        public int? HourOffset { get; set; } // HourOffset
        
        public SegmentLookup()
        {
            InitializePartial();
        }

        partial void InitializePartial();
    }

    // SegmentLookup_new
    public partial class SegmentLookupNew : Entity
    {
        public string RtbSegmentId { get; set; } // RtbSegmentID
        public int ShortSegmentId { get; set; } // short_segment_id
        public string SegmentName { get; set; } // segment_name
        public int? BuyerId { get; set; } // buyer_id
        public string BuyerName { get; set; } // buyer_name
        public int AttribWindowMins { get; set; } // attrib_window_mins
        public int ViewWindowMins { get; set; } // view_window_mins
        public int ClickWindowMins { get; set; } // click_window_mins
        
        public SegmentLookupNew()
        {
            InitializePartial();
        }

        partial void InitializePartial();
    }

    // SegmentReportID
    public partial class SegmentReportId : Entity
    {
        public string RtbSegmentId { get; set; } // RtbSegmentID
        public DateTime UtcDate { get; set; } // UtcDate
        public DateTime LocalDate { get; set; } // LocalDate
        public DateTime UtcDateTime { get; set; } // UtcDateTime
        public DateTime LocalDateTime { get; set; } // LocalDateTime
        public int? MemberCount { get; set; } // MemberCount
        public long ReportId { get; set; } // ReportID
        
        public SegmentReportId()
        {
            InitializePartial();
        }

        partial void InitializePartial();
    }

    // ThirdPartyPlacementLookup
    public partial class ThirdPartyPlacementLookup : Entity
    {
        public int PlacementId { get; set; } // PlacementID
        public string ThirdPartyPlacementId { get; set; } // ThirdPartyPlacementID
        
        public ThirdPartyPlacementLookup()
        {
            InitializePartial();
        }

        partial void InitializePartial();
    }

    // VideoCreativeAnalyticsReportID
    public partial class VideoCreativeAnalyticsReportId : Entity
    {
        public int AdvertiserId { get; set; } // AdvertiserID
        public string AdvertiserName { get; set; } // AdvertiserName
        public int BuyerAccountId { get; set; } // BuyerAccountID
        public string CompanyName { get; set; } // CompanyName
        public int AdvertiserProductId { get; set; } // AdvertiserProductID
        public string ProductName { get; set; } // ProductName
        public int CampaignId { get; set; } // CampaignID
        public string CampaignName { get; set; } // CampaignName
        public int AdGroupId { get; set; } // AdGroupID
        public string CampaignStatusName { get; set; } // CampaignStatusName
        public string RtbAdGroupId { get; set; } // RtbAdGroupID
        public string AdGroupName { get; set; } // AdGroupName
        public int PlacementId { get; set; } // PlacementID
        public int PartnerId { get; set; } // PartnerID
        public string AdName { get; set; } // AdName
        public int? Height { get; set; } // Height
        public int? Width { get; set; } // Width
        public DateTime UtcDate { get; set; } // UtcDate
        public DateTime UtcDateTime { get; set; } // UtcDateTime
        public DateTime LocalDate { get; set; } // LocalDate
        public DateTime LocalDateTime { get; set; } // LocalDateTime
        public long Bids { get; set; } // Bids
        public long Impressions { get; set; } // Impressions
        public long Clicks { get; set; } // Clicks
        public long UnfilteredClicks { get; set; } // UnfilteredClicks
        public long Conversions { get; set; } // Conversions
        public long PostViewConversions { get; set; } // PostViewConversions
        public long PostClickConversions { get; set; } // PostClickConversions
        public long? SpendLocalMicros { get; set; } // SpendLocalMicros
        public decimal? Spend { get; set; } // Spend
        public long? ClientCostLocalMicros { get; set; } // ClientCostLocalMicros
        public decimal? ClientCostDollars { get; set; } // ClientCostDollars
        public long MediaCostLocalMicros { get; set; } // MediaCostLocalMicros
        public long DataCostLocalMicros { get; set; } // DataCostLocalMicros
        public long? MediaClientCostLocalMicros { get; set; } // MediaClientCostLocalMicros
        public long? DataClientCostLocalMicros { get; set; } // DataClientCostLocalMicros
        public long? AdSlotDurationInSeconds { get; set; } // AdSlotDurationInSeconds
        public long? RawViews { get; set; } // RawViews
        public long? IabViews { get; set; } // IabViews
        public long? ViewDurationInSeconds { get; set; } // ViewDurationInSeconds
        public double? Ctr { get; set; } // CTR
        public decimal? Cpm { get; set; } // CPM
        public decimal? Cpc { get; set; } // CPC
        public decimal? Cpa { get; set; } // CPA
        public decimal? ClientCostCpm { get; set; } // ClientCostCpm
        public decimal? ClientCostCpc { get; set; } // ClientCostCpc
        public decimal? ClientCostCpa { get; set; } // ClientCostCpa
        public decimal? Cpms { get; set; } // CPMs
        public decimal? ClientCostCpms { get; set; } // ClientCostCpms
        public decimal? Cps { get; set; } // CPS
        public decimal? ClientCostCps { get; set; } // ClientCostCps
        public double? ViewableRatio { get; set; } // ViewableRatio
        public string AgencyReference { get; set; } // AgencyReference
        public long? CreativeView { get; set; } // CreativeView
        public long? Start { get; set; } // Start
        public long? Midpoint { get; set; } // Midpoint
        public long? FirstQuartile { get; set; } // FirstQuartile
        public long? ThirdQuartile { get; set; } // ThirdQuartile
        public long? Complete { get; set; } // Complete
        public long? Mute { get; set; } // Mute
        public long? Unmute { get; set; } // Unmute
        public long? Pause { get; set; } // Pause
        public long? Rewind { get; set; } // Rewind
        public long? Resume { get; set; } // Resume
        public long? Fullscreen { get; set; } // Fullscreen
        public long? Expand { get; set; } // Expand
        public long? Collapse { get; set; } // Collapse
        public long? AcceptInvitation { get; set; } // AcceptInvitation
        public long? Close { get; set; } // Close
        
        public VideoCreativeAnalyticsReportId()
        {
            InitializePartial();
        }

        partial void InitializePartial();
    }

    // WebsiteLookup
    public partial class WebsiteLookup : Entity
    {
        public long Websiteid { get; set; } // websiteid
        public string Websiteurl { get; set; } // websiteurl
        
        public WebsiteLookup()
        {
            InitializePartial();
        }

        partial void InitializePartial();
    }

    // WeeklyLocationBids
    public partial class WeeklyLocationBid : Entity
    {
        public int? CountryId { get; set; } // CountryID
        public int? WebsiteId { get; set; } // WebsiteID
        public long? Bids { get; set; } // Bids
        public string WebsiteUrl { get; set; } // WebsiteUrl
        public int FullTextKeyId { get; set; } // FullTextKeyID (Primary key via unique index IX_WeeklyLocationBids_FullTextKeyID)
        
        public WeeklyLocationBid()
        {
            InitializePartial();
        }

        partial void InitializePartial();
    }

    // WeeklyLocationBidsAlternate
    public partial class WeeklyLocationBidsAlternate : Entity
    {
        public int? CountryId { get; set; } // CountryID
        public int? WebsiteId { get; set; } // WebsiteID
        public long? Bids { get; set; } // Bids
        public string WebsiteUrl { get; set; } // WebsiteUrl
        public int FullTextKeyId { get; set; } // FullTextKeyID (Primary key via unique index IX_WeeklyLocationBidsAlternate_FullTextKeyID)
        
        public WeeklyLocationBidsAlternate()
        {
            InitializePartial();
        }

        partial void InitializePartial();
    }

    // WhiteListForecast
    public partial class WhiteListForecast : Entity
    {
        public int CustomWhiteListId { get; set; } // CustomWhiteListID
        public int? CountryId { get; set; } // CountryID
        public long? TotalBids { get; set; } // TotalBids
        
        public WhiteListForecast()
        {
            InitializePartial();
        }

        partial void InitializePartial();
    }


    // ************************************************************************
    // POCO Configuration

    // ActiveCPCAndCPAAdGroupsLookup
    internal partial class ActiveCpcAndCpaAdGroupsLookupMap : EntityTypeConfiguration<ActiveCpcAndCpaAdGroupsLookup>
    {
        public ActiveCpcAndCpaAdGroupsLookupMap()
            : this("analytics")
        {
        }
 
        public ActiveCpcAndCpaAdGroupsLookupMap(string schema)
        {
            ToTable(schema + ".ActiveCPCAndCPAAdGroupsLookup");
            HasKey(x => x.AdGroupId);

            Property(x => x.AdGroupId).HasColumnName("AdGroupID").IsRequired().HasColumnType("int");
            InitializePartial();
        }
        partial void InitializePartial();
    }

    // AdAnalyticsReportID
    internal partial class AdAnalyticsReportIdMap : EntityTypeConfiguration<AdAnalyticsReportId>
    {
        public AdAnalyticsReportIdMap()
            : this("dbo")
        {
        }
 
        public AdAnalyticsReportIdMap(string schema)
        {
            ToTable(schema + ".AdAnalyticsReportID");
            HasKey(x => new { x.AdvertiserId, x.BuyerAccountId, x.AdvertiserProductId, x.CampaignId, x.AdGroupId, x.CampaignStatusName, x.PlacementId, x.PartnerId, x.UtcDate, x.UtcDateTime, x.LocalDate, x.LocalDateTime, x.Bids, x.Impressions, x.Clicks, x.UnfilteredClicks, x.Conversions, x.PostViewConversions, x.PostClickConversions, x.MediaCostLocalMicros, x.DataCostLocalMicros });

            Property(x => x.AdvertiserId).HasColumnName("AdvertiserID").IsRequired().HasColumnType("int");
            Property(x => x.AdvertiserName).HasColumnName("AdvertiserName").IsOptional().HasColumnType("nvarchar").HasMaxLength(4000);
            Property(x => x.BuyerAccountId).HasColumnName("BuyerAccountID").IsRequired().HasColumnType("int");
            Property(x => x.CompanyName).HasColumnName("CompanyName").IsOptional().HasColumnType("nvarchar").HasMaxLength(4000);
            Property(x => x.AdvertiserProductId).HasColumnName("AdvertiserProductID").IsRequired().HasColumnType("int");
            Property(x => x.ProductName).HasColumnName("ProductName").IsOptional().HasColumnType("nvarchar").HasMaxLength(4000);
            Property(x => x.CampaignId).HasColumnName("CampaignID").IsRequired().HasColumnType("int");
            Property(x => x.CampaignName).HasColumnName("CampaignName").IsOptional().HasColumnType("nvarchar").HasMaxLength(4000);
            Property(x => x.AdGroupId).HasColumnName("AdGroupID").IsRequired().HasColumnType("int");
            Property(x => x.CampaignStatusName).HasColumnName("CampaignStatusName").IsRequired().HasColumnType("nvarchar").HasMaxLength(50);
            Property(x => x.RtbAdGroupId).HasColumnName("RtbAdGroupID").IsOptional().IsUnicode(false).HasColumnType("varchar").HasMaxLength(24);
            Property(x => x.AdGroupName).HasColumnName("AdGroupName").IsOptional().HasColumnType("nvarchar").HasMaxLength(4000);
            Property(x => x.PlacementId).HasColumnName("PlacementID").IsRequired().HasColumnType("int");
            Property(x => x.PartnerId).HasColumnName("PartnerID").IsRequired().HasColumnType("int");
            Property(x => x.AdName).HasColumnName("AdName").IsOptional().HasColumnType("nvarchar").HasMaxLength(4000);
            Property(x => x.Height).HasColumnName("Height").IsOptional().HasColumnType("int");
            Property(x => x.Width).HasColumnName("Width").IsOptional().HasColumnType("int");
            Property(x => x.UtcDate).HasColumnName("UtcDate").IsRequired().HasColumnType("date");
            Property(x => x.UtcDateTime).HasColumnName("UtcDateTime").IsRequired().HasColumnType("datetime");
            Property(x => x.LocalDate).HasColumnName("LocalDate").IsRequired().HasColumnType("date");
            Property(x => x.LocalDateTime).HasColumnName("LocalDateTime").IsRequired().HasColumnType("datetime");
            Property(x => x.Bids).HasColumnName("Bids").IsRequired().HasColumnType("bigint");
            Property(x => x.Impressions).HasColumnName("Impressions").IsRequired().HasColumnType("bigint");
            Property(x => x.Clicks).HasColumnName("Clicks").IsRequired().HasColumnType("bigint");
            Property(x => x.UnfilteredClicks).HasColumnName("UnfilteredClicks").IsRequired().HasColumnType("bigint");
            Property(x => x.Conversions).HasColumnName("Conversions").IsRequired().HasColumnType("bigint");
            Property(x => x.PostViewConversions).HasColumnName("PostViewConversions").IsRequired().HasColumnType("bigint");
            Property(x => x.PostClickConversions).HasColumnName("PostClickConversions").IsRequired().HasColumnType("bigint");
            Property(x => x.SpendLocalMicros).HasColumnName("SpendLocalMicros").IsOptional().HasColumnType("bigint");
            Property(x => x.Spend).HasColumnName("Spend").IsOptional().HasColumnType("money").HasPrecision(19,4);
            Property(x => x.ClientCostLocalMicros).HasColumnName("ClientCostLocalMicros").IsOptional().HasColumnType("bigint");
            Property(x => x.ClientCostDollars).HasColumnName("ClientCostDollars").IsOptional().HasColumnType("money").HasPrecision(19,4);
            Property(x => x.MediaCostLocalMicros).HasColumnName("MediaCostLocalMicros").IsRequired().HasColumnType("bigint");
            Property(x => x.DataCostLocalMicros).HasColumnName("DataCostLocalMicros").IsRequired().HasColumnType("bigint");
            Property(x => x.MediaClientCostLocalMicros).HasColumnName("MediaClientCostLocalMicros").IsOptional().HasColumnType("bigint");
            Property(x => x.DataClientCostLocalMicros).HasColumnName("DataClientCostLocalMicros").IsOptional().HasColumnType("bigint");
            Property(x => x.AdSlotDurationInSeconds).HasColumnName("AdSlotDurationInSeconds").IsOptional().HasColumnType("bigint");
            Property(x => x.RawViews).HasColumnName("RawViews").IsOptional().HasColumnType("bigint");
            Property(x => x.IabViews).HasColumnName("IabViews").IsOptional().HasColumnType("bigint");
            Property(x => x.ViewDurationInSeconds).HasColumnName("ViewDurationInSeconds").IsOptional().HasColumnType("bigint");
            Property(x => x.Ctr).HasColumnName("CTR").IsOptional().HasColumnType("float");
            Property(x => x.Cpm).HasColumnName("CPM").IsOptional().HasColumnType("decimal").HasPrecision(38,14);
            Property(x => x.Cpc).HasColumnName("CPC").IsOptional().HasColumnType("decimal").HasPrecision(38,23);
            Property(x => x.Cpa).HasColumnName("CPA").IsOptional().HasColumnType("decimal").HasPrecision(38,23);
            Property(x => x.ClientCostCpm).HasColumnName("ClientCostCpm").IsOptional().HasColumnType("decimal").HasPrecision(38,14);
            Property(x => x.ClientCostCpc).HasColumnName("ClientCostCpc").IsOptional().HasColumnType("decimal").HasPrecision(38,23);
            Property(x => x.ClientCostCpa).HasColumnName("ClientCostCpa").IsOptional().HasColumnType("decimal").HasPrecision(38,23);
            Property(x => x.Cpms).HasColumnName("CPMs").IsOptional().HasColumnType("decimal").HasPrecision(38,14);
            Property(x => x.ClientCostCpms).HasColumnName("ClientCostCpms").IsOptional().HasColumnType("decimal").HasPrecision(38,14);
            Property(x => x.Cps).HasColumnName("CPS").IsOptional().HasColumnType("decimal").HasPrecision(38,14);
            Property(x => x.ClientCostCps).HasColumnName("ClientCostCps").IsOptional().HasColumnType("decimal").HasPrecision(38,14);
            Property(x => x.ViewableRatio).HasColumnName("ViewableRatio").IsOptional().HasColumnType("float");
            Property(x => x.AgencyReference).HasColumnName("AgencyReference").IsOptional().HasColumnType("nvarchar").HasMaxLength(50);
            InitializePartial();
        }
        partial void InitializePartial();
    }

    // AdDirectBuy
    internal partial class AdDirectBuyMap : EntityTypeConfiguration<AdDirectBuy>
    {
        public AdDirectBuyMap()
            : this("analytics")
        {
        }
 
        public AdDirectBuyMap(string schema)
        {
            ToTable(schema + ".AdDirectBuy");
            HasKey(x => new { x.DealKey, x.AdSlotId, x.BuyerAccountId, x.PlacementId, x.AdGroupId, x.OptimizationModelId, x.UtcDate, x.LocalDate, x.UtcDateTime, x.LocalDateTime, x.Bids, x.Impressions, x.Clicks, x.Conversions, x.PostViewConversions, x.PostClickConversions, x.MediaCostUsdMicros, x.MediaCostLocalMicros, x.DataCostLocalMicros });

            Property(x => x.DealKey).HasColumnName("DealKey").IsRequired().HasColumnType("nvarchar").HasMaxLength(50);
            Property(x => x.AdSlotId).HasColumnName("AdSlotID").IsRequired().HasColumnType("int");
            Property(x => x.BuyerAccountId).HasColumnName("BuyerAccountID").IsRequired().HasColumnType("int");
            Property(x => x.PlacementId).HasColumnName("PlacementID").IsRequired().HasColumnType("int");
            Property(x => x.AdGroupId).HasColumnName("AdGroupID").IsRequired().HasColumnType("int");
            Property(x => x.OptimizationModelId).HasColumnName("OptimizationModelID").IsRequired().HasColumnType("int");
            Property(x => x.UtcDate).HasColumnName("UtcDate").IsRequired().HasColumnType("date");
            Property(x => x.LocalDate).HasColumnName("LocalDate").IsRequired().HasColumnType("date");
            Property(x => x.UtcDateTime).HasColumnName("UtcDateTime").IsRequired().HasColumnType("datetime");
            Property(x => x.LocalDateTime).HasColumnName("LocalDateTime").IsRequired().HasColumnType("datetime");
            Property(x => x.Bids).HasColumnName("Bids").IsRequired().HasColumnType("bigint");
            Property(x => x.Impressions).HasColumnName("Impressions").IsRequired().HasColumnType("bigint");
            Property(x => x.InvalidImpressions).HasColumnName("InvalidImpressions").IsOptional().HasColumnType("bigint");
            Property(x => x.Clicks).HasColumnName("Clicks").IsRequired().HasColumnType("bigint");
            Property(x => x.InvalidClicks).HasColumnName("InvalidClicks").IsOptional().HasColumnType("bigint");
            Property(x => x.Conversions).HasColumnName("Conversions").IsRequired().HasColumnType("bigint");
            Property(x => x.PostViewConversions).HasColumnName("PostViewConversions").IsRequired().HasColumnType("bigint");
            Property(x => x.PostClickConversions).HasColumnName("PostClickConversions").IsRequired().HasColumnType("bigint");
            Property(x => x.MediaCostUsdMicros).HasColumnName("MediaCostUsdMicros").IsRequired().HasColumnType("bigint");
            Property(x => x.MediaCostLocalMicros).HasColumnName("MediaCostLocalMicros").IsRequired().HasColumnType("bigint");
            Property(x => x.DataCostLocalMicros).HasColumnName("DataCostLocalMicros").IsRequired().HasColumnType("bigint");
            Property(x => x.FeesUsdSuperMicros).HasColumnName("FeesUsdSuperMicros").IsOptional().HasColumnType("bigint");
            Property(x => x.FeesLocalSuperMicros).HasColumnName("FeesLocalSuperMicros").IsOptional().HasColumnType("bigint");
            Property(x => x.AdSlotDurationInSeconds).HasColumnName("AdSlotDurationInSeconds").IsOptional().HasColumnType("bigint");
            Property(x => x.RawViews).HasColumnName("RawViews").IsOptional().HasColumnType("bigint");
            Property(x => x.IabViews).HasColumnName("IabViews").IsOptional().HasColumnType("bigint");
            Property(x => x.ViewDurationInSeconds).HasColumnName("ViewDurationInSeconds").IsOptional().HasColumnType("bigint");
            InitializePartial();
        }
        partial void InitializePartial();
    }

    // AdDirectBuyAnalyticsReportID
    internal partial class AdDirectBuyAnalyticsReportIdMap : EntityTypeConfiguration<AdDirectBuyAnalyticsReportId>
    {
        public AdDirectBuyAnalyticsReportIdMap()
            : this("dbo")
        {
        }
 
        public AdDirectBuyAnalyticsReportIdMap(string schema)
        {
            ToTable(schema + ".AdDirectBuyAnalyticsReportID");
            HasKey(x => new { x.BuyerAccountId, x.AdvertiserId, x.AdvertiserName, x.AdvertiserProductId, x.CampaignId, x.CampaignName, x.AdGroupId, x.AdGroupName, x.CreativeName, x.AdSlotName, x.DealKey, x.DealId, x.DealName, x.OptimizationModelId, x.LocalDate, x.Bids, x.Impressions, x.Conversions, x.PostViewConversions, x.PostClickConversions, x.MediaCostLocalMicros, x.DataCostLocalMicros });

            Property(x => x.BuyerAccountId).HasColumnName("BuyerAccountID").IsRequired().HasColumnType("int");
            Property(x => x.AdvertiserId).HasColumnName("AdvertiserID").IsRequired().HasColumnType("int");
            Property(x => x.AdvertiserName).HasColumnName("AdvertiserName").IsRequired().HasColumnType("nvarchar").HasMaxLength(100);
            Property(x => x.AdvertiserProductId).HasColumnName("AdvertiserProductID").IsRequired().HasColumnType("int");
            Property(x => x.ProductName).HasColumnName("ProductName").IsOptional().HasColumnType("nvarchar").HasMaxLength(100);
            Property(x => x.CampaignId).HasColumnName("CampaignID").IsRequired().HasColumnType("int");
            Property(x => x.CampaignName).HasColumnName("CampaignName").IsRequired().HasColumnType("nvarchar").HasMaxLength(200);
            Property(x => x.AdGroupId).HasColumnName("AdGroupID").IsRequired().HasColumnType("int");
            Property(x => x.AdGroupName).HasColumnName("AdGroupName").IsRequired().HasColumnType("nvarchar").HasMaxLength(200);
            Property(x => x.CreativeName).HasColumnName("CreativeName").IsRequired().HasColumnType("nvarchar").HasMaxLength(500);
            Property(x => x.AdSlotName).HasColumnName("AdSlotName").IsRequired().HasColumnType("nvarchar").HasMaxLength(255);
            Property(x => x.DealKey).HasColumnName("DealKey").IsRequired().HasColumnType("nvarchar").HasMaxLength(50);
            Property(x => x.DealId).HasColumnName("DealID").IsRequired().HasColumnType("int");
            Property(x => x.DealName).HasColumnName("DealName").IsRequired().HasColumnType("nvarchar").HasMaxLength(500);
            Property(x => x.OptimizationModelId).HasColumnName("OptimizationModelID").IsRequired().HasColumnType("int");
            Property(x => x.PublisherName).HasColumnName("PublisherName").IsOptional().HasColumnType("nvarchar").HasMaxLength(200);
            Property(x => x.LocalDate).HasColumnName("LocalDate").IsRequired().HasColumnType("date");
            Property(x => x.Bids).HasColumnName("Bids").IsRequired().HasColumnType("bigint");
            Property(x => x.Impressions).HasColumnName("Impressions").IsRequired().HasColumnType("bigint");
            Property(x => x.Clicks).HasColumnName("Clicks").IsOptional().HasColumnType("bigint");
            Property(x => x.UnfilteredClicks).HasColumnName("UnfilteredClicks").IsOptional().HasColumnType("bigint");
            Property(x => x.Conversions).HasColumnName("Conversions").IsRequired().HasColumnType("bigint");
            Property(x => x.PostViewConversions).HasColumnName("PostViewConversions").IsRequired().HasColumnType("bigint");
            Property(x => x.PostClickConversions).HasColumnName("PostClickConversions").IsRequired().HasColumnType("bigint");
            Property(x => x.SpendLocalMicros).HasColumnName("SpendLocalMicros").IsOptional().HasColumnType("bigint");
            Property(x => x.Spend).HasColumnName("Spend").IsOptional().HasColumnType("money").HasPrecision(19,4);
            Property(x => x.ClientCostLocalMicros).HasColumnName("ClientCostLocalMicros").IsOptional().HasColumnType("bigint");
            Property(x => x.ClientCostDollars).HasColumnName("ClientCostDollars").IsOptional().HasColumnType("money").HasPrecision(19,4);
            Property(x => x.MediaCostLocalMicros).HasColumnName("MediaCostLocalMicros").IsRequired().HasColumnType("bigint");
            Property(x => x.DataCostLocalMicros).HasColumnName("DataCostLocalMicros").IsRequired().HasColumnType("bigint");
            Property(x => x.MediaClientCostLocalMicros).HasColumnName("MediaClientCostLocalMicros").IsOptional().HasColumnType("bigint");
            Property(x => x.DataClientCostLocalMicros).HasColumnName("DataClientCostLocalMicros").IsOptional().HasColumnType("bigint");
            Property(x => x.AdSlotDurationInSeconds).HasColumnName("AdSlotDurationInSeconds").IsOptional().HasColumnType("bigint");
            Property(x => x.RawViews).HasColumnName("RawViews").IsOptional().HasColumnType("bigint");
            Property(x => x.IabViews).HasColumnName("IabViews").IsOptional().HasColumnType("bigint");
            Property(x => x.ViewDurationInSeconds).HasColumnName("ViewDurationInSeconds").IsOptional().HasColumnType("bigint");
            Property(x => x.Ctr).HasColumnName("CTR").IsOptional().HasColumnType("float");
            Property(x => x.Cpm).HasColumnName("CPM").IsOptional().HasColumnType("money").HasPrecision(19,4);
            Property(x => x.Cpc).HasColumnName("CPC").IsOptional().HasColumnType("money").HasPrecision(19,4);
            Property(x => x.Cpa).HasColumnName("CPA").IsOptional().HasColumnType("money").HasPrecision(19,4);
            Property(x => x.ClientCpm).HasColumnName("ClientCPM").IsOptional().HasColumnType("money").HasPrecision(19,4);
            Property(x => x.ClientCpc).HasColumnName("ClientCPC").IsOptional().HasColumnType("money").HasPrecision(19,4);
            Property(x => x.ClientCpa).HasColumnName("ClientCPA").IsOptional().HasColumnType("money").HasPrecision(19,4);
            Property(x => x.Cpms).HasColumnName("CPMs").IsOptional().HasColumnType("decimal").HasPrecision(38,14);
            Property(x => x.ClientCostCpms).HasColumnName("ClientCostCpms").IsOptional().HasColumnType("decimal").HasPrecision(38,14);
            Property(x => x.Cps).HasColumnName("CPS").IsOptional().HasColumnType("decimal").HasPrecision(38,14);
            Property(x => x.ClientCostCps).HasColumnName("ClientCostCps").IsOptional().HasColumnType("decimal").HasPrecision(38,14);
            Property(x => x.ViewableRatio).HasColumnName("ViewableRatio").IsOptional().HasColumnType("float");
            InitializePartial();
        }
        partial void InitializePartial();
    }

    // AdDirectBuyCombined
    internal partial class AdDirectBuyCombinedMap : EntityTypeConfiguration<AdDirectBuyCombined>
    {
        public AdDirectBuyCombinedMap()
            : this("analytics")
        {
        }
 
        public AdDirectBuyCombinedMap(string schema)
        {
            ToTable(schema + ".AdDirectBuyCombined");
            HasKey(x => new { x.DealKey, x.AdSlotId, x.BuyerAccountId, x.PlacementId, x.AdGroupId, x.OptimizationModelId, x.UtcDate, x.LocalDate, x.UtcDateTime, x.LocalDateTime, x.Bids, x.Impressions, x.Clicks, x.Conversions, x.PostViewConversions, x.PostClickConversions, x.MediaCostUsdMicros, x.MediaCostLocalMicros, x.DataCostLocalMicros });

            Property(x => x.DealKey).HasColumnName("DealKey").IsRequired().HasColumnType("nvarchar").HasMaxLength(50);
            Property(x => x.AdSlotId).HasColumnName("AdSlotID").IsRequired().HasColumnType("int");
            Property(x => x.BuyerAccountId).HasColumnName("BuyerAccountID").IsRequired().HasColumnType("int");
            Property(x => x.PlacementId).HasColumnName("PlacementID").IsRequired().HasColumnType("int");
            Property(x => x.AdGroupId).HasColumnName("AdGroupID").IsRequired().HasColumnType("int");
            Property(x => x.OptimizationModelId).HasColumnName("OptimizationModelID").IsRequired().HasColumnType("int");
            Property(x => x.UtcDate).HasColumnName("UtcDate").IsRequired().HasColumnType("date");
            Property(x => x.LocalDate).HasColumnName("LocalDate").IsRequired().HasColumnType("date");
            Property(x => x.UtcDateTime).HasColumnName("UtcDateTime").IsRequired().HasColumnType("datetime");
            Property(x => x.LocalDateTime).HasColumnName("LocalDateTime").IsRequired().HasColumnType("datetime");
            Property(x => x.Bids).HasColumnName("Bids").IsRequired().HasColumnType("bigint");
            Property(x => x.Impressions).HasColumnName("Impressions").IsRequired().HasColumnType("bigint");
            Property(x => x.InvalidImpressions).HasColumnName("InvalidImpressions").IsOptional().HasColumnType("bigint");
            Property(x => x.Clicks).HasColumnName("Clicks").IsRequired().HasColumnType("bigint");
            Property(x => x.InvalidClicks).HasColumnName("InvalidClicks").IsOptional().HasColumnType("bigint");
            Property(x => x.Conversions).HasColumnName("Conversions").IsRequired().HasColumnType("bigint");
            Property(x => x.PostViewConversions).HasColumnName("PostViewConversions").IsRequired().HasColumnType("bigint");
            Property(x => x.PostClickConversions).HasColumnName("PostClickConversions").IsRequired().HasColumnType("bigint");
            Property(x => x.MediaCostUsdMicros).HasColumnName("MediaCostUsdMicros").IsRequired().HasColumnType("bigint");
            Property(x => x.MediaCostLocalMicros).HasColumnName("MediaCostLocalMicros").IsRequired().HasColumnType("bigint");
            Property(x => x.DataCostLocalMicros).HasColumnName("DataCostLocalMicros").IsRequired().HasColumnType("bigint");
            Property(x => x.FeesUsdSuperMicros).HasColumnName("FeesUsdSuperMicros").IsOptional().HasColumnType("bigint");
            Property(x => x.FeesLocalSuperMicros).HasColumnName("FeesLocalSuperMicros").IsOptional().HasColumnType("bigint");
            Property(x => x.AdSlotDurationInSeconds).HasColumnName("AdSlotDurationInSeconds").IsOptional().HasColumnType("bigint");
            Property(x => x.RawViews).HasColumnName("RawViews").IsOptional().HasColumnType("bigint");
            Property(x => x.IabViews).HasColumnName("IabViews").IsOptional().HasColumnType("bigint");
            Property(x => x.ViewDurationInSeconds).HasColumnName("ViewDurationInSeconds").IsOptional().HasColumnType("bigint");
            InitializePartial();
        }
        partial void InitializePartial();
    }

    // AdDirectBuyImport
    internal partial class AdDirectBuyImportMap : EntityTypeConfiguration<AdDirectBuyImport>
    {
        public AdDirectBuyImportMap()
            : this("analytics")
        {
        }
 
        public AdDirectBuyImportMap(string schema)
        {
            ToTable(schema + ".AdDirectBuyImport");
            HasKey(x => new { x.DealKey, x.AdSlotId, x.BuyerAccountId, x.PlacementId, x.AdGroupId, x.OptimizationModelId, x.UtcDate, x.LocalDate, x.UtcDateTime, x.LocalDateTime, x.Bids, x.Impressions, x.Clicks, x.Conversions, x.PostViewConversions, x.PostClickConversions, x.MediaCostUsdMicros, x.MediaCostLocalMicros, x.DataCostLocalMicros });

            Property(x => x.DealKey).HasColumnName("DealKey").IsRequired().HasColumnType("nvarchar").HasMaxLength(50);
            Property(x => x.AdSlotId).HasColumnName("AdSlotID").IsRequired().HasColumnType("int");
            Property(x => x.BuyerAccountId).HasColumnName("BuyerAccountID").IsRequired().HasColumnType("int");
            Property(x => x.PlacementId).HasColumnName("PlacementID").IsRequired().HasColumnType("int");
            Property(x => x.AdGroupId).HasColumnName("AdGroupID").IsRequired().HasColumnType("int");
            Property(x => x.OptimizationModelId).HasColumnName("OptimizationModelID").IsRequired().HasColumnType("int");
            Property(x => x.UtcDate).HasColumnName("UtcDate").IsRequired().HasColumnType("date");
            Property(x => x.LocalDate).HasColumnName("LocalDate").IsRequired().HasColumnType("date");
            Property(x => x.UtcDateTime).HasColumnName("UtcDateTime").IsRequired().HasColumnType("datetime");
            Property(x => x.LocalDateTime).HasColumnName("LocalDateTime").IsRequired().HasColumnType("datetime");
            Property(x => x.Bids).HasColumnName("Bids").IsRequired().HasColumnType("bigint");
            Property(x => x.Impressions).HasColumnName("Impressions").IsRequired().HasColumnType("bigint");
            Property(x => x.InvalidImpressions).HasColumnName("InvalidImpressions").IsOptional().HasColumnType("bigint");
            Property(x => x.Clicks).HasColumnName("Clicks").IsRequired().HasColumnType("bigint");
            Property(x => x.InvalidClicks).HasColumnName("InvalidClicks").IsOptional().HasColumnType("bigint");
            Property(x => x.Conversions).HasColumnName("Conversions").IsRequired().HasColumnType("bigint");
            Property(x => x.PostViewConversions).HasColumnName("PostViewConversions").IsRequired().HasColumnType("bigint");
            Property(x => x.PostClickConversions).HasColumnName("PostClickConversions").IsRequired().HasColumnType("bigint");
            Property(x => x.MediaCostUsdMicros).HasColumnName("MediaCostUsdMicros").IsRequired().HasColumnType("bigint");
            Property(x => x.MediaCostLocalMicros).HasColumnName("MediaCostLocalMicros").IsRequired().HasColumnType("bigint");
            Property(x => x.DataCostLocalMicros).HasColumnName("DataCostLocalMicros").IsRequired().HasColumnType("bigint");
            Property(x => x.FeesUsdSuperMicros).HasColumnName("FeesUsdSuperMicros").IsOptional().HasColumnType("bigint");
            Property(x => x.FeesLocalSuperMicros).HasColumnName("FeesLocalSuperMicros").IsOptional().HasColumnType("bigint");
            Property(x => x.AdSlotDurationInSeconds).HasColumnName("AdSlotDurationInSeconds").IsOptional().HasColumnType("bigint");
            Property(x => x.RawViews).HasColumnName("RawViews").IsOptional().HasColumnType("bigint");
            Property(x => x.IabViews).HasColumnName("IabViews").IsOptional().HasColumnType("bigint");
            Property(x => x.ViewDurationInSeconds).HasColumnName("ViewDurationInSeconds").IsOptional().HasColumnType("bigint");
            InitializePartial();
        }
        partial void InitializePartial();
    }

    // AdDirectBuyImportReportID
    internal partial class AdDirectBuyImportReportIdMap : EntityTypeConfiguration<AdDirectBuyImportReportId>
    {
        public AdDirectBuyImportReportIdMap()
            : this("analytics")
        {
        }
 
        public AdDirectBuyImportReportIdMap(string schema)
        {
            ToTable(schema + ".AdDirectBuyImportReportID");
            HasKey(x => new { x.DealKey, x.AdSlotId, x.BuyerAccountId, x.PlacementId, x.AdGroupId, x.OptimizationModelId, x.UtcDate, x.LocalDate, x.UtcDateTime, x.LocalDateTime, x.Bids, x.Impressions, x.Clicks, x.Conversions, x.PostViewConversions, x.PostClickConversions, x.MediaCostUsdMicros, x.MediaCostLocalMicros, x.DataCostLocalMicros, x.ReportId });

            Property(x => x.DealKey).HasColumnName("DealKey").IsRequired().HasColumnType("nvarchar").HasMaxLength(50);
            Property(x => x.AdSlotId).HasColumnName("AdSlotID").IsRequired().HasColumnType("int");
            Property(x => x.BuyerAccountId).HasColumnName("BuyerAccountID").IsRequired().HasColumnType("int");
            Property(x => x.PlacementId).HasColumnName("PlacementID").IsRequired().HasColumnType("int");
            Property(x => x.AdGroupId).HasColumnName("AdGroupID").IsRequired().HasColumnType("int");
            Property(x => x.OptimizationModelId).HasColumnName("OptimizationModelID").IsRequired().HasColumnType("int");
            Property(x => x.UtcDate).HasColumnName("UtcDate").IsRequired().HasColumnType("date");
            Property(x => x.LocalDate).HasColumnName("LocalDate").IsRequired().HasColumnType("date");
            Property(x => x.UtcDateTime).HasColumnName("UtcDateTime").IsRequired().HasColumnType("datetime");
            Property(x => x.LocalDateTime).HasColumnName("LocalDateTime").IsRequired().HasColumnType("datetime");
            Property(x => x.Bids).HasColumnName("Bids").IsRequired().HasColumnType("bigint");
            Property(x => x.Impressions).HasColumnName("Impressions").IsRequired().HasColumnType("bigint");
            Property(x => x.InvalidImpressions).HasColumnName("InvalidImpressions").IsOptional().HasColumnType("bigint");
            Property(x => x.Clicks).HasColumnName("Clicks").IsRequired().HasColumnType("bigint");
            Property(x => x.InvalidClicks).HasColumnName("InvalidClicks").IsOptional().HasColumnType("bigint");
            Property(x => x.Conversions).HasColumnName("Conversions").IsRequired().HasColumnType("bigint");
            Property(x => x.PostViewConversions).HasColumnName("PostViewConversions").IsRequired().HasColumnType("bigint");
            Property(x => x.PostClickConversions).HasColumnName("PostClickConversions").IsRequired().HasColumnType("bigint");
            Property(x => x.MediaCostUsdMicros).HasColumnName("MediaCostUsdMicros").IsRequired().HasColumnType("bigint");
            Property(x => x.MediaCostLocalMicros).HasColumnName("MediaCostLocalMicros").IsRequired().HasColumnType("bigint");
            Property(x => x.DataCostLocalMicros).HasColumnName("DataCostLocalMicros").IsRequired().HasColumnType("bigint");
            Property(x => x.FeesUsdSuperMicros).HasColumnName("FeesUsdSuperMicros").IsOptional().HasColumnType("bigint");
            Property(x => x.FeesLocalSuperMicros).HasColumnName("FeesLocalSuperMicros").IsOptional().HasColumnType("bigint");
            Property(x => x.ReportId).HasColumnName("ReportID").IsRequired().HasColumnType("bigint");
            Property(x => x.AdSlotDurationInSeconds).HasColumnName("AdSlotDurationInSeconds").IsOptional().HasColumnType("bigint");
            Property(x => x.RawViews).HasColumnName("RawViews").IsOptional().HasColumnType("bigint");
            Property(x => x.IabViews).HasColumnName("IabViews").IsOptional().HasColumnType("bigint");
            Property(x => x.ViewDurationInSeconds).HasColumnName("ViewDurationInSeconds").IsOptional().HasColumnType("bigint");
            InitializePartial();
        }
        partial void InitializePartial();
    }

    // AdDirectBuyReportID
    internal partial class AdDirectBuyReportIdMap : EntityTypeConfiguration<AdDirectBuyReportId>
    {
        public AdDirectBuyReportIdMap()
            : this("analytics")
        {
        }
 
        public AdDirectBuyReportIdMap(string schema)
        {
            ToTable(schema + ".AdDirectBuyReportID");
            HasKey(x => new { x.DealKey, x.AdSlotId, x.BuyerAccountId, x.PlacementId, x.AdGroupId, x.OptimizationModelId, x.UtcDate, x.LocalDate, x.UtcDateTime, x.LocalDateTime, x.Bids, x.Impressions, x.Clicks, x.Conversions, x.PostViewConversions, x.PostClickConversions, x.MediaCostUsdMicros, x.MediaCostLocalMicros, x.DataCostLocalMicros, x.ReportId });

            Property(x => x.DealKey).HasColumnName("DealKey").IsRequired().HasColumnType("nvarchar").HasMaxLength(50);
            Property(x => x.AdSlotId).HasColumnName("AdSlotID").IsRequired().HasColumnType("int");
            Property(x => x.BuyerAccountId).HasColumnName("BuyerAccountID").IsRequired().HasColumnType("int");
            Property(x => x.PlacementId).HasColumnName("PlacementID").IsRequired().HasColumnType("int");
            Property(x => x.AdGroupId).HasColumnName("AdGroupID").IsRequired().HasColumnType("int");
            Property(x => x.OptimizationModelId).HasColumnName("OptimizationModelID").IsRequired().HasColumnType("int");
            Property(x => x.UtcDate).HasColumnName("UtcDate").IsRequired().HasColumnType("date");
            Property(x => x.LocalDate).HasColumnName("LocalDate").IsRequired().HasColumnType("date");
            Property(x => x.UtcDateTime).HasColumnName("UtcDateTime").IsRequired().HasColumnType("datetime");
            Property(x => x.LocalDateTime).HasColumnName("LocalDateTime").IsRequired().HasColumnType("datetime");
            Property(x => x.Bids).HasColumnName("Bids").IsRequired().HasColumnType("bigint");
            Property(x => x.Impressions).HasColumnName("Impressions").IsRequired().HasColumnType("bigint");
            Property(x => x.InvalidImpressions).HasColumnName("InvalidImpressions").IsOptional().HasColumnType("bigint");
            Property(x => x.Clicks).HasColumnName("Clicks").IsRequired().HasColumnType("bigint");
            Property(x => x.InvalidClicks).HasColumnName("InvalidClicks").IsOptional().HasColumnType("bigint");
            Property(x => x.Conversions).HasColumnName("Conversions").IsRequired().HasColumnType("bigint");
            Property(x => x.PostViewConversions).HasColumnName("PostViewConversions").IsRequired().HasColumnType("bigint");
            Property(x => x.PostClickConversions).HasColumnName("PostClickConversions").IsRequired().HasColumnType("bigint");
            Property(x => x.MediaCostUsdMicros).HasColumnName("MediaCostUsdMicros").IsRequired().HasColumnType("bigint");
            Property(x => x.MediaCostLocalMicros).HasColumnName("MediaCostLocalMicros").IsRequired().HasColumnType("bigint");
            Property(x => x.DataCostLocalMicros).HasColumnName("DataCostLocalMicros").IsRequired().HasColumnType("bigint");
            Property(x => x.FeesUsdSuperMicros).HasColumnName("FeesUsdSuperMicros").IsOptional().HasColumnType("bigint");
            Property(x => x.FeesLocalSuperMicros).HasColumnName("FeesLocalSuperMicros").IsOptional().HasColumnType("bigint");
            Property(x => x.ReportId).HasColumnName("ReportID").IsRequired().HasColumnType("bigint");
            Property(x => x.AdSlotDurationInSeconds).HasColumnName("AdSlotDurationInSeconds").IsOptional().HasColumnType("bigint");
            Property(x => x.RawViews).HasColumnName("RawViews").IsOptional().HasColumnType("bigint");
            Property(x => x.IabViews).HasColumnName("IabViews").IsOptional().HasColumnType("bigint");
            Property(x => x.ViewDurationInSeconds).HasColumnName("ViewDurationInSeconds").IsOptional().HasColumnType("bigint");
            InitializePartial();
        }
        partial void InitializePartial();
    }

    // AdGroupAbsRegionTargetingReportID
    internal partial class AdGroupAbsRegionTargetingReportIdMap : EntityTypeConfiguration<AdGroupAbsRegionTargetingReportId>
    {
        public AdGroupAbsRegionTargetingReportIdMap()
            : this("dbo")
        {
        }
 
        public AdGroupAbsRegionTargetingReportIdMap(string schema)
        {
            ToTable(schema + ".AdGroupAbsRegionTargetingReportID");
            HasKey(x => new { x.BuyerAccountId, x.CampaignId, x.AdGroupId, x.IsTargeted, x.PackageInstalled });

            Property(x => x.BuyerAccountId).HasColumnName("BuyerAccountID").IsRequired().HasColumnType("int");
            Property(x => x.CampaignId).HasColumnName("CampaignID").IsRequired().HasColumnType("int");
            Property(x => x.AdGroupId).HasColumnName("AdGroupID").IsRequired().HasColumnType("int");
            Property(x => x.GeoAbsRegionId).HasColumnName("GeoAbsRegionID").IsOptional().HasColumnType("int");
            Property(x => x.RegionName).HasColumnName("RegionName").IsOptional().HasColumnType("nvarchar").HasMaxLength(250);
            Property(x => x.IsTargeted).HasColumnName("IsTargeted").IsRequired().HasColumnType("int");
            Property(x => x.PackageInstalled).HasColumnName("PackageInstalled").IsRequired().HasColumnType("int");
            Property(x => x.Bids).HasColumnName("Bids").IsOptional().HasColumnType("bigint");
            Property(x => x.Impressions).HasColumnName("Impressions").IsOptional().HasColumnType("bigint");
            Property(x => x.Clicks).HasColumnName("Clicks").IsOptional().HasColumnType("bigint");
            Property(x => x.Conversions).HasColumnName("Conversions").IsOptional().HasColumnType("bigint");
            Property(x => x.PostViewConversions).HasColumnName("PostViewConversions").IsOptional().HasColumnType("bigint");
            Property(x => x.PostClickConversions).HasColumnName("PostClickConversions").IsOptional().HasColumnType("bigint");
            Property(x => x.SpendLocalMicros).HasColumnName("SpendLocalMicros").IsOptional().HasColumnType("bigint");
            Property(x => x.Spend).HasColumnName("Spend").IsOptional().HasColumnType("money").HasPrecision(19,4);
            Property(x => x.ClientCostLocalMicros).HasColumnName("ClientCostLocalMicros").IsOptional().HasColumnType("decimal").HasPrecision(38,4);
            Property(x => x.ClientCostDollars).HasColumnName("ClientCostDollars").IsOptional().HasColumnType("money").HasPrecision(19,4);
            Property(x => x.MediaCostLocalMicros).HasColumnName("MediaCostLocalMicros").IsOptional().HasColumnType("bigint");
            Property(x => x.DataCostLocalMicros).HasColumnName("DataCostLocalMicros").IsOptional().HasColumnType("bigint");
            Property(x => x.MediaClientCostLocalMicros).HasColumnName("MediaClientCostLocalMicros").IsOptional().HasColumnType("decimal").HasPrecision(38,4);
            Property(x => x.DataClientCostLocalMicros).HasColumnName("DataClientCostLocalMicros").IsOptional().HasColumnType("decimal").HasPrecision(38,4);
            Property(x => x.AdSlotDurationInSeconds).HasColumnName("AdSlotDurationInSeconds").IsOptional().HasColumnType("bigint");
            Property(x => x.RawViews).HasColumnName("RawViews").IsOptional().HasColumnType("bigint");
            Property(x => x.IabViews).HasColumnName("IabViews").IsOptional().HasColumnType("bigint");
            Property(x => x.ViewDurationInSeconds).HasColumnName("ViewDurationInSeconds").IsOptional().HasColumnType("bigint");
            Property(x => x.Ctr).HasColumnName("CTR").IsOptional().HasColumnType("float");
            Property(x => x.Cpm).HasColumnName("CPM").IsOptional().HasColumnType("decimal").HasPrecision(19,4);
            Property(x => x.Cpc).HasColumnName("CPC").IsOptional().HasColumnType("decimal").HasPrecision(19,4);
            Property(x => x.Cpa).HasColumnName("CPA").IsOptional().HasColumnType("decimal").HasPrecision(19,4);
            Property(x => x.ClientCostCpm).HasColumnName("ClientCostCPM").IsOptional().HasColumnType("decimal").HasPrecision(19,4);
            Property(x => x.ClientCostCpc).HasColumnName("ClientCostCPC").IsOptional().HasColumnType("decimal").HasPrecision(19,4);
            Property(x => x.ClientCostCpa).HasColumnName("ClientCostCPA").IsOptional().HasColumnType("decimal").HasPrecision(19,4);
            Property(x => x.Cpms).HasColumnName("CPMs").IsOptional().HasColumnType("decimal").HasPrecision(19,4);
            Property(x => x.ClientCostCpMs).HasColumnName("ClientCostCPMs").IsOptional().HasColumnType("decimal").HasPrecision(19,4);
            Property(x => x.Cps).HasColumnName("CPS").IsOptional().HasColumnType("decimal").HasPrecision(19,4);
            Property(x => x.ClientCostCps).HasColumnName("ClientCostCPS").IsOptional().HasColumnType("decimal").HasPrecision(19,4);
            InitializePartial();
        }
        partial void InitializePartial();
    }

    // AdGroupAnalytics_FilterData
    internal partial class AdGroupAnalyticsFilterDataMap : EntityTypeConfiguration<AdGroupAnalyticsFilterData>
    {
        public AdGroupAnalyticsFilterDataMap()
            : this("dbo")
        {
        }
 
        public AdGroupAnalyticsFilterDataMap(string schema)
        {
            ToTable(schema + ".AdGroupAnalytics_FilterData");
            HasKey(x => new { x.BuyerAccountId, x.CampaignId, x.CampaignName, x.AdGroupId, x.AdGroupName, x.LocalDate });

            Property(x => x.BuyerAccountId).HasColumnName("BuyerAccountID").IsRequired().HasColumnType("int");
            Property(x => x.CompanyName).HasColumnName("CompanyName").IsOptional().HasColumnType("nvarchar").HasMaxLength(255);
            Property(x => x.CampaignId).HasColumnName("CampaignID").IsRequired().HasColumnType("int");
            Property(x => x.CampaignName).HasColumnName("CampaignName").IsRequired().HasColumnType("nvarchar").HasMaxLength(200);
            Property(x => x.AdGroupId).HasColumnName("AdGroupID").IsRequired().HasColumnType("int");
            Property(x => x.AdGroupName).HasColumnName("AdGroupName").IsRequired().HasColumnType("nvarchar").HasMaxLength(200);
            Property(x => x.LocalDate).HasColumnName("LocalDate").IsRequired().HasColumnType("date");
            InitializePartial();
        }
        partial void InitializePartial();
    }

    // AdGroupAnalytics_GeoCityLookup
    internal partial class AdGroupAnalyticsGeoCityLookupMap : EntityTypeConfiguration<AdGroupAnalyticsGeoCityLookup>
    {
        public AdGroupAnalyticsGeoCityLookupMap()
            : this("dbo")
        {
        }
 
        public AdGroupAnalyticsGeoCityLookupMap(string schema)
        {
            ToTable(schema + ".AdGroupAnalytics_GeoCityLookup");
            HasKey(x => new { x.GeoCityId, x.GeoCityName });

            Property(x => x.GeoCityId).HasColumnName("GeoCityID").IsRequired().HasColumnType("int");
            Property(x => x.GeoCityName).HasColumnName("GeoCityName").IsRequired().HasColumnType("nvarchar").HasMaxLength(50);
            Property(x => x.GeoRegionId).HasColumnName("GeoRegionID").IsOptional().HasColumnType("int");
            InitializePartial();
        }
        partial void InitializePartial();
    }

    // AdGroupAnalytics_GeoCountryLookup
    internal partial class AdGroupAnalyticsGeoCountryLookupMap : EntityTypeConfiguration<AdGroupAnalyticsGeoCountryLookup>
    {
        public AdGroupAnalyticsGeoCountryLookupMap()
            : this("dbo")
        {
        }
 
        public AdGroupAnalyticsGeoCountryLookupMap(string schema)
        {
            ToTable(schema + ".AdGroupAnalytics_GeoCountryLookup");
            HasKey(x => new { x.GeoCountryId, x.GeoCountryName });

            Property(x => x.GeoCountryId).HasColumnName("GeoCountryID").IsRequired().HasColumnType("int");
            Property(x => x.GeoCountryName).HasColumnName("GeoCountryName").IsRequired().HasColumnType("nvarchar").HasMaxLength(50);
            InitializePartial();
        }
        partial void InitializePartial();
    }

    // AdGroupAnalytics_GeoRegionLookup
    internal partial class AdGroupAnalyticsGeoRegionLookupMap : EntityTypeConfiguration<AdGroupAnalyticsGeoRegionLookup>
    {
        public AdGroupAnalyticsGeoRegionLookupMap()
            : this("dbo")
        {
        }
 
        public AdGroupAnalyticsGeoRegionLookupMap(string schema)
        {
            ToTable(schema + ".AdGroupAnalytics_GeoRegionLookup");
            HasKey(x => new { x.GeoRegionId, x.GeoRegionName, x.GeoCountryId });

            Property(x => x.GeoRegionId).HasColumnName("GeoRegionID").IsRequired().HasColumnType("int");
            Property(x => x.GeoRegionName).HasColumnName("GeoRegionName").IsRequired().HasColumnType("nvarchar").HasMaxLength(50);
            Property(x => x.GeoCountryId).HasColumnName("GeoCountryID").IsRequired().HasColumnType("int");
            InitializePartial();
        }
        partial void InitializePartial();
    }

    // AdGroupAnalytics_OptimizationModel
    internal partial class AdGroupAnalyticsOptimizationModelMap : EntityTypeConfiguration<AdGroupAnalyticsOptimizationModel>
    {
        public AdGroupAnalyticsOptimizationModelMap()
            : this("dbo")
        {
        }
 
        public AdGroupAnalyticsOptimizationModelMap(string schema)
        {
            ToTable(schema + ".AdGroupAnalytics_OptimizationModel");
            HasKey(x => new { x.OptimizationModelId, x.LocalDate, x.Bids, x.Impressions, x.Clicks, x.PostViewConversions, x.PostClickConversions, x.Conversions });

            Property(x => x.OptimizationModelId).HasColumnName("OptimizationModelID").IsRequired().HasColumnType("int");
            Property(x => x.LocalDate).HasColumnName("LocalDate").IsRequired().HasColumnType("date");
            Property(x => x.Bids).HasColumnName("Bids").IsRequired().HasColumnType("bigint");
            Property(x => x.Impressions).HasColumnName("Impressions").IsRequired().HasColumnType("bigint");
            Property(x => x.Clicks).HasColumnName("Clicks").IsRequired().HasColumnType("bigint");
            Property(x => x.PostViewConversions).HasColumnName("PostViewConversions").IsRequired().HasColumnType("bigint");
            Property(x => x.PostClickConversions).HasColumnName("PostClickConversions").IsRequired().HasColumnType("bigint");
            Property(x => x.Conversions).HasColumnName("Conversions").IsRequired().HasColumnType("bigint");
            Property(x => x.Spend).HasColumnName("Spend").IsOptional().HasColumnType("money").HasPrecision(19,4);
            InitializePartial();
        }
        partial void InitializePartial();
    }

    // AdGroupAnalytics_PartnerLookup
    internal partial class AdGroupAnalyticsPartnerLookupMap : EntityTypeConfiguration<AdGroupAnalyticsPartnerLookup>
    {
        public AdGroupAnalyticsPartnerLookupMap()
            : this("dbo")
        {
        }
 
        public AdGroupAnalyticsPartnerLookupMap(string schema)
        {
            ToTable(schema + ".AdGroupAnalytics_PartnerLookup");
            HasKey(x => x.PartnerId);

            Property(x => x.PartnerId).HasColumnName("PartnerID").IsRequired().HasColumnType("int");
            Property(x => x.PartnerName).HasColumnName("PartnerName").IsOptional().HasColumnType("nvarchar").HasMaxLength(50);
            InitializePartial();
        }
        partial void InitializePartial();
    }

    // AdGroupAnalytics_VerticalOneLookup
    internal partial class AdGroupAnalyticsVerticalOneLookupMap : EntityTypeConfiguration<AdGroupAnalyticsVerticalOneLookup>
    {
        public AdGroupAnalyticsVerticalOneLookupMap()
            : this("dbo")
        {
        }
 
        public AdGroupAnalyticsVerticalOneLookupMap(string schema)
        {
            ToTable(schema + ".AdGroupAnalytics_VerticalOneLookup");
            HasKey(x => new { x.VerticalOneId, x.VerticalOneName });

            Property(x => x.VerticalOneId).HasColumnName("VerticalOneID").IsRequired().HasColumnType("int");
            Property(x => x.VerticalOneName).HasColumnName("VerticalOneName").IsRequired().HasColumnType("nvarchar").HasMaxLength(256);
            InitializePartial();
        }
        partial void InitializePartial();
    }

    // AdGroupAnalytics_VerticalThreeLookup
    internal partial class AdGroupAnalyticsVerticalThreeLookupMap : EntityTypeConfiguration<AdGroupAnalyticsVerticalThreeLookup>
    {
        public AdGroupAnalyticsVerticalThreeLookupMap()
            : this("dbo")
        {
        }
 
        public AdGroupAnalyticsVerticalThreeLookupMap(string schema)
        {
            ToTable(schema + ".AdGroupAnalytics_VerticalThreeLookup");
            HasKey(x => new { x.VerticalThreeId, x.VerticalThreeName });

            Property(x => x.VerticalThreeId).HasColumnName("VerticalThreeID").IsRequired().HasColumnType("int");
            Property(x => x.VerticalThreeName).HasColumnName("VerticalThreeName").IsRequired().HasColumnType("nvarchar").HasMaxLength(256);
            InitializePartial();
        }
        partial void InitializePartial();
    }

    // AdGroupAnalytics_VerticalTwoLookup
    internal partial class AdGroupAnalyticsVerticalTwoLookupMap : EntityTypeConfiguration<AdGroupAnalyticsVerticalTwoLookup>
    {
        public AdGroupAnalyticsVerticalTwoLookupMap()
            : this("dbo")
        {
        }
 
        public AdGroupAnalyticsVerticalTwoLookupMap(string schema)
        {
            ToTable(schema + ".AdGroupAnalytics_VerticalTwoLookup");
            HasKey(x => new { x.VerticalTwoId, x.VerticalTwoName });

            Property(x => x.VerticalTwoId).HasColumnName("VerticalTwoID").IsRequired().HasColumnType("int");
            Property(x => x.VerticalTwoName).HasColumnName("VerticalTwoName").IsRequired().HasColumnType("nvarchar").HasMaxLength(256);
            InitializePartial();
        }
        partial void InitializePartial();
    }

    // AdGroupBILookup
    internal partial class AdGroupBiLookupMap : EntityTypeConfiguration<AdGroupBiLookup>
    {
        public AdGroupBiLookupMap()
            : this("analytics")
        {
        }
 
        public AdGroupBiLookupMap(string schema)
        {
            ToTable(schema + ".AdGroupBILookup");
            HasKey(x => new { x.AdGroupId, x.AdGroupUuid, x.BuyerAccountId, x.CampaignId, x.AdGroupName, x.GoalTypeId, x.GoalTargetRate, x.BudgetPeriodId, x.PacingStyleId, x.BudgetAmount, x.MaxBidCpm, x.AutoPause, x.SpendConstraintPeriodId, x.SpendConstraintAmount, x.UniqueConstraintPeriodId, x.UniqueConstraintAmount, x.AdGroupStatusId, x.IsDeleted, x.UtcCreatedDateTime, x.UtcModifiedDateTime, x.GoalTargetQuantity, x.LanguageTargetingMode, x.CountryTargetingMode, x.RegionTargetingMode, x.CityTargetingMode, x.Vertical1TargetingMode, x.Vertical2TargetingMode, x.Vertical3TargetingMode, x.ExchangeTargetingMode, x.PublisherTargetingMode, x.SiteTargetingMode, x.DataTargetTargetingMode, x.DeviceTargetingMode, x.DayPartTargetingMode, x.PagePositionTargetingMode, x.MinBidCpm, x.IsDebug, x.MediaTypeId });

            Property(x => x.AdGroupId).HasColumnName("AdGroupID").IsRequired().HasColumnType("int").HasDatabaseGeneratedOption(DatabaseGeneratedOption.Identity);
            Property(x => x.AdGroupUuid).HasColumnName("AdGroupUuid").IsRequired().HasColumnType("uniqueidentifier");
            Property(x => x.BuyerAccountId).HasColumnName("BuyerAccountID").IsRequired().HasColumnType("int");
            Property(x => x.CampaignId).HasColumnName("CampaignID").IsRequired().HasColumnType("int");
            Property(x => x.AdGroupName).HasColumnName("AdGroupName").IsRequired().HasColumnType("nvarchar").HasMaxLength(200);
            Property(x => x.GoalTypeId).HasColumnName("GoalTypeID").IsRequired().HasColumnType("int");
            Property(x => x.GoalTargetRate).HasColumnName("GoalTargetRate").IsRequired().HasColumnType("money").HasPrecision(19,4);
            Property(x => x.BudgetPeriodId).HasColumnName("BudgetPeriodID").IsRequired().HasColumnType("int");
            Property(x => x.PacingStyleId).HasColumnName("PacingStyleID").IsRequired().HasColumnType("int");
            Property(x => x.BudgetAmount).HasColumnName("BudgetAmount").IsRequired().HasColumnType("money").HasPrecision(19,4);
            Property(x => x.UtcStartDateTime).HasColumnName("UtcStartDateTime").IsOptional().HasColumnType("datetime");
            Property(x => x.UtcEndDateTime).HasColumnName("UtcEndDateTime").IsOptional().HasColumnType("datetime");
            Property(x => x.MaxBidCpm).HasColumnName("MaxBidCpm").IsRequired().HasColumnType("money").HasPrecision(19,4);
            Property(x => x.AutoPause).HasColumnName("AutoPause").IsRequired().HasColumnType("bit");
            Property(x => x.SpendConstraintPeriodId).HasColumnName("SpendConstraintPeriodID").IsRequired().HasColumnType("int");
            Property(x => x.SpendConstraintAmount).HasColumnName("SpendConstraintAmount").IsRequired().HasColumnType("money").HasPrecision(19,4);
            Property(x => x.UniqueConstraintPeriodId).HasColumnName("UniqueConstraintPeriodID").IsRequired().HasColumnType("int");
            Property(x => x.UniqueConstraintAmount).HasColumnName("UniqueConstraintAmount").IsRequired().HasColumnType("int");
            Property(x => x.AdGroupStatusId).HasColumnName("AdGroupStatusID").IsRequired().HasColumnType("int");
            Property(x => x.IsDeleted).HasColumnName("IsDeleted").IsRequired().HasColumnType("bit");
            Property(x => x.UtcCreatedDateTime).HasColumnName("UtcCreatedDateTime").IsRequired().HasColumnType("datetime");
            Property(x => x.UtcModifiedDateTime).HasColumnName("UtcModifiedDateTime").IsRequired().HasColumnType("datetime");
            Property(x => x.GoalTargetQuantity).HasColumnName("GoalTargetQuantity").IsRequired().HasColumnType("bigint");
            Property(x => x.LanguageTargetingMode).HasColumnName("LanguageTargetingMode").IsRequired().HasColumnType("int");
            Property(x => x.CountryTargetingMode).HasColumnName("CountryTargetingMode").IsRequired().HasColumnType("int");
            Property(x => x.RegionTargetingMode).HasColumnName("RegionTargetingMode").IsRequired().HasColumnType("int");
            Property(x => x.CityTargetingMode).HasColumnName("CityTargetingMode").IsRequired().HasColumnType("int");
            Property(x => x.Vertical1TargetingMode).HasColumnName("Vertical1TargetingMode").IsRequired().HasColumnType("int");
            Property(x => x.Vertical2TargetingMode).HasColumnName("Vertical2TargetingMode").IsRequired().HasColumnType("int");
            Property(x => x.Vertical3TargetingMode).HasColumnName("Vertical3TargetingMode").IsRequired().HasColumnType("int");
            Property(x => x.ExchangeTargetingMode).HasColumnName("ExchangeTargetingMode").IsRequired().HasColumnType("int");
            Property(x => x.PublisherTargetingMode).HasColumnName("PublisherTargetingMode").IsRequired().HasColumnType("int");
            Property(x => x.SiteTargetingMode).HasColumnName("SiteTargetingMode").IsRequired().HasColumnType("int");
            Property(x => x.DataTargetTargetingMode).HasColumnName("DataTargetTargetingMode").IsRequired().HasColumnType("int");
            Property(x => x.DeviceTargetingMode).HasColumnName("DeviceTargetingMode").IsRequired().HasColumnType("int");
            Property(x => x.DayPartTargetingMode).HasColumnName("DayPartTargetingMode").IsRequired().HasColumnType("int");
            Property(x => x.PagePositionTargetingMode).HasColumnName("PagePositionTargetingMode").IsRequired().HasColumnType("int");
            Property(x => x.UtcOriginalStartDateTime).HasColumnName("UtcOriginalStartDateTime").IsOptional().HasColumnType("datetime");
            Property(x => x.MinBidCpm).HasColumnName("MinBidCpm").IsRequired().HasColumnType("money").HasPrecision(19,4);
            Property(x => x.CloneFromAdGroupId).HasColumnName("CloneFromAdGroupID").IsOptional().HasColumnType("int");
            Property(x => x.PacingAmount).HasColumnName("PacingAmount").IsOptional().HasColumnType("money").HasPrecision(19,4);
            Property(x => x.IsDebug).HasColumnName("IsDebug").IsRequired().HasColumnType("bit");
            Property(x => x.MediaTypeId).HasColumnName("MediaTypeID").IsRequired().HasColumnType("int");
            InitializePartial();
        }
        partial void InitializePartial();
    }

    // AdGroupCityTargetingReportID
    internal partial class AdGroupCityTargetingReportIdMap : EntityTypeConfiguration<AdGroupCityTargetingReportId>
    {
        public AdGroupCityTargetingReportIdMap()
            : this("dbo")
        {
        }
 
        public AdGroupCityTargetingReportIdMap(string schema)
        {
            ToTable(schema + ".AdGroupCityTargetingReportID");
            HasKey(x => new { x.BuyerAccountId, x.CampaignId, x.AdGroupId, x.CityName, x.GeoRegionId, x.RegionName, x.GeoCountryId, x.CountryName, x.IsTargeted, x.PackageInstalled });

            Property(x => x.BuyerAccountId).HasColumnName("BuyerAccountID").IsRequired().HasColumnType("int");
            Property(x => x.CampaignId).HasColumnName("CampaignID").IsRequired().HasColumnType("int");
            Property(x => x.AdGroupId).HasColumnName("AdGroupID").IsRequired().HasColumnType("int");
            Property(x => x.GeoCityId).HasColumnName("GeoCityID").IsOptional().HasColumnType("int");
            Property(x => x.CityName).HasColumnName("CityName").IsRequired().HasColumnType("nvarchar").HasMaxLength(50);
            Property(x => x.GeoRegionId).HasColumnName("GeoRegionID").IsRequired().HasColumnType("int");
            Property(x => x.RegionName).HasColumnName("RegionName").IsRequired().HasColumnType("nvarchar").HasMaxLength(50);
            Property(x => x.GeoCountryId).HasColumnName("GeoCountryID").IsRequired().HasColumnType("int");
            Property(x => x.CountryName).HasColumnName("CountryName").IsRequired().HasColumnType("nvarchar").HasMaxLength(50);
            Property(x => x.IsTargeted).HasColumnName("IsTargeted").IsRequired().HasColumnType("int");
            Property(x => x.PackageInstalled).HasColumnName("PackageInstalled").IsRequired().HasColumnType("int");
            Property(x => x.Bids).HasColumnName("Bids").IsOptional().HasColumnType("bigint");
            Property(x => x.Impressions).HasColumnName("Impressions").IsOptional().HasColumnType("bigint");
            Property(x => x.Clicks).HasColumnName("Clicks").IsOptional().HasColumnType("bigint");
            Property(x => x.Conversions).HasColumnName("Conversions").IsOptional().HasColumnType("bigint");
            Property(x => x.PostViewConversions).HasColumnName("PostViewConversions").IsOptional().HasColumnType("bigint");
            Property(x => x.PostClickConversions).HasColumnName("PostClickConversions").IsOptional().HasColumnType("bigint");
            Property(x => x.SpendLocalMicros).HasColumnName("SpendLocalMicros").IsOptional().HasColumnType("bigint");
            Property(x => x.Spend).HasColumnName("Spend").IsOptional().HasColumnType("money").HasPrecision(19,4);
            Property(x => x.ClientCostLocalMicros).HasColumnName("ClientCostLocalMicros").IsOptional().HasColumnType("decimal").HasPrecision(38,4);
            Property(x => x.ClientCostDollars).HasColumnName("ClientCostDollars").IsOptional().HasColumnType("money").HasPrecision(19,4);
            Property(x => x.MediaCostLocalMicros).HasColumnName("MediaCostLocalMicros").IsOptional().HasColumnType("bigint");
            Property(x => x.DataCostLocalMicros).HasColumnName("DataCostLocalMicros").IsOptional().HasColumnType("bigint");
            Property(x => x.MediaClientCostLocalMicros).HasColumnName("MediaClientCostLocalMicros").IsOptional().HasColumnType("decimal").HasPrecision(38,4);
            Property(x => x.DataClientCostLocalMicros).HasColumnName("DataClientCostLocalMicros").IsOptional().HasColumnType("decimal").HasPrecision(38,4);
            Property(x => x.AdSlotDurationInSeconds).HasColumnName("AdSlotDurationInSeconds").IsOptional().HasColumnType("bigint");
            Property(x => x.RawViews).HasColumnName("RawViews").IsOptional().HasColumnType("bigint");
            Property(x => x.IabViews).HasColumnName("IabViews").IsOptional().HasColumnType("bigint");
            Property(x => x.ViewDurationInSeconds).HasColumnName("ViewDurationInSeconds").IsOptional().HasColumnType("bigint");
            Property(x => x.Ctr).HasColumnName("CTR").IsOptional().HasColumnType("float");
            Property(x => x.Cpm).HasColumnName("CPM").IsOptional().HasColumnType("decimal").HasPrecision(19,4);
            Property(x => x.Cpc).HasColumnName("CPC").IsOptional().HasColumnType("decimal").HasPrecision(19,4);
            Property(x => x.Cpa).HasColumnName("CPA").IsOptional().HasColumnType("decimal").HasPrecision(19,4);
            Property(x => x.ClientCostCpm).HasColumnName("ClientCostCPM").IsOptional().HasColumnType("decimal").HasPrecision(19,4);
            Property(x => x.ClientCostCpc).HasColumnName("ClientCostCPC").IsOptional().HasColumnType("decimal").HasPrecision(19,4);
            Property(x => x.ClientCostCpa).HasColumnName("ClientCostCPA").IsOptional().HasColumnType("decimal").HasPrecision(19,4);
            Property(x => x.Cpms).HasColumnName("CPMs").IsOptional().HasColumnType("decimal").HasPrecision(38,14);
            Property(x => x.ClientCostCpms).HasColumnName("ClientCostCpms").IsOptional().HasColumnType("decimal").HasPrecision(38,14);
            Property(x => x.Cps).HasColumnName("CPS").IsOptional().HasColumnType("decimal").HasPrecision(38,14);
            Property(x => x.ClientCostCps).HasColumnName("ClientCostCps").IsOptional().HasColumnType("decimal").HasPrecision(38,14);
            Property(x => x.ViewableRatio).HasColumnName("ViewableRatio").IsOptional().HasColumnType("float");
            InitializePartial();
        }
        partial void InitializePartial();
    }

    // AdGroupConversionSegmentLookup
    internal partial class AdGroupConversionSegmentLookupMap : EntityTypeConfiguration<AdGroupConversionSegmentLookup>
    {
        public AdGroupConversionSegmentLookupMap()
            : this("analytics")
        {
        }
 
        public AdGroupConversionSegmentLookupMap(string schema)
        {
            ToTable(schema + ".AdGroupConversionSegmentLookup");
            HasKey(x => new { x.AdGroupId, x.SegmentId, x.RtbSegmentId });

            Property(x => x.AdGroupId).HasColumnName("AdGroupID").IsRequired().HasColumnType("int");
            Property(x => x.SegmentId).HasColumnName("SegmentID").IsRequired().HasColumnType("int");
            Property(x => x.RtbSegmentId).HasColumnName("RtbSegmentID").IsRequired().HasColumnType("nvarchar").HasMaxLength(40);
            InitializePartial();
        }
        partial void InitializePartial();
    }

    // AdGroupCountryTargetingReportID
    internal partial class AdGroupCountryTargetingReportIdMap : EntityTypeConfiguration<AdGroupCountryTargetingReportId>
    {
        public AdGroupCountryTargetingReportIdMap()
            : this("dbo")
        {
        }
 
        public AdGroupCountryTargetingReportIdMap(string schema)
        {
            ToTable(schema + ".AdGroupCountryTargetingReportID");
            HasKey(x => new { x.BuyerAccountId, x.CampaignId, x.AdGroupId, x.GeoCountryId, x.CountryName, x.MediaTypeId, x.IsTargeted, x.PackageInstalled, x.CountryId });

            Property(x => x.BuyerAccountId).HasColumnName("BuyerAccountID").IsRequired().HasColumnType("int");
            Property(x => x.CampaignId).HasColumnName("CampaignID").IsRequired().HasColumnType("int");
            Property(x => x.AdGroupId).HasColumnName("AdGroupID").IsRequired().HasColumnType("int");
            Property(x => x.GeoCountryId).HasColumnName("GeoCountryID").IsRequired().HasColumnType("int");
            Property(x => x.CountryName).HasColumnName("CountryName").IsRequired().HasColumnType("nvarchar").HasMaxLength(50);
            Property(x => x.MediaTypeId).HasColumnName("MediaTypeID").IsRequired().HasColumnType("int");
            Property(x => x.IsTargeted).HasColumnName("IsTargeted").IsRequired().HasColumnType("int");
            Property(x => x.PackageInstalled).HasColumnName("PackageInstalled").IsRequired().HasColumnType("int");
            Property(x => x.Bids).HasColumnName("Bids").IsOptional().HasColumnType("bigint");
            Property(x => x.Impressions).HasColumnName("Impressions").IsOptional().HasColumnType("bigint");
            Property(x => x.Clicks).HasColumnName("Clicks").IsOptional().HasColumnType("bigint");
            Property(x => x.Conversions).HasColumnName("Conversions").IsOptional().HasColumnType("bigint");
            Property(x => x.PostViewConversions).HasColumnName("PostViewConversions").IsOptional().HasColumnType("bigint");
            Property(x => x.PostClickConversions).HasColumnName("PostClickConversions").IsOptional().HasColumnType("bigint");
            Property(x => x.SpendLocalMicros).HasColumnName("SpendLocalMicros").IsOptional().HasColumnType("bigint");
            Property(x => x.Spend).HasColumnName("Spend").IsOptional().HasColumnType("money").HasPrecision(19,4);
            Property(x => x.ClientCostLocalMicros).HasColumnName("ClientCostLocalMicros").IsOptional().HasColumnType("decimal").HasPrecision(38,4);
            Property(x => x.ClientCostDollars).HasColumnName("ClientCostDollars").IsOptional().HasColumnType("money").HasPrecision(19,4);
            Property(x => x.MediaCostLocalMicros).HasColumnName("MediaCostLocalMicros").IsOptional().HasColumnType("bigint");
            Property(x => x.DataCostLocalMicros).HasColumnName("DataCostLocalMicros").IsOptional().HasColumnType("bigint");
            Property(x => x.MediaClientCostLocalMicros).HasColumnName("MediaClientCostLocalMicros").IsOptional().HasColumnType("decimal").HasPrecision(38,4);
            Property(x => x.DataClientCostLocalMicros).HasColumnName("DataClientCostLocalMicros").IsOptional().HasColumnType("decimal").HasPrecision(38,4);
            Property(x => x.AdSlotDurationInSeconds).HasColumnName("AdSlotDurationInSeconds").IsOptional().HasColumnType("bigint");
            Property(x => x.RawViews).HasColumnName("RawViews").IsOptional().HasColumnType("bigint");
            Property(x => x.IabViews).HasColumnName("IabViews").IsOptional().HasColumnType("bigint");
            Property(x => x.ViewDurationInSeconds).HasColumnName("ViewDurationInSeconds").IsOptional().HasColumnType("bigint");
            Property(x => x.CountryId).HasColumnName("CountryID").IsRequired().HasColumnType("int");
            Property(x => x.Ctr).HasColumnName("CTR").IsOptional().HasColumnType("float");
            Property(x => x.Cpm).HasColumnName("CPM").IsOptional().HasColumnType("decimal").HasPrecision(19,4);
            Property(x => x.Cpc).HasColumnName("CPC").IsOptional().HasColumnType("decimal").HasPrecision(19,4);
            Property(x => x.Cpa).HasColumnName("CPA").IsOptional().HasColumnType("decimal").HasPrecision(19,4);
            Property(x => x.ClientCostCpm).HasColumnName("ClientCostCPM").IsOptional().HasColumnType("decimal").HasPrecision(19,4);
            Property(x => x.ClientCostCpc).HasColumnName("ClientCostCPC").IsOptional().HasColumnType("decimal").HasPrecision(19,4);
            Property(x => x.ClientCostCpa).HasColumnName("ClientCostCPA").IsOptional().HasColumnType("decimal").HasPrecision(19,4);
            Property(x => x.Cpms).HasColumnName("CPMs").IsOptional().HasColumnType("decimal").HasPrecision(38,14);
            Property(x => x.ClientCostCpms).HasColumnName("ClientCostCpms").IsOptional().HasColumnType("decimal").HasPrecision(38,14);
            Property(x => x.Cps).HasColumnName("CPS").IsOptional().HasColumnType("decimal").HasPrecision(38,14);
            Property(x => x.ClientCostCps).HasColumnName("ClientCostCps").IsOptional().HasColumnType("decimal").HasPrecision(38,14);
            Property(x => x.ViewableRatio).HasColumnName("ViewableRatio").IsOptional().HasColumnType("float");
            InitializePartial();
        }
        partial void InitializePartial();
    }

    // AdGroupDayPart
    internal partial class AdGroupDayPartMap : EntityTypeConfiguration<AdGroupDayPart>
    {
        public AdGroupDayPartMap()
            : this("analytics")
        {
        }
 
        public AdGroupDayPartMap(string schema)
        {
            ToTable(schema + ".AdGroupDayPart");
            HasKey(x => new { x.BuyerAccountId, x.CampaignId, x.AdGroupId, x.OptimizationModelId, x.DayPartId, x.UtcDate, x.LocalDate, x.UtcDateTime, x.LocalDateTime, x.Bids, x.Impressions, x.Clicks, x.Conversions, x.PostViewConversions, x.PostClickConversions, x.MediaCostUsdMicros, x.MediaCostLocalMicros, x.DataCostLocalMicros });

            Property(x => x.BuyerAccountId).HasColumnName("BuyerAccountID").IsRequired().HasColumnType("int");
            Property(x => x.CampaignId).HasColumnName("CampaignID").IsRequired().HasColumnType("int");
            Property(x => x.AdGroupId).HasColumnName("AdGroupID").IsRequired().HasColumnType("int");
            Property(x => x.OptimizationModelId).HasColumnName("OptimizationModelID").IsRequired().HasColumnType("int");
            Property(x => x.DayPartId).HasColumnName("DayPartID").IsRequired().HasColumnType("int");
            Property(x => x.UtcDate).HasColumnName("UtcDate").IsRequired().HasColumnType("date");
            Property(x => x.LocalDate).HasColumnName("LocalDate").IsRequired().HasColumnType("date");
            Property(x => x.UtcDateTime).HasColumnName("UtcDateTime").IsRequired().HasColumnType("datetime");
            Property(x => x.LocalDateTime).HasColumnName("LocalDateTime").IsRequired().HasColumnType("datetime");
            Property(x => x.Bids).HasColumnName("Bids").IsRequired().HasColumnType("bigint");
            Property(x => x.Impressions).HasColumnName("Impressions").IsRequired().HasColumnType("bigint");
            Property(x => x.Clicks).HasColumnName("Clicks").IsRequired().HasColumnType("bigint");
            Property(x => x.Conversions).HasColumnName("Conversions").IsRequired().HasColumnType("bigint");
            Property(x => x.PostViewConversions).HasColumnName("PostViewConversions").IsRequired().HasColumnType("bigint");
            Property(x => x.PostClickConversions).HasColumnName("PostClickConversions").IsRequired().HasColumnType("bigint");
            Property(x => x.MediaCostUsdMicros).HasColumnName("MediaCostUsdMicros").IsRequired().HasColumnType("bigint");
            Property(x => x.MediaCostLocalMicros).HasColumnName("MediaCostLocalMicros").IsRequired().HasColumnType("bigint");
            Property(x => x.DataCostLocalMicros).HasColumnName("DataCostLocalMicros").IsRequired().HasColumnType("bigint");
            Property(x => x.InvalidImpressions).HasColumnName("InvalidImpressions").IsOptional().HasColumnType("bigint");
            Property(x => x.InvalidClicks).HasColumnName("InvalidClicks").IsOptional().HasColumnType("bigint");
            Property(x => x.FeesUsdSuperMicros).HasColumnName("FeesUsdSuperMicros").IsOptional().HasColumnType("bigint");
            Property(x => x.FeesLocalSuperMicros).HasColumnName("FeesLocalSuperMicros").IsOptional().HasColumnType("bigint");
            Property(x => x.AdSlotDurationInSeconds).HasColumnName("AdSlotDurationInSeconds").IsOptional().HasColumnType("bigint");
            Property(x => x.RawViews).HasColumnName("RawViews").IsOptional().HasColumnType("bigint");
            Property(x => x.IabViews).HasColumnName("IabViews").IsOptional().HasColumnType("bigint");
            Property(x => x.ViewDurationInSeconds).HasColumnName("ViewDurationInSeconds").IsOptional().HasColumnType("bigint");
            InitializePartial();
        }
        partial void InitializePartial();
    }

    // AdGroupDayPartAnalyticsReportID
    internal partial class AdGroupDayPartAnalyticsReportIdMap : EntityTypeConfiguration<AdGroupDayPartAnalyticsReportId>
    {
        public AdGroupDayPartAnalyticsReportIdMap()
            : this("dbo")
        {
        }
 
        public AdGroupDayPartAnalyticsReportIdMap(string schema)
        {
            ToTable(schema + ".AdGroupDayPartAnalyticsReportID");
            HasKey(x => new { x.BuyerAccountId, x.AdvertiserId, x.AdvertiserProductId, x.CampaignId, x.AdGroupId, x.OptimizationModelId, x.DayPartId, x.DayPartName, x.LocalDate, x.Bids, x.Impressions, x.Conversions, x.PostViewConversions, x.PostClickConversions, x.MediaCostLocalMicros, x.DataCostLocalMicros });

            Property(x => x.BuyerAccountId).HasColumnName("BuyerAccountID").IsRequired().HasColumnType("int");
            Property(x => x.AdvertiserId).HasColumnName("AdvertiserID").IsRequired().HasColumnType("int");
            Property(x => x.AdvertiserProductId).HasColumnName("AdvertiserProductID").IsRequired().HasColumnType("int");
            Property(x => x.CampaignId).HasColumnName("CampaignID").IsRequired().HasColumnType("int");
            Property(x => x.AdGroupId).HasColumnName("AdGroupID").IsRequired().HasColumnType("int");
            Property(x => x.OptimizationModelId).HasColumnName("OptimizationModelID").IsRequired().HasColumnType("int");
            Property(x => x.DayPartId).HasColumnName("DayPartID").IsRequired().HasColumnType("int");
            Property(x => x.DayPartName).HasColumnName("DayPartName").IsRequired().HasColumnType("nvarchar").HasMaxLength(50);
            Property(x => x.LocalDate).HasColumnName("LocalDate").IsRequired().HasColumnType("date");
            Property(x => x.Bids).HasColumnName("Bids").IsRequired().HasColumnType("bigint");
            Property(x => x.Impressions).HasColumnName("Impressions").IsRequired().HasColumnType("bigint");
            Property(x => x.Clicks).HasColumnName("Clicks").IsOptional().HasColumnType("bigint");
            Property(x => x.UnfilteredClicks).HasColumnName("UnfilteredClicks").IsOptional().HasColumnType("bigint");
            Property(x => x.Conversions).HasColumnName("Conversions").IsRequired().HasColumnType("bigint");
            Property(x => x.PostViewConversions).HasColumnName("PostViewConversions").IsRequired().HasColumnType("bigint");
            Property(x => x.PostClickConversions).HasColumnName("PostClickConversions").IsRequired().HasColumnType("bigint");
            Property(x => x.SpendLocalMicros).HasColumnName("SpendLocalMicros").IsOptional().HasColumnType("bigint");
            Property(x => x.Spend).HasColumnName("Spend").IsOptional().HasColumnType("money").HasPrecision(19,4);
            Property(x => x.ClientCostLocalMicros).HasColumnName("ClientCostLocalMicros").IsOptional().HasColumnType("bigint");
            Property(x => x.ClientCostDollars).HasColumnName("ClientCostDollars").IsOptional().HasColumnType("money").HasPrecision(19,4);
            Property(x => x.MediaCostLocalMicros).HasColumnName("MediaCostLocalMicros").IsRequired().HasColumnType("bigint");
            Property(x => x.DataCostLocalMicros).HasColumnName("DataCostLocalMicros").IsRequired().HasColumnType("bigint");
            Property(x => x.MediaClientCostLocalMicros).HasColumnName("MediaClientCostLocalMicros").IsOptional().HasColumnType("bigint");
            Property(x => x.DataClientCostLocalMicros).HasColumnName("DataClientCostLocalMicros").IsOptional().HasColumnType("bigint");
            Property(x => x.AdSlotDurationInSeconds).HasColumnName("AdSlotDurationInSeconds").IsOptional().HasColumnType("bigint");
            Property(x => x.RawViews).HasColumnName("RawViews").IsOptional().HasColumnType("bigint");
            Property(x => x.IabViews).HasColumnName("IabViews").IsOptional().HasColumnType("bigint");
            Property(x => x.ViewDurationInSeconds).HasColumnName("ViewDurationInSeconds").IsOptional().HasColumnType("bigint");
            Property(x => x.Ctr).HasColumnName("CTR").IsOptional().HasColumnType("float");
            Property(x => x.Cpm).HasColumnName("CPM").IsOptional().HasColumnType("money").HasPrecision(19,4);
            Property(x => x.Cpc).HasColumnName("CPC").IsOptional().HasColumnType("money").HasPrecision(19,4);
            Property(x => x.Cpa).HasColumnName("CPA").IsOptional().HasColumnType("money").HasPrecision(19,4);
            Property(x => x.ClientCpm).HasColumnName("ClientCPM").IsOptional().HasColumnType("money").HasPrecision(19,4);
            Property(x => x.ClientCpc).HasColumnName("ClientCPC").IsOptional().HasColumnType("money").HasPrecision(19,4);
            Property(x => x.ClientCpa).HasColumnName("ClientCPA").IsOptional().HasColumnType("money").HasPrecision(19,4);
            Property(x => x.Cpms).HasColumnName("CPMs").IsOptional().HasColumnType("decimal").HasPrecision(38,14);
            Property(x => x.ClientCostCpms).HasColumnName("ClientCostCpms").IsOptional().HasColumnType("decimal").HasPrecision(38,14);
            Property(x => x.Cps).HasColumnName("CPS").IsOptional().HasColumnType("decimal").HasPrecision(38,14);
            Property(x => x.ClientCostCps).HasColumnName("ClientCostCps").IsOptional().HasColumnType("decimal").HasPrecision(38,14);
            Property(x => x.ViewableRatio).HasColumnName("ViewableRatio").IsOptional().HasColumnType("float");
            InitializePartial();
        }
        partial void InitializePartial();
    }

    // AdGroupDayPartCombined
    internal partial class AdGroupDayPartCombinedMap : EntityTypeConfiguration<AdGroupDayPartCombined>
    {
        public AdGroupDayPartCombinedMap()
            : this("analytics")
        {
        }
 
        public AdGroupDayPartCombinedMap(string schema)
        {
            ToTable(schema + ".AdGroupDayPartCombined");
            HasKey(x => new { x.BuyerAccountId, x.CampaignId, x.AdGroupId, x.OptimizationModelId, x.DayPartId, x.UtcDate, x.LocalDate, x.UtcDateTime, x.LocalDateTime, x.Bids, x.Impressions, x.Clicks, x.Conversions, x.PostViewConversions, x.PostClickConversions, x.MediaCostUsdMicros, x.MediaCostLocalMicros, x.DataCostLocalMicros });

            Property(x => x.BuyerAccountId).HasColumnName("BuyerAccountID").IsRequired().HasColumnType("int");
            Property(x => x.CampaignId).HasColumnName("CampaignID").IsRequired().HasColumnType("int");
            Property(x => x.AdGroupId).HasColumnName("AdGroupID").IsRequired().HasColumnType("int");
            Property(x => x.OptimizationModelId).HasColumnName("OptimizationModelID").IsRequired().HasColumnType("int");
            Property(x => x.DayPartId).HasColumnName("DayPartID").IsRequired().HasColumnType("int");
            Property(x => x.UtcDate).HasColumnName("UtcDate").IsRequired().HasColumnType("date");
            Property(x => x.LocalDate).HasColumnName("LocalDate").IsRequired().HasColumnType("date");
            Property(x => x.UtcDateTime).HasColumnName("UtcDateTime").IsRequired().HasColumnType("datetime");
            Property(x => x.LocalDateTime).HasColumnName("LocalDateTime").IsRequired().HasColumnType("datetime");
            Property(x => x.Bids).HasColumnName("Bids").IsRequired().HasColumnType("bigint");
            Property(x => x.Impressions).HasColumnName("Impressions").IsRequired().HasColumnType("bigint");
            Property(x => x.Clicks).HasColumnName("Clicks").IsRequired().HasColumnType("bigint");
            Property(x => x.Conversions).HasColumnName("Conversions").IsRequired().HasColumnType("bigint");
            Property(x => x.PostViewConversions).HasColumnName("PostViewConversions").IsRequired().HasColumnType("bigint");
            Property(x => x.PostClickConversions).HasColumnName("PostClickConversions").IsRequired().HasColumnType("bigint");
            Property(x => x.MediaCostUsdMicros).HasColumnName("MediaCostUsdMicros").IsRequired().HasColumnType("bigint");
            Property(x => x.MediaCostLocalMicros).HasColumnName("MediaCostLocalMicros").IsRequired().HasColumnType("bigint");
            Property(x => x.DataCostLocalMicros).HasColumnName("DataCostLocalMicros").IsRequired().HasColumnType("bigint");
            Property(x => x.InvalidImpressions).HasColumnName("InvalidImpressions").IsOptional().HasColumnType("bigint");
            Property(x => x.InvalidClicks).HasColumnName("InvalidClicks").IsOptional().HasColumnType("bigint");
            Property(x => x.FeesUsdSuperMicros).HasColumnName("FeesUsdSuperMicros").IsOptional().HasColumnType("bigint");
            Property(x => x.FeesLocalSuperMicros).HasColumnName("FeesLocalSuperMicros").IsOptional().HasColumnType("bigint");
            Property(x => x.AdSlotDurationInSeconds).HasColumnName("AdSlotDurationInSeconds").IsOptional().HasColumnType("bigint");
            Property(x => x.RawViews).HasColumnName("RawViews").IsOptional().HasColumnType("bigint");
            Property(x => x.IabViews).HasColumnName("IabViews").IsOptional().HasColumnType("bigint");
            Property(x => x.ViewDurationInSeconds).HasColumnName("ViewDurationInSeconds").IsOptional().HasColumnType("bigint");
            InitializePartial();
        }
        partial void InitializePartial();
    }

    // AdGroupDayPartException
    internal partial class AdGroupDayPartExceptionMap : EntityTypeConfiguration<AdGroupDayPartException>
    {
        public AdGroupDayPartExceptionMap()
            : this("analytics")
        {
        }
 
        public AdGroupDayPartExceptionMap(string schema)
        {
            ToTable(schema + ".AdGroupDayPartException");
            HasKey(x => new { x.BuyerAccountId, x.CampaignId, x.AdGroupId, x.OptimizationModelId, x.DeviceId, x.UtcDateTime, x.LocalDateTime, x.Bids, x.Impressions, x.InvalidImpressions, x.Clicks, x.InvalidClicks, x.Conversions, x.PostViewConversions, x.PostClickConversions, x.MediaCostUsdMicros, x.MediaCostLocalMicros, x.DataCostLocalMicros, x.FeesUsdSuperMicros, x.FeesLocalSuperMicros });

            Property(x => x.BuyerAccountId).HasColumnName("BuyerAccountID").IsRequired().HasColumnType("int");
            Property(x => x.CampaignId).HasColumnName("CampaignID").IsRequired().HasColumnType("int");
            Property(x => x.AdGroupId).HasColumnName("AdGroupID").IsRequired().HasColumnType("int");
            Property(x => x.OptimizationModelId).HasColumnName("OptimizationModelID").IsRequired().HasColumnType("int");
            Property(x => x.DeviceId).HasColumnName("DeviceID").IsRequired().HasColumnType("int");
            Property(x => x.UtcDateTime).HasColumnName("UtcDateTime").IsRequired().HasColumnType("datetime");
            Property(x => x.LocalDateTime).HasColumnName("LocalDateTime").IsRequired().HasColumnType("datetime");
            Property(x => x.Bids).HasColumnName("Bids").IsRequired().HasColumnType("bigint");
            Property(x => x.Impressions).HasColumnName("Impressions").IsRequired().HasColumnType("bigint");
            Property(x => x.InvalidImpressions).HasColumnName("InvalidImpressions").IsRequired().HasColumnType("bigint");
            Property(x => x.Clicks).HasColumnName("Clicks").IsRequired().HasColumnType("bigint");
            Property(x => x.InvalidClicks).HasColumnName("InvalidClicks").IsRequired().HasColumnType("bigint");
            Property(x => x.Conversions).HasColumnName("Conversions").IsRequired().HasColumnType("bigint");
            Property(x => x.PostViewConversions).HasColumnName("PostViewConversions").IsRequired().HasColumnType("bigint");
            Property(x => x.PostClickConversions).HasColumnName("PostClickConversions").IsRequired().HasColumnType("bigint");
            Property(x => x.MediaCostUsdMicros).HasColumnName("MediaCostUsdMicros").IsRequired().HasColumnType("bigint");
            Property(x => x.MediaCostLocalMicros).HasColumnName("MediaCostLocalMicros").IsRequired().HasColumnType("bigint");
            Property(x => x.DataCostLocalMicros).HasColumnName("DataCostLocalMicros").IsRequired().HasColumnType("bigint");
            Property(x => x.FeesUsdSuperMicros).HasColumnName("FeesUsdSuperMicros").IsRequired().HasColumnType("bigint");
            Property(x => x.FeesLocalSuperMicros).HasColumnName("FeesLocalSuperMicros").IsRequired().HasColumnType("bigint");
            Property(x => x.AdSlotDurationInSeconds).HasColumnName("AdSlotDurationInSeconds").IsOptional().HasColumnType("bigint");
            Property(x => x.RawViews).HasColumnName("RawViews").IsOptional().HasColumnType("bigint");
            Property(x => x.IabViews).HasColumnName("IabViews").IsOptional().HasColumnType("bigint");
            Property(x => x.ViewDurationInSeconds).HasColumnName("ViewDurationInSeconds").IsOptional().HasColumnType("bigint");
            InitializePartial();
        }
        partial void InitializePartial();
    }

    // AdGroupDayPartImport
    internal partial class AdGroupDayPartImportMap : EntityTypeConfiguration<AdGroupDayPartImport>
    {
        public AdGroupDayPartImportMap()
            : this("analytics")
        {
        }
 
        public AdGroupDayPartImportMap(string schema)
        {
            ToTable(schema + ".AdGroupDayPartImport");
            HasKey(x => new { x.BuyerAccountId, x.CampaignId, x.AdGroupId, x.OptimizationModelId, x.DayPartId, x.UtcDateTime, x.LocalDateTime, x.Bids, x.Impressions, x.InvalidImpressions, x.Clicks, x.InvalidClicks, x.Conversions, x.PostViewConversions, x.PostClickConversions, x.MediaCostUsdMicros, x.MediaCostLocalMicros, x.DataCostLocalMicros, x.FeesUsdSuperMicros, x.FeesLocalSuperMicros });

            Property(x => x.BuyerAccountId).HasColumnName("BuyerAccountID").IsRequired().HasColumnType("int");
            Property(x => x.CampaignId).HasColumnName("CampaignID").IsRequired().HasColumnType("int");
            Property(x => x.AdGroupId).HasColumnName("AdGroupID").IsRequired().HasColumnType("int");
            Property(x => x.OptimizationModelId).HasColumnName("OptimizationModelID").IsRequired().HasColumnType("int");
            Property(x => x.DayPartId).HasColumnName("DayPartID").IsRequired().HasColumnType("int");
            Property(x => x.UtcDateTime).HasColumnName("UtcDateTime").IsRequired().HasColumnType("datetime");
            Property(x => x.LocalDateTime).HasColumnName("LocalDateTime").IsRequired().HasColumnType("datetime");
            Property(x => x.Bids).HasColumnName("Bids").IsRequired().HasColumnType("bigint");
            Property(x => x.Impressions).HasColumnName("Impressions").IsRequired().HasColumnType("bigint");
            Property(x => x.InvalidImpressions).HasColumnName("InvalidImpressions").IsRequired().HasColumnType("bigint");
            Property(x => x.Clicks).HasColumnName("Clicks").IsRequired().HasColumnType("bigint");
            Property(x => x.InvalidClicks).HasColumnName("InvalidClicks").IsRequired().HasColumnType("bigint");
            Property(x => x.Conversions).HasColumnName("Conversions").IsRequired().HasColumnType("bigint");
            Property(x => x.PostViewConversions).HasColumnName("PostViewConversions").IsRequired().HasColumnType("bigint");
            Property(x => x.PostClickConversions).HasColumnName("PostClickConversions").IsRequired().HasColumnType("bigint");
            Property(x => x.MediaCostUsdMicros).HasColumnName("MediaCostUsdMicros").IsRequired().HasColumnType("bigint");
            Property(x => x.MediaCostLocalMicros).HasColumnName("MediaCostLocalMicros").IsRequired().HasColumnType("bigint");
            Property(x => x.DataCostLocalMicros).HasColumnName("DataCostLocalMicros").IsRequired().HasColumnType("bigint");
            Property(x => x.FeesUsdSuperMicros).HasColumnName("FeesUsdSuperMicros").IsRequired().HasColumnType("bigint");
            Property(x => x.FeesLocalSuperMicros).HasColumnName("FeesLocalSuperMicros").IsRequired().HasColumnType("bigint");
            Property(x => x.AdSlotDurationInSeconds).HasColumnName("AdSlotDurationInSeconds").IsOptional().HasColumnType("bigint");
            Property(x => x.RawViews).HasColumnName("RawViews").IsOptional().HasColumnType("bigint");
            Property(x => x.IabViews).HasColumnName("IabViews").IsOptional().HasColumnType("bigint");
            Property(x => x.ViewDurationInSeconds).HasColumnName("ViewDurationInSeconds").IsOptional().HasColumnType("bigint");
            InitializePartial();
        }
        partial void InitializePartial();
    }

    // AdGroupDayPartImportReportID
    internal partial class AdGroupDayPartImportReportIdMap : EntityTypeConfiguration<AdGroupDayPartImportReportId>
    {
        public AdGroupDayPartImportReportIdMap()
            : this("analytics")
        {
        }
 
        public AdGroupDayPartImportReportIdMap(string schema)
        {
            ToTable(schema + ".AdGroupDayPartImportReportID");
            HasKey(x => new { x.BuyerAccountId, x.CampaignId, x.AdGroupId, x.OptimizationModelId, x.DayPartId, x.UtcDateTime, x.LocalDateTime, x.Bids, x.Impressions, x.InvalidImpressions, x.Clicks, x.InvalidClicks, x.Conversions, x.PostViewConversions, x.PostClickConversions, x.MediaCostUsdMicros, x.MediaCostLocalMicros, x.DataCostLocalMicros, x.FeesUsdSuperMicros, x.FeesLocalSuperMicros, x.ReportId });

            Property(x => x.BuyerAccountId).HasColumnName("BuyerAccountID").IsRequired().HasColumnType("int");
            Property(x => x.CampaignId).HasColumnName("CampaignID").IsRequired().HasColumnType("int");
            Property(x => x.AdGroupId).HasColumnName("AdGroupID").IsRequired().HasColumnType("int");
            Property(x => x.OptimizationModelId).HasColumnName("OptimizationModelID").IsRequired().HasColumnType("int");
            Property(x => x.DayPartId).HasColumnName("DayPartID").IsRequired().HasColumnType("int");
            Property(x => x.UtcDateTime).HasColumnName("UtcDateTime").IsRequired().HasColumnType("datetime");
            Property(x => x.LocalDateTime).HasColumnName("LocalDateTime").IsRequired().HasColumnType("datetime");
            Property(x => x.Bids).HasColumnName("Bids").IsRequired().HasColumnType("bigint");
            Property(x => x.Impressions).HasColumnName("Impressions").IsRequired().HasColumnType("bigint");
            Property(x => x.InvalidImpressions).HasColumnName("InvalidImpressions").IsRequired().HasColumnType("bigint");
            Property(x => x.Clicks).HasColumnName("Clicks").IsRequired().HasColumnType("bigint");
            Property(x => x.InvalidClicks).HasColumnName("InvalidClicks").IsRequired().HasColumnType("bigint");
            Property(x => x.Conversions).HasColumnName("Conversions").IsRequired().HasColumnType("bigint");
            Property(x => x.PostViewConversions).HasColumnName("PostViewConversions").IsRequired().HasColumnType("bigint");
            Property(x => x.PostClickConversions).HasColumnName("PostClickConversions").IsRequired().HasColumnType("bigint");
            Property(x => x.MediaCostUsdMicros).HasColumnName("MediaCostUsdMicros").IsRequired().HasColumnType("bigint");
            Property(x => x.MediaCostLocalMicros).HasColumnName("MediaCostLocalMicros").IsRequired().HasColumnType("bigint");
            Property(x => x.DataCostLocalMicros).HasColumnName("DataCostLocalMicros").IsRequired().HasColumnType("bigint");
            Property(x => x.FeesUsdSuperMicros).HasColumnName("FeesUsdSuperMicros").IsRequired().HasColumnType("bigint");
            Property(x => x.FeesLocalSuperMicros).HasColumnName("FeesLocalSuperMicros").IsRequired().HasColumnType("bigint");
            Property(x => x.ReportId).HasColumnName("ReportID").IsRequired().HasColumnType("bigint");
            Property(x => x.AdSlotDurationInSeconds).HasColumnName("AdSlotDurationInSeconds").IsOptional().HasColumnType("bigint");
            Property(x => x.RawViews).HasColumnName("RawViews").IsOptional().HasColumnType("bigint");
            Property(x => x.IabViews).HasColumnName("IabViews").IsOptional().HasColumnType("bigint");
            Property(x => x.ViewDurationInSeconds).HasColumnName("ViewDurationInSeconds").IsOptional().HasColumnType("bigint");
            InitializePartial();
        }
        partial void InitializePartial();
    }

    // AdGroupDayPartReportID
    internal partial class AdGroupDayPartReportIdMap : EntityTypeConfiguration<AdGroupDayPartReportId>
    {
        public AdGroupDayPartReportIdMap()
            : this("analytics")
        {
        }
 
        public AdGroupDayPartReportIdMap(string schema)
        {
            ToTable(schema + ".AdGroupDayPartReportID");
            HasKey(x => new { x.BuyerAccountId, x.CampaignId, x.AdGroupId, x.OptimizationModelId, x.DayPartId, x.UtcDate, x.LocalDate, x.UtcDateTime, x.LocalDateTime, x.Bids, x.Impressions, x.Clicks, x.Conversions, x.PostViewConversions, x.PostClickConversions, x.MediaCostUsdMicros, x.MediaCostLocalMicros, x.DataCostLocalMicros, x.ReportId });

            Property(x => x.BuyerAccountId).HasColumnName("BuyerAccountID").IsRequired().HasColumnType("int");
            Property(x => x.CampaignId).HasColumnName("CampaignID").IsRequired().HasColumnType("int");
            Property(x => x.AdGroupId).HasColumnName("AdGroupID").IsRequired().HasColumnType("int");
            Property(x => x.OptimizationModelId).HasColumnName("OptimizationModelID").IsRequired().HasColumnType("int");
            Property(x => x.DayPartId).HasColumnName("DayPartID").IsRequired().HasColumnType("int");
            Property(x => x.UtcDate).HasColumnName("UtcDate").IsRequired().HasColumnType("date");
            Property(x => x.LocalDate).HasColumnName("LocalDate").IsRequired().HasColumnType("date");
            Property(x => x.UtcDateTime).HasColumnName("UtcDateTime").IsRequired().HasColumnType("datetime");
            Property(x => x.LocalDateTime).HasColumnName("LocalDateTime").IsRequired().HasColumnType("datetime");
            Property(x => x.Bids).HasColumnName("Bids").IsRequired().HasColumnType("bigint");
            Property(x => x.Impressions).HasColumnName("Impressions").IsRequired().HasColumnType("bigint");
            Property(x => x.Clicks).HasColumnName("Clicks").IsRequired().HasColumnType("bigint");
            Property(x => x.Conversions).HasColumnName("Conversions").IsRequired().HasColumnType("bigint");
            Property(x => x.PostViewConversions).HasColumnName("PostViewConversions").IsRequired().HasColumnType("bigint");
            Property(x => x.PostClickConversions).HasColumnName("PostClickConversions").IsRequired().HasColumnType("bigint");
            Property(x => x.MediaCostUsdMicros).HasColumnName("MediaCostUsdMicros").IsRequired().HasColumnType("bigint");
            Property(x => x.MediaCostLocalMicros).HasColumnName("MediaCostLocalMicros").IsRequired().HasColumnType("bigint");
            Property(x => x.DataCostLocalMicros).HasColumnName("DataCostLocalMicros").IsRequired().HasColumnType("bigint");
            Property(x => x.InvalidImpressions).HasColumnName("InvalidImpressions").IsOptional().HasColumnType("bigint");
            Property(x => x.InvalidClicks).HasColumnName("InvalidClicks").IsOptional().HasColumnType("bigint");
            Property(x => x.FeesUsdSuperMicros).HasColumnName("FeesUsdSuperMicros").IsOptional().HasColumnType("bigint");
            Property(x => x.FeesLocalSuperMicros).HasColumnName("FeesLocalSuperMicros").IsOptional().HasColumnType("bigint");
            Property(x => x.ReportId).HasColumnName("ReportID").IsRequired().HasColumnType("bigint");
            Property(x => x.AdSlotDurationInSeconds).HasColumnName("AdSlotDurationInSeconds").IsOptional().HasColumnType("bigint");
            Property(x => x.RawViews).HasColumnName("RawViews").IsOptional().HasColumnType("bigint");
            Property(x => x.IabViews).HasColumnName("IabViews").IsOptional().HasColumnType("bigint");
            Property(x => x.ViewDurationInSeconds).HasColumnName("ViewDurationInSeconds").IsOptional().HasColumnType("bigint");
            InitializePartial();
        }
        partial void InitializePartial();
    }

    // AdGroupDayPartTargetingReportID
    internal partial class AdGroupDayPartTargetingReportIdMap : EntityTypeConfiguration<AdGroupDayPartTargetingReportId>
    {
        public AdGroupDayPartTargetingReportIdMap()
            : this("dbo")
        {
        }
 
        public AdGroupDayPartTargetingReportIdMap(string schema)
        {
            ToTable(schema + ".AdGroupDayPartTargetingReportID");
            HasKey(x => new { x.DayPartId, x.DayPartName, x.DayOfWeekName, x.HourOfDayName, x.IsEnabled, x.IsTargeted, x.PackageInstalled });

            Property(x => x.BuyerAccountId).HasColumnName("BuyerAccountID").IsOptional().HasColumnType("int");
            Property(x => x.CampaignId).HasColumnName("CampaignID").IsOptional().HasColumnType("int");
            Property(x => x.AdGroupId).HasColumnName("AdGroupID").IsOptional().HasColumnType("int");
            Property(x => x.DayPartId).HasColumnName("DayPartID").IsRequired().HasColumnType("int");
            Property(x => x.DayPartName).HasColumnName("DayPartName").IsRequired().HasColumnType("nvarchar").HasMaxLength(50);
            Property(x => x.DayOfWeekName).HasColumnName("DayOfWeekName").IsRequired().HasColumnType("nvarchar").HasMaxLength(50);
            Property(x => x.HourOfDayName).HasColumnName("HourOfDayName").IsRequired().HasColumnType("nvarchar").HasMaxLength(50);
            Property(x => x.IsEnabled).HasColumnName("IsEnabled").IsRequired().HasColumnType("bit");
            Property(x => x.IsTargeted).HasColumnName("IsTargeted").IsRequired().HasColumnType("int");
            Property(x => x.PackageInstalled).HasColumnName("PackageInstalled").IsRequired().HasColumnType("int");
            Property(x => x.Bids).HasColumnName("Bids").IsOptional().HasColumnType("bigint");
            Property(x => x.Impressions).HasColumnName("Impressions").IsOptional().HasColumnType("bigint");
            Property(x => x.Clicks).HasColumnName("Clicks").IsOptional().HasColumnType("bigint");
            Property(x => x.Conversions).HasColumnName("Conversions").IsOptional().HasColumnType("bigint");
            Property(x => x.PostViewConversions).HasColumnName("PostViewConversions").IsOptional().HasColumnType("bigint");
            Property(x => x.PostClickConversions).HasColumnName("PostClickConversions").IsOptional().HasColumnType("bigint");
            Property(x => x.SpendLocalMicros).HasColumnName("SpendLocalMicros").IsOptional().HasColumnType("bigint");
            Property(x => x.Spend).HasColumnName("Spend").IsOptional().HasColumnType("money").HasPrecision(19,4);
            Property(x => x.ClientCostLocalMicros).HasColumnName("ClientCostLocalMicros").IsOptional().HasColumnType("decimal").HasPrecision(38,4);
            Property(x => x.ClientCostDollars).HasColumnName("ClientCostDollars").IsOptional().HasColumnType("money").HasPrecision(19,4);
            Property(x => x.MediaCostLocalMicros).HasColumnName("MediaCostLocalMicros").IsOptional().HasColumnType("bigint");
            Property(x => x.DataCostLocalMicros).HasColumnName("DataCostLocalMicros").IsOptional().HasColumnType("bigint");
            Property(x => x.MediaClientCostLocalMicros).HasColumnName("MediaClientCostLocalMicros").IsOptional().HasColumnType("decimal").HasPrecision(38,4);
            Property(x => x.DataClientCostLocalMicros).HasColumnName("DataClientCostLocalMicros").IsOptional().HasColumnType("decimal").HasPrecision(38,4);
            Property(x => x.AdSlotDurationInSeconds).HasColumnName("AdSlotDurationInSeconds").IsOptional().HasColumnType("bigint");
            Property(x => x.RawViews).HasColumnName("RawViews").IsOptional().HasColumnType("bigint");
            Property(x => x.IabViews).HasColumnName("IabViews").IsOptional().HasColumnType("bigint");
            Property(x => x.ViewDurationInSeconds).HasColumnName("ViewDurationInSeconds").IsOptional().HasColumnType("bigint");
            Property(x => x.Ctr).HasColumnName("CTR").IsOptional().HasColumnType("float");
            Property(x => x.Cpm).HasColumnName("CPM").IsOptional().HasColumnType("decimal").HasPrecision(19,4);
            Property(x => x.Cpc).HasColumnName("CPC").IsOptional().HasColumnType("decimal").HasPrecision(19,4);
            Property(x => x.Cpa).HasColumnName("CPA").IsOptional().HasColumnType("decimal").HasPrecision(19,4);
            Property(x => x.ClientCostCpm).HasColumnName("ClientCostCPM").IsOptional().HasColumnType("decimal").HasPrecision(19,4);
            Property(x => x.ClientCostCpc).HasColumnName("ClientCostCPC").IsOptional().HasColumnType("decimal").HasPrecision(19,4);
            Property(x => x.ClientCostCpa).HasColumnName("ClientCostCPA").IsOptional().HasColumnType("decimal").HasPrecision(19,4);
            Property(x => x.Cpms).HasColumnName("CPMs").IsOptional().HasColumnType("decimal").HasPrecision(38,14);
            Property(x => x.ClientCostCpms).HasColumnName("ClientCostCpms").IsOptional().HasColumnType("decimal").HasPrecision(38,14);
            Property(x => x.Cps).HasColumnName("CPS").IsOptional().HasColumnType("decimal").HasPrecision(38,14);
            Property(x => x.ClientCostCps).HasColumnName("ClientCostCps").IsOptional().HasColumnType("decimal").HasPrecision(38,14);
            Property(x => x.ViewableRatio).HasColumnName("ViewableRatio").IsOptional().HasColumnType("float");
            InitializePartial();
        }
        partial void InitializePartial();
    }

    // AdGroupDeal
    internal partial class AdGroupDealMap : EntityTypeConfiguration<AdGroupDeal>
    {
        public AdGroupDealMap()
            : this("analytics")
        {
        }
 
        public AdGroupDealMap(string schema)
        {
            ToTable(schema + ".AdGroupDeal");
            HasKey(x => new { x.AdGroupId, x.DealKey, x.PublisherId, x.OptimizationModelId, x.UtcDate, x.LocalDate, x.UtcDateTime, x.LocalDateTime, x.Bids, x.Impressions, x.Clicks, x.Conversions, x.PostViewConversions, x.PostClickConversions, x.MediaCostUsdMicros, x.MediaCostLocalMicros, x.DataCostLocalMicros });

            Property(x => x.AdGroupId).HasColumnName("AdGroupID").IsRequired().HasColumnType("int");
            Property(x => x.DealKey).HasColumnName("DealKey").IsRequired().HasColumnType("nvarchar").HasMaxLength(50);
            Property(x => x.PublisherId).HasColumnName("PublisherID").IsRequired().HasColumnType("int");
            Property(x => x.OptimizationModelId).HasColumnName("OptimizationModelID").IsRequired().HasColumnType("int");
            Property(x => x.UtcDate).HasColumnName("UtcDate").IsRequired().HasColumnType("date");
            Property(x => x.LocalDate).HasColumnName("LocalDate").IsRequired().HasColumnType("date");
            Property(x => x.UtcDateTime).HasColumnName("UtcDateTime").IsRequired().HasColumnType("datetime");
            Property(x => x.LocalDateTime).HasColumnName("LocalDateTime").IsRequired().HasColumnType("datetime");
            Property(x => x.Bids).HasColumnName("Bids").IsRequired().HasColumnType("bigint");
            Property(x => x.Impressions).HasColumnName("Impressions").IsRequired().HasColumnType("bigint");
            Property(x => x.InvalidImpressions).HasColumnName("InvalidImpressions").IsOptional().HasColumnType("bigint");
            Property(x => x.Clicks).HasColumnName("Clicks").IsRequired().HasColumnType("bigint");
            Property(x => x.InvalidClicks).HasColumnName("InvalidClicks").IsOptional().HasColumnType("bigint");
            Property(x => x.Conversions).HasColumnName("Conversions").IsRequired().HasColumnType("bigint");
            Property(x => x.PostViewConversions).HasColumnName("PostViewConversions").IsRequired().HasColumnType("bigint");
            Property(x => x.PostClickConversions).HasColumnName("PostClickConversions").IsRequired().HasColumnType("bigint");
            Property(x => x.MediaCostUsdMicros).HasColumnName("MediaCostUsdMicros").IsRequired().HasColumnType("bigint");
            Property(x => x.MediaCostLocalMicros).HasColumnName("MediaCostLocalMicros").IsRequired().HasColumnType("bigint");
            Property(x => x.DataCostLocalMicros).HasColumnName("DataCostLocalMicros").IsRequired().HasColumnType("bigint");
            Property(x => x.FeesUsdSuperMicros).HasColumnName("FeesUsdSuperMicros").IsOptional().HasColumnType("bigint");
            Property(x => x.FeesLocalSuperMicros).HasColumnName("FeesLocalSuperMicros").IsOptional().HasColumnType("bigint");
            Property(x => x.AdSlotDurationInSeconds).HasColumnName("AdSlotDurationInSeconds").IsOptional().HasColumnType("bigint");
            Property(x => x.RawViews).HasColumnName("RawViews").IsOptional().HasColumnType("bigint");
            Property(x => x.IabViews).HasColumnName("IabViews").IsOptional().HasColumnType("bigint");
            Property(x => x.ViewDurationInSeconds).HasColumnName("ViewDurationInSeconds").IsOptional().HasColumnType("bigint");
            InitializePartial();
        }
        partial void InitializePartial();
    }

    // AdGroupDealAnalyticsReportID
    internal partial class AdGroupDealAnalyticsReportIdMap : EntityTypeConfiguration<AdGroupDealAnalyticsReportId>
    {
        public AdGroupDealAnalyticsReportIdMap()
            : this("dbo")
        {
        }
 
        public AdGroupDealAnalyticsReportIdMap(string schema)
        {
            ToTable(schema + ".AdGroupDealAnalyticsReportID");
            HasKey(x => new { x.BuyerAccountId, x.AdvertiserId, x.AdvertiserProductId, x.CampaignId, x.AdGroupId, x.DealKey, x.DealId, x.DealName, x.OptimizationModelId, x.LocalDate, x.Bids, x.Impressions, x.Conversions, x.PostViewConversions, x.PostClickConversions, x.MediaCostLocalMicros, x.DataCostLocalMicros });

            Property(x => x.BuyerAccountId).HasColumnName("BuyerAccountID").IsRequired().HasColumnType("int");
            Property(x => x.AdvertiserId).HasColumnName("AdvertiserID").IsRequired().HasColumnType("int");
            Property(x => x.AdvertiserProductId).HasColumnName("AdvertiserProductID").IsRequired().HasColumnType("int");
            Property(x => x.CampaignId).HasColumnName("CampaignID").IsRequired().HasColumnType("int");
            Property(x => x.AdGroupId).HasColumnName("AdGroupID").IsRequired().HasColumnType("int");
            Property(x => x.DealKey).HasColumnName("DealKey").IsRequired().HasColumnType("nvarchar").HasMaxLength(50);
            Property(x => x.DealId).HasColumnName("DealID").IsRequired().HasColumnType("int");
            Property(x => x.DealName).HasColumnName("DealName").IsRequired().HasColumnType("nvarchar").HasMaxLength(500);
            Property(x => x.OptimizationModelId).HasColumnName("OptimizationModelID").IsRequired().HasColumnType("int");
            Property(x => x.PartnerId).HasColumnName("PartnerID").IsOptional().HasColumnType("int");
            Property(x => x.PartnerName).HasColumnName("PartnerName").IsOptional().HasColumnType("nvarchar").HasMaxLength(50);
            Property(x => x.PublisherId).HasColumnName("PublisherID").IsOptional().HasColumnType("int");
            Property(x => x.PublisherName).HasColumnName("PublisherName").IsOptional().HasColumnType("nvarchar").HasMaxLength(255);
            Property(x => x.LocalDate).HasColumnName("LocalDate").IsRequired().HasColumnType("date");
            Property(x => x.Bids).HasColumnName("Bids").IsRequired().HasColumnType("bigint");
            Property(x => x.Impressions).HasColumnName("Impressions").IsRequired().HasColumnType("bigint");
            Property(x => x.Clicks).HasColumnName("Clicks").IsOptional().HasColumnType("bigint");
            Property(x => x.UnfilteredClicks).HasColumnName("UnfilteredClicks").IsOptional().HasColumnType("bigint");
            Property(x => x.Conversions).HasColumnName("Conversions").IsRequired().HasColumnType("bigint");
            Property(x => x.PostViewConversions).HasColumnName("PostViewConversions").IsRequired().HasColumnType("bigint");
            Property(x => x.PostClickConversions).HasColumnName("PostClickConversions").IsRequired().HasColumnType("bigint");
            Property(x => x.SpendLocalMicros).HasColumnName("SpendLocalMicros").IsOptional().HasColumnType("bigint");
            Property(x => x.Spend).HasColumnName("Spend").IsOptional().HasColumnType("money").HasPrecision(19,4);
            Property(x => x.ClientCostLocalMicros).HasColumnName("ClientCostLocalMicros").IsOptional().HasColumnType("bigint");
            Property(x => x.ClientCostDollars).HasColumnName("ClientCostDollars").IsOptional().HasColumnType("money").HasPrecision(19,4);
            Property(x => x.MediaCostLocalMicros).HasColumnName("MediaCostLocalMicros").IsRequired().HasColumnType("bigint");
            Property(x => x.DataCostLocalMicros).HasColumnName("DataCostLocalMicros").IsRequired().HasColumnType("bigint");
            Property(x => x.MediaClientCostLocalMicros).HasColumnName("MediaClientCostLocalMicros").IsOptional().HasColumnType("bigint");
            Property(x => x.DataClientCostLocalMicros).HasColumnName("DataClientCostLocalMicros").IsOptional().HasColumnType("bigint");
            Property(x => x.AdSlotDurationInSeconds).HasColumnName("AdSlotDurationInSeconds").IsOptional().HasColumnType("bigint");
            Property(x => x.RawViews).HasColumnName("RawViews").IsOptional().HasColumnType("bigint");
            Property(x => x.IabViews).HasColumnName("IabViews").IsOptional().HasColumnType("bigint");
            Property(x => x.ViewDurationInSeconds).HasColumnName("ViewDurationInSeconds").IsOptional().HasColumnType("bigint");
            Property(x => x.Ctr).HasColumnName("CTR").IsOptional().HasColumnType("float");
            Property(x => x.Cpm).HasColumnName("CPM").IsOptional().HasColumnType("money").HasPrecision(19,4);
            Property(x => x.Cpc).HasColumnName("CPC").IsOptional().HasColumnType("money").HasPrecision(19,4);
            Property(x => x.Cpa).HasColumnName("CPA").IsOptional().HasColumnType("money").HasPrecision(19,4);
            Property(x => x.ClientCpm).HasColumnName("ClientCPM").IsOptional().HasColumnType("money").HasPrecision(19,4);
            Property(x => x.ClientCpc).HasColumnName("ClientCPC").IsOptional().HasColumnType("money").HasPrecision(19,4);
            Property(x => x.ClientCpa).HasColumnName("ClientCPA").IsOptional().HasColumnType("money").HasPrecision(19,4);
            Property(x => x.Cpms).HasColumnName("CPMs").IsOptional().HasColumnType("decimal").HasPrecision(38,14);
            Property(x => x.ClientCostCpms).HasColumnName("ClientCostCpms").IsOptional().HasColumnType("decimal").HasPrecision(38,14);
            Property(x => x.Cps).HasColumnName("CPS").IsOptional().HasColumnType("decimal").HasPrecision(38,14);
            Property(x => x.ClientCostCps).HasColumnName("ClientCostCps").IsOptional().HasColumnType("decimal").HasPrecision(38,14);
            Property(x => x.ViewableRatio).HasColumnName("ViewableRatio").IsOptional().HasColumnType("float");
            InitializePartial();
        }
        partial void InitializePartial();
    }

    // AdGroupDealCombined
    internal partial class AdGroupDealCombinedMap : EntityTypeConfiguration<AdGroupDealCombined>
    {
        public AdGroupDealCombinedMap()
            : this("analytics")
        {
        }
 
        public AdGroupDealCombinedMap(string schema)
        {
            ToTable(schema + ".AdGroupDealCombined");
            HasKey(x => new { x.AdGroupId, x.DealKey, x.PublisherId, x.OptimizationModelId, x.UtcDate, x.LocalDate, x.UtcDateTime, x.LocalDateTime, x.Bids, x.Impressions, x.Clicks, x.Conversions, x.PostViewConversions, x.PostClickConversions, x.MediaCostUsdMicros, x.MediaCostLocalMicros, x.DataCostLocalMicros });

            Property(x => x.AdGroupId).HasColumnName("AdGroupID").IsRequired().HasColumnType("int");
            Property(x => x.DealKey).HasColumnName("DealKey").IsRequired().HasColumnType("nvarchar").HasMaxLength(50);
            Property(x => x.PublisherId).HasColumnName("PublisherID").IsRequired().HasColumnType("int");
            Property(x => x.OptimizationModelId).HasColumnName("OptimizationModelID").IsRequired().HasColumnType("int");
            Property(x => x.UtcDate).HasColumnName("UtcDate").IsRequired().HasColumnType("date");
            Property(x => x.LocalDate).HasColumnName("LocalDate").IsRequired().HasColumnType("date");
            Property(x => x.UtcDateTime).HasColumnName("UtcDateTime").IsRequired().HasColumnType("datetime");
            Property(x => x.LocalDateTime).HasColumnName("LocalDateTime").IsRequired().HasColumnType("datetime");
            Property(x => x.Bids).HasColumnName("Bids").IsRequired().HasColumnType("bigint");
            Property(x => x.Impressions).HasColumnName("Impressions").IsRequired().HasColumnType("bigint");
            Property(x => x.InvalidImpressions).HasColumnName("InvalidImpressions").IsOptional().HasColumnType("bigint");
            Property(x => x.Clicks).HasColumnName("Clicks").IsRequired().HasColumnType("bigint");
            Property(x => x.InvalidClicks).HasColumnName("InvalidClicks").IsOptional().HasColumnType("bigint");
            Property(x => x.Conversions).HasColumnName("Conversions").IsRequired().HasColumnType("bigint");
            Property(x => x.PostViewConversions).HasColumnName("PostViewConversions").IsRequired().HasColumnType("bigint");
            Property(x => x.PostClickConversions).HasColumnName("PostClickConversions").IsRequired().HasColumnType("bigint");
            Property(x => x.MediaCostUsdMicros).HasColumnName("MediaCostUsdMicros").IsRequired().HasColumnType("bigint");
            Property(x => x.MediaCostLocalMicros).HasColumnName("MediaCostLocalMicros").IsRequired().HasColumnType("bigint");
            Property(x => x.DataCostLocalMicros).HasColumnName("DataCostLocalMicros").IsRequired().HasColumnType("bigint");
            Property(x => x.FeesUsdSuperMicros).HasColumnName("FeesUsdSuperMicros").IsOptional().HasColumnType("bigint");
            Property(x => x.FeesLocalSuperMicros).HasColumnName("FeesLocalSuperMicros").IsOptional().HasColumnType("bigint");
            Property(x => x.AdSlotDurationInSeconds).HasColumnName("AdSlotDurationInSeconds").IsOptional().HasColumnType("bigint");
            Property(x => x.RawViews).HasColumnName("RawViews").IsOptional().HasColumnType("bigint");
            Property(x => x.IabViews).HasColumnName("IabViews").IsOptional().HasColumnType("bigint");
            Property(x => x.ViewDurationInSeconds).HasColumnName("ViewDurationInSeconds").IsOptional().HasColumnType("bigint");
            InitializePartial();
        }
        partial void InitializePartial();
    }

    // AdGroupDealDomain
    internal partial class AdGroupDealDomainMap : EntityTypeConfiguration<AdGroupDealDomain>
    {
        public AdGroupDealDomainMap()
            : this("analytics")
        {
        }
 
        public AdGroupDealDomainMap(string schema)
        {
            ToTable(schema + ".AdGroupDealDomain");
            HasKey(x => new { x.AdGroupId, x.DealKey, x.DomainName, x.UtcDate, x.LocalDate, x.Bids, x.Impressions, x.Clicks, x.Conversions, x.PostViewConversions, x.PostClickConversions, x.MediaCostUsdMicros, x.MediaCostLocalMicros, x.DataCostLocalMicros });

            Property(x => x.AdGroupId).HasColumnName("AdGroupID").IsRequired().HasColumnType("int");
            Property(x => x.DealKey).HasColumnName("DealKey").IsRequired().HasColumnType("nvarchar").HasMaxLength(50);
            Property(x => x.DomainName).HasColumnName("DomainName").IsRequired().HasColumnType("nvarchar").HasMaxLength(400);
            Property(x => x.UtcDate).HasColumnName("UtcDate").IsRequired().HasColumnType("date");
            Property(x => x.LocalDate).HasColumnName("LocalDate").IsRequired().HasColumnType("date");
            Property(x => x.Bids).HasColumnName("Bids").IsRequired().HasColumnType("bigint");
            Property(x => x.Impressions).HasColumnName("Impressions").IsRequired().HasColumnType("bigint");
            Property(x => x.Clicks).HasColumnName("Clicks").IsRequired().HasColumnType("bigint");
            Property(x => x.Conversions).HasColumnName("Conversions").IsRequired().HasColumnType("bigint");
            Property(x => x.PostViewConversions).HasColumnName("PostViewConversions").IsRequired().HasColumnType("bigint");
            Property(x => x.PostClickConversions).HasColumnName("PostClickConversions").IsRequired().HasColumnType("bigint");
            Property(x => x.MediaCostUsdMicros).HasColumnName("MediaCostUsdMicros").IsRequired().HasColumnType("bigint");
            Property(x => x.MediaCostLocalMicros).HasColumnName("MediaCostLocalMicros").IsRequired().HasColumnType("bigint");
            Property(x => x.DataCostLocalMicros).HasColumnName("DataCostLocalMicros").IsRequired().HasColumnType("bigint");
            Property(x => x.InvalidImpressions).HasColumnName("InvalidImpressions").IsOptional().HasColumnType("bigint");
            Property(x => x.InvalidClicks).HasColumnName("InvalidClicks").IsOptional().HasColumnType("bigint");
            Property(x => x.FeesUsdSuperMicros).HasColumnName("FeesUsdSuperMicros").IsOptional().HasColumnType("bigint");
            Property(x => x.FeesLocalSuperMicros).HasColumnName("FeesLocalSuperMicros").IsOptional().HasColumnType("bigint");
            Property(x => x.AdSlotDurationInSeconds).HasColumnName("AdSlotDurationInSeconds").IsOptional().HasColumnType("bigint");
            Property(x => x.RawViews).HasColumnName("RawViews").IsOptional().HasColumnType("bigint");
            Property(x => x.IabViews).HasColumnName("IabViews").IsOptional().HasColumnType("bigint");
            Property(x => x.ViewDurationInSeconds).HasColumnName("ViewDurationInSeconds").IsOptional().HasColumnType("bigint");
            InitializePartial();
        }
        partial void InitializePartial();
    }

    // AdGroupDealDomainImport
    internal partial class AdGroupDealDomainImportMap : EntityTypeConfiguration<AdGroupDealDomainImport>
    {
        public AdGroupDealDomainImportMap()
            : this("analytics")
        {
        }
 
        public AdGroupDealDomainImportMap(string schema)
        {
            ToTable(schema + ".AdGroupDealDomainImport");
            HasKey(x => new { x.AdGroupId, x.DealKey, x.DomainName, x.UtcDate, x.LocalDate, x.Bids, x.Impressions, x.Clicks, x.Conversions, x.PostViewConversions, x.PostClickConversions, x.MediaCostUsdMicros, x.MediaCostLocalMicros, x.DataCostLocalMicros });

            Property(x => x.AdGroupId).HasColumnName("AdGroupID").IsRequired().HasColumnType("int");
            Property(x => x.DealKey).HasColumnName("DealKey").IsRequired().HasColumnType("nvarchar").HasMaxLength(50);
            Property(x => x.DomainName).HasColumnName("DomainName").IsRequired().HasColumnType("nvarchar").HasMaxLength(400);
            Property(x => x.UtcDate).HasColumnName("UtcDate").IsRequired().HasColumnType("date");
            Property(x => x.LocalDate).HasColumnName("LocalDate").IsRequired().HasColumnType("date");
            Property(x => x.Bids).HasColumnName("Bids").IsRequired().HasColumnType("bigint");
            Property(x => x.Impressions).HasColumnName("Impressions").IsRequired().HasColumnType("bigint");
            Property(x => x.Clicks).HasColumnName("Clicks").IsRequired().HasColumnType("bigint");
            Property(x => x.Conversions).HasColumnName("Conversions").IsRequired().HasColumnType("bigint");
            Property(x => x.PostViewConversions).HasColumnName("PostViewConversions").IsRequired().HasColumnType("bigint");
            Property(x => x.PostClickConversions).HasColumnName("PostClickConversions").IsRequired().HasColumnType("bigint");
            Property(x => x.MediaCostUsdMicros).HasColumnName("MediaCostUsdMicros").IsRequired().HasColumnType("bigint");
            Property(x => x.MediaCostLocalMicros).HasColumnName("MediaCostLocalMicros").IsRequired().HasColumnType("bigint");
            Property(x => x.DataCostLocalMicros).HasColumnName("DataCostLocalMicros").IsRequired().HasColumnType("bigint");
            Property(x => x.InvalidImpressions).HasColumnName("InvalidImpressions").IsOptional().HasColumnType("bigint");
            Property(x => x.InvalidClicks).HasColumnName("InvalidClicks").IsOptional().HasColumnType("bigint");
            Property(x => x.FeesUsdSuperMicros).HasColumnName("FeesUsdSuperMicros").IsOptional().HasColumnType("bigint");
            Property(x => x.FeesLocalSuperMicros).HasColumnName("FeesLocalSuperMicros").IsOptional().HasColumnType("bigint");
            Property(x => x.AdSlotDurationInSeconds).HasColumnName("AdSlotDurationInSeconds").IsOptional().HasColumnType("bigint");
            Property(x => x.RawViews).HasColumnName("RawViews").IsOptional().HasColumnType("bigint");
            Property(x => x.IabViews).HasColumnName("IabViews").IsOptional().HasColumnType("bigint");
            Property(x => x.ViewDurationInSeconds).HasColumnName("ViewDurationInSeconds").IsOptional().HasColumnType("bigint");
            InitializePartial();
        }
        partial void InitializePartial();
    }

    // AdGroupDealDomainNew
    internal partial class AdGroupDealDomainNewMap : EntityTypeConfiguration<AdGroupDealDomainNew>
    {
        public AdGroupDealDomainNewMap()
            : this("analytics")
        {
        }
 
        public AdGroupDealDomainNewMap(string schema)
        {
            ToTable(schema + ".AdGroupDealDomainNew");
            HasKey(x => new { x.AdGroupId, x.DealKey, x.DomainName, x.UtcDate, x.LocalDate, x.Bids, x.Impressions, x.Clicks, x.Conversions, x.PostViewConversions, x.PostClickConversions, x.MediaCostUsdMicros, x.MediaCostLocalMicros, x.DataCostLocalMicros });

            Property(x => x.AdGroupId).HasColumnName("AdGroupID").IsRequired().HasColumnType("int");
            Property(x => x.DealKey).HasColumnName("DealKey").IsRequired().HasColumnType("nvarchar").HasMaxLength(50);
            Property(x => x.DomainName).HasColumnName("DomainName").IsRequired().HasColumnType("nvarchar").HasMaxLength(400);
            Property(x => x.UtcDate).HasColumnName("UtcDate").IsRequired().HasColumnType("date");
            Property(x => x.LocalDate).HasColumnName("LocalDate").IsRequired().HasColumnType("date");
            Property(x => x.Bids).HasColumnName("Bids").IsRequired().HasColumnType("bigint");
            Property(x => x.Impressions).HasColumnName("Impressions").IsRequired().HasColumnType("bigint");
            Property(x => x.Clicks).HasColumnName("Clicks").IsRequired().HasColumnType("bigint");
            Property(x => x.Conversions).HasColumnName("Conversions").IsRequired().HasColumnType("bigint");
            Property(x => x.PostViewConversions).HasColumnName("PostViewConversions").IsRequired().HasColumnType("bigint");
            Property(x => x.PostClickConversions).HasColumnName("PostClickConversions").IsRequired().HasColumnType("bigint");
            Property(x => x.MediaCostUsdMicros).HasColumnName("MediaCostUsdMicros").IsRequired().HasColumnType("bigint");
            Property(x => x.MediaCostLocalMicros).HasColumnName("MediaCostLocalMicros").IsRequired().HasColumnType("bigint");
            Property(x => x.DataCostLocalMicros).HasColumnName("DataCostLocalMicros").IsRequired().HasColumnType("bigint");
            Property(x => x.InvalidImpressions).HasColumnName("InvalidImpressions").IsOptional().HasColumnType("bigint");
            Property(x => x.InvalidClicks).HasColumnName("InvalidClicks").IsOptional().HasColumnType("bigint");
            Property(x => x.FeesUsdSuperMicros).HasColumnName("FeesUsdSuperMicros").IsOptional().HasColumnType("bigint");
            Property(x => x.FeesLocalSuperMicros).HasColumnName("FeesLocalSuperMicros").IsOptional().HasColumnType("bigint");
            Property(x => x.AdSlotDurationInSeconds).HasColumnName("AdSlotDurationInSeconds").IsOptional().HasColumnType("bigint");
            Property(x => x.RawViews).HasColumnName("RawViews").IsOptional().HasColumnType("bigint");
            Property(x => x.IabViews).HasColumnName("IabViews").IsOptional().HasColumnType("bigint");
            Property(x => x.ViewDurationInSeconds).HasColumnName("ViewDurationInSeconds").IsOptional().HasColumnType("bigint");
            InitializePartial();
        }
        partial void InitializePartial();
    }

    // AdGroupDealException
    internal partial class AdGroupDealExceptionMap : EntityTypeConfiguration<AdGroupDealException>
    {
        public AdGroupDealExceptionMap()
            : this("analytics")
        {
        }
 
        public AdGroupDealExceptionMap(string schema)
        {
            ToTable(schema + ".AdGroupDealException");
            HasKey(x => new { x.AdGroupId, x.DealKey, x.PublisherId, x.OptimizationModelId, x.UtcDate, x.LocalDate, x.UtcDateTime, x.LocalDateTime, x.Bids, x.Impressions, x.Clicks, x.Conversions, x.PostViewConversions, x.PostClickConversions, x.MediaCostUsdMicros, x.MediaCostLocalMicros, x.DataCostLocalMicros });

            Property(x => x.AdGroupId).HasColumnName("AdGroupID").IsRequired().HasColumnType("int");
            Property(x => x.DealKey).HasColumnName("DealKey").IsRequired().HasColumnType("nvarchar").HasMaxLength(50);
            Property(x => x.PublisherId).HasColumnName("PublisherID").IsRequired().HasColumnType("int");
            Property(x => x.OptimizationModelId).HasColumnName("OptimizationModelID").IsRequired().HasColumnType("int");
            Property(x => x.UtcDate).HasColumnName("UtcDate").IsRequired().HasColumnType("date");
            Property(x => x.LocalDate).HasColumnName("LocalDate").IsRequired().HasColumnType("date");
            Property(x => x.UtcDateTime).HasColumnName("UtcDateTime").IsRequired().HasColumnType("datetime");
            Property(x => x.LocalDateTime).HasColumnName("LocalDateTime").IsRequired().HasColumnType("datetime");
            Property(x => x.Bids).HasColumnName("Bids").IsRequired().HasColumnType("bigint");
            Property(x => x.Impressions).HasColumnName("Impressions").IsRequired().HasColumnType("bigint");
            Property(x => x.InvalidImpressions).HasColumnName("InvalidImpressions").IsOptional().HasColumnType("bigint");
            Property(x => x.Clicks).HasColumnName("Clicks").IsRequired().HasColumnType("bigint");
            Property(x => x.InvalidClicks).HasColumnName("InvalidClicks").IsOptional().HasColumnType("bigint");
            Property(x => x.Conversions).HasColumnName("Conversions").IsRequired().HasColumnType("bigint");
            Property(x => x.PostViewConversions).HasColumnName("PostViewConversions").IsRequired().HasColumnType("bigint");
            Property(x => x.PostClickConversions).HasColumnName("PostClickConversions").IsRequired().HasColumnType("bigint");
            Property(x => x.MediaCostUsdMicros).HasColumnName("MediaCostUsdMicros").IsRequired().HasColumnType("bigint");
            Property(x => x.MediaCostLocalMicros).HasColumnName("MediaCostLocalMicros").IsRequired().HasColumnType("bigint");
            Property(x => x.DataCostLocalMicros).HasColumnName("DataCostLocalMicros").IsRequired().HasColumnType("bigint");
            Property(x => x.FeesUsdSuperMicros).HasColumnName("FeesUsdSuperMicros").IsOptional().HasColumnType("bigint");
            Property(x => x.FeesLocalSuperMicros).HasColumnName("FeesLocalSuperMicros").IsOptional().HasColumnType("bigint");
            Property(x => x.AdSlotDurationInSeconds).HasColumnName("AdSlotDurationInSeconds").IsOptional().HasColumnType("bigint");
            Property(x => x.RawViews).HasColumnName("RawViews").IsOptional().HasColumnType("bigint");
            Property(x => x.IabViews).HasColumnName("IabViews").IsOptional().HasColumnType("bigint");
            Property(x => x.ViewDurationInSeconds).HasColumnName("ViewDurationInSeconds").IsOptional().HasColumnType("bigint");
            InitializePartial();
        }
        partial void InitializePartial();
    }

    // AdGroupDealImport
    internal partial class AdGroupDealImportMap : EntityTypeConfiguration<AdGroupDealImport>
    {
        public AdGroupDealImportMap()
            : this("analytics")
        {
        }
 
        public AdGroupDealImportMap(string schema)
        {
            ToTable(schema + ".AdGroupDealImport");
            HasKey(x => new { x.AdGroupId, x.DealKey, x.PublisherId, x.OptimizationModelId, x.UtcDate, x.LocalDate, x.UtcDateTime, x.LocalDateTime, x.Bids, x.Impressions, x.Clicks, x.Conversions, x.PostViewConversions, x.PostClickConversions, x.MediaCostUsdMicros, x.MediaCostLocalMicros, x.DataCostLocalMicros });

            Property(x => x.AdGroupId).HasColumnName("AdGroupID").IsRequired().HasColumnType("int");
            Property(x => x.DealKey).HasColumnName("DealKey").IsRequired().HasColumnType("nvarchar").HasMaxLength(50);
            Property(x => x.PublisherId).HasColumnName("PublisherID").IsRequired().HasColumnType("int");
            Property(x => x.OptimizationModelId).HasColumnName("OptimizationModelID").IsRequired().HasColumnType("int");
            Property(x => x.UtcDate).HasColumnName("UtcDate").IsRequired().HasColumnType("date");
            Property(x => x.LocalDate).HasColumnName("LocalDate").IsRequired().HasColumnType("date");
            Property(x => x.UtcDateTime).HasColumnName("UtcDateTime").IsRequired().HasColumnType("datetime");
            Property(x => x.LocalDateTime).HasColumnName("LocalDateTime").IsRequired().HasColumnType("datetime");
            Property(x => x.Bids).HasColumnName("Bids").IsRequired().HasColumnType("bigint");
            Property(x => x.Impressions).HasColumnName("Impressions").IsRequired().HasColumnType("bigint");
            Property(x => x.InvalidImpressions).HasColumnName("InvalidImpressions").IsOptional().HasColumnType("bigint");
            Property(x => x.Clicks).HasColumnName("Clicks").IsRequired().HasColumnType("bigint");
            Property(x => x.InvalidClicks).HasColumnName("InvalidClicks").IsOptional().HasColumnType("bigint");
            Property(x => x.Conversions).HasColumnName("Conversions").IsRequired().HasColumnType("bigint");
            Property(x => x.PostViewConversions).HasColumnName("PostViewConversions").IsRequired().HasColumnType("bigint");
            Property(x => x.PostClickConversions).HasColumnName("PostClickConversions").IsRequired().HasColumnType("bigint");
            Property(x => x.MediaCostUsdMicros).HasColumnName("MediaCostUsdMicros").IsRequired().HasColumnType("bigint");
            Property(x => x.MediaCostLocalMicros).HasColumnName("MediaCostLocalMicros").IsRequired().HasColumnType("bigint");
            Property(x => x.DataCostLocalMicros).HasColumnName("DataCostLocalMicros").IsRequired().HasColumnType("bigint");
            Property(x => x.FeesUsdSuperMicros).HasColumnName("FeesUsdSuperMicros").IsOptional().HasColumnType("bigint");
            Property(x => x.FeesLocalSuperMicros).HasColumnName("FeesLocalSuperMicros").IsOptional().HasColumnType("bigint");
            Property(x => x.AdSlotDurationInSeconds).HasColumnName("AdSlotDurationInSeconds").IsOptional().HasColumnType("bigint");
            Property(x => x.RawViews).HasColumnName("RawViews").IsOptional().HasColumnType("bigint");
            Property(x => x.IabViews).HasColumnName("IabViews").IsOptional().HasColumnType("bigint");
            Property(x => x.ViewDurationInSeconds).HasColumnName("ViewDurationInSeconds").IsOptional().HasColumnType("bigint");
            InitializePartial();
        }
        partial void InitializePartial();
    }

    // AdGroupDealImportReportID
    internal partial class AdGroupDealImportReportIdMap : EntityTypeConfiguration<AdGroupDealImportReportId>
    {
        public AdGroupDealImportReportIdMap()
            : this("analytics")
        {
        }
 
        public AdGroupDealImportReportIdMap(string schema)
        {
            ToTable(schema + ".AdGroupDealImportReportID");
            HasKey(x => new { x.AdGroupId, x.DealKey, x.PublisherId, x.OptimizationModelId, x.UtcDate, x.LocalDate, x.UtcDateTime, x.LocalDateTime, x.Bids, x.Impressions, x.Clicks, x.Conversions, x.PostViewConversions, x.PostClickConversions, x.MediaCostUsdMicros, x.MediaCostLocalMicros, x.DataCostLocalMicros, x.ReportId });

            Property(x => x.AdGroupId).HasColumnName("AdGroupID").IsRequired().HasColumnType("int");
            Property(x => x.DealKey).HasColumnName("DealKey").IsRequired().HasColumnType("nvarchar").HasMaxLength(50);
            Property(x => x.PublisherId).HasColumnName("PublisherID").IsRequired().HasColumnType("int");
            Property(x => x.OptimizationModelId).HasColumnName("OptimizationModelID").IsRequired().HasColumnType("int");
            Property(x => x.UtcDate).HasColumnName("UtcDate").IsRequired().HasColumnType("date");
            Property(x => x.LocalDate).HasColumnName("LocalDate").IsRequired().HasColumnType("date");
            Property(x => x.UtcDateTime).HasColumnName("UtcDateTime").IsRequired().HasColumnType("datetime");
            Property(x => x.LocalDateTime).HasColumnName("LocalDateTime").IsRequired().HasColumnType("datetime");
            Property(x => x.Bids).HasColumnName("Bids").IsRequired().HasColumnType("bigint");
            Property(x => x.Impressions).HasColumnName("Impressions").IsRequired().HasColumnType("bigint");
            Property(x => x.InvalidImpressions).HasColumnName("InvalidImpressions").IsOptional().HasColumnType("bigint");
            Property(x => x.Clicks).HasColumnName("Clicks").IsRequired().HasColumnType("bigint");
            Property(x => x.InvalidClicks).HasColumnName("InvalidClicks").IsOptional().HasColumnType("bigint");
            Property(x => x.Conversions).HasColumnName("Conversions").IsRequired().HasColumnType("bigint");
            Property(x => x.PostViewConversions).HasColumnName("PostViewConversions").IsRequired().HasColumnType("bigint");
            Property(x => x.PostClickConversions).HasColumnName("PostClickConversions").IsRequired().HasColumnType("bigint");
            Property(x => x.MediaCostUsdMicros).HasColumnName("MediaCostUsdMicros").IsRequired().HasColumnType("bigint");
            Property(x => x.MediaCostLocalMicros).HasColumnName("MediaCostLocalMicros").IsRequired().HasColumnType("bigint");
            Property(x => x.DataCostLocalMicros).HasColumnName("DataCostLocalMicros").IsRequired().HasColumnType("bigint");
            Property(x => x.FeesUsdSuperMicros).HasColumnName("FeesUsdSuperMicros").IsOptional().HasColumnType("bigint");
            Property(x => x.FeesLocalSuperMicros).HasColumnName("FeesLocalSuperMicros").IsOptional().HasColumnType("bigint");
            Property(x => x.ReportId).HasColumnName("ReportID").IsRequired().HasColumnType("bigint");
            Property(x => x.AdSlotDurationInSeconds).HasColumnName("AdSlotDurationInSeconds").IsOptional().HasColumnType("bigint");
            Property(x => x.RawViews).HasColumnName("RawViews").IsOptional().HasColumnType("bigint");
            Property(x => x.IabViews).HasColumnName("IabViews").IsOptional().HasColumnType("bigint");
            Property(x => x.ViewDurationInSeconds).HasColumnName("ViewDurationInSeconds").IsOptional().HasColumnType("bigint");
            InitializePartial();
        }
        partial void InitializePartial();
    }

    // AdGroupDealReportID
    internal partial class AdGroupDealReportIdMap : EntityTypeConfiguration<AdGroupDealReportId>
    {
        public AdGroupDealReportIdMap()
            : this("analytics")
        {
        }
 
        public AdGroupDealReportIdMap(string schema)
        {
            ToTable(schema + ".AdGroupDealReportID");
            HasKey(x => new { x.AdGroupId, x.DealKey, x.PublisherId, x.OptimizationModelId, x.UtcDate, x.LocalDate, x.UtcDateTime, x.LocalDateTime, x.Bids, x.Impressions, x.Clicks, x.Conversions, x.PostViewConversions, x.PostClickConversions, x.MediaCostUsdMicros, x.MediaCostLocalMicros, x.DataCostLocalMicros, x.ReportId });

            Property(x => x.AdGroupId).HasColumnName("AdGroupID").IsRequired().HasColumnType("int");
            Property(x => x.DealKey).HasColumnName("DealKey").IsRequired().HasColumnType("nvarchar").HasMaxLength(50);
            Property(x => x.PublisherId).HasColumnName("PublisherID").IsRequired().HasColumnType("int");
            Property(x => x.OptimizationModelId).HasColumnName("OptimizationModelID").IsRequired().HasColumnType("int");
            Property(x => x.UtcDate).HasColumnName("UtcDate").IsRequired().HasColumnType("date");
            Property(x => x.LocalDate).HasColumnName("LocalDate").IsRequired().HasColumnType("date");
            Property(x => x.UtcDateTime).HasColumnName("UtcDateTime").IsRequired().HasColumnType("datetime");
            Property(x => x.LocalDateTime).HasColumnName("LocalDateTime").IsRequired().HasColumnType("datetime");
            Property(x => x.Bids).HasColumnName("Bids").IsRequired().HasColumnType("bigint");
            Property(x => x.Impressions).HasColumnName("Impressions").IsRequired().HasColumnType("bigint");
            Property(x => x.InvalidImpressions).HasColumnName("InvalidImpressions").IsOptional().HasColumnType("bigint");
            Property(x => x.Clicks).HasColumnName("Clicks").IsRequired().HasColumnType("bigint");
            Property(x => x.InvalidClicks).HasColumnName("InvalidClicks").IsOptional().HasColumnType("bigint");
            Property(x => x.Conversions).HasColumnName("Conversions").IsRequired().HasColumnType("bigint");
            Property(x => x.PostViewConversions).HasColumnName("PostViewConversions").IsRequired().HasColumnType("bigint");
            Property(x => x.PostClickConversions).HasColumnName("PostClickConversions").IsRequired().HasColumnType("bigint");
            Property(x => x.MediaCostUsdMicros).HasColumnName("MediaCostUsdMicros").IsRequired().HasColumnType("bigint");
            Property(x => x.MediaCostLocalMicros).HasColumnName("MediaCostLocalMicros").IsRequired().HasColumnType("bigint");
            Property(x => x.DataCostLocalMicros).HasColumnName("DataCostLocalMicros").IsRequired().HasColumnType("bigint");
            Property(x => x.FeesUsdSuperMicros).HasColumnName("FeesUsdSuperMicros").IsOptional().HasColumnType("bigint");
            Property(x => x.FeesLocalSuperMicros).HasColumnName("FeesLocalSuperMicros").IsOptional().HasColumnType("bigint");
            Property(x => x.ReportId).HasColumnName("ReportID").IsRequired().HasColumnType("bigint");
            Property(x => x.AdSlotDurationInSeconds).HasColumnName("AdSlotDurationInSeconds").IsOptional().HasColumnType("bigint");
            Property(x => x.RawViews).HasColumnName("RawViews").IsOptional().HasColumnType("bigint");
            Property(x => x.IabViews).HasColumnName("IabViews").IsOptional().HasColumnType("bigint");
            Property(x => x.ViewDurationInSeconds).HasColumnName("ViewDurationInSeconds").IsOptional().HasColumnType("bigint");
            InitializePartial();
        }
        partial void InitializePartial();
    }

    // AdGroupDealSite
    internal partial class AdGroupDealSiteMap : EntityTypeConfiguration<AdGroupDealSite>
    {
        public AdGroupDealSiteMap()
            : this("analytics")
        {
        }
 
        public AdGroupDealSiteMap(string schema)
        {
            ToTable(schema + ".AdGroupDealSite");
            HasKey(x => new { x.AdGroupId, x.DealKey, x.PartnerId, x.PublisherId, x.WebsiteId, x.WebsiteUrl, x.UtcDate, x.LocalDate, x.Bids, x.Impressions, x.Clicks, x.Conversions, x.PostViewConversions, x.PostClickConversions, x.MediaCostUsdMicros, x.MediaCostLocalMicros, x.DataCostLocalMicros });

            Property(x => x.AdGroupId).HasColumnName("AdGroupID").IsRequired().HasColumnType("int");
            Property(x => x.DealKey).HasColumnName("DealKey").IsRequired().HasColumnType("nvarchar").HasMaxLength(50);
            Property(x => x.InventoryId).HasColumnName("InventoryID").IsOptional().HasColumnType("bigint");
            Property(x => x.PartnerId).HasColumnName("PartnerID").IsRequired().HasColumnType("int");
            Property(x => x.PublisherId).HasColumnName("PublisherID").IsRequired().HasColumnType("int");
            Property(x => x.WebsiteId).HasColumnName("WebsiteID").IsRequired().HasColumnType("int");
            Property(x => x.WebsiteUrl).HasColumnName("WebsiteUrl").IsRequired().HasColumnType("nvarchar").HasMaxLength(450);
            Property(x => x.UtcDate).HasColumnName("UtcDate").IsRequired().HasColumnType("date");
            Property(x => x.LocalDate).HasColumnName("LocalDate").IsRequired().HasColumnType("date");
            Property(x => x.Bids).HasColumnName("Bids").IsRequired().HasColumnType("bigint");
            Property(x => x.Impressions).HasColumnName("Impressions").IsRequired().HasColumnType("bigint");
            Property(x => x.Clicks).HasColumnName("Clicks").IsRequired().HasColumnType("bigint");
            Property(x => x.Conversions).HasColumnName("Conversions").IsRequired().HasColumnType("bigint");
            Property(x => x.PostViewConversions).HasColumnName("PostViewConversions").IsRequired().HasColumnType("bigint");
            Property(x => x.PostClickConversions).HasColumnName("PostClickConversions").IsRequired().HasColumnType("bigint");
            Property(x => x.MediaCostUsdMicros).HasColumnName("MediaCostUsdMicros").IsRequired().HasColumnType("bigint");
            Property(x => x.MediaCostLocalMicros).HasColumnName("MediaCostLocalMicros").IsRequired().HasColumnType("bigint");
            Property(x => x.DataCostLocalMicros).HasColumnName("DataCostLocalMicros").IsRequired().HasColumnType("bigint");
            Property(x => x.InvalidImpressions).HasColumnName("InvalidImpressions").IsOptional().HasColumnType("bigint");
            Property(x => x.InvalidClicks).HasColumnName("InvalidClicks").IsOptional().HasColumnType("bigint");
            Property(x => x.FeesUsdSuperMicros).HasColumnName("FeesUsdSuperMicros").IsOptional().HasColumnType("bigint");
            Property(x => x.FeesLocalSuperMicros).HasColumnName("FeesLocalSuperMicros").IsOptional().HasColumnType("bigint");
            Property(x => x.AdSlotDurationInSeconds).HasColumnName("AdSlotDurationInSeconds").IsOptional().HasColumnType("bigint");
            Property(x => x.RawViews).HasColumnName("RawViews").IsOptional().HasColumnType("bigint");
            Property(x => x.IabViews).HasColumnName("IabViews").IsOptional().HasColumnType("bigint");
            Property(x => x.ViewDurationInSeconds).HasColumnName("ViewDurationInSeconds").IsOptional().HasColumnType("bigint");
            InitializePartial();
        }
        partial void InitializePartial();
    }

    // AdGroupDealSiteImport
    internal partial class AdGroupDealSiteImportMap : EntityTypeConfiguration<AdGroupDealSiteImport>
    {
        public AdGroupDealSiteImportMap()
            : this("analytics")
        {
        }
 
        public AdGroupDealSiteImportMap(string schema)
        {
            ToTable(schema + ".AdGroupDealSiteImport");
            HasKey(x => new { x.AdGroupId, x.DealKey, x.PartnerId, x.PublisherId, x.WebsiteId, x.WebsiteUrl, x.UtcDate, x.LocalDate, x.Bids, x.Impressions, x.Clicks, x.Conversions, x.PostViewConversions, x.PostClickConversions, x.MediaCostUsdMicros, x.MediaCostLocalMicros, x.DataCostLocalMicros });

            Property(x => x.AdGroupId).HasColumnName("AdGroupID").IsRequired().HasColumnType("int");
            Property(x => x.DealKey).HasColumnName("DealKey").IsRequired().HasColumnType("nvarchar").HasMaxLength(50);
            Property(x => x.InventoryId).HasColumnName("InventoryID").IsOptional().HasColumnType("bigint");
            Property(x => x.PartnerId).HasColumnName("PartnerID").IsRequired().HasColumnType("int");
            Property(x => x.PublisherId).HasColumnName("PublisherID").IsRequired().HasColumnType("int");
            Property(x => x.WebsiteId).HasColumnName("WebsiteID").IsRequired().HasColumnType("int");
            Property(x => x.WebsiteUrl).HasColumnName("WebsiteUrl").IsRequired().HasColumnType("nvarchar").HasMaxLength(450);
            Property(x => x.UtcDate).HasColumnName("UtcDate").IsRequired().HasColumnType("date");
            Property(x => x.LocalDate).HasColumnName("LocalDate").IsRequired().HasColumnType("date");
            Property(x => x.Bids).HasColumnName("Bids").IsRequired().HasColumnType("bigint");
            Property(x => x.Impressions).HasColumnName("Impressions").IsRequired().HasColumnType("bigint");
            Property(x => x.Clicks).HasColumnName("Clicks").IsRequired().HasColumnType("bigint");
            Property(x => x.Conversions).HasColumnName("Conversions").IsRequired().HasColumnType("bigint");
            Property(x => x.PostViewConversions).HasColumnName("PostViewConversions").IsRequired().HasColumnType("bigint");
            Property(x => x.PostClickConversions).HasColumnName("PostClickConversions").IsRequired().HasColumnType("bigint");
            Property(x => x.MediaCostUsdMicros).HasColumnName("MediaCostUsdMicros").IsRequired().HasColumnType("bigint");
            Property(x => x.MediaCostLocalMicros).HasColumnName("MediaCostLocalMicros").IsRequired().HasColumnType("bigint");
            Property(x => x.DataCostLocalMicros).HasColumnName("DataCostLocalMicros").IsRequired().HasColumnType("bigint");
            Property(x => x.InvalidImpressions).HasColumnName("InvalidImpressions").IsOptional().HasColumnType("bigint");
            Property(x => x.InvalidClicks).HasColumnName("InvalidClicks").IsOptional().HasColumnType("bigint");
            Property(x => x.FeesUsdSuperMicros).HasColumnName("FeesUsdSuperMicros").IsOptional().HasColumnType("bigint");
            Property(x => x.FeesLocalSuperMicros).HasColumnName("FeesLocalSuperMicros").IsOptional().HasColumnType("bigint");
            Property(x => x.AdSlotDurationInSeconds).HasColumnName("AdSlotDurationInSeconds").IsOptional().HasColumnType("bigint");
            Property(x => x.RawViews).HasColumnName("RawViews").IsOptional().HasColumnType("bigint");
            Property(x => x.IabViews).HasColumnName("IabViews").IsOptional().HasColumnType("bigint");
            Property(x => x.ViewDurationInSeconds).HasColumnName("ViewDurationInSeconds").IsOptional().HasColumnType("bigint");
            InitializePartial();
        }
        partial void InitializePartial();
    }

    // AdGroupDealSiteInventoryOnly
    internal partial class AdGroupDealSiteInventoryOnlyMap : EntityTypeConfiguration<AdGroupDealSiteInventoryOnly>
    {
        public AdGroupDealSiteInventoryOnlyMap()
            : this("dbo")
        {
        }
 
        public AdGroupDealSiteInventoryOnlyMap(string schema)
        {
            ToTable(schema + ".AdGroupDealSiteInventoryOnly");
            HasKey(x => new { x.BuyerAccountId, x.CampaignId, x.AdGroupId, x.InventoryId, x.PartnerId, x.DealKey, x.PublisherId, x.PublisherName, x.WebsiteId, x.IsTargeted, x.PackageInstalled, x.BinomialFiltered, x.BinomialFilterOverride, x.WhiteListedInSiteLevel });

            Property(x => x.BuyerAccountId).HasColumnName("BuyerAccountID").IsRequired().HasColumnType("int");
            Property(x => x.CampaignId).HasColumnName("CampaignID").IsRequired().HasColumnType("int");
            Property(x => x.AdGroupId).HasColumnName("AdGroupID").IsRequired().HasColumnType("int");
            Property(x => x.InventoryId).HasColumnName("InventoryID").IsRequired().HasColumnType("bigint");
            Property(x => x.PartnerId).HasColumnName("PartnerID").IsRequired().HasColumnType("int");
            Property(x => x.PartnerName).HasColumnName("PartnerName").IsOptional().HasColumnType("nvarchar").HasMaxLength(50);
            Property(x => x.DealKey).HasColumnName("DealKey").IsRequired().HasColumnType("nvarchar").HasMaxLength(50);
            Property(x => x.PublisherId).HasColumnName("PublisherID").IsRequired().HasColumnType("int");
            Property(x => x.PublisherName).HasColumnName("PublisherName").IsRequired().HasColumnType("nvarchar").HasMaxLength(255);
            Property(x => x.WebsiteId).HasColumnName("WebsiteID").IsRequired().HasColumnType("bigint");
            Property(x => x.WebsiteUrl).HasColumnName("WebsiteUrl").IsOptional().HasColumnType("nvarchar").HasMaxLength(450);
            Property(x => x.IsTargeted).HasColumnName("IsTargeted").IsRequired().HasColumnType("int");
            Property(x => x.PackageInstalled).HasColumnName("PackageInstalled").IsRequired().HasColumnType("int");
            Property(x => x.BinomialFiltered).HasColumnName("BinomialFiltered").IsRequired().HasColumnType("int");
            Property(x => x.BinomialFilterOverride).HasColumnName("BinomialFilterOverride").IsRequired().HasColumnType("int");
            Property(x => x.WhiteListedInSiteLevel).HasColumnName("WhiteListedInSiteLevel").IsRequired().HasColumnType("int");
            Property(x => x.Bids).HasColumnName("Bids").IsOptional().HasColumnType("bigint");
            Property(x => x.Impressions).HasColumnName("Impressions").IsOptional().HasColumnType("bigint");
            Property(x => x.Clicks).HasColumnName("Clicks").IsOptional().HasColumnType("bigint");
            Property(x => x.Conversions).HasColumnName("Conversions").IsOptional().HasColumnType("bigint");
            Property(x => x.PostViewConversions).HasColumnName("PostViewConversions").IsOptional().HasColumnType("bigint");
            Property(x => x.PostClickConversions).HasColumnName("PostClickConversions").IsOptional().HasColumnType("bigint");
            Property(x => x.SpendLocalMicros).HasColumnName("SpendLocalMicros").IsOptional().HasColumnType("bigint");
            Property(x => x.Spend).HasColumnName("Spend").IsOptional().HasColumnType("money").HasPrecision(19,4);
            Property(x => x.ClientCostLocalMicros).HasColumnName("ClientCostLocalMicros").IsOptional().HasColumnType("bigint");
            Property(x => x.ClientCostDollars).HasColumnName("ClientCostDollars").IsOptional().HasColumnType("money").HasPrecision(19,4);
            Property(x => x.Ctr).HasColumnName("Ctr").IsOptional().HasColumnType("float");
            Property(x => x.Cpm).HasColumnName("Cpm").IsOptional().HasColumnType("money").HasPrecision(19,4);
            Property(x => x.Cpc).HasColumnName("Cpc").IsOptional().HasColumnType("money").HasPrecision(19,4);
            Property(x => x.Cpa).HasColumnName("Cpa").IsOptional().HasColumnType("money").HasPrecision(19,4);
            Property(x => x.ClientCostCpm).HasColumnName("ClientCostCpm").IsOptional().HasColumnType("decimal").HasPrecision(19,4);
            Property(x => x.ClientCostCpc).HasColumnName("ClientCostCpc").IsOptional().HasColumnType("decimal").HasPrecision(19,4);
            Property(x => x.ClientCostCpa).HasColumnName("ClientCostCpa").IsOptional().HasColumnType("decimal").HasPrecision(19,4);
            Property(x => x.MediaCostLocalMicros).HasColumnName("MediaCostLocalMicros").IsOptional().HasColumnType("bigint");
            Property(x => x.DataCostLocalMicros).HasColumnName("DataCostLocalMicros").IsOptional().HasColumnType("bigint");
            Property(x => x.MediaClientCostLocalMicros).HasColumnName("MediaClientCostLocalMicros").IsOptional().HasColumnType("bigint");
            Property(x => x.DataClientCostLocalMicros).HasColumnName("DataClientCostLocalMicros").IsOptional().HasColumnType("bigint");
            Property(x => x.AdSlotDurationInSeconds).HasColumnName("AdSlotDurationInSeconds").IsOptional().HasColumnType("bigint");
            Property(x => x.RawViews).HasColumnName("RawViews").IsOptional().HasColumnType("bigint");
            Property(x => x.IabViews).HasColumnName("IabViews").IsOptional().HasColumnType("bigint");
            Property(x => x.ViewDurationInSeconds).HasColumnName("ViewDurationInSeconds").IsOptional().HasColumnType("bigint");
            Property(x => x.ViewableRatio).HasColumnName("ViewableRatio").IsOptional().HasColumnType("float");
            Property(x => x.Cpms).HasColumnName("Cpms").IsOptional().HasColumnType("money").HasPrecision(19,4);
            Property(x => x.ClientCostCpms).HasColumnName("ClientCostCpms").IsOptional().HasColumnType("money").HasPrecision(19,4);
            Property(x => x.Cps).HasColumnName("Cps").IsOptional().HasColumnType("money").HasPrecision(19,4);
            Property(x => x.ClientCostCps).HasColumnName("ClientCostCps").IsOptional().HasColumnType("decimal").HasPrecision(19,4);
            InitializePartial();
        }
        partial void InitializePartial();
    }

    // AdGroupDealSiteNew
    internal partial class AdGroupDealSiteNewMap : EntityTypeConfiguration<AdGroupDealSiteNew>
    {
        public AdGroupDealSiteNewMap()
            : this("analytics")
        {
        }
 
        public AdGroupDealSiteNewMap(string schema)
        {
            ToTable(schema + ".AdGroupDealSiteNew");
            HasKey(x => new { x.AdGroupId, x.DealKey, x.PartnerId, x.PublisherId, x.WebsiteId, x.WebsiteUrl, x.UtcDate, x.LocalDate, x.Bids, x.Impressions, x.Clicks, x.Conversions, x.PostViewConversions, x.PostClickConversions, x.MediaCostUsdMicros, x.MediaCostLocalMicros, x.DataCostLocalMicros });

            Property(x => x.AdGroupId).HasColumnName("AdGroupID").IsRequired().HasColumnType("int");
            Property(x => x.DealKey).HasColumnName("DealKey").IsRequired().HasColumnType("nvarchar").HasMaxLength(50);
            Property(x => x.InventoryId).HasColumnName("InventoryID").IsOptional().HasColumnType("bigint");
            Property(x => x.PartnerId).HasColumnName("PartnerID").IsRequired().HasColumnType("int");
            Property(x => x.PublisherId).HasColumnName("PublisherID").IsRequired().HasColumnType("int");
            Property(x => x.WebsiteId).HasColumnName("WebsiteID").IsRequired().HasColumnType("int");
            Property(x => x.WebsiteUrl).HasColumnName("WebsiteUrl").IsRequired().HasColumnType("nvarchar").HasMaxLength(450);
            Property(x => x.UtcDate).HasColumnName("UtcDate").IsRequired().HasColumnType("date");
            Property(x => x.LocalDate).HasColumnName("LocalDate").IsRequired().HasColumnType("date");
            Property(x => x.Bids).HasColumnName("Bids").IsRequired().HasColumnType("bigint");
            Property(x => x.Impressions).HasColumnName("Impressions").IsRequired().HasColumnType("bigint");
            Property(x => x.Clicks).HasColumnName("Clicks").IsRequired().HasColumnType("bigint");
            Property(x => x.Conversions).HasColumnName("Conversions").IsRequired().HasColumnType("bigint");
            Property(x => x.PostViewConversions).HasColumnName("PostViewConversions").IsRequired().HasColumnType("bigint");
            Property(x => x.PostClickConversions).HasColumnName("PostClickConversions").IsRequired().HasColumnType("bigint");
            Property(x => x.MediaCostUsdMicros).HasColumnName("MediaCostUsdMicros").IsRequired().HasColumnType("bigint");
            Property(x => x.MediaCostLocalMicros).HasColumnName("MediaCostLocalMicros").IsRequired().HasColumnType("bigint");
            Property(x => x.DataCostLocalMicros).HasColumnName("DataCostLocalMicros").IsRequired().HasColumnType("bigint");
            Property(x => x.InvalidImpressions).HasColumnName("InvalidImpressions").IsOptional().HasColumnType("bigint");
            Property(x => x.InvalidClicks).HasColumnName("InvalidClicks").IsOptional().HasColumnType("bigint");
            Property(x => x.FeesUsdSuperMicros).HasColumnName("FeesUsdSuperMicros").IsOptional().HasColumnType("bigint");
            Property(x => x.FeesLocalSuperMicros).HasColumnName("FeesLocalSuperMicros").IsOptional().HasColumnType("bigint");
            Property(x => x.AdSlotDurationInSeconds).HasColumnName("AdSlotDurationInSeconds").IsOptional().HasColumnType("bigint");
            Property(x => x.RawViews).HasColumnName("RawViews").IsOptional().HasColumnType("bigint");
            Property(x => x.IabViews).HasColumnName("IabViews").IsOptional().HasColumnType("bigint");
            Property(x => x.ViewDurationInSeconds).HasColumnName("ViewDurationInSeconds").IsOptional().HasColumnType("bigint");
            InitializePartial();
        }
        partial void InitializePartial();
    }

    // AdGroupDealSitePerformanceAndTargetingOnly
    internal partial class AdGroupDealSitePerformanceAndTargetingOnlyMap : EntityTypeConfiguration<AdGroupDealSitePerformanceAndTargetingOnly>
    {
        public AdGroupDealSitePerformanceAndTargetingOnlyMap()
            : this("dbo")
        {
        }
 
        public AdGroupDealSitePerformanceAndTargetingOnlyMap(string schema)
        {
            ToTable(schema + ".AdGroupDealSitePerformanceAndTargetingOnly");
            HasKey(x => new { x.BuyerAccountId, x.CampaignId, x.AdGroupId, x.PartnerId, x.PublisherId, x.DealKey, x.DealId, x.DealName, x.IsTargeted, x.PackageInstalled, x.BinomialFiltered, x.BinomialFilterOverride, x.WhiteListedInSiteLevel });

            Property(x => x.BuyerAccountId).HasColumnName("BuyerAccountID").IsRequired().HasColumnType("int");
            Property(x => x.CampaignId).HasColumnName("CampaignID").IsRequired().HasColumnType("int");
            Property(x => x.AdGroupId).HasColumnName("AdGroupID").IsRequired().HasColumnType("int");
            Property(x => x.InventoryId).HasColumnName("InventoryID").IsOptional().HasColumnType("bigint");
            Property(x => x.PartnerId).HasColumnName("PartnerID").IsRequired().HasColumnType("int");
            Property(x => x.PartnerName).HasColumnName("PartnerName").IsOptional().HasColumnType("nvarchar").HasMaxLength(50);
            Property(x => x.PublisherId).HasColumnName("PublisherID").IsRequired().HasColumnType("int");
            Property(x => x.PublisherName).HasColumnName("PublisherName").IsOptional().HasColumnType("nvarchar").HasMaxLength(255);
            Property(x => x.WebsiteId).HasColumnName("WebsiteID").IsOptional().HasColumnType("bigint");
            Property(x => x.WebsiteUrl).HasColumnName("WebsiteUrl").IsOptional().HasColumnType("nvarchar").HasMaxLength(450);
            Property(x => x.DealKey).HasColumnName("DealKey").IsRequired().HasColumnType("nvarchar").HasMaxLength(500);
            Property(x => x.DealId).HasColumnName("DealID").IsRequired().HasColumnType("int");
            Property(x => x.DealName).HasColumnName("DealName").IsRequired().HasColumnType("nvarchar").HasMaxLength(500);
            Property(x => x.Bids).HasColumnName("Bids").IsOptional().HasColumnType("bigint");
            Property(x => x.Impressions).HasColumnName("Impressions").IsOptional().HasColumnType("bigint");
            Property(x => x.Clicks).HasColumnName("Clicks").IsOptional().HasColumnType("bigint");
            Property(x => x.Conversions).HasColumnName("Conversions").IsOptional().HasColumnType("bigint");
            Property(x => x.PostViewConversions).HasColumnName("PostViewConversions").IsOptional().HasColumnType("bigint");
            Property(x => x.PostClickConversions).HasColumnName("PostClickConversions").IsOptional().HasColumnType("bigint");
            Property(x => x.SpendLocalMicros).HasColumnName("SpendLocalMicros").IsOptional().HasColumnType("bigint");
            Property(x => x.Spend).HasColumnName("Spend").IsOptional().HasColumnType("money").HasPrecision(19,4);
            Property(x => x.ClientCostLocalMicros).HasColumnName("ClientCostLocalMicros").IsOptional().HasColumnType("bigint");
            Property(x => x.ClientCostDollars).HasColumnName("ClientCostDollars").IsOptional().HasColumnType("money").HasPrecision(19,4);
            Property(x => x.MediaCostLocalMicros).HasColumnName("MediaCostLocalMicros").IsOptional().HasColumnType("bigint");
            Property(x => x.DataCostLocalMicros).HasColumnName("DataCostLocalMicros").IsOptional().HasColumnType("bigint");
            Property(x => x.MediaClientCostLocalMicros).HasColumnName("MediaClientCostLocalMicros").IsOptional().HasColumnType("bigint");
            Property(x => x.DataClientCostLocalMicros).HasColumnName("DataClientCostLocalMicros").IsOptional().HasColumnType("bigint");
            Property(x => x.AdSlotDurationInSeconds).HasColumnName("AdSlotDurationInSeconds").IsOptional().HasColumnType("bigint");
            Property(x => x.RawViews).HasColumnName("RawViews").IsOptional().HasColumnType("bigint");
            Property(x => x.IabViews).HasColumnName("IabViews").IsOptional().HasColumnType("bigint");
            Property(x => x.ViewDurationInSeconds).HasColumnName("ViewDurationInSeconds").IsOptional().HasColumnType("bigint");
            Property(x => x.IsTargeted).HasColumnName("IsTargeted").IsRequired().HasColumnType("int");
            Property(x => x.PackageInstalled).HasColumnName("PackageInstalled").IsRequired().HasColumnType("int");
            Property(x => x.BinomialFiltered).HasColumnName("BinomialFiltered").IsRequired().HasColumnType("int");
            Property(x => x.BinomialFilterOverride).HasColumnName("BinomialFilterOverride").IsRequired().HasColumnType("int");
            Property(x => x.WhiteListedInSiteLevel).HasColumnName("WhiteListedInSiteLevel").IsRequired().HasColumnType("int");
            Property(x => x.Ctr).HasColumnName("CTR").IsOptional().HasColumnType("float");
            Property(x => x.Cpm).HasColumnName("CPM").IsOptional().HasColumnType("decimal").HasPrecision(19,4);
            Property(x => x.Cpc).HasColumnName("CPC").IsOptional().HasColumnType("decimal").HasPrecision(19,4);
            Property(x => x.Cpa).HasColumnName("CPA").IsOptional().HasColumnType("decimal").HasPrecision(19,4);
            Property(x => x.ClientCostCpm).HasColumnName("ClientCostCPM").IsOptional().HasColumnType("decimal").HasPrecision(19,4);
            Property(x => x.ClientCostCpc).HasColumnName("ClientCostCPC").IsOptional().HasColumnType("decimal").HasPrecision(19,4);
            Property(x => x.ClientCostCpa).HasColumnName("ClientCostCPA").IsOptional().HasColumnType("decimal").HasPrecision(19,4);
            Property(x => x.Cpms).HasColumnName("CPMs").IsOptional().HasColumnType("decimal").HasPrecision(38,14);
            Property(x => x.ClientCostCpms).HasColumnName("ClientCostCpms").IsOptional().HasColumnType("decimal").HasPrecision(38,14);
            Property(x => x.Cps).HasColumnName("CPS").IsOptional().HasColumnType("decimal").HasPrecision(38,14);
            Property(x => x.ClientCostCps).HasColumnName("ClientCostCps").IsOptional().HasColumnType("decimal").HasPrecision(38,14);
            Property(x => x.ViewableRatio).HasColumnName("ViewableRatio").IsOptional().HasColumnType("float");
            InitializePartial();
        }
        partial void InitializePartial();
    }

    // AdGroupDealTargetingReportID
    internal partial class AdGroupDealTargetingReportIdMap : EntityTypeConfiguration<AdGroupDealTargetingReportId>
    {
        public AdGroupDealTargetingReportIdMap()
            : this("dbo")
        {
        }
 
        public AdGroupDealTargetingReportIdMap(string schema)
        {
            ToTable(schema + ".AdGroupDealTargetingReportID");
            HasKey(x => new { x.BuyerAccountId, x.DealId, x.DealName, x.PublisherName, x.PublisherId, x.IsTargeted, x.DealStatusId });

            Property(x => x.BuyerAccountId).HasColumnName("BuyerAccountID").IsRequired().HasColumnType("int");
            Property(x => x.CampaignId).HasColumnName("CampaignID").IsOptional().HasColumnType("int");
            Property(x => x.AdGroupId).HasColumnName("AdGroupID").IsOptional().HasColumnType("int");
            Property(x => x.DealId).HasColumnName("DealID").IsRequired().HasColumnType("int");
            Property(x => x.DealName).HasColumnName("DealName").IsRequired().HasColumnType("nvarchar").HasMaxLength(500);
            Property(x => x.PublisherName).HasColumnName("PublisherName").IsRequired().HasColumnType("nvarchar").HasMaxLength(255);
            Property(x => x.PublisherId).HasColumnName("PublisherID").IsRequired().HasColumnType("int");
            Property(x => x.PartnerName).HasColumnName("PartnerName").IsOptional().HasColumnType("nvarchar").HasMaxLength(50);
            Property(x => x.IsTargeted).HasColumnName("IsTargeted").IsRequired().HasColumnType("int");
            Property(x => x.PackageInstalled).HasColumnName("PackageInstalled").IsOptional().HasColumnType("int");
            Property(x => x.Bids).HasColumnName("Bids").IsOptional().HasColumnType("bigint");
            Property(x => x.Impressions).HasColumnName("Impressions").IsOptional().HasColumnType("bigint");
            Property(x => x.Clicks).HasColumnName("Clicks").IsOptional().HasColumnType("bigint");
            Property(x => x.Conversions).HasColumnName("Conversions").IsOptional().HasColumnType("bigint");
            Property(x => x.PostViewConversions).HasColumnName("PostViewConversions").IsOptional().HasColumnType("bigint");
            Property(x => x.PostClickConversions).HasColumnName("PostClickConversions").IsOptional().HasColumnType("bigint");
            Property(x => x.SpendLocalMicros).HasColumnName("SpendLocalMicros").IsOptional().HasColumnType("bigint");
            Property(x => x.Spend).HasColumnName("Spend").IsOptional().HasColumnType("money").HasPrecision(19,4);
            Property(x => x.ClientCostLocalMicros).HasColumnName("ClientCostLocalMicros").IsOptional().HasColumnType("decimal").HasPrecision(38,4);
            Property(x => x.ClientCostDollars).HasColumnName("ClientCostDollars").IsOptional().HasColumnType("money").HasPrecision(19,4);
            Property(x => x.MediaCostLocalMicros).HasColumnName("MediaCostLocalMicros").IsOptional().HasColumnType("bigint");
            Property(x => x.DataCostLocalMicros).HasColumnName("DataCostLocalMicros").IsOptional().HasColumnType("bigint");
            Property(x => x.MediaClientCostLocalMicros).HasColumnName("MediaClientCostLocalMicros").IsOptional().HasColumnType("decimal").HasPrecision(38,4);
            Property(x => x.DataClientCostLocalMicros).HasColumnName("DataClientCostLocalMicros").IsOptional().HasColumnType("decimal").HasPrecision(38,4);
            Property(x => x.DealStatusId).HasColumnName("DealStatusID").IsRequired().HasColumnType("int");
            Property(x => x.AdSlotDurationInSeconds).HasColumnName("AdSlotDurationInSeconds").IsOptional().HasColumnType("bigint");
            Property(x => x.RawViews).HasColumnName("RawViews").IsOptional().HasColumnType("bigint");
            Property(x => x.IabViews).HasColumnName("IabViews").IsOptional().HasColumnType("bigint");
            Property(x => x.ViewDurationInSeconds).HasColumnName("ViewDurationInSeconds").IsOptional().HasColumnType("bigint");
            Property(x => x.Ctr).HasColumnName("CTR").IsOptional().HasColumnType("float");
            Property(x => x.Cpm).HasColumnName("CPM").IsOptional().HasColumnType("decimal").HasPrecision(19,4);
            Property(x => x.Cpc).HasColumnName("CPC").IsOptional().HasColumnType("decimal").HasPrecision(19,4);
            Property(x => x.Cpa).HasColumnName("CPA").IsOptional().HasColumnType("decimal").HasPrecision(19,4);
            Property(x => x.ClientCostCpm).HasColumnName("ClientCostCPM").IsOptional().HasColumnType("decimal").HasPrecision(19,4);
            Property(x => x.ClientCostCpc).HasColumnName("ClientCostCPC").IsOptional().HasColumnType("decimal").HasPrecision(19,4);
            Property(x => x.ClientCostCpa).HasColumnName("ClientCostCPA").IsOptional().HasColumnType("decimal").HasPrecision(19,4);
            Property(x => x.Cpms).HasColumnName("CPMs").IsOptional().HasColumnType("decimal").HasPrecision(38,14);
            Property(x => x.ClientCostCpms).HasColumnName("ClientCostCpms").IsOptional().HasColumnType("decimal").HasPrecision(38,14);
            Property(x => x.Cps).HasColumnName("CPS").IsOptional().HasColumnType("decimal").HasPrecision(38,14);
            Property(x => x.ClientCostCps).HasColumnName("ClientCostCps").IsOptional().HasColumnType("decimal").HasPrecision(38,14);
            Property(x => x.ViewableRatio).HasColumnName("ViewableRatio").IsOptional().HasColumnType("float");
            InitializePartial();
        }
        partial void InitializePartial();
    }

    // AdGroupDevice
    internal partial class AdGroupDeviceMap : EntityTypeConfiguration<AdGroupDevice>
    {
        public AdGroupDeviceMap()
            : this("analytics")
        {
        }
 
        public AdGroupDeviceMap(string schema)
        {
            ToTable(schema + ".AdGroupDevice");
            HasKey(x => new { x.BuyerAccountId, x.CampaignId, x.AdGroupId, x.OptimizationModelId, x.DeviceId, x.UtcDate, x.LocalDate, x.UtcDateTime, x.LocalDateTime, x.Bids, x.Impressions, x.Clicks, x.Conversions, x.PostViewConversions, x.PostClickConversions, x.MediaCostUsdMicros, x.MediaCostLocalMicros, x.DataCostLocalMicros });

            Property(x => x.BuyerAccountId).HasColumnName("BuyerAccountID").IsRequired().HasColumnType("int");
            Property(x => x.CampaignId).HasColumnName("CampaignID").IsRequired().HasColumnType("int");
            Property(x => x.AdGroupId).HasColumnName("AdGroupID").IsRequired().HasColumnType("int");
            Property(x => x.OptimizationModelId).HasColumnName("OptimizationModelID").IsRequired().HasColumnType("int");
            Property(x => x.DeviceId).HasColumnName("DeviceID").IsRequired().HasColumnType("int");
            Property(x => x.UtcDate).HasColumnName("UtcDate").IsRequired().HasColumnType("date");
            Property(x => x.LocalDate).HasColumnName("LocalDate").IsRequired().HasColumnType("date");
            Property(x => x.UtcDateTime).HasColumnName("UtcDateTime").IsRequired().HasColumnType("datetime");
            Property(x => x.LocalDateTime).HasColumnName("LocalDateTime").IsRequired().HasColumnType("datetime");
            Property(x => x.Bids).HasColumnName("Bids").IsRequired().HasColumnType("bigint");
            Property(x => x.Impressions).HasColumnName("Impressions").IsRequired().HasColumnType("bigint");
            Property(x => x.Clicks).HasColumnName("Clicks").IsRequired().HasColumnType("bigint");
            Property(x => x.Conversions).HasColumnName("Conversions").IsRequired().HasColumnType("bigint");
            Property(x => x.PostViewConversions).HasColumnName("PostViewConversions").IsRequired().HasColumnType("bigint");
            Property(x => x.PostClickConversions).HasColumnName("PostClickConversions").IsRequired().HasColumnType("bigint");
            Property(x => x.MediaCostUsdMicros).HasColumnName("MediaCostUsdMicros").IsRequired().HasColumnType("bigint");
            Property(x => x.MediaCostLocalMicros).HasColumnName("MediaCostLocalMicros").IsRequired().HasColumnType("bigint");
            Property(x => x.DataCostLocalMicros).HasColumnName("DataCostLocalMicros").IsRequired().HasColumnType("bigint");
            Property(x => x.InvalidImpressions).HasColumnName("InvalidImpressions").IsOptional().HasColumnType("bigint");
            Property(x => x.InvalidClicks).HasColumnName("InvalidClicks").IsOptional().HasColumnType("bigint");
            Property(x => x.FeesUsdSuperMicros).HasColumnName("FeesUsdSuperMicros").IsOptional().HasColumnType("bigint");
            Property(x => x.FeesLocalSuperMicros).HasColumnName("FeesLocalSuperMicros").IsOptional().HasColumnType("bigint");
            Property(x => x.AdSlotDurationInSeconds).HasColumnName("AdSlotDurationInSeconds").IsOptional().HasColumnType("bigint");
            Property(x => x.RawViews).HasColumnName("RawViews").IsOptional().HasColumnType("bigint");
            Property(x => x.IabViews).HasColumnName("IabViews").IsOptional().HasColumnType("bigint");
            Property(x => x.ViewDurationInSeconds).HasColumnName("ViewDurationInSeconds").IsOptional().HasColumnType("bigint");
            InitializePartial();
        }
        partial void InitializePartial();
    }

    // AdGroupDeviceAnalyticsReportID
    internal partial class AdGroupDeviceAnalyticsReportIdMap : EntityTypeConfiguration<AdGroupDeviceAnalyticsReportId>
    {
        public AdGroupDeviceAnalyticsReportIdMap()
            : this("dbo")
        {
        }
 
        public AdGroupDeviceAnalyticsReportIdMap(string schema)
        {
            ToTable(schema + ".AdGroupDeviceAnalyticsReportID");
            HasKey(x => new { x.BuyerAccountId, x.AdvertiserId, x.AdvertiserProductId, x.CampaignId, x.AdGroupId, x.OptimizationModelId, x.DeviceId, x.LocalDate, x.Bids, x.Impressions, x.Conversions, x.PostViewConversions, x.PostClickConversions, x.MediaCostLocalMicros, x.DataCostLocalMicros });

            Property(x => x.BuyerAccountId).HasColumnName("BuyerAccountID").IsRequired().HasColumnType("int");
            Property(x => x.AdvertiserId).HasColumnName("AdvertiserID").IsRequired().HasColumnType("int");
            Property(x => x.AdvertiserProductId).HasColumnName("AdvertiserProductID").IsRequired().HasColumnType("int");
            Property(x => x.CampaignId).HasColumnName("CampaignID").IsRequired().HasColumnType("int");
            Property(x => x.AdGroupId).HasColumnName("AdGroupID").IsRequired().HasColumnType("int");
            Property(x => x.OptimizationModelId).HasColumnName("OptimizationModelID").IsRequired().HasColumnType("int");
            Property(x => x.DeviceId).HasColumnName("DeviceID").IsRequired().HasColumnType("int");
            Property(x => x.DeviceName).HasColumnName("DeviceName").IsOptional().HasColumnType("nvarchar").HasMaxLength(50);
            Property(x => x.LocalDate).HasColumnName("LocalDate").IsRequired().HasColumnType("date");
            Property(x => x.Bids).HasColumnName("Bids").IsRequired().HasColumnType("bigint");
            Property(x => x.Impressions).HasColumnName("Impressions").IsRequired().HasColumnType("bigint");
            Property(x => x.Clicks).HasColumnName("Clicks").IsOptional().HasColumnType("bigint");
            Property(x => x.UnfilteredClicks).HasColumnName("UnfilteredClicks").IsOptional().HasColumnType("bigint");
            Property(x => x.Conversions).HasColumnName("Conversions").IsRequired().HasColumnType("bigint");
            Property(x => x.PostViewConversions).HasColumnName("PostViewConversions").IsRequired().HasColumnType("bigint");
            Property(x => x.PostClickConversions).HasColumnName("PostClickConversions").IsRequired().HasColumnType("bigint");
            Property(x => x.SpendLocalMicros).HasColumnName("SpendLocalMicros").IsOptional().HasColumnType("bigint");
            Property(x => x.Spend).HasColumnName("Spend").IsOptional().HasColumnType("money").HasPrecision(19,4);
            Property(x => x.ClientCostLocalMicros).HasColumnName("ClientCostLocalMicros").IsOptional().HasColumnType("bigint");
            Property(x => x.ClientCostDollars).HasColumnName("ClientCostDollars").IsOptional().HasColumnType("money").HasPrecision(19,4);
            Property(x => x.MediaCostLocalMicros).HasColumnName("MediaCostLocalMicros").IsRequired().HasColumnType("bigint");
            Property(x => x.DataCostLocalMicros).HasColumnName("DataCostLocalMicros").IsRequired().HasColumnType("bigint");
            Property(x => x.MediaClientCostLocalMicros).HasColumnName("MediaClientCostLocalMicros").IsOptional().HasColumnType("bigint");
            Property(x => x.DataClientCostLocalMicros).HasColumnName("DataClientCostLocalMicros").IsOptional().HasColumnType("bigint");
            Property(x => x.AdSlotDurationInSeconds).HasColumnName("AdSlotDurationInSeconds").IsOptional().HasColumnType("bigint");
            Property(x => x.RawViews).HasColumnName("RawViews").IsOptional().HasColumnType("bigint");
            Property(x => x.IabViews).HasColumnName("IabViews").IsOptional().HasColumnType("bigint");
            Property(x => x.ViewDurationInSeconds).HasColumnName("ViewDurationInSeconds").IsOptional().HasColumnType("bigint");
            Property(x => x.Ctr).HasColumnName("CTR").IsOptional().HasColumnType("float");
            Property(x => x.Cpm).HasColumnName("CPM").IsOptional().HasColumnType("money").HasPrecision(19,4);
            Property(x => x.Cpc).HasColumnName("CPC").IsOptional().HasColumnType("money").HasPrecision(19,4);
            Property(x => x.Cpa).HasColumnName("CPA").IsOptional().HasColumnType("money").HasPrecision(19,4);
            Property(x => x.ClientCpm).HasColumnName("ClientCPM").IsOptional().HasColumnType("money").HasPrecision(19,4);
            Property(x => x.ClientCpc).HasColumnName("ClientCPC").IsOptional().HasColumnType("money").HasPrecision(19,4);
            Property(x => x.ClientCpa).HasColumnName("ClientCPA").IsOptional().HasColumnType("money").HasPrecision(19,4);
            Property(x => x.Cpms).HasColumnName("CPMs").IsOptional().HasColumnType("decimal").HasPrecision(38,14);
            Property(x => x.ClientCostCpms).HasColumnName("ClientCostCpms").IsOptional().HasColumnType("decimal").HasPrecision(38,14);
            Property(x => x.Cps).HasColumnName("CPS").IsOptional().HasColumnType("decimal").HasPrecision(38,14);
            Property(x => x.ClientCostCps).HasColumnName("ClientCostCps").IsOptional().HasColumnType("decimal").HasPrecision(38,14);
            Property(x => x.ViewableRatio).HasColumnName("ViewableRatio").IsOptional().HasColumnType("float");
            InitializePartial();
        }
        partial void InitializePartial();
    }

    // AdGroupDeviceCombined
    internal partial class AdGroupDeviceCombinedMap : EntityTypeConfiguration<AdGroupDeviceCombined>
    {
        public AdGroupDeviceCombinedMap()
            : this("analytics")
        {
        }
 
        public AdGroupDeviceCombinedMap(string schema)
        {
            ToTable(schema + ".AdGroupDeviceCombined");
            HasKey(x => new { x.BuyerAccountId, x.CampaignId, x.AdGroupId, x.OptimizationModelId, x.DeviceId, x.UtcDate, x.LocalDate, x.UtcDateTime, x.LocalDateTime, x.Bids, x.Impressions, x.Clicks, x.Conversions, x.PostViewConversions, x.PostClickConversions, x.MediaCostUsdMicros, x.MediaCostLocalMicros, x.DataCostLocalMicros });

            Property(x => x.BuyerAccountId).HasColumnName("BuyerAccountID").IsRequired().HasColumnType("int");
            Property(x => x.CampaignId).HasColumnName("CampaignID").IsRequired().HasColumnType("int");
            Property(x => x.AdGroupId).HasColumnName("AdGroupID").IsRequired().HasColumnType("int");
            Property(x => x.OptimizationModelId).HasColumnName("OptimizationModelID").IsRequired().HasColumnType("int");
            Property(x => x.DeviceId).HasColumnName("DeviceID").IsRequired().HasColumnType("int");
            Property(x => x.UtcDate).HasColumnName("UtcDate").IsRequired().HasColumnType("date");
            Property(x => x.LocalDate).HasColumnName("LocalDate").IsRequired().HasColumnType("date");
            Property(x => x.UtcDateTime).HasColumnName("UtcDateTime").IsRequired().HasColumnType("datetime");
            Property(x => x.LocalDateTime).HasColumnName("LocalDateTime").IsRequired().HasColumnType("datetime");
            Property(x => x.Bids).HasColumnName("Bids").IsRequired().HasColumnType("bigint");
            Property(x => x.Impressions).HasColumnName("Impressions").IsRequired().HasColumnType("bigint");
            Property(x => x.Clicks).HasColumnName("Clicks").IsRequired().HasColumnType("bigint");
            Property(x => x.Conversions).HasColumnName("Conversions").IsRequired().HasColumnType("bigint");
            Property(x => x.PostViewConversions).HasColumnName("PostViewConversions").IsRequired().HasColumnType("bigint");
            Property(x => x.PostClickConversions).HasColumnName("PostClickConversions").IsRequired().HasColumnType("bigint");
            Property(x => x.MediaCostUsdMicros).HasColumnName("MediaCostUsdMicros").IsRequired().HasColumnType("bigint");
            Property(x => x.MediaCostLocalMicros).HasColumnName("MediaCostLocalMicros").IsRequired().HasColumnType("bigint");
            Property(x => x.DataCostLocalMicros).HasColumnName("DataCostLocalMicros").IsRequired().HasColumnType("bigint");
            Property(x => x.InvalidImpressions).HasColumnName("InvalidImpressions").IsOptional().HasColumnType("bigint");
            Property(x => x.InvalidClicks).HasColumnName("InvalidClicks").IsOptional().HasColumnType("bigint");
            Property(x => x.FeesUsdSuperMicros).HasColumnName("FeesUsdSuperMicros").IsOptional().HasColumnType("bigint");
            Property(x => x.FeesLocalSuperMicros).HasColumnName("FeesLocalSuperMicros").IsOptional().HasColumnType("bigint");
            Property(x => x.AdSlotDurationInSeconds).HasColumnName("AdSlotDurationInSeconds").IsOptional().HasColumnType("bigint");
            Property(x => x.RawViews).HasColumnName("RawViews").IsOptional().HasColumnType("bigint");
            Property(x => x.IabViews).HasColumnName("IabViews").IsOptional().HasColumnType("bigint");
            Property(x => x.ViewDurationInSeconds).HasColumnName("ViewDurationInSeconds").IsOptional().HasColumnType("bigint");
            InitializePartial();
        }
        partial void InitializePartial();
    }

    // AdGroupDeviceException
    internal partial class AdGroupDeviceExceptionMap : EntityTypeConfiguration<AdGroupDeviceException>
    {
        public AdGroupDeviceExceptionMap()
            : this("analytics")
        {
        }
 
        public AdGroupDeviceExceptionMap(string schema)
        {
            ToTable(schema + ".AdGroupDeviceException");
            HasKey(x => new { x.BuyerAccountId, x.CampaignId, x.AdGroupId, x.OptimizationModelId, x.DeviceId, x.UtcDate, x.LocalDate, x.UtcDateTime, x.LocalDateTime, x.Bids, x.Impressions, x.Clicks, x.Conversions, x.PostViewConversions, x.PostClickConversions, x.MediaCostUsdMicros, x.MediaCostLocalMicros, x.DataCostLocalMicros });

            Property(x => x.BuyerAccountId).HasColumnName("BuyerAccountID").IsRequired().HasColumnType("int");
            Property(x => x.CampaignId).HasColumnName("CampaignID").IsRequired().HasColumnType("int");
            Property(x => x.AdGroupId).HasColumnName("AdGroupID").IsRequired().HasColumnType("int");
            Property(x => x.OptimizationModelId).HasColumnName("OptimizationModelID").IsRequired().HasColumnType("int");
            Property(x => x.DeviceId).HasColumnName("DeviceID").IsRequired().HasColumnType("int");
            Property(x => x.UtcDate).HasColumnName("UtcDate").IsRequired().HasColumnType("date");
            Property(x => x.LocalDate).HasColumnName("LocalDate").IsRequired().HasColumnType("date");
            Property(x => x.UtcDateTime).HasColumnName("UtcDateTime").IsRequired().HasColumnType("datetime");
            Property(x => x.LocalDateTime).HasColumnName("LocalDateTime").IsRequired().HasColumnType("datetime");
            Property(x => x.Bids).HasColumnName("Bids").IsRequired().HasColumnType("bigint");
            Property(x => x.Impressions).HasColumnName("Impressions").IsRequired().HasColumnType("bigint");
            Property(x => x.Clicks).HasColumnName("Clicks").IsRequired().HasColumnType("bigint");
            Property(x => x.Conversions).HasColumnName("Conversions").IsRequired().HasColumnType("bigint");
            Property(x => x.PostViewConversions).HasColumnName("PostViewConversions").IsRequired().HasColumnType("bigint");
            Property(x => x.PostClickConversions).HasColumnName("PostClickConversions").IsRequired().HasColumnType("bigint");
            Property(x => x.MediaCostUsdMicros).HasColumnName("MediaCostUsdMicros").IsRequired().HasColumnType("bigint");
            Property(x => x.MediaCostLocalMicros).HasColumnName("MediaCostLocalMicros").IsRequired().HasColumnType("bigint");
            Property(x => x.DataCostLocalMicros).HasColumnName("DataCostLocalMicros").IsRequired().HasColumnType("bigint");
            Property(x => x.AdSlotDurationInSeconds).HasColumnName("AdSlotDurationInSeconds").IsOptional().HasColumnType("bigint");
            Property(x => x.RawViews).HasColumnName("RawViews").IsOptional().HasColumnType("bigint");
            Property(x => x.IabViews).HasColumnName("IabViews").IsOptional().HasColumnType("bigint");
            Property(x => x.ViewDurationInSeconds).HasColumnName("ViewDurationInSeconds").IsOptional().HasColumnType("bigint");
            InitializePartial();
        }
        partial void InitializePartial();
    }

    // AdGroupDeviceImport
    internal partial class AdGroupDeviceImportMap : EntityTypeConfiguration<AdGroupDeviceImport>
    {
        public AdGroupDeviceImportMap()
            : this("analytics")
        {
        }
 
        public AdGroupDeviceImportMap(string schema)
        {
            ToTable(schema + ".AdGroupDeviceImport");
            HasKey(x => new { x.BuyerAccountId, x.CampaignId, x.AdGroupId, x.OptimizationModelId, x.DeviceId, x.UtcDateTime, x.LocalDateTime, x.Bids, x.Impressions, x.InvalidImpressions, x.Clicks, x.InvalidClicks, x.Conversions, x.PostViewConversions, x.PostClickConversions, x.MediaCostUsdMicros, x.MediaCostLocalMicros, x.DataCostLocalMicros, x.FeesUsdSuperMicros, x.FeesLocalSuperMicros });

            Property(x => x.BuyerAccountId).HasColumnName("BuyerAccountID").IsRequired().HasColumnType("int");
            Property(x => x.CampaignId).HasColumnName("CampaignID").IsRequired().HasColumnType("int");
            Property(x => x.AdGroupId).HasColumnName("AdGroupID").IsRequired().HasColumnType("int");
            Property(x => x.OptimizationModelId).HasColumnName("OptimizationModelID").IsRequired().HasColumnType("int");
            Property(x => x.DeviceId).HasColumnName("DeviceID").IsRequired().HasColumnType("int");
            Property(x => x.UtcDateTime).HasColumnName("UtcDateTime").IsRequired().HasColumnType("datetime");
            Property(x => x.LocalDateTime).HasColumnName("LocalDateTime").IsRequired().HasColumnType("datetime");
            Property(x => x.Bids).HasColumnName("Bids").IsRequired().HasColumnType("bigint");
            Property(x => x.Impressions).HasColumnName("Impressions").IsRequired().HasColumnType("bigint");
            Property(x => x.InvalidImpressions).HasColumnName("InvalidImpressions").IsRequired().HasColumnType("bigint");
            Property(x => x.Clicks).HasColumnName("Clicks").IsRequired().HasColumnType("bigint");
            Property(x => x.InvalidClicks).HasColumnName("InvalidClicks").IsRequired().HasColumnType("bigint");
            Property(x => x.Conversions).HasColumnName("Conversions").IsRequired().HasColumnType("bigint");
            Property(x => x.PostViewConversions).HasColumnName("PostViewConversions").IsRequired().HasColumnType("bigint");
            Property(x => x.PostClickConversions).HasColumnName("PostClickConversions").IsRequired().HasColumnType("bigint");
            Property(x => x.MediaCostUsdMicros).HasColumnName("MediaCostUsdMicros").IsRequired().HasColumnType("bigint");
            Property(x => x.MediaCostLocalMicros).HasColumnName("MediaCostLocalMicros").IsRequired().HasColumnType("bigint");
            Property(x => x.DataCostLocalMicros).HasColumnName("DataCostLocalMicros").IsRequired().HasColumnType("bigint");
            Property(x => x.FeesUsdSuperMicros).HasColumnName("FeesUsdSuperMicros").IsRequired().HasColumnType("bigint");
            Property(x => x.FeesLocalSuperMicros).HasColumnName("FeesLocalSuperMicros").IsRequired().HasColumnType("bigint");
            Property(x => x.AdSlotDurationInSeconds).HasColumnName("AdSlotDurationInSeconds").IsOptional().HasColumnType("bigint");
            Property(x => x.RawViews).HasColumnName("RawViews").IsOptional().HasColumnType("bigint");
            Property(x => x.IabViews).HasColumnName("IabViews").IsOptional().HasColumnType("bigint");
            Property(x => x.ViewDurationInSeconds).HasColumnName("ViewDurationInSeconds").IsOptional().HasColumnType("bigint");
            InitializePartial();
        }
        partial void InitializePartial();
    }

    // AdGroupDeviceImportReportID
    internal partial class AdGroupDeviceImportReportIdMap : EntityTypeConfiguration<AdGroupDeviceImportReportId>
    {
        public AdGroupDeviceImportReportIdMap()
            : this("analytics")
        {
        }
 
        public AdGroupDeviceImportReportIdMap(string schema)
        {
            ToTable(schema + ".AdGroupDeviceImportReportID");
            HasKey(x => new { x.BuyerAccountId, x.CampaignId, x.AdGroupId, x.OptimizationModelId, x.DeviceId, x.UtcDateTime, x.LocalDateTime, x.Bids, x.Impressions, x.InvalidImpressions, x.Clicks, x.InvalidClicks, x.Conversions, x.PostViewConversions, x.PostClickConversions, x.MediaCostUsdMicros, x.MediaCostLocalMicros, x.DataCostLocalMicros, x.FeesUsdSuperMicros, x.FeesLocalSuperMicros, x.ReportId });

            Property(x => x.BuyerAccountId).HasColumnName("BuyerAccountID").IsRequired().HasColumnType("int");
            Property(x => x.CampaignId).HasColumnName("CampaignID").IsRequired().HasColumnType("int");
            Property(x => x.AdGroupId).HasColumnName("AdGroupID").IsRequired().HasColumnType("int");
            Property(x => x.OptimizationModelId).HasColumnName("OptimizationModelID").IsRequired().HasColumnType("int");
            Property(x => x.DeviceId).HasColumnName("DeviceID").IsRequired().HasColumnType("int");
            Property(x => x.UtcDateTime).HasColumnName("UtcDateTime").IsRequired().HasColumnType("datetime");
            Property(x => x.LocalDateTime).HasColumnName("LocalDateTime").IsRequired().HasColumnType("datetime");
            Property(x => x.Bids).HasColumnName("Bids").IsRequired().HasColumnType("bigint");
            Property(x => x.Impressions).HasColumnName("Impressions").IsRequired().HasColumnType("bigint");
            Property(x => x.InvalidImpressions).HasColumnName("InvalidImpressions").IsRequired().HasColumnType("bigint");
            Property(x => x.Clicks).HasColumnName("Clicks").IsRequired().HasColumnType("bigint");
            Property(x => x.InvalidClicks).HasColumnName("InvalidClicks").IsRequired().HasColumnType("bigint");
            Property(x => x.Conversions).HasColumnName("Conversions").IsRequired().HasColumnType("bigint");
            Property(x => x.PostViewConversions).HasColumnName("PostViewConversions").IsRequired().HasColumnType("bigint");
            Property(x => x.PostClickConversions).HasColumnName("PostClickConversions").IsRequired().HasColumnType("bigint");
            Property(x => x.MediaCostUsdMicros).HasColumnName("MediaCostUsdMicros").IsRequired().HasColumnType("bigint");
            Property(x => x.MediaCostLocalMicros).HasColumnName("MediaCostLocalMicros").IsRequired().HasColumnType("bigint");
            Property(x => x.DataCostLocalMicros).HasColumnName("DataCostLocalMicros").IsRequired().HasColumnType("bigint");
            Property(x => x.FeesUsdSuperMicros).HasColumnName("FeesUsdSuperMicros").IsRequired().HasColumnType("bigint");
            Property(x => x.FeesLocalSuperMicros).HasColumnName("FeesLocalSuperMicros").IsRequired().HasColumnType("bigint");
            Property(x => x.ReportId).HasColumnName("ReportID").IsRequired().HasColumnType("bigint");
            Property(x => x.AdSlotDurationInSeconds).HasColumnName("AdSlotDurationInSeconds").IsOptional().HasColumnType("bigint");
            Property(x => x.RawViews).HasColumnName("RawViews").IsOptional().HasColumnType("bigint");
            Property(x => x.IabViews).HasColumnName("IabViews").IsOptional().HasColumnType("bigint");
            Property(x => x.ViewDurationInSeconds).HasColumnName("ViewDurationInSeconds").IsOptional().HasColumnType("bigint");
            InitializePartial();
        }
        partial void InitializePartial();
    }

    // AdGroupDeviceReportID
    internal partial class AdGroupDeviceReportIdMap : EntityTypeConfiguration<AdGroupDeviceReportId>
    {
        public AdGroupDeviceReportIdMap()
            : this("analytics")
        {
        }
 
        public AdGroupDeviceReportIdMap(string schema)
        {
            ToTable(schema + ".AdGroupDeviceReportID");
            HasKey(x => new { x.BuyerAccountId, x.CampaignId, x.AdGroupId, x.OptimizationModelId, x.DeviceId, x.UtcDate, x.LocalDate, x.UtcDateTime, x.LocalDateTime, x.Bids, x.Impressions, x.Clicks, x.Conversions, x.PostViewConversions, x.PostClickConversions, x.MediaCostUsdMicros, x.MediaCostLocalMicros, x.DataCostLocalMicros, x.ReportId });

            Property(x => x.BuyerAccountId).HasColumnName("BuyerAccountID").IsRequired().HasColumnType("int");
            Property(x => x.CampaignId).HasColumnName("CampaignID").IsRequired().HasColumnType("int");
            Property(x => x.AdGroupId).HasColumnName("AdGroupID").IsRequired().HasColumnType("int");
            Property(x => x.OptimizationModelId).HasColumnName("OptimizationModelID").IsRequired().HasColumnType("int");
            Property(x => x.DeviceId).HasColumnName("DeviceID").IsRequired().HasColumnType("int");
            Property(x => x.UtcDate).HasColumnName("UtcDate").IsRequired().HasColumnType("date");
            Property(x => x.LocalDate).HasColumnName("LocalDate").IsRequired().HasColumnType("date");
            Property(x => x.UtcDateTime).HasColumnName("UtcDateTime").IsRequired().HasColumnType("datetime");
            Property(x => x.LocalDateTime).HasColumnName("LocalDateTime").IsRequired().HasColumnType("datetime");
            Property(x => x.Bids).HasColumnName("Bids").IsRequired().HasColumnType("bigint");
            Property(x => x.Impressions).HasColumnName("Impressions").IsRequired().HasColumnType("bigint");
            Property(x => x.Clicks).HasColumnName("Clicks").IsRequired().HasColumnType("bigint");
            Property(x => x.Conversions).HasColumnName("Conversions").IsRequired().HasColumnType("bigint");
            Property(x => x.PostViewConversions).HasColumnName("PostViewConversions").IsRequired().HasColumnType("bigint");
            Property(x => x.PostClickConversions).HasColumnName("PostClickConversions").IsRequired().HasColumnType("bigint");
            Property(x => x.MediaCostUsdMicros).HasColumnName("MediaCostUsdMicros").IsRequired().HasColumnType("bigint");
            Property(x => x.MediaCostLocalMicros).HasColumnName("MediaCostLocalMicros").IsRequired().HasColumnType("bigint");
            Property(x => x.DataCostLocalMicros).HasColumnName("DataCostLocalMicros").IsRequired().HasColumnType("bigint");
            Property(x => x.InvalidImpressions).HasColumnName("InvalidImpressions").IsOptional().HasColumnType("bigint");
            Property(x => x.InvalidClicks).HasColumnName("InvalidClicks").IsOptional().HasColumnType("bigint");
            Property(x => x.FeesUsdSuperMicros).HasColumnName("FeesUsdSuperMicros").IsOptional().HasColumnType("bigint");
            Property(x => x.FeesLocalSuperMicros).HasColumnName("FeesLocalSuperMicros").IsOptional().HasColumnType("bigint");
            Property(x => x.ReportId).HasColumnName("ReportID").IsRequired().HasColumnType("bigint");
            Property(x => x.AdSlotDurationInSeconds).HasColumnName("AdSlotDurationInSeconds").IsOptional().HasColumnType("bigint");
            Property(x => x.RawViews).HasColumnName("RawViews").IsOptional().HasColumnType("bigint");
            Property(x => x.IabViews).HasColumnName("IabViews").IsOptional().HasColumnType("bigint");
            Property(x => x.ViewDurationInSeconds).HasColumnName("ViewDurationInSeconds").IsOptional().HasColumnType("bigint");
            InitializePartial();
        }
        partial void InitializePartial();
    }

    // AdGroupDeviceTargetingReportID
    internal partial class AdGroupDeviceTargetingReportIdMap : EntityTypeConfiguration<AdGroupDeviceTargetingReportId>
    {
        public AdGroupDeviceTargetingReportIdMap()
            : this("dbo")
        {
        }
 
        public AdGroupDeviceTargetingReportIdMap(string schema)
        {
            ToTable(schema + ".AdGroupDeviceTargetingReportID");
            HasKey(x => new { x.DeviceId, x.IsTargeted, x.PackageInstalled });

            Property(x => x.BuyerAccountId).HasColumnName("BuyerAccountID").IsOptional().HasColumnType("int");
            Property(x => x.CampaignId).HasColumnName("CampaignID").IsOptional().HasColumnType("int");
            Property(x => x.AdGroupId).HasColumnName("AdGroupID").IsOptional().HasColumnType("int");
            Property(x => x.DeviceId).HasColumnName("DeviceID").IsRequired().HasColumnType("int");
            Property(x => x.DeviceName).HasColumnName("DeviceName").IsOptional().HasColumnType("nvarchar").HasMaxLength(50);
            Property(x => x.IsTargeted).HasColumnName("IsTargeted").IsRequired().HasColumnType("int");
            Property(x => x.PackageInstalled).HasColumnName("PackageInstalled").IsRequired().HasColumnType("int");
            Property(x => x.Bids).HasColumnName("Bids").IsOptional().HasColumnType("bigint");
            Property(x => x.Impressions).HasColumnName("Impressions").IsOptional().HasColumnType("bigint");
            Property(x => x.Clicks).HasColumnName("Clicks").IsOptional().HasColumnType("bigint");
            Property(x => x.Conversions).HasColumnName("Conversions").IsOptional().HasColumnType("bigint");
            Property(x => x.PostViewConversions).HasColumnName("PostViewConversions").IsOptional().HasColumnType("bigint");
            Property(x => x.PostClickConversions).HasColumnName("PostClickConversions").IsOptional().HasColumnType("bigint");
            Property(x => x.SpendLocalMicros).HasColumnName("SpendLocalMicros").IsOptional().HasColumnType("bigint");
            Property(x => x.Spend).HasColumnName("Spend").IsOptional().HasColumnType("money").HasPrecision(19,4);
            Property(x => x.ClientCostLocalMicros).HasColumnName("ClientCostLocalMicros").IsOptional().HasColumnType("decimal").HasPrecision(38,4);
            Property(x => x.ClientCostDollars).HasColumnName("ClientCostDollars").IsOptional().HasColumnType("money").HasPrecision(19,4);
            Property(x => x.MediaCostLocalMicros).HasColumnName("MediaCostLocalMicros").IsOptional().HasColumnType("bigint");
            Property(x => x.DataCostLocalMicros).HasColumnName("DataCostLocalMicros").IsOptional().HasColumnType("bigint");
            Property(x => x.MediaClientCostLocalMicros).HasColumnName("MediaClientCostLocalMicros").IsOptional().HasColumnType("decimal").HasPrecision(38,4);
            Property(x => x.DataClientCostLocalMicros).HasColumnName("DataClientCostLocalMicros").IsOptional().HasColumnType("decimal").HasPrecision(38,4);
            Property(x => x.AdSlotDurationInSeconds).HasColumnName("AdSlotDurationInSeconds").IsOptional().HasColumnType("bigint");
            Property(x => x.RawViews).HasColumnName("RawViews").IsOptional().HasColumnType("bigint");
            Property(x => x.IabViews).HasColumnName("IabViews").IsOptional().HasColumnType("bigint");
            Property(x => x.ViewDurationInSeconds).HasColumnName("ViewDurationInSeconds").IsOptional().HasColumnType("bigint");
            Property(x => x.Ctr).HasColumnName("CTR").IsOptional().HasColumnType("float");
            Property(x => x.Cpm).HasColumnName("CPM").IsOptional().HasColumnType("decimal").HasPrecision(19,4);
            Property(x => x.Cpc).HasColumnName("CPC").IsOptional().HasColumnType("decimal").HasPrecision(19,4);
            Property(x => x.Cpa).HasColumnName("CPA").IsOptional().HasColumnType("decimal").HasPrecision(19,4);
            Property(x => x.ClientCostCpm).HasColumnName("ClientCostCPM").IsOptional().HasColumnType("decimal").HasPrecision(19,4);
            Property(x => x.ClientCostCpc).HasColumnName("ClientCostCPC").IsOptional().HasColumnType("decimal").HasPrecision(19,4);
            Property(x => x.ClientCostCpa).HasColumnName("ClientCostCPA").IsOptional().HasColumnType("decimal").HasPrecision(19,4);
            Property(x => x.Cpms).HasColumnName("CPMs").IsOptional().HasColumnType("decimal").HasPrecision(38,14);
            Property(x => x.ClientCostCpms).HasColumnName("ClientCostCpms").IsOptional().HasColumnType("decimal").HasPrecision(38,14);
            Property(x => x.Cps).HasColumnName("CPS").IsOptional().HasColumnType("decimal").HasPrecision(38,14);
            Property(x => x.ClientCostCps).HasColumnName("ClientCostCps").IsOptional().HasColumnType("decimal").HasPrecision(38,14);
            Property(x => x.ViewableRatio).HasColumnName("ViewableRatio").IsOptional().HasColumnType("float");
            InitializePartial();
        }
        partial void InitializePartial();
    }

    // AdGroupDomain
    internal partial class AdGroupDomainMap : EntityTypeConfiguration<AdGroupDomain>
    {
        public AdGroupDomainMap()
            : this("analytics")
        {
        }
 
        public AdGroupDomainMap(string schema)
        {
            ToTable(schema + ".AdGroupDomain");
            HasKey(x => new { x.BuyerAccountId, x.CampaignId, x.AdGroupId, x.DomainName, x.UtcDate, x.LocalDate, x.Bids, x.Impressions, x.Clicks, x.Conversions, x.PostViewConversions, x.PostClickConversions, x.MediaCostUsdMicros, x.MediaCostLocalMicros, x.DataCostLocalMicros });

            Property(x => x.BuyerAccountId).HasColumnName("BuyerAccountID").IsRequired().HasColumnType("int");
            Property(x => x.CampaignId).HasColumnName("CampaignID").IsRequired().HasColumnType("int");
            Property(x => x.AdGroupId).HasColumnName("AdGroupID").IsRequired().HasColumnType("int");
            Property(x => x.DomainName).HasColumnName("DomainName").IsRequired().IsUnicode(false).HasColumnType("varchar").HasMaxLength(64);
            Property(x => x.UtcDate).HasColumnName("UtcDate").IsRequired().HasColumnType("date");
            Property(x => x.LocalDate).HasColumnName("LocalDate").IsRequired().HasColumnType("date");
            Property(x => x.Bids).HasColumnName("Bids").IsRequired().HasColumnType("bigint");
            Property(x => x.Impressions).HasColumnName("Impressions").IsRequired().HasColumnType("bigint");
            Property(x => x.InvalidImpressions).HasColumnName("InvalidImpressions").IsOptional().HasColumnType("bigint");
            Property(x => x.Clicks).HasColumnName("Clicks").IsRequired().HasColumnType("bigint");
            Property(x => x.InvalidClicks).HasColumnName("InvalidClicks").IsOptional().HasColumnType("bigint");
            Property(x => x.Conversions).HasColumnName("Conversions").IsRequired().HasColumnType("bigint");
            Property(x => x.PostViewConversions).HasColumnName("PostViewConversions").IsRequired().HasColumnType("bigint");
            Property(x => x.PostClickConversions).HasColumnName("PostClickConversions").IsRequired().HasColumnType("bigint");
            Property(x => x.MediaCostUsdMicros).HasColumnName("MediaCostUsdMicros").IsRequired().HasColumnType("bigint");
            Property(x => x.MediaCostLocalMicros).HasColumnName("MediaCostLocalMicros").IsRequired().HasColumnType("bigint");
            Property(x => x.DataCostLocalMicros).HasColumnName("DataCostLocalMicros").IsRequired().HasColumnType("bigint");
            Property(x => x.FeesUsdSuperMicros).HasColumnName("FeesUsdSuperMicros").IsOptional().HasColumnType("bigint");
            Property(x => x.FeesLocalSuperMicros).HasColumnName("FeesLocalSuperMicros").IsOptional().HasColumnType("bigint");
            Property(x => x.AdSlotDurationInSeconds).HasColumnName("AdSlotDurationInSeconds").IsOptional().HasColumnType("bigint");
            Property(x => x.RawViews).HasColumnName("RawViews").IsOptional().HasColumnType("bigint");
            Property(x => x.IabViews).HasColumnName("IabViews").IsOptional().HasColumnType("bigint");
            Property(x => x.ViewDurationInSeconds).HasColumnName("ViewDurationInSeconds").IsOptional().HasColumnType("bigint");
            InitializePartial();
        }
        partial void InitializePartial();
    }

    // AdGroupDomainAnalytics
    internal partial class AdGroupDomainAnalyticMap : EntityTypeConfiguration<AdGroupDomainAnalytic>
    {
        public AdGroupDomainAnalyticMap()
            : this("dbo")
        {
        }
 
        public AdGroupDomainAnalyticMap(string schema)
        {
            ToTable(schema + ".AdGroupDomainAnalytics");
            HasKey(x => new { x.BuyerAccountId, x.AdvertiserId, x.AdvertiserProductId, x.CampaignId, x.AdGroupId, x.OptimizationModelId, x.DomainName, x.LocalDate });

            Property(x => x.BuyerAccountId).HasColumnName("BuyerAccountID").IsRequired().HasColumnType("int");
            Property(x => x.AdvertiserId).HasColumnName("AdvertiserID").IsRequired().HasColumnType("int");
            Property(x => x.AdvertiserProductId).HasColumnName("AdvertiserProductID").IsRequired().HasColumnType("int");
            Property(x => x.CampaignId).HasColumnName("CampaignID").IsRequired().HasColumnType("int");
            Property(x => x.AdGroupId).HasColumnName("AdGroupID").IsRequired().HasColumnType("int");
            Property(x => x.OptimizationModelId).HasColumnName("OptimizationModelID").IsRequired().HasColumnType("int");
            Property(x => x.DomainName).HasColumnName("DomainName").IsRequired().IsUnicode(false).HasColumnType("varchar").HasMaxLength(64);
            Property(x => x.LocalDate).HasColumnName("LocalDate").IsRequired().HasColumnType("date");
            Property(x => x.Bids).HasColumnName("Bids").IsOptional().HasColumnType("bigint");
            Property(x => x.Impressions).HasColumnName("Impressions").IsOptional().HasColumnType("bigint");
            Property(x => x.Clicks).HasColumnName("Clicks").IsOptional().HasColumnType("bigint");
            Property(x => x.UnfilteredClicks).HasColumnName("UnfilteredClicks").IsOptional().HasColumnType("bigint");
            Property(x => x.Conversions).HasColumnName("Conversions").IsOptional().HasColumnType("bigint");
            Property(x => x.PostViewConversions).HasColumnName("PostViewConversions").IsOptional().HasColumnType("bigint");
            Property(x => x.PostClickConversions).HasColumnName("PostClickConversions").IsOptional().HasColumnType("bigint");
            Property(x => x.SpendLocalMicros).HasColumnName("SpendLocalMicros").IsOptional().HasColumnType("bigint");
            Property(x => x.Spend).HasColumnName("Spend").IsOptional().HasColumnType("money").HasPrecision(19,4);
            Property(x => x.ClientCostLocalMicros).HasColumnName("ClientCostLocalMicros").IsOptional().HasColumnType("bigint");
            Property(x => x.ClientCostDollars).HasColumnName("ClientCostDollars").IsOptional().HasColumnType("money").HasPrecision(19,4);
            Property(x => x.MediaCostLocalMicros).HasColumnName("MediaCostLocalMicros").IsOptional().HasColumnType("bigint");
            Property(x => x.DataCostLocalMicros).HasColumnName("DataCostLocalMicros").IsOptional().HasColumnType("bigint");
            Property(x => x.MediaClientCostLocalMicros).HasColumnName("MediaClientCostLocalMicros").IsOptional().HasColumnType("bigint");
            Property(x => x.DataClientCostLocalMicros).HasColumnName("DataClientCostLocalMicros").IsOptional().HasColumnType("bigint");
            Property(x => x.AdSlotDurationInSeconds).HasColumnName("AdSlotDurationInSeconds").IsOptional().HasColumnType("bigint");
            Property(x => x.RawViews).HasColumnName("RawViews").IsOptional().HasColumnType("bigint");
            Property(x => x.IabViews).HasColumnName("IabViews").IsOptional().HasColumnType("bigint");
            Property(x => x.ViewDurationInSeconds).HasColumnName("ViewDurationInSeconds").IsOptional().HasColumnType("bigint");
            Property(x => x.Ctr).HasColumnName("CTR").IsOptional().HasColumnType("float");
            Property(x => x.Cpm).HasColumnName("CPM").IsOptional().HasColumnType("money").HasPrecision(19,4);
            Property(x => x.Cpc).HasColumnName("CPC").IsOptional().HasColumnType("money").HasPrecision(19,4);
            Property(x => x.Cpa).HasColumnName("CPA").IsOptional().HasColumnType("money").HasPrecision(19,4);
            Property(x => x.ClientCpm).HasColumnName("ClientCPM").IsOptional().HasColumnType("money").HasPrecision(19,4);
            Property(x => x.ClientCpc).HasColumnName("ClientCPC").IsOptional().HasColumnType("money").HasPrecision(19,4);
            Property(x => x.ClientCpa).HasColumnName("ClientCPA").IsOptional().HasColumnType("money").HasPrecision(19,4);
            Property(x => x.Cpms).HasColumnName("CPMs").IsOptional().HasColumnType("decimal").HasPrecision(38,14);
            Property(x => x.ClientCostCpms).HasColumnName("ClientCostCpms").IsOptional().HasColumnType("decimal").HasPrecision(38,14);
            Property(x => x.Cps).HasColumnName("CPS").IsOptional().HasColumnType("decimal").HasPrecision(38,14);
            Property(x => x.ClientCostCps).HasColumnName("ClientCostCps").IsOptional().HasColumnType("decimal").HasPrecision(38,14);
            Property(x => x.ViewableRatio).HasColumnName("ViewableRatio").IsOptional().HasColumnType("float");
            InitializePartial();
        }
        partial void InitializePartial();
    }

    // AdGroupDomainCombined
    internal partial class AdGroupDomainCombinedMap : EntityTypeConfiguration<AdGroupDomainCombined>
    {
        public AdGroupDomainCombinedMap()
            : this("analytics")
        {
        }
 
        public AdGroupDomainCombinedMap(string schema)
        {
            ToTable(schema + ".AdGroupDomainCombined");
            HasKey(x => new { x.BuyerAccountId, x.CampaignId, x.AdGroupId, x.DomainName, x.UtcDate, x.LocalDate, x.Bids, x.Impressions, x.Clicks, x.Conversions, x.PostViewConversions, x.PostClickConversions, x.MediaCostUsdMicros, x.MediaCostLocalMicros, x.DataCostLocalMicros });

            Property(x => x.BuyerAccountId).HasColumnName("BuyerAccountID").IsRequired().HasColumnType("int");
            Property(x => x.CampaignId).HasColumnName("CampaignID").IsRequired().HasColumnType("int");
            Property(x => x.AdGroupId).HasColumnName("AdGroupID").IsRequired().HasColumnType("int");
            Property(x => x.DomainName).HasColumnName("DomainName").IsRequired().IsUnicode(false).HasColumnType("varchar").HasMaxLength(64);
            Property(x => x.UtcDate).HasColumnName("UtcDate").IsRequired().HasColumnType("date");
            Property(x => x.LocalDate).HasColumnName("LocalDate").IsRequired().HasColumnType("date");
            Property(x => x.Bids).HasColumnName("Bids").IsRequired().HasColumnType("bigint");
            Property(x => x.Impressions).HasColumnName("Impressions").IsRequired().HasColumnType("bigint");
            Property(x => x.Clicks).HasColumnName("Clicks").IsRequired().HasColumnType("bigint");
            Property(x => x.Conversions).HasColumnName("Conversions").IsRequired().HasColumnType("bigint");
            Property(x => x.PostViewConversions).HasColumnName("PostViewConversions").IsRequired().HasColumnType("bigint");
            Property(x => x.PostClickConversions).HasColumnName("PostClickConversions").IsRequired().HasColumnType("bigint");
            Property(x => x.MediaCostUsdMicros).HasColumnName("MediaCostUsdMicros").IsRequired().HasColumnType("bigint");
            Property(x => x.MediaCostLocalMicros).HasColumnName("MediaCostLocalMicros").IsRequired().HasColumnType("bigint");
            Property(x => x.DataCostLocalMicros).HasColumnName("DataCostLocalMicros").IsRequired().HasColumnType("bigint");
            Property(x => x.InvalidImpressions).HasColumnName("InvalidImpressions").IsOptional().HasColumnType("bigint");
            Property(x => x.InvalidClicks).HasColumnName("InvalidClicks").IsOptional().HasColumnType("bigint");
            Property(x => x.FeesUsdSuperMicros).HasColumnName("FeesUsdSuperMicros").IsOptional().HasColumnType("bigint");
            Property(x => x.FeesLocalSuperMicros).HasColumnName("FeesLocalSuperMicros").IsOptional().HasColumnType("bigint");
            Property(x => x.AdSlotDurationInSeconds).HasColumnName("AdSlotDurationInSeconds").IsOptional().HasColumnType("bigint");
            Property(x => x.RawViews).HasColumnName("RawViews").IsOptional().HasColumnType("bigint");
            Property(x => x.IabViews).HasColumnName("IabViews").IsOptional().HasColumnType("bigint");
            Property(x => x.ViewDurationInSeconds).HasColumnName("ViewDurationInSeconds").IsOptional().HasColumnType("bigint");
            InitializePartial();
        }
        partial void InitializePartial();
    }

    // AdGroupDomainDaily
    internal partial class AdGroupDomainDailyMap : EntityTypeConfiguration<AdGroupDomainDaily>
    {
        public AdGroupDomainDailyMap()
            : this("analytics")
        {
        }
 
        public AdGroupDomainDailyMap(string schema)
        {
            ToTable(schema + ".AdGroupDomainDaily");
            HasKey(x => new { x.BuyerAccountId, x.CampaignId, x.AdGroupId, x.DomainName, x.UtcDate, x.LocalDate, x.Bids, x.Impressions, x.Clicks, x.Conversions, x.PostViewConversions, x.PostClickConversions, x.MediaCostUsdMicros, x.MediaCostLocalMicros, x.DataCostLocalMicros });

            Property(x => x.BuyerAccountId).HasColumnName("BuyerAccountID").IsRequired().HasColumnType("int");
            Property(x => x.CampaignId).HasColumnName("CampaignID").IsRequired().HasColumnType("int");
            Property(x => x.AdGroupId).HasColumnName("AdGroupID").IsRequired().HasColumnType("int");
            Property(x => x.DomainName).HasColumnName("DomainName").IsRequired().IsUnicode(false).HasColumnType("varchar").HasMaxLength(64);
            Property(x => x.UtcDate).HasColumnName("UtcDate").IsRequired().HasColumnType("date");
            Property(x => x.LocalDate).HasColumnName("LocalDate").IsRequired().HasColumnType("date");
            Property(x => x.Bids).HasColumnName("Bids").IsRequired().HasColumnType("bigint");
            Property(x => x.Impressions).HasColumnName("Impressions").IsRequired().HasColumnType("bigint");
            Property(x => x.InvalidImpressions).HasColumnName("InvalidImpressions").IsOptional().HasColumnType("bigint");
            Property(x => x.Clicks).HasColumnName("Clicks").IsRequired().HasColumnType("bigint");
            Property(x => x.InvalidClicks).HasColumnName("InvalidClicks").IsOptional().HasColumnType("bigint");
            Property(x => x.Conversions).HasColumnName("Conversions").IsRequired().HasColumnType("bigint");
            Property(x => x.PostViewConversions).HasColumnName("PostViewConversions").IsRequired().HasColumnType("bigint");
            Property(x => x.PostClickConversions).HasColumnName("PostClickConversions").IsRequired().HasColumnType("bigint");
            Property(x => x.MediaCostUsdMicros).HasColumnName("MediaCostUsdMicros").IsRequired().HasColumnType("bigint");
            Property(x => x.MediaCostLocalMicros).HasColumnName("MediaCostLocalMicros").IsRequired().HasColumnType("bigint");
            Property(x => x.DataCostLocalMicros).HasColumnName("DataCostLocalMicros").IsRequired().HasColumnType("bigint");
            Property(x => x.FeesUsdSuperMicros).HasColumnName("FeesUsdSuperMicros").IsOptional().HasColumnType("bigint");
            Property(x => x.FeesLocalSuperMicros).HasColumnName("FeesLocalSuperMicros").IsOptional().HasColumnType("bigint");
            Property(x => x.AdSlotDurationInSeconds).HasColumnName("AdSlotDurationInSeconds").IsOptional().HasColumnType("bigint");
            Property(x => x.RawViews).HasColumnName("RawViews").IsOptional().HasColumnType("bigint");
            Property(x => x.IabViews).HasColumnName("IabViews").IsOptional().HasColumnType("bigint");
            Property(x => x.ViewDurationInSeconds).HasColumnName("ViewDurationInSeconds").IsOptional().HasColumnType("bigint");
            InitializePartial();
        }
        partial void InitializePartial();
    }

    // AdGroupDomainDailyAlternate
    internal partial class AdGroupDomainDailyAlternateMap : EntityTypeConfiguration<AdGroupDomainDailyAlternate>
    {
        public AdGroupDomainDailyAlternateMap()
            : this("analytics")
        {
        }
 
        public AdGroupDomainDailyAlternateMap(string schema)
        {
            ToTable(schema + ".AdGroupDomainDailyAlternate");
            HasKey(x => new { x.BuyerAccountId, x.CampaignId, x.AdGroupId, x.DomainName, x.UtcDate, x.LocalDate, x.Bids, x.Impressions, x.Clicks, x.Conversions, x.PostViewConversions, x.PostClickConversions, x.MediaCostUsdMicros, x.MediaCostLocalMicros, x.DataCostLocalMicros });

            Property(x => x.BuyerAccountId).HasColumnName("BuyerAccountID").IsRequired().HasColumnType("int");
            Property(x => x.CampaignId).HasColumnName("CampaignID").IsRequired().HasColumnType("int");
            Property(x => x.AdGroupId).HasColumnName("AdGroupID").IsRequired().HasColumnType("int");
            Property(x => x.DomainName).HasColumnName("DomainName").IsRequired().IsUnicode(false).HasColumnType("varchar").HasMaxLength(64);
            Property(x => x.UtcDate).HasColumnName("UtcDate").IsRequired().HasColumnType("date");
            Property(x => x.LocalDate).HasColumnName("LocalDate").IsRequired().HasColumnType("date");
            Property(x => x.Bids).HasColumnName("Bids").IsRequired().HasColumnType("bigint");
            Property(x => x.Impressions).HasColumnName("Impressions").IsRequired().HasColumnType("bigint");
            Property(x => x.InvalidImpressions).HasColumnName("InvalidImpressions").IsOptional().HasColumnType("bigint");
            Property(x => x.Clicks).HasColumnName("Clicks").IsRequired().HasColumnType("bigint");
            Property(x => x.InvalidClicks).HasColumnName("InvalidClicks").IsOptional().HasColumnType("bigint");
            Property(x => x.Conversions).HasColumnName("Conversions").IsRequired().HasColumnType("bigint");
            Property(x => x.PostViewConversions).HasColumnName("PostViewConversions").IsRequired().HasColumnType("bigint");
            Property(x => x.PostClickConversions).HasColumnName("PostClickConversions").IsRequired().HasColumnType("bigint");
            Property(x => x.MediaCostUsdMicros).HasColumnName("MediaCostUsdMicros").IsRequired().HasColumnType("bigint");
            Property(x => x.MediaCostLocalMicros).HasColumnName("MediaCostLocalMicros").IsRequired().HasColumnType("bigint");
            Property(x => x.DataCostLocalMicros).HasColumnName("DataCostLocalMicros").IsRequired().HasColumnType("bigint");
            Property(x => x.FeesUsdSuperMicros).HasColumnName("FeesUsdSuperMicros").IsOptional().HasColumnType("bigint");
            Property(x => x.FeesLocalSuperMicros).HasColumnName("FeesLocalSuperMicros").IsOptional().HasColumnType("bigint");
            Property(x => x.AdSlotDurationInSeconds).HasColumnName("AdSlotDurationInSeconds").IsOptional().HasColumnType("bigint");
            Property(x => x.RawViews).HasColumnName("RawViews").IsOptional().HasColumnType("bigint");
            Property(x => x.IabViews).HasColumnName("IabViews").IsOptional().HasColumnType("bigint");
            Property(x => x.ViewDurationInSeconds).HasColumnName("ViewDurationInSeconds").IsOptional().HasColumnType("bigint");
            InitializePartial();
        }
        partial void InitializePartial();
    }

    // AdGroupDomainException
    internal partial class AdGroupDomainExceptionMap : EntityTypeConfiguration<AdGroupDomainException>
    {
        public AdGroupDomainExceptionMap()
            : this("analytics")
        {
        }
 
        public AdGroupDomainExceptionMap(string schema)
        {
            ToTable(schema + ".AdGroupDomainException");
            HasKey(x => new { x.BuyerAccountId, x.CampaignId, x.AdGroupId, x.DomainName, x.UtcDate, x.LocalDate, x.Bids, x.Impressions, x.Clicks, x.Conversions, x.PostViewConversions, x.PostClickConversions, x.MediaCostUsdMicros, x.MediaCostLocalMicros, x.DataCostLocalMicros });

            Property(x => x.BuyerAccountId).HasColumnName("BuyerAccountID").IsRequired().HasColumnType("int");
            Property(x => x.CampaignId).HasColumnName("CampaignID").IsRequired().HasColumnType("int");
            Property(x => x.AdGroupId).HasColumnName("AdGroupID").IsRequired().HasColumnType("int");
            Property(x => x.DomainName).HasColumnName("DomainName").IsRequired().HasColumnType("nvarchar").HasMaxLength(256);
            Property(x => x.UtcDate).HasColumnName("UtcDate").IsRequired().HasColumnType("date");
            Property(x => x.LocalDate).HasColumnName("LocalDate").IsRequired().HasColumnType("date");
            Property(x => x.Bids).HasColumnName("Bids").IsRequired().HasColumnType("bigint");
            Property(x => x.Impressions).HasColumnName("Impressions").IsRequired().HasColumnType("bigint");
            Property(x => x.InvalidImpressions).HasColumnName("InvalidImpressions").IsOptional().HasColumnType("bigint");
            Property(x => x.Clicks).HasColumnName("Clicks").IsRequired().HasColumnType("bigint");
            Property(x => x.InvalidClicks).HasColumnName("InvalidClicks").IsOptional().HasColumnType("bigint");
            Property(x => x.Conversions).HasColumnName("Conversions").IsRequired().HasColumnType("bigint");
            Property(x => x.PostViewConversions).HasColumnName("PostViewConversions").IsRequired().HasColumnType("bigint");
            Property(x => x.PostClickConversions).HasColumnName("PostClickConversions").IsRequired().HasColumnType("bigint");
            Property(x => x.MediaCostUsdMicros).HasColumnName("MediaCostUsdMicros").IsRequired().HasColumnType("bigint");
            Property(x => x.MediaCostLocalMicros).HasColumnName("MediaCostLocalMicros").IsRequired().HasColumnType("bigint");
            Property(x => x.DataCostLocalMicros).HasColumnName("DataCostLocalMicros").IsRequired().HasColumnType("bigint");
            Property(x => x.FeesUsdSuperMicros).HasColumnName("FeesUsdSuperMicros").IsOptional().HasColumnType("bigint");
            Property(x => x.FeesLocalSuperMicros).HasColumnName("FeesLocalSuperMicros").IsOptional().HasColumnType("bigint");
            Property(x => x.AdSlotDurationInSeconds).HasColumnName("AdSlotDurationInSeconds").IsOptional().HasColumnType("bigint");
            Property(x => x.RawViews).HasColumnName("RawViews").IsOptional().HasColumnType("bigint");
            Property(x => x.IabViews).HasColumnName("IabViews").IsOptional().HasColumnType("bigint");
            Property(x => x.ViewDurationInSeconds).HasColumnName("ViewDurationInSeconds").IsOptional().HasColumnType("bigint");
            InitializePartial();
        }
        partial void InitializePartial();
    }

    // AdGroupDomainImport
    internal partial class AdGroupDomainImportMap : EntityTypeConfiguration<AdGroupDomainImport>
    {
        public AdGroupDomainImportMap()
            : this("analytics")
        {
        }
 
        public AdGroupDomainImportMap(string schema)
        {
            ToTable(schema + ".AdGroupDomainImport");
            HasKey(x => new { x.BuyerAccountId, x.CampaignId, x.AdGroupId, x.DomainName, x.UtcDate, x.LocalDate, x.Bids, x.Impressions, x.Clicks, x.Conversions, x.PostViewConversions, x.PostClickConversions, x.MediaCostUsdMicros, x.MediaCostLocalMicros, x.DataCostLocalMicros });

            Property(x => x.BuyerAccountId).HasColumnName("BuyerAccountID").IsRequired().HasColumnType("int");
            Property(x => x.CampaignId).HasColumnName("CampaignID").IsRequired().HasColumnType("int");
            Property(x => x.AdGroupId).HasColumnName("AdGroupID").IsRequired().HasColumnType("int");
            Property(x => x.DomainName).HasColumnName("DomainName").IsRequired().HasColumnType("nvarchar").HasMaxLength(256);
            Property(x => x.UtcDate).HasColumnName("UtcDate").IsRequired().HasColumnType("date");
            Property(x => x.LocalDate).HasColumnName("LocalDate").IsRequired().HasColumnType("date");
            Property(x => x.Bids).HasColumnName("Bids").IsRequired().HasColumnType("bigint");
            Property(x => x.Impressions).HasColumnName("Impressions").IsRequired().HasColumnType("bigint");
            Property(x => x.InvalidImpressions).HasColumnName("InvalidImpressions").IsOptional().HasColumnType("bigint");
            Property(x => x.Clicks).HasColumnName("Clicks").IsRequired().HasColumnType("bigint");
            Property(x => x.InvalidClicks).HasColumnName("InvalidClicks").IsOptional().HasColumnType("bigint");
            Property(x => x.Conversions).HasColumnName("Conversions").IsRequired().HasColumnType("bigint");
            Property(x => x.PostViewConversions).HasColumnName("PostViewConversions").IsRequired().HasColumnType("bigint");
            Property(x => x.PostClickConversions).HasColumnName("PostClickConversions").IsRequired().HasColumnType("bigint");
            Property(x => x.MediaCostUsdMicros).HasColumnName("MediaCostUsdMicros").IsRequired().HasColumnType("bigint");
            Property(x => x.MediaCostLocalMicros).HasColumnName("MediaCostLocalMicros").IsRequired().HasColumnType("bigint");
            Property(x => x.DataCostLocalMicros).HasColumnName("DataCostLocalMicros").IsRequired().HasColumnType("bigint");
            Property(x => x.FeesUsdSuperMicros).HasColumnName("FeesUsdSuperMicros").IsOptional().HasColumnType("bigint");
            Property(x => x.FeesLocalSuperMicros).HasColumnName("FeesLocalSuperMicros").IsOptional().HasColumnType("bigint");
            Property(x => x.AdSlotDurationInSeconds).HasColumnName("AdSlotDurationInSeconds").IsOptional().HasColumnType("bigint");
            Property(x => x.RawViews).HasColumnName("RawViews").IsOptional().HasColumnType("bigint");
            Property(x => x.IabViews).HasColumnName("IabViews").IsOptional().HasColumnType("bigint");
            Property(x => x.ViewDurationInSeconds).HasColumnName("ViewDurationInSeconds").IsOptional().HasColumnType("bigint");
            InitializePartial();
        }
        partial void InitializePartial();
    }

    // AdGroupDomainNew
    internal partial class AdGroupDomainNewMap : EntityTypeConfiguration<AdGroupDomainNew>
    {
        public AdGroupDomainNewMap()
            : this("analytics")
        {
        }
 
        public AdGroupDomainNewMap(string schema)
        {
            ToTable(schema + ".AdGroupDomainNew");
            HasKey(x => new { x.BuyerAccountId, x.CampaignId, x.AdGroupId, x.DomainName, x.UtcDate, x.LocalDate, x.Bids, x.Impressions, x.Clicks, x.Conversions, x.PostViewConversions, x.PostClickConversions, x.MediaCostUsdMicros, x.MediaCostLocalMicros, x.DataCostLocalMicros });

            Property(x => x.BuyerAccountId).HasColumnName("BuyerAccountID").IsRequired().HasColumnType("int");
            Property(x => x.CampaignId).HasColumnName("CampaignID").IsRequired().HasColumnType("int");
            Property(x => x.AdGroupId).HasColumnName("AdGroupID").IsRequired().HasColumnType("int");
            Property(x => x.DomainName).HasColumnName("DomainName").IsRequired().IsUnicode(false).HasColumnType("varchar").HasMaxLength(64);
            Property(x => x.UtcDate).HasColumnName("UtcDate").IsRequired().HasColumnType("date");
            Property(x => x.LocalDate).HasColumnName("LocalDate").IsRequired().HasColumnType("date");
            Property(x => x.Bids).HasColumnName("Bids").IsRequired().HasColumnType("bigint");
            Property(x => x.Impressions).HasColumnName("Impressions").IsRequired().HasColumnType("bigint");
            Property(x => x.InvalidImpressions).HasColumnName("InvalidImpressions").IsOptional().HasColumnType("bigint");
            Property(x => x.Clicks).HasColumnName("Clicks").IsRequired().HasColumnType("bigint");
            Property(x => x.InvalidClicks).HasColumnName("InvalidClicks").IsOptional().HasColumnType("bigint");
            Property(x => x.Conversions).HasColumnName("Conversions").IsRequired().HasColumnType("bigint");
            Property(x => x.PostViewConversions).HasColumnName("PostViewConversions").IsRequired().HasColumnType("bigint");
            Property(x => x.PostClickConversions).HasColumnName("PostClickConversions").IsRequired().HasColumnType("bigint");
            Property(x => x.MediaCostUsdMicros).HasColumnName("MediaCostUsdMicros").IsRequired().HasColumnType("bigint");
            Property(x => x.MediaCostLocalMicros).HasColumnName("MediaCostLocalMicros").IsRequired().HasColumnType("bigint");
            Property(x => x.DataCostLocalMicros).HasColumnName("DataCostLocalMicros").IsRequired().HasColumnType("bigint");
            Property(x => x.FeesUsdSuperMicros).HasColumnName("FeesUsdSuperMicros").IsOptional().HasColumnType("bigint");
            Property(x => x.FeesLocalSuperMicros).HasColumnName("FeesLocalSuperMicros").IsOptional().HasColumnType("bigint");
            Property(x => x.AdSlotDurationInSeconds).HasColumnName("AdSlotDurationInSeconds").IsOptional().HasColumnType("bigint");
            Property(x => x.RawViews).HasColumnName("RawViews").IsOptional().HasColumnType("bigint");
            Property(x => x.IabViews).HasColumnName("IabViews").IsOptional().HasColumnType("bigint");
            Property(x => x.ViewDurationInSeconds).HasColumnName("ViewDurationInSeconds").IsOptional().HasColumnType("bigint");
            InitializePartial();
        }
        partial void InitializePartial();
    }

    // AdGroupDomainNewAlternate
    internal partial class AdGroupDomainNewAlternateMap : EntityTypeConfiguration<AdGroupDomainNewAlternate>
    {
        public AdGroupDomainNewAlternateMap()
            : this("analytics")
        {
        }
 
        public AdGroupDomainNewAlternateMap(string schema)
        {
            ToTable(schema + ".AdGroupDomainNewAlternate");
            HasKey(x => new { x.BuyerAccountId, x.CampaignId, x.AdGroupId, x.DomainName, x.UtcDate, x.LocalDate, x.Bids, x.Impressions, x.Clicks, x.Conversions, x.PostViewConversions, x.PostClickConversions, x.MediaCostUsdMicros, x.MediaCostLocalMicros, x.DataCostLocalMicros });

            Property(x => x.BuyerAccountId).HasColumnName("BuyerAccountID").IsRequired().HasColumnType("int");
            Property(x => x.CampaignId).HasColumnName("CampaignID").IsRequired().HasColumnType("int");
            Property(x => x.AdGroupId).HasColumnName("AdGroupID").IsRequired().HasColumnType("int");
            Property(x => x.DomainName).HasColumnName("DomainName").IsRequired().IsUnicode(false).HasColumnType("varchar").HasMaxLength(64);
            Property(x => x.UtcDate).HasColumnName("UtcDate").IsRequired().HasColumnType("date");
            Property(x => x.LocalDate).HasColumnName("LocalDate").IsRequired().HasColumnType("date");
            Property(x => x.Bids).HasColumnName("Bids").IsRequired().HasColumnType("bigint");
            Property(x => x.Impressions).HasColumnName("Impressions").IsRequired().HasColumnType("bigint");
            Property(x => x.InvalidImpressions).HasColumnName("InvalidImpressions").IsOptional().HasColumnType("bigint");
            Property(x => x.Clicks).HasColumnName("Clicks").IsRequired().HasColumnType("bigint");
            Property(x => x.InvalidClicks).HasColumnName("InvalidClicks").IsOptional().HasColumnType("bigint");
            Property(x => x.Conversions).HasColumnName("Conversions").IsRequired().HasColumnType("bigint");
            Property(x => x.PostViewConversions).HasColumnName("PostViewConversions").IsRequired().HasColumnType("bigint");
            Property(x => x.PostClickConversions).HasColumnName("PostClickConversions").IsRequired().HasColumnType("bigint");
            Property(x => x.MediaCostUsdMicros).HasColumnName("MediaCostUsdMicros").IsRequired().HasColumnType("bigint");
            Property(x => x.MediaCostLocalMicros).HasColumnName("MediaCostLocalMicros").IsRequired().HasColumnType("bigint");
            Property(x => x.DataCostLocalMicros).HasColumnName("DataCostLocalMicros").IsRequired().HasColumnType("bigint");
            Property(x => x.FeesUsdSuperMicros).HasColumnName("FeesUsdSuperMicros").IsOptional().HasColumnType("bigint");
            Property(x => x.FeesLocalSuperMicros).HasColumnName("FeesLocalSuperMicros").IsOptional().HasColumnType("bigint");
            Property(x => x.AdSlotDurationInSeconds).HasColumnName("AdSlotDurationInSeconds").IsOptional().HasColumnType("bigint");
            Property(x => x.RawViews).HasColumnName("RawViews").IsOptional().HasColumnType("bigint");
            Property(x => x.IabViews).HasColumnName("IabViews").IsOptional().HasColumnType("bigint");
            Property(x => x.ViewDurationInSeconds).HasColumnName("ViewDurationInSeconds").IsOptional().HasColumnType("bigint");
            InitializePartial();
        }
        partial void InitializePartial();
    }

    // AdGroupDomainNewToDaily_RollupBuffer
    internal partial class AdGroupDomainNewToDailyRollupBufferMap : EntityTypeConfiguration<AdGroupDomainNewToDailyRollupBuffer>
    {
        public AdGroupDomainNewToDailyRollupBufferMap()
            : this("analytics")
        {
        }
 
        public AdGroupDomainNewToDailyRollupBufferMap(string schema)
        {
            ToTable(schema + ".AdGroupDomainNewToDaily_RollupBuffer");
            HasKey(x => new { x.BuyerAccountId, x.CampaignId, x.AdGroupId, x.DomainName, x.UtcDate, x.LocalDate, x.Bids, x.Impressions, x.Clicks, x.Conversions, x.PostViewConversions, x.PostClickConversions, x.MediaCostUsdMicros, x.MediaCostLocalMicros, x.DataCostLocalMicros });

            Property(x => x.BuyerAccountId).HasColumnName("BuyerAccountID").IsRequired().HasColumnType("int");
            Property(x => x.CampaignId).HasColumnName("CampaignID").IsRequired().HasColumnType("int");
            Property(x => x.AdGroupId).HasColumnName("AdGroupID").IsRequired().HasColumnType("int");
            Property(x => x.DomainName).HasColumnName("DomainName").IsRequired().IsUnicode(false).HasColumnType("varchar").HasMaxLength(64);
            Property(x => x.UtcDate).HasColumnName("UtcDate").IsRequired().HasColumnType("date");
            Property(x => x.LocalDate).HasColumnName("LocalDate").IsRequired().HasColumnType("date");
            Property(x => x.Bids).HasColumnName("Bids").IsRequired().HasColumnType("bigint");
            Property(x => x.Impressions).HasColumnName("Impressions").IsRequired().HasColumnType("bigint");
            Property(x => x.InvalidImpressions).HasColumnName("InvalidImpressions").IsOptional().HasColumnType("bigint");
            Property(x => x.Clicks).HasColumnName("Clicks").IsRequired().HasColumnType("bigint");
            Property(x => x.InvalidClicks).HasColumnName("InvalidClicks").IsOptional().HasColumnType("bigint");
            Property(x => x.Conversions).HasColumnName("Conversions").IsRequired().HasColumnType("bigint");
            Property(x => x.PostViewConversions).HasColumnName("PostViewConversions").IsRequired().HasColumnType("bigint");
            Property(x => x.PostClickConversions).HasColumnName("PostClickConversions").IsRequired().HasColumnType("bigint");
            Property(x => x.MediaCostUsdMicros).HasColumnName("MediaCostUsdMicros").IsRequired().HasColumnType("bigint");
            Property(x => x.MediaCostLocalMicros).HasColumnName("MediaCostLocalMicros").IsRequired().HasColumnType("bigint");
            Property(x => x.DataCostLocalMicros).HasColumnName("DataCostLocalMicros").IsRequired().HasColumnType("bigint");
            Property(x => x.FeesUsdSuperMicros).HasColumnName("FeesUsdSuperMicros").IsOptional().HasColumnType("bigint");
            Property(x => x.FeesLocalSuperMicros).HasColumnName("FeesLocalSuperMicros").IsOptional().HasColumnType("bigint");
            Property(x => x.AdSlotDurationInSeconds).HasColumnName("AdSlotDurationInSeconds").IsOptional().HasColumnType("bigint");
            Property(x => x.RawViews).HasColumnName("RawViews").IsOptional().HasColumnType("bigint");
            Property(x => x.IabViews).HasColumnName("IabViews").IsOptional().HasColumnType("bigint");
            Property(x => x.ViewDurationInSeconds).HasColumnName("ViewDurationInSeconds").IsOptional().HasColumnType("bigint");
            InitializePartial();
        }
        partial void InitializePartial();
    }

    // AdGroupDomainPerformanceOnly
    internal partial class AdGroupDomainPerformanceOnlyMap : EntityTypeConfiguration<AdGroupDomainPerformanceOnly>
    {
        public AdGroupDomainPerformanceOnlyMap()
            : this("dbo")
        {
        }
 
        public AdGroupDomainPerformanceOnlyMap(string schema)
        {
            ToTable(schema + ".AdGroupDomainPerformanceOnly");
            HasKey(x => new { x.IsTargeted, x.BinomialFiltered, x.BinomialFilterOverride, x.BuyerAccountId, x.CampaignId, x.AdGroupId, x.DomainName, x.PackageInstalled, x.Spend, x.ClientCostDollars });

            Property(x => x.IsTargeted).HasColumnName("IsTargeted").IsRequired().HasColumnType("int");
            Property(x => x.ReadOnly).HasColumnName("ReadOnly").IsOptional().HasColumnType("bit");
            Property(x => x.BinomialFiltered).HasColumnName("BinomialFiltered").IsRequired().HasColumnType("int");
            Property(x => x.BinomialFilterOverride).HasColumnName("BinomialFilterOverride").IsRequired().HasColumnType("int");
            Property(x => x.BuyerAccountId).HasColumnName("BuyerAccountID").IsRequired().HasColumnType("int");
            Property(x => x.CampaignId).HasColumnName("CampaignID").IsRequired().HasColumnType("int");
            Property(x => x.AdGroupId).HasColumnName("AdGroupID").IsRequired().HasColumnType("int");
            Property(x => x.DomainName).HasColumnName("DomainName").IsRequired().IsUnicode(false).HasColumnType("varchar").HasMaxLength(64);
            Property(x => x.Bids).HasColumnName("Bids").IsOptional().HasColumnType("bigint");
            Property(x => x.Impressions).HasColumnName("Impressions").IsOptional().HasColumnType("bigint");
            Property(x => x.Clicks).HasColumnName("Clicks").IsOptional().HasColumnType("bigint");
            Property(x => x.Conversions).HasColumnName("Conversions").IsOptional().HasColumnType("bigint");
            Property(x => x.PostViewConversions).HasColumnName("PostViewConversions").IsOptional().HasColumnType("bigint");
            Property(x => x.PostClickConversions).HasColumnName("PostClickConversions").IsOptional().HasColumnType("bigint");
            Property(x => x.SpendLocalMicros).HasColumnName("SpendLocalMicros").IsOptional().HasColumnType("bigint");
            Property(x => x.ClientCostLocalMicros).HasColumnName("ClientCostLocalMicros").IsOptional().HasColumnType("bigint");
            Property(x => x.MediaCostLocalMicros).HasColumnName("MediaCostLocalMicros").IsOptional().HasColumnType("bigint");
            Property(x => x.DataCostLocalMicros).HasColumnName("DataCostLocalMicros").IsOptional().HasColumnType("bigint");
            Property(x => x.MediaClientCostLocalMicros).HasColumnName("MediaClientCostLocalMicros").IsOptional().HasColumnType("bigint");
            Property(x => x.DataClientCostLocalMicros).HasColumnName("DataClientCostLocalMicros").IsOptional().HasColumnType("bigint");
            Property(x => x.PackageInstalled).HasColumnName("PackageInstalled").IsRequired().HasColumnType("int");
            Property(x => x.Spend).HasColumnName("Spend").IsRequired().HasColumnType("int");
            Property(x => x.ClientCostDollars).HasColumnName("ClientCostDollars").IsRequired().HasColumnType("int");
            Property(x => x.AdSlotDurationInSeconds).HasColumnName("AdSlotDurationInSeconds").IsOptional().HasColumnType("bigint");
            Property(x => x.RawViews).HasColumnName("RawViews").IsOptional().HasColumnType("bigint");
            Property(x => x.IabViews).HasColumnName("IabViews").IsOptional().HasColumnType("bigint");
            Property(x => x.ViewDurationInSeconds).HasColumnName("ViewDurationInSeconds").IsOptional().HasColumnType("bigint");
            Property(x => x.Ctr).HasColumnName("CTR").IsOptional().HasColumnType("float");
            Property(x => x.Cpm).HasColumnName("CPM").IsOptional().HasColumnType("decimal").HasPrecision(19,4);
            Property(x => x.Cpc).HasColumnName("CPC").IsOptional().HasColumnType("decimal").HasPrecision(19,4);
            Property(x => x.Cpa).HasColumnName("CPA").IsOptional().HasColumnType("decimal").HasPrecision(19,4);
            Property(x => x.ClientCostCpm).HasColumnName("ClientCostCPM").IsOptional().HasColumnType("decimal").HasPrecision(19,4);
            Property(x => x.ClientCostCpc).HasColumnName("ClientCostCPC").IsOptional().HasColumnType("decimal").HasPrecision(19,4);
            Property(x => x.ClientCostCpa).HasColumnName("ClientCostCPA").IsOptional().HasColumnType("decimal").HasPrecision(19,4);
            Property(x => x.Cpms).HasColumnName("CPMs").IsOptional().HasColumnType("decimal").HasPrecision(38,14);
            Property(x => x.ClientCostCpms).HasColumnName("ClientCostCpms").IsOptional().HasColumnType("decimal").HasPrecision(38,14);
            Property(x => x.Cps).HasColumnName("CPS").IsOptional().HasColumnType("decimal").HasPrecision(38,14);
            Property(x => x.ClientCostCps).HasColumnName("ClientCostCps").IsOptional().HasColumnType("decimal").HasPrecision(38,14);
            Property(x => x.ViewableRatio).HasColumnName("ViewableRatio").IsOptional().HasColumnType("float");
            InitializePartial();
        }
        partial void InitializePartial();
    }

    // AdGroupDoohGeoLocationGroupTargetingReportID
    internal partial class AdGroupDoohGeoLocationGroupTargetingReportIdMap : EntityTypeConfiguration<AdGroupDoohGeoLocationGroupTargetingReportId>
    {
        public AdGroupDoohGeoLocationGroupTargetingReportIdMap()
            : this("dbo")
        {
        }
 
        public AdGroupDoohGeoLocationGroupTargetingReportIdMap(string schema)
        {
            ToTable(schema + ".AdGroupDoohGeoLocationGroupTargetingReportID");
            HasKey(x => new { x.BuyerAccountId, x.CampaignId, x.AdGroupId, x.DoohGeoLocationGroupId, x.LocationName, x.IsTargeted, x.PackageInstalled });

            Property(x => x.BuyerAccountId).HasColumnName("BuyerAccountID").IsRequired().HasColumnType("int");
            Property(x => x.CampaignId).HasColumnName("CampaignID").IsRequired().HasColumnType("int");
            Property(x => x.AdGroupId).HasColumnName("AdGroupID").IsRequired().HasColumnType("int");
            Property(x => x.DoohGeoLocationGroupId).HasColumnName("DoohGeoLocationGroupID").IsRequired().HasColumnType("int");
            Property(x => x.LocationName).HasColumnName("LocationName").IsRequired().HasColumnType("nvarchar").HasMaxLength(250);
            Property(x => x.RegionName).HasColumnName("RegionName").IsOptional().HasColumnType("nvarchar").HasMaxLength(50);
            Property(x => x.CountryName).HasColumnName("CountryName").IsOptional().HasColumnType("nvarchar").HasMaxLength(50);
            Property(x => x.IsTargeted).HasColumnName("IsTargeted").IsRequired().HasColumnType("int");
            Property(x => x.PackageInstalled).HasColumnName("PackageInstalled").IsRequired().HasColumnType("int");
            Property(x => x.Bids).HasColumnName("Bids").IsOptional().HasColumnType("bigint");
            Property(x => x.Impressions).HasColumnName("Impressions").IsOptional().HasColumnType("bigint");
            Property(x => x.Clicks).HasColumnName("Clicks").IsOptional().HasColumnType("bigint");
            Property(x => x.Conversions).HasColumnName("Conversions").IsOptional().HasColumnType("bigint");
            Property(x => x.PostViewConversions).HasColumnName("PostViewConversions").IsOptional().HasColumnType("bigint");
            Property(x => x.PostClickConversions).HasColumnName("PostClickConversions").IsOptional().HasColumnType("bigint");
            Property(x => x.SpendLocalMicros).HasColumnName("SpendLocalMicros").IsOptional().HasColumnType("bigint");
            Property(x => x.Spend).HasColumnName("Spend").IsOptional().HasColumnType("money").HasPrecision(19,4);
            Property(x => x.ClientCostLocalMicros).HasColumnName("ClientCostLocalMicros").IsOptional().HasColumnType("decimal").HasPrecision(38,4);
            Property(x => x.ClientCostDollars).HasColumnName("ClientCostDollars").IsOptional().HasColumnType("money").HasPrecision(19,4);
            Property(x => x.MediaCostLocalMicros).HasColumnName("MediaCostLocalMicros").IsOptional().HasColumnType("bigint");
            Property(x => x.DataCostLocalMicros).HasColumnName("DataCostLocalMicros").IsOptional().HasColumnType("bigint");
            Property(x => x.MediaClientCostLocalMicros).HasColumnName("MediaClientCostLocalMicros").IsOptional().HasColumnType("decimal").HasPrecision(38,4);
            Property(x => x.DataClientCostLocalMicros).HasColumnName("DataClientCostLocalMicros").IsOptional().HasColumnType("decimal").HasPrecision(38,4);
            Property(x => x.AdSlotDurationInSeconds).HasColumnName("AdSlotDurationInSeconds").IsOptional().HasColumnType("bigint");
            Property(x => x.RawViews).HasColumnName("RawViews").IsOptional().HasColumnType("bigint");
            Property(x => x.IabViews).HasColumnName("IabViews").IsOptional().HasColumnType("bigint");
            Property(x => x.ViewDurationInSeconds).HasColumnName("ViewDurationInSeconds").IsOptional().HasColumnType("bigint");
            Property(x => x.Ctr).HasColumnName("CTR").IsOptional().HasColumnType("float");
            Property(x => x.Cpm).HasColumnName("CPM").IsOptional().HasColumnType("decimal").HasPrecision(19,4);
            Property(x => x.Cpc).HasColumnName("CPC").IsOptional().HasColumnType("decimal").HasPrecision(19,4);
            Property(x => x.Cpa).HasColumnName("CPA").IsOptional().HasColumnType("decimal").HasPrecision(19,4);
            Property(x => x.ClientCostCpm).HasColumnName("ClientCostCPM").IsOptional().HasColumnType("decimal").HasPrecision(19,4);
            Property(x => x.ClientCostCpc).HasColumnName("ClientCostCPC").IsOptional().HasColumnType("decimal").HasPrecision(19,4);
            Property(x => x.ClientCostCpa).HasColumnName("ClientCostCPA").IsOptional().HasColumnType("decimal").HasPrecision(19,4);
            Property(x => x.Cpms).HasColumnName("CPMs").IsOptional().HasColumnType("decimal").HasPrecision(19,4);
            Property(x => x.ClientCostCpMs).HasColumnName("ClientCostCPMs").IsOptional().HasColumnType("decimal").HasPrecision(19,4);
            Property(x => x.Cps).HasColumnName("CPS").IsOptional().HasColumnType("decimal").HasPrecision(19,4);
            Property(x => x.ClientCostCps).HasColumnName("ClientCostCPS").IsOptional().HasColumnType("decimal").HasPrecision(19,4);
            InitializePartial();
        }
        partial void InitializePartial();
    }

    // AdGroupDoohPanelLocation
    internal partial class AdGroupDoohPanelLocationMap : EntityTypeConfiguration<AdGroupDoohPanelLocation>
    {
        public AdGroupDoohPanelLocationMap()
            : this("analytics")
        {
        }
 
        public AdGroupDoohPanelLocationMap(string schema)
        {
            ToTable(schema + ".AdGroupDoohPanelLocation");
            HasKey(x => new { x.BuyerAccountId, x.CampaignId, x.AdGroupId, x.CreativeId, x.DoohPanelLocationId, x.UtcDateTime, x.LocalDateTime, x.Bids, x.Impressions, x.MediaCostUsdMicros, x.MediaCostLocalMicros });

            Property(x => x.BuyerAccountId).HasColumnName("BuyerAccountID").IsRequired().HasColumnType("int");
            Property(x => x.CampaignId).HasColumnName("CampaignID").IsRequired().HasColumnType("int");
            Property(x => x.AdGroupId).HasColumnName("AdGroupID").IsRequired().HasColumnType("int");
            Property(x => x.CreativeId).HasColumnName("CreativeID").IsRequired().HasColumnType("int");
            Property(x => x.DoohPanelLocationId).HasColumnName("DoohPanelLocationID").IsRequired().HasColumnType("int");
            Property(x => x.UtcDateTime).HasColumnName("UtcDateTime").IsRequired().HasColumnType("datetime");
            Property(x => x.LocalDateTime).HasColumnName("LocalDateTime").IsRequired().HasColumnType("datetime");
            Property(x => x.Bids).HasColumnName("Bids").IsRequired().HasColumnType("bigint");
            Property(x => x.Impressions).HasColumnName("Impressions").IsRequired().HasColumnType("bigint");
            Property(x => x.MediaCostUsdMicros).HasColumnName("MediaCostUsdMicros").IsRequired().HasColumnType("bigint");
            Property(x => x.MediaCostLocalMicros).HasColumnName("MediaCostLocalMicros").IsRequired().HasColumnType("bigint");
            Property(x => x.AdSlotDurationInSeconds).HasColumnName("AdSlotDurationInSeconds").IsOptional().HasColumnType("bigint");
            InitializePartial();
        }
        partial void InitializePartial();
    }

    // AdGroupGeoLocation
    internal partial class AdGroupGeoLocationMap : EntityTypeConfiguration<AdGroupGeoLocation>
    {
        public AdGroupGeoLocationMap()
            : this("analytics")
        {
        }
 
        public AdGroupGeoLocationMap(string schema)
        {
            ToTable(schema + ".AdGroupGeoLocation");
            HasKey(x => new { x.BuyerAccountId, x.CampaignId, x.AdGroupId, x.OptimizationModelId, x.GeoCountryId, x.GeoRegionId, x.GeoCityId, x.UtcDate, x.LocalDate, x.UtcDateTime, x.LocalDateTime, x.Bids, x.Impressions, x.Clicks, x.Conversions, x.PostViewConversions, x.PostClickConversions, x.MediaCostUsdMicros, x.MediaCostLocalMicros, x.DataCostLocalMicros });

            Property(x => x.BuyerAccountId).HasColumnName("BuyerAccountID").IsRequired().HasColumnType("int");
            Property(x => x.CampaignId).HasColumnName("CampaignID").IsRequired().HasColumnType("int");
            Property(x => x.AdGroupId).HasColumnName("AdGroupID").IsRequired().HasColumnType("int");
            Property(x => x.OptimizationModelId).HasColumnName("OptimizationModelID").IsRequired().HasColumnType("int");
            Property(x => x.GeoCountryId).HasColumnName("GeoCountryID").IsRequired().HasColumnType("int");
            Property(x => x.GeoRegionId).HasColumnName("GeoRegionID").IsRequired().HasColumnType("int");
            Property(x => x.GeoCityId).HasColumnName("GeoCityID").IsRequired().HasColumnType("int");
            Property(x => x.UtcDate).HasColumnName("UtcDate").IsRequired().HasColumnType("date");
            Property(x => x.LocalDate).HasColumnName("LocalDate").IsRequired().HasColumnType("date");
            Property(x => x.UtcDateTime).HasColumnName("UtcDateTime").IsRequired().HasColumnType("datetime");
            Property(x => x.LocalDateTime).HasColumnName("LocalDateTime").IsRequired().HasColumnType("datetime");
            Property(x => x.Bids).HasColumnName("Bids").IsRequired().HasColumnType("bigint");
            Property(x => x.Impressions).HasColumnName("Impressions").IsRequired().HasColumnType("bigint");
            Property(x => x.Clicks).HasColumnName("Clicks").IsRequired().HasColumnType("bigint");
            Property(x => x.Conversions).HasColumnName("Conversions").IsRequired().HasColumnType("bigint");
            Property(x => x.PostViewConversions).HasColumnName("PostViewConversions").IsRequired().HasColumnType("bigint");
            Property(x => x.PostClickConversions).HasColumnName("PostClickConversions").IsRequired().HasColumnType("bigint");
            Property(x => x.MediaCostUsdMicros).HasColumnName("MediaCostUsdMicros").IsRequired().HasColumnType("bigint");
            Property(x => x.MediaCostLocalMicros).HasColumnName("MediaCostLocalMicros").IsRequired().HasColumnType("bigint");
            Property(x => x.DataCostLocalMicros).HasColumnName("DataCostLocalMicros").IsRequired().HasColumnType("bigint");
            Property(x => x.InvalidImpressions).HasColumnName("InvalidImpressions").IsOptional().HasColumnType("bigint");
            Property(x => x.InvalidClicks).HasColumnName("InvalidClicks").IsOptional().HasColumnType("bigint");
            Property(x => x.FeesUsdSuperMicros).HasColumnName("FeesUsdSuperMicros").IsOptional().HasColumnType("bigint");
            Property(x => x.FeesLocalSuperMicros).HasColumnName("FeesLocalSuperMicros").IsOptional().HasColumnType("bigint");
            Property(x => x.AdSlotDurationInSeconds).HasColumnName("AdSlotDurationInSeconds").IsOptional().HasColumnType("bigint");
            Property(x => x.RawViews).HasColumnName("RawViews").IsOptional().HasColumnType("bigint");
            Property(x => x.IabViews).HasColumnName("IabViews").IsOptional().HasColumnType("bigint");
            Property(x => x.ViewDurationInSeconds).HasColumnName("ViewDurationInSeconds").IsOptional().HasColumnType("bigint");
            InitializePartial();
        }
        partial void InitializePartial();
    }

    // AdGroupGeoLocationAnalyticsReportID
    internal partial class AdGroupGeoLocationAnalyticsReportIdMap : EntityTypeConfiguration<AdGroupGeoLocationAnalyticsReportId>
    {
        public AdGroupGeoLocationAnalyticsReportIdMap()
            : this("dbo")
        {
        }
 
        public AdGroupGeoLocationAnalyticsReportIdMap(string schema)
        {
            ToTable(schema + ".AdGroupGeoLocationAnalyticsReportID");
            HasKey(x => new { x.BuyerAccountId, x.AdvertiserId, x.AdvertiserProductId, x.CampaignId, x.AdGroupId, x.OptimizationModelId, x.GeoCountryId, x.GeoRegionId, x.GeoCityId, x.LocalDate, x.Bids, x.Impressions, x.Conversions, x.PostViewConversions, x.PostClickConversions });

            Property(x => x.BuyerAccountId).HasColumnName("BuyerAccountID").IsRequired().HasColumnType("int");
            Property(x => x.AdvertiserId).HasColumnName("AdvertiserID").IsRequired().HasColumnType("int");
            Property(x => x.AdvertiserProductId).HasColumnName("AdvertiserProductID").IsRequired().HasColumnType("int");
            Property(x => x.CampaignId).HasColumnName("CampaignID").IsRequired().HasColumnType("int");
            Property(x => x.AdGroupId).HasColumnName("AdGroupID").IsRequired().HasColumnType("int");
            Property(x => x.OptimizationModelId).HasColumnName("OptimizationModelID").IsRequired().HasColumnType("int");
            Property(x => x.GeoCountryId).HasColumnName("GeoCountryID").IsRequired().HasColumnType("int");
            Property(x => x.GeoCountryName).HasColumnName("GeoCountryName").IsOptional().HasColumnType("nvarchar").HasMaxLength(50);
            Property(x => x.GeoRegionId).HasColumnName("GeoRegionID").IsRequired().HasColumnType("int");
            Property(x => x.GeoRegionName).HasColumnName("GeoRegionName").IsOptional().HasColumnType("nvarchar").HasMaxLength(50);
            Property(x => x.GeoCityId).HasColumnName("GeoCityID").IsRequired().HasColumnType("int");
            Property(x => x.GeoCityName).HasColumnName("GeoCityName").IsOptional().HasColumnType("nvarchar").HasMaxLength(50);
            Property(x => x.LocalDate).HasColumnName("LocalDate").IsRequired().HasColumnType("date");
            Property(x => x.Bids).HasColumnName("Bids").IsRequired().HasColumnType("bigint");
            Property(x => x.Impressions).HasColumnName("Impressions").IsRequired().HasColumnType("bigint");
            Property(x => x.Clicks).HasColumnName("Clicks").IsOptional().HasColumnType("bigint");
            Property(x => x.UnfilteredClicks).HasColumnName("UnfilteredClicks").IsOptional().HasColumnType("bigint");
            Property(x => x.Conversions).HasColumnName("Conversions").IsRequired().HasColumnType("bigint");
            Property(x => x.PostViewConversions).HasColumnName("PostViewConversions").IsRequired().HasColumnType("bigint");
            Property(x => x.PostClickConversions).HasColumnName("PostClickConversions").IsRequired().HasColumnType("bigint");
            Property(x => x.SpendLocalMicros).HasColumnName("SpendLocalMicros").IsOptional().HasColumnType("bigint");
            Property(x => x.Spend).HasColumnName("Spend").IsOptional().HasColumnType("money").HasPrecision(19,4);
            Property(x => x.ClientCostLocalMicros).HasColumnName("ClientCostLocalMicros").IsOptional().HasColumnType("bigint");
            Property(x => x.ClientCostDollars).HasColumnName("ClientCostDollars").IsOptional().HasColumnType("money").HasPrecision(19,4);
            Property(x => x.MediaCostLocalMicros).HasColumnName("MediaCostLocalMicros").IsOptional().HasColumnType("bigint");
            Property(x => x.DataCostLocalMicros).HasColumnName("DataCostLocalMicros").IsOptional().HasColumnType("bigint");
            Property(x => x.MediaClientCostLocalMicros).HasColumnName("MediaClientCostLocalMicros").IsOptional().HasColumnType("bigint");
            Property(x => x.DataClientCostLocalMicros).HasColumnName("DataClientCostLocalMicros").IsOptional().HasColumnType("bigint");
            Property(x => x.AdSlotDurationInSeconds).HasColumnName("AdSlotDurationInSeconds").IsOptional().HasColumnType("bigint");
            Property(x => x.RawViews).HasColumnName("RawViews").IsOptional().HasColumnType("bigint");
            Property(x => x.IabViews).HasColumnName("IabViews").IsOptional().HasColumnType("bigint");
            Property(x => x.ViewDurationInSeconds).HasColumnName("ViewDurationInSeconds").IsOptional().HasColumnType("bigint");
            Property(x => x.Ctr).HasColumnName("CTR").IsOptional().HasColumnType("float");
            Property(x => x.Cpm).HasColumnName("CPM").IsOptional().HasColumnType("money").HasPrecision(19,4);
            Property(x => x.Cpc).HasColumnName("CPC").IsOptional().HasColumnType("money").HasPrecision(19,4);
            Property(x => x.Cpa).HasColumnName("CPA").IsOptional().HasColumnType("money").HasPrecision(19,4);
            Property(x => x.ClientCpm).HasColumnName("ClientCPM").IsOptional().HasColumnType("money").HasPrecision(19,4);
            Property(x => x.ClientCpc).HasColumnName("ClientCPC").IsOptional().HasColumnType("money").HasPrecision(19,4);
            Property(x => x.ClientCpa).HasColumnName("ClientCPA").IsOptional().HasColumnType("money").HasPrecision(19,4);
            Property(x => x.Cpms).HasColumnName("CPMs").IsOptional().HasColumnType("decimal").HasPrecision(38,14);
            Property(x => x.ClientCostCpms).HasColumnName("ClientCostCpms").IsOptional().HasColumnType("decimal").HasPrecision(38,14);
            Property(x => x.Cps).HasColumnName("CPS").IsOptional().HasColumnType("decimal").HasPrecision(38,14);
            Property(x => x.ClientCostCps).HasColumnName("ClientCostCps").IsOptional().HasColumnType("decimal").HasPrecision(38,14);
            Property(x => x.ViewableRatio).HasColumnName("ViewableRatio").IsOptional().HasColumnType("float");
            InitializePartial();
        }
        partial void InitializePartial();
    }

    // AdGroupGeoLocationCombined
    internal partial class AdGroupGeoLocationCombinedMap : EntityTypeConfiguration<AdGroupGeoLocationCombined>
    {
        public AdGroupGeoLocationCombinedMap()
            : this("analytics")
        {
        }
 
        public AdGroupGeoLocationCombinedMap(string schema)
        {
            ToTable(schema + ".AdGroupGeoLocationCombined");
            HasKey(x => new { x.BuyerAccountId, x.CampaignId, x.AdGroupId, x.OptimizationModelId, x.GeoCountryId, x.GeoRegionId, x.GeoCityId, x.UtcDate, x.LocalDate, x.UtcDateTime, x.LocalDateTime, x.Bids, x.Impressions, x.Clicks, x.Conversions, x.PostViewConversions, x.PostClickConversions, x.MediaCostUsdMicros, x.MediaCostLocalMicros, x.DataCostLocalMicros });

            Property(x => x.BuyerAccountId).HasColumnName("BuyerAccountID").IsRequired().HasColumnType("int");
            Property(x => x.CampaignId).HasColumnName("CampaignID").IsRequired().HasColumnType("int");
            Property(x => x.AdGroupId).HasColumnName("AdGroupID").IsRequired().HasColumnType("int");
            Property(x => x.OptimizationModelId).HasColumnName("OptimizationModelID").IsRequired().HasColumnType("int");
            Property(x => x.GeoCountryId).HasColumnName("GeoCountryID").IsRequired().HasColumnType("int");
            Property(x => x.GeoRegionId).HasColumnName("GeoRegionID").IsRequired().HasColumnType("int");
            Property(x => x.GeoCityId).HasColumnName("GeoCityID").IsRequired().HasColumnType("int");
            Property(x => x.UtcDate).HasColumnName("UtcDate").IsRequired().HasColumnType("date");
            Property(x => x.LocalDate).HasColumnName("LocalDate").IsRequired().HasColumnType("date");
            Property(x => x.UtcDateTime).HasColumnName("UtcDateTime").IsRequired().HasColumnType("datetime");
            Property(x => x.LocalDateTime).HasColumnName("LocalDateTime").IsRequired().HasColumnType("datetime");
            Property(x => x.Bids).HasColumnName("Bids").IsRequired().HasColumnType("bigint");
            Property(x => x.Impressions).HasColumnName("Impressions").IsRequired().HasColumnType("bigint");
            Property(x => x.Clicks).HasColumnName("Clicks").IsRequired().HasColumnType("bigint");
            Property(x => x.Conversions).HasColumnName("Conversions").IsRequired().HasColumnType("bigint");
            Property(x => x.PostViewConversions).HasColumnName("PostViewConversions").IsRequired().HasColumnType("bigint");
            Property(x => x.PostClickConversions).HasColumnName("PostClickConversions").IsRequired().HasColumnType("bigint");
            Property(x => x.MediaCostUsdMicros).HasColumnName("MediaCostUsdMicros").IsRequired().HasColumnType("bigint");
            Property(x => x.MediaCostLocalMicros).HasColumnName("MediaCostLocalMicros").IsRequired().HasColumnType("bigint");
            Property(x => x.DataCostLocalMicros).HasColumnName("DataCostLocalMicros").IsRequired().HasColumnType("bigint");
            Property(x => x.InvalidImpressions).HasColumnName("InvalidImpressions").IsOptional().HasColumnType("bigint");
            Property(x => x.InvalidClicks).HasColumnName("InvalidClicks").IsOptional().HasColumnType("bigint");
            Property(x => x.FeesUsdSuperMicros).HasColumnName("FeesUsdSuperMicros").IsOptional().HasColumnType("bigint");
            Property(x => x.FeesLocalSuperMicros).HasColumnName("FeesLocalSuperMicros").IsOptional().HasColumnType("bigint");
            Property(x => x.AdSlotDurationInSeconds).HasColumnName("AdSlotDurationInSeconds").IsOptional().HasColumnType("bigint");
            Property(x => x.RawViews).HasColumnName("RawViews").IsOptional().HasColumnType("bigint");
            Property(x => x.IabViews).HasColumnName("IabViews").IsOptional().HasColumnType("bigint");
            Property(x => x.ViewDurationInSeconds).HasColumnName("ViewDurationInSeconds").IsOptional().HasColumnType("bigint");
            InitializePartial();
        }
        partial void InitializePartial();
    }

    // AdGroupGeoLocationException
    internal partial class AdGroupGeoLocationExceptionMap : EntityTypeConfiguration<AdGroupGeoLocationException>
    {
        public AdGroupGeoLocationExceptionMap()
            : this("analytics")
        {
        }
 
        public AdGroupGeoLocationExceptionMap(string schema)
        {
            ToTable(schema + ".AdGroupGeoLocationException");
            HasKey(x => new { x.BuyerAccountId, x.CampaignId, x.AdGroupId, x.OptimizationModelId, x.GeoCountryId, x.GeoRegionId, x.GeoCityId, x.UtcDateTime, x.LocalDateTime, x.Bids, x.Impressions, x.InvalidImpressions, x.Clicks, x.InvalidClicks, x.Conversions, x.PostViewConversions, x.PostClickConversions, x.MediaCostUsdMicros, x.MediaCostLocalMicros, x.DataCostLocalMicros, x.FeesUsdSuperMicros, x.FeesLocalSuperMicros });

            Property(x => x.BuyerAccountId).HasColumnName("BuyerAccountID").IsRequired().HasColumnType("int");
            Property(x => x.CampaignId).HasColumnName("CampaignID").IsRequired().HasColumnType("int");
            Property(x => x.AdGroupId).HasColumnName("AdGroupID").IsRequired().HasColumnType("int");
            Property(x => x.OptimizationModelId).HasColumnName("OptimizationModelID").IsRequired().HasColumnType("int");
            Property(x => x.GeoCountryId).HasColumnName("GeoCountryID").IsRequired().HasColumnType("int");
            Property(x => x.GeoRegionId).HasColumnName("GeoRegionID").IsRequired().HasColumnType("int");
            Property(x => x.GeoCityId).HasColumnName("GeoCityID").IsRequired().HasColumnType("int");
            Property(x => x.UtcDateTime).HasColumnName("UtcDateTime").IsRequired().HasColumnType("datetime");
            Property(x => x.LocalDateTime).HasColumnName("LocalDateTime").IsRequired().HasColumnType("datetime");
            Property(x => x.Bids).HasColumnName("Bids").IsRequired().HasColumnType("bigint");
            Property(x => x.Impressions).HasColumnName("Impressions").IsRequired().HasColumnType("bigint");
            Property(x => x.InvalidImpressions).HasColumnName("InvalidImpressions").IsRequired().HasColumnType("bigint");
            Property(x => x.Clicks).HasColumnName("Clicks").IsRequired().HasColumnType("bigint");
            Property(x => x.InvalidClicks).HasColumnName("InvalidClicks").IsRequired().HasColumnType("bigint");
            Property(x => x.Conversions).HasColumnName("Conversions").IsRequired().HasColumnType("bigint");
            Property(x => x.PostViewConversions).HasColumnName("PostViewConversions").IsRequired().HasColumnType("bigint");
            Property(x => x.PostClickConversions).HasColumnName("PostClickConversions").IsRequired().HasColumnType("bigint");
            Property(x => x.MediaCostUsdMicros).HasColumnName("MediaCostUsdMicros").IsRequired().HasColumnType("bigint");
            Property(x => x.MediaCostLocalMicros).HasColumnName("MediaCostLocalMicros").IsRequired().HasColumnType("bigint");
            Property(x => x.DataCostLocalMicros).HasColumnName("DataCostLocalMicros").IsRequired().HasColumnType("bigint");
            Property(x => x.FeesUsdSuperMicros).HasColumnName("FeesUsdSuperMicros").IsRequired().HasColumnType("bigint");
            Property(x => x.FeesLocalSuperMicros).HasColumnName("FeesLocalSuperMicros").IsRequired().HasColumnType("bigint");
            Property(x => x.AdSlotDurationInSeconds).HasColumnName("AdSlotDurationInSeconds").IsOptional().HasColumnType("bigint");
            Property(x => x.RawViews).HasColumnName("RawViews").IsOptional().HasColumnType("bigint");
            Property(x => x.IabViews).HasColumnName("IabViews").IsOptional().HasColumnType("bigint");
            Property(x => x.ViewDurationInSeconds).HasColumnName("ViewDurationInSeconds").IsOptional().HasColumnType("bigint");
            InitializePartial();
        }
        partial void InitializePartial();
    }

    // AdGroupGeoLocationImport
    internal partial class AdGroupGeoLocationImportMap : EntityTypeConfiguration<AdGroupGeoLocationImport>
    {
        public AdGroupGeoLocationImportMap()
            : this("analytics")
        {
        }
 
        public AdGroupGeoLocationImportMap(string schema)
        {
            ToTable(schema + ".AdGroupGeoLocationImport");
            HasKey(x => new { x.BuyerAccountId, x.CampaignId, x.AdGroupId, x.OptimizationModelId, x.GeoCountryId, x.GeoRegionId, x.GeoCityId, x.UtcDateTime, x.LocalDateTime, x.Bids, x.Impressions, x.InvalidImpressions, x.Clicks, x.InvalidClicks, x.Conversions, x.PostViewConversions, x.PostClickConversions, x.MediaCostUsdMicros, x.MediaCostLocalMicros, x.DataCostLocalMicros, x.FeesUsdSuperMicros, x.FeesLocalSuperMicros });

            Property(x => x.BuyerAccountId).HasColumnName("BuyerAccountID").IsRequired().HasColumnType("int");
            Property(x => x.CampaignId).HasColumnName("CampaignID").IsRequired().HasColumnType("int");
            Property(x => x.AdGroupId).HasColumnName("AdGroupID").IsRequired().HasColumnType("int");
            Property(x => x.OptimizationModelId).HasColumnName("OptimizationModelID").IsRequired().HasColumnType("int");
            Property(x => x.GeoCountryId).HasColumnName("GeoCountryID").IsRequired().HasColumnType("int");
            Property(x => x.GeoRegionId).HasColumnName("GeoRegionID").IsRequired().HasColumnType("int");
            Property(x => x.GeoCityId).HasColumnName("GeoCityID").IsRequired().HasColumnType("int");
            Property(x => x.UtcDateTime).HasColumnName("UtcDateTime").IsRequired().HasColumnType("datetime");
            Property(x => x.LocalDateTime).HasColumnName("LocalDateTime").IsRequired().HasColumnType("datetime");
            Property(x => x.Bids).HasColumnName("Bids").IsRequired().HasColumnType("bigint");
            Property(x => x.Impressions).HasColumnName("Impressions").IsRequired().HasColumnType("bigint");
            Property(x => x.InvalidImpressions).HasColumnName("InvalidImpressions").IsRequired().HasColumnType("bigint");
            Property(x => x.Clicks).HasColumnName("Clicks").IsRequired().HasColumnType("bigint");
            Property(x => x.InvalidClicks).HasColumnName("InvalidClicks").IsRequired().HasColumnType("bigint");
            Property(x => x.Conversions).HasColumnName("Conversions").IsRequired().HasColumnType("bigint");
            Property(x => x.PostViewConversions).HasColumnName("PostViewConversions").IsRequired().HasColumnType("bigint");
            Property(x => x.PostClickConversions).HasColumnName("PostClickConversions").IsRequired().HasColumnType("bigint");
            Property(x => x.MediaCostUsdMicros).HasColumnName("MediaCostUsdMicros").IsRequired().HasColumnType("bigint");
            Property(x => x.MediaCostLocalMicros).HasColumnName("MediaCostLocalMicros").IsRequired().HasColumnType("bigint");
            Property(x => x.DataCostLocalMicros).HasColumnName("DataCostLocalMicros").IsRequired().HasColumnType("bigint");
            Property(x => x.FeesUsdSuperMicros).HasColumnName("FeesUsdSuperMicros").IsRequired().HasColumnType("bigint");
            Property(x => x.FeesLocalSuperMicros).HasColumnName("FeesLocalSuperMicros").IsRequired().HasColumnType("bigint");
            Property(x => x.AdSlotDurationInSeconds).HasColumnName("AdSlotDurationInSeconds").IsOptional().HasColumnType("bigint");
            Property(x => x.RawViews).HasColumnName("RawViews").IsOptional().HasColumnType("bigint");
            Property(x => x.IabViews).HasColumnName("IabViews").IsOptional().HasColumnType("bigint");
            Property(x => x.ViewDurationInSeconds).HasColumnName("ViewDurationInSeconds").IsOptional().HasColumnType("bigint");
            InitializePartial();
        }
        partial void InitializePartial();
    }

    // AdGroupGeoLocationImportReportID
    internal partial class AdGroupGeoLocationImportReportIdMap : EntityTypeConfiguration<AdGroupGeoLocationImportReportId>
    {
        public AdGroupGeoLocationImportReportIdMap()
            : this("analytics")
        {
        }
 
        public AdGroupGeoLocationImportReportIdMap(string schema)
        {
            ToTable(schema + ".AdGroupGeoLocationImportReportID");
            HasKey(x => new { x.BuyerAccountId, x.CampaignId, x.AdGroupId, x.OptimizationModelId, x.GeoCountryId, x.GeoRegionId, x.GeoCityId, x.UtcDateTime, x.LocalDateTime, x.Bids, x.Impressions, x.InvalidImpressions, x.Clicks, x.InvalidClicks, x.Conversions, x.PostViewConversions, x.PostClickConversions, x.MediaCostUsdMicros, x.MediaCostLocalMicros, x.DataCostLocalMicros, x.FeesUsdSuperMicros, x.FeesLocalSuperMicros, x.ReportId });

            Property(x => x.BuyerAccountId).HasColumnName("BuyerAccountID").IsRequired().HasColumnType("int");
            Property(x => x.CampaignId).HasColumnName("CampaignID").IsRequired().HasColumnType("int");
            Property(x => x.AdGroupId).HasColumnName("AdGroupID").IsRequired().HasColumnType("int");
            Property(x => x.OptimizationModelId).HasColumnName("OptimizationModelID").IsRequired().HasColumnType("int");
            Property(x => x.GeoCountryId).HasColumnName("GeoCountryID").IsRequired().HasColumnType("int");
            Property(x => x.GeoRegionId).HasColumnName("GeoRegionID").IsRequired().HasColumnType("int");
            Property(x => x.GeoCityId).HasColumnName("GeoCityID").IsRequired().HasColumnType("int");
            Property(x => x.UtcDateTime).HasColumnName("UtcDateTime").IsRequired().HasColumnType("datetime");
            Property(x => x.LocalDateTime).HasColumnName("LocalDateTime").IsRequired().HasColumnType("datetime");
            Property(x => x.Bids).HasColumnName("Bids").IsRequired().HasColumnType("bigint");
            Property(x => x.Impressions).HasColumnName("Impressions").IsRequired().HasColumnType("bigint");
            Property(x => x.InvalidImpressions).HasColumnName("InvalidImpressions").IsRequired().HasColumnType("bigint");
            Property(x => x.Clicks).HasColumnName("Clicks").IsRequired().HasColumnType("bigint");
            Property(x => x.InvalidClicks).HasColumnName("InvalidClicks").IsRequired().HasColumnType("bigint");
            Property(x => x.Conversions).HasColumnName("Conversions").IsRequired().HasColumnType("bigint");
            Property(x => x.PostViewConversions).HasColumnName("PostViewConversions").IsRequired().HasColumnType("bigint");
            Property(x => x.PostClickConversions).HasColumnName("PostClickConversions").IsRequired().HasColumnType("bigint");
            Property(x => x.MediaCostUsdMicros).HasColumnName("MediaCostUsdMicros").IsRequired().HasColumnType("bigint");
            Property(x => x.MediaCostLocalMicros).HasColumnName("MediaCostLocalMicros").IsRequired().HasColumnType("bigint");
            Property(x => x.DataCostLocalMicros).HasColumnName("DataCostLocalMicros").IsRequired().HasColumnType("bigint");
            Property(x => x.FeesUsdSuperMicros).HasColumnName("FeesUsdSuperMicros").IsRequired().HasColumnType("bigint");
            Property(x => x.FeesLocalSuperMicros).HasColumnName("FeesLocalSuperMicros").IsRequired().HasColumnType("bigint");
            Property(x => x.ReportId).HasColumnName("ReportID").IsRequired().HasColumnType("bigint");
            Property(x => x.AdSlotDurationInSeconds).HasColumnName("AdSlotDurationInSeconds").IsOptional().HasColumnType("bigint");
            Property(x => x.RawViews).HasColumnName("RawViews").IsOptional().HasColumnType("bigint");
            Property(x => x.IabViews).HasColumnName("IabViews").IsOptional().HasColumnType("bigint");
            Property(x => x.ViewDurationInSeconds).HasColumnName("ViewDurationInSeconds").IsOptional().HasColumnType("bigint");
            InitializePartial();
        }
        partial void InitializePartial();
    }

    // AdGroupGeoLocationPointRadius
    internal partial class AdGroupGeoLocationPointRadiuMap : EntityTypeConfiguration<AdGroupGeoLocationPointRadiu>
    {
        public AdGroupGeoLocationPointRadiuMap()
            : this("analytics")
        {
        }
 
        public AdGroupGeoLocationPointRadiuMap(string schema)
        {
            ToTable(schema + ".AdGroupGeoLocationPointRadius");
            HasKey(x => new { x.BuyerAccountId, x.CampaignId, x.AdGroupId, x.OptimizationModelId, x.Latitude, x.Longitude, x.RadiusInKm, x.LatitudeActual, x.LongitudeActual, x.UtcDate, x.LocalDate, x.UtcDateTime, x.LocalDateTime, x.Bids, x.Impressions, x.Clicks, x.Conversions, x.PostViewConversions, x.PostClickConversions, x.MediaCostUsdMicros, x.MediaCostLocalMicros, x.DataCostLocalMicros });

            Property(x => x.BuyerAccountId).HasColumnName("BuyerAccountID").IsRequired().HasColumnType("int");
            Property(x => x.CampaignId).HasColumnName("CampaignID").IsRequired().HasColumnType("int");
            Property(x => x.AdGroupId).HasColumnName("AdGroupID").IsRequired().HasColumnType("int");
            Property(x => x.OptimizationModelId).HasColumnName("OptimizationModelID").IsRequired().HasColumnType("int");
            Property(x => x.Latitude).HasColumnName("Latitude").IsRequired().HasColumnType("decimal").HasPrecision(11,7);
            Property(x => x.Longitude).HasColumnName("Longitude").IsRequired().HasColumnType("decimal").HasPrecision(11,7);
            Property(x => x.RadiusInKm).HasColumnName("RadiusInKm").IsRequired().HasColumnType("decimal").HasPrecision(6,2);
            Property(x => x.LatitudeActual).HasColumnName("LatitudeActual").IsRequired().HasColumnType("decimal").HasPrecision(11,7);
            Property(x => x.LongitudeActual).HasColumnName("LongitudeActual").IsRequired().HasColumnType("decimal").HasPrecision(11,7);
            Property(x => x.UtcDate).HasColumnName("UtcDate").IsRequired().HasColumnType("date");
            Property(x => x.LocalDate).HasColumnName("LocalDate").IsRequired().HasColumnType("date");
            Property(x => x.UtcDateTime).HasColumnName("UtcDateTime").IsRequired().HasColumnType("datetime");
            Property(x => x.LocalDateTime).HasColumnName("LocalDateTime").IsRequired().HasColumnType("datetime");
            Property(x => x.Bids).HasColumnName("Bids").IsRequired().HasColumnType("bigint");
            Property(x => x.Impressions).HasColumnName("Impressions").IsRequired().HasColumnType("bigint");
            Property(x => x.Clicks).HasColumnName("Clicks").IsRequired().HasColumnType("bigint");
            Property(x => x.Conversions).HasColumnName("Conversions").IsRequired().HasColumnType("bigint");
            Property(x => x.PostViewConversions).HasColumnName("PostViewConversions").IsRequired().HasColumnType("bigint");
            Property(x => x.PostClickConversions).HasColumnName("PostClickConversions").IsRequired().HasColumnType("bigint");
            Property(x => x.MediaCostUsdMicros).HasColumnName("MediaCostUsdMicros").IsRequired().HasColumnType("bigint");
            Property(x => x.MediaCostLocalMicros).HasColumnName("MediaCostLocalMicros").IsRequired().HasColumnType("bigint");
            Property(x => x.DataCostLocalMicros).HasColumnName("DataCostLocalMicros").IsRequired().HasColumnType("bigint");
            Property(x => x.InvalidImpressions).HasColumnName("InvalidImpressions").IsOptional().HasColumnType("bigint");
            Property(x => x.InvalidClicks).HasColumnName("InvalidClicks").IsOptional().HasColumnType("bigint");
            Property(x => x.FeesUsdSuperMicros).HasColumnName("FeesUsdSuperMicros").IsOptional().HasColumnType("bigint");
            Property(x => x.FeesLocalSuperMicros).HasColumnName("FeesLocalSuperMicros").IsOptional().HasColumnType("bigint");
            Property(x => x.AdSlotDurationInSeconds).HasColumnName("AdSlotDurationInSeconds").IsOptional().HasColumnType("bigint");
            Property(x => x.RawViews).HasColumnName("RawViews").IsOptional().HasColumnType("bigint");
            Property(x => x.IabViews).HasColumnName("IabViews").IsOptional().HasColumnType("bigint");
            Property(x => x.ViewDurationInSeconds).HasColumnName("ViewDurationInSeconds").IsOptional().HasColumnType("bigint");
            InitializePartial();
        }
        partial void InitializePartial();
    }

    // AdGroupGeoLocationPointRadiusCombined
    internal partial class AdGroupGeoLocationPointRadiusCombinedMap : EntityTypeConfiguration<AdGroupGeoLocationPointRadiusCombined>
    {
        public AdGroupGeoLocationPointRadiusCombinedMap()
            : this("analytics")
        {
        }
 
        public AdGroupGeoLocationPointRadiusCombinedMap(string schema)
        {
            ToTable(schema + ".AdGroupGeoLocationPointRadiusCombined");
            HasKey(x => new { x.BuyerAccountId, x.CampaignId, x.AdGroupId, x.OptimizationModelId, x.Latitude, x.Longitude, x.RadiusInKm, x.LatitudeActual, x.LongitudeActual, x.UtcDate, x.LocalDate, x.UtcDateTime, x.LocalDateTime, x.Bids, x.Impressions, x.Clicks, x.Conversions, x.PostViewConversions, x.PostClickConversions, x.MediaCostUsdMicros, x.MediaCostLocalMicros, x.DataCostLocalMicros });

            Property(x => x.BuyerAccountId).HasColumnName("BuyerAccountID").IsRequired().HasColumnType("int");
            Property(x => x.CampaignId).HasColumnName("CampaignID").IsRequired().HasColumnType("int");
            Property(x => x.AdGroupId).HasColumnName("AdGroupID").IsRequired().HasColumnType("int");
            Property(x => x.OptimizationModelId).HasColumnName("OptimizationModelID").IsRequired().HasColumnType("int");
            Property(x => x.Latitude).HasColumnName("Latitude").IsRequired().HasColumnType("decimal").HasPrecision(11,7);
            Property(x => x.Longitude).HasColumnName("Longitude").IsRequired().HasColumnType("decimal").HasPrecision(11,7);
            Property(x => x.RadiusInKm).HasColumnName("RadiusInKm").IsRequired().HasColumnType("decimal").HasPrecision(6,2);
            Property(x => x.LatitudeActual).HasColumnName("LatitudeActual").IsRequired().HasColumnType("decimal").HasPrecision(11,7);
            Property(x => x.LongitudeActual).HasColumnName("LongitudeActual").IsRequired().HasColumnType("decimal").HasPrecision(11,7);
            Property(x => x.UtcDate).HasColumnName("UtcDate").IsRequired().HasColumnType("date");
            Property(x => x.LocalDate).HasColumnName("LocalDate").IsRequired().HasColumnType("date");
            Property(x => x.UtcDateTime).HasColumnName("UtcDateTime").IsRequired().HasColumnType("datetime");
            Property(x => x.LocalDateTime).HasColumnName("LocalDateTime").IsRequired().HasColumnType("datetime");
            Property(x => x.Bids).HasColumnName("Bids").IsRequired().HasColumnType("bigint");
            Property(x => x.Impressions).HasColumnName("Impressions").IsRequired().HasColumnType("bigint");
            Property(x => x.Clicks).HasColumnName("Clicks").IsRequired().HasColumnType("bigint");
            Property(x => x.Conversions).HasColumnName("Conversions").IsRequired().HasColumnType("bigint");
            Property(x => x.PostViewConversions).HasColumnName("PostViewConversions").IsRequired().HasColumnType("bigint");
            Property(x => x.PostClickConversions).HasColumnName("PostClickConversions").IsRequired().HasColumnType("bigint");
            Property(x => x.MediaCostUsdMicros).HasColumnName("MediaCostUsdMicros").IsRequired().HasColumnType("bigint");
            Property(x => x.MediaCostLocalMicros).HasColumnName("MediaCostLocalMicros").IsRequired().HasColumnType("bigint");
            Property(x => x.DataCostLocalMicros).HasColumnName("DataCostLocalMicros").IsRequired().HasColumnType("bigint");
            Property(x => x.InvalidImpressions).HasColumnName("InvalidImpressions").IsOptional().HasColumnType("bigint");
            Property(x => x.InvalidClicks).HasColumnName("InvalidClicks").IsOptional().HasColumnType("bigint");
            Property(x => x.FeesUsdSuperMicros).HasColumnName("FeesUsdSuperMicros").IsOptional().HasColumnType("bigint");
            Property(x => x.FeesLocalSuperMicros).HasColumnName("FeesLocalSuperMicros").IsOptional().HasColumnType("bigint");
            Property(x => x.AdSlotDurationInSeconds).HasColumnName("AdSlotDurationInSeconds").IsOptional().HasColumnType("bigint");
            Property(x => x.RawViews).HasColumnName("RawViews").IsOptional().HasColumnType("bigint");
            Property(x => x.IabViews).HasColumnName("IabViews").IsOptional().HasColumnType("bigint");
            Property(x => x.ViewDurationInSeconds).HasColumnName("ViewDurationInSeconds").IsOptional().HasColumnType("bigint");
            InitializePartial();
        }
        partial void InitializePartial();
    }

    // AdGroupGeoLocationPointRadiusException
    internal partial class AdGroupGeoLocationPointRadiusExceptionMap : EntityTypeConfiguration<AdGroupGeoLocationPointRadiusException>
    {
        public AdGroupGeoLocationPointRadiusExceptionMap()
            : this("analytics")
        {
        }
 
        public AdGroupGeoLocationPointRadiusExceptionMap(string schema)
        {
            ToTable(schema + ".AdGroupGeoLocationPointRadiusException");
            HasKey(x => new { x.BuyerAccountId, x.CampaignId, x.AdGroupId, x.OptimizationModelId, x.Latitude, x.Longitude, x.RadiusInKm, x.LatitudeActual, x.LongitudeActual, x.UtcDate, x.LocalDate, x.UtcDateTime, x.LocalDateTime, x.Bids, x.Impressions, x.Clicks, x.Conversions, x.PostViewConversions, x.PostClickConversions, x.MediaCostUsdMicros, x.MediaCostLocalMicros, x.DataCostLocalMicros });

            Property(x => x.BuyerAccountId).HasColumnName("BuyerAccountID").IsRequired().HasColumnType("int");
            Property(x => x.CampaignId).HasColumnName("CampaignID").IsRequired().HasColumnType("int");
            Property(x => x.AdGroupId).HasColumnName("AdGroupID").IsRequired().HasColumnType("int");
            Property(x => x.OptimizationModelId).HasColumnName("OptimizationModelID").IsRequired().HasColumnType("int");
            Property(x => x.Latitude).HasColumnName("Latitude").IsRequired().HasColumnType("decimal").HasPrecision(11,7);
            Property(x => x.Longitude).HasColumnName("Longitude").IsRequired().HasColumnType("decimal").HasPrecision(11,7);
            Property(x => x.RadiusInKm).HasColumnName("RadiusInKm").IsRequired().HasColumnType("decimal").HasPrecision(6,2);
            Property(x => x.LatitudeActual).HasColumnName("LatitudeActual").IsRequired().HasColumnType("decimal").HasPrecision(11,7);
            Property(x => x.LongitudeActual).HasColumnName("LongitudeActual").IsRequired().HasColumnType("decimal").HasPrecision(11,7);
            Property(x => x.UtcDate).HasColumnName("UtcDate").IsRequired().HasColumnType("date");
            Property(x => x.LocalDate).HasColumnName("LocalDate").IsRequired().HasColumnType("date");
            Property(x => x.UtcDateTime).HasColumnName("UtcDateTime").IsRequired().HasColumnType("datetime");
            Property(x => x.LocalDateTime).HasColumnName("LocalDateTime").IsRequired().HasColumnType("datetime");
            Property(x => x.Bids).HasColumnName("Bids").IsRequired().HasColumnType("bigint");
            Property(x => x.Impressions).HasColumnName("Impressions").IsRequired().HasColumnType("bigint");
            Property(x => x.Clicks).HasColumnName("Clicks").IsRequired().HasColumnType("bigint");
            Property(x => x.Conversions).HasColumnName("Conversions").IsRequired().HasColumnType("bigint");
            Property(x => x.PostViewConversions).HasColumnName("PostViewConversions").IsRequired().HasColumnType("bigint");
            Property(x => x.PostClickConversions).HasColumnName("PostClickConversions").IsRequired().HasColumnType("bigint");
            Property(x => x.MediaCostUsdMicros).HasColumnName("MediaCostUsdMicros").IsRequired().HasColumnType("bigint");
            Property(x => x.MediaCostLocalMicros).HasColumnName("MediaCostLocalMicros").IsRequired().HasColumnType("bigint");
            Property(x => x.DataCostLocalMicros).HasColumnName("DataCostLocalMicros").IsRequired().HasColumnType("bigint");
            Property(x => x.InvalidImpressions).HasColumnName("InvalidImpressions").IsOptional().HasColumnType("bigint");
            Property(x => x.InvalidClicks).HasColumnName("InvalidClicks").IsOptional().HasColumnType("bigint");
            Property(x => x.FeesUsdSuperMicros).HasColumnName("FeesUsdSuperMicros").IsOptional().HasColumnType("bigint");
            Property(x => x.FeesLocalSuperMicros).HasColumnName("FeesLocalSuperMicros").IsOptional().HasColumnType("bigint");
            Property(x => x.AdSlotDurationInSeconds).HasColumnName("AdSlotDurationInSeconds").IsOptional().HasColumnType("bigint");
            Property(x => x.RawViews).HasColumnName("RawViews").IsOptional().HasColumnType("bigint");
            Property(x => x.IabViews).HasColumnName("IabViews").IsOptional().HasColumnType("bigint");
            Property(x => x.ViewDurationInSeconds).HasColumnName("ViewDurationInSeconds").IsOptional().HasColumnType("bigint");
            InitializePartial();
        }
        partial void InitializePartial();
    }

    // AdGroupGeoLocationPointRadiusImport
    internal partial class AdGroupGeoLocationPointRadiusImportMap : EntityTypeConfiguration<AdGroupGeoLocationPointRadiusImport>
    {
        public AdGroupGeoLocationPointRadiusImportMap()
            : this("analytics")
        {
        }
 
        public AdGroupGeoLocationPointRadiusImportMap(string schema)
        {
            ToTable(schema + ".AdGroupGeoLocationPointRadiusImport");
            HasKey(x => new { x.BuyerAccountId, x.CampaignId, x.AdGroupId, x.OptimizationModelId, x.Latitude, x.Longitude, x.RadiusInKm, x.LatitudeActual, x.LongitudeActual, x.UtcDate, x.LocalDate, x.UtcDateTime, x.LocalDateTime, x.Bids, x.Impressions, x.Clicks, x.Conversions, x.PostViewConversions, x.PostClickConversions, x.MediaCostUsdMicros, x.MediaCostLocalMicros, x.DataCostLocalMicros });

            Property(x => x.BuyerAccountId).HasColumnName("BuyerAccountID").IsRequired().HasColumnType("int");
            Property(x => x.CampaignId).HasColumnName("CampaignID").IsRequired().HasColumnType("int");
            Property(x => x.AdGroupId).HasColumnName("AdGroupID").IsRequired().HasColumnType("int");
            Property(x => x.OptimizationModelId).HasColumnName("OptimizationModelID").IsRequired().HasColumnType("int");
            Property(x => x.Latitude).HasColumnName("Latitude").IsRequired().HasColumnType("decimal").HasPrecision(11,7);
            Property(x => x.Longitude).HasColumnName("Longitude").IsRequired().HasColumnType("decimal").HasPrecision(11,7);
            Property(x => x.RadiusInKm).HasColumnName("RadiusInKm").IsRequired().HasColumnType("decimal").HasPrecision(6,2);
            Property(x => x.LatitudeActual).HasColumnName("LatitudeActual").IsRequired().HasColumnType("decimal").HasPrecision(11,7);
            Property(x => x.LongitudeActual).HasColumnName("LongitudeActual").IsRequired().HasColumnType("decimal").HasPrecision(11,7);
            Property(x => x.UtcDate).HasColumnName("UtcDate").IsRequired().HasColumnType("date");
            Property(x => x.LocalDate).HasColumnName("LocalDate").IsRequired().HasColumnType("date");
            Property(x => x.UtcDateTime).HasColumnName("UtcDateTime").IsRequired().HasColumnType("datetime");
            Property(x => x.LocalDateTime).HasColumnName("LocalDateTime").IsRequired().HasColumnType("datetime");
            Property(x => x.Bids).HasColumnName("Bids").IsRequired().HasColumnType("bigint");
            Property(x => x.Impressions).HasColumnName("Impressions").IsRequired().HasColumnType("bigint");
            Property(x => x.Clicks).HasColumnName("Clicks").IsRequired().HasColumnType("bigint");
            Property(x => x.Conversions).HasColumnName("Conversions").IsRequired().HasColumnType("bigint");
            Property(x => x.PostViewConversions).HasColumnName("PostViewConversions").IsRequired().HasColumnType("bigint");
            Property(x => x.PostClickConversions).HasColumnName("PostClickConversions").IsRequired().HasColumnType("bigint");
            Property(x => x.MediaCostUsdMicros).HasColumnName("MediaCostUsdMicros").IsRequired().HasColumnType("bigint");
            Property(x => x.MediaCostLocalMicros).HasColumnName("MediaCostLocalMicros").IsRequired().HasColumnType("bigint");
            Property(x => x.DataCostLocalMicros).HasColumnName("DataCostLocalMicros").IsRequired().HasColumnType("bigint");
            Property(x => x.InvalidImpressions).HasColumnName("InvalidImpressions").IsOptional().HasColumnType("bigint");
            Property(x => x.InvalidClicks).HasColumnName("InvalidClicks").IsOptional().HasColumnType("bigint");
            Property(x => x.FeesUsdSuperMicros).HasColumnName("FeesUsdSuperMicros").IsOptional().HasColumnType("bigint");
            Property(x => x.FeesLocalSuperMicros).HasColumnName("FeesLocalSuperMicros").IsOptional().HasColumnType("bigint");
            Property(x => x.AdSlotDurationInSeconds).HasColumnName("AdSlotDurationInSeconds").IsOptional().HasColumnType("bigint");
            Property(x => x.RawViews).HasColumnName("RawViews").IsOptional().HasColumnType("bigint");
            Property(x => x.IabViews).HasColumnName("IabViews").IsOptional().HasColumnType("bigint");
            Property(x => x.ViewDurationInSeconds).HasColumnName("ViewDurationInSeconds").IsOptional().HasColumnType("bigint");
            InitializePartial();
        }
        partial void InitializePartial();
    }

    // AdGroupGeoLocationPointRadiusImportReportID
    internal partial class AdGroupGeoLocationPointRadiusImportReportIdMap : EntityTypeConfiguration<AdGroupGeoLocationPointRadiusImportReportId>
    {
        public AdGroupGeoLocationPointRadiusImportReportIdMap()
            : this("analytics")
        {
        }
 
        public AdGroupGeoLocationPointRadiusImportReportIdMap(string schema)
        {
            ToTable(schema + ".AdGroupGeoLocationPointRadiusImportReportID");
            HasKey(x => new { x.BuyerAccountId, x.CampaignId, x.AdGroupId, x.OptimizationModelId, x.Latitude, x.Longitude, x.RadiusInKm, x.LatitudeActual, x.LongitudeActual, x.UtcDate, x.LocalDate, x.UtcDateTime, x.LocalDateTime, x.Bids, x.Impressions, x.Clicks, x.Conversions, x.PostViewConversions, x.PostClickConversions, x.MediaCostUsdMicros, x.MediaCostLocalMicros, x.DataCostLocalMicros, x.ReportId });

            Property(x => x.BuyerAccountId).HasColumnName("BuyerAccountID").IsRequired().HasColumnType("int");
            Property(x => x.CampaignId).HasColumnName("CampaignID").IsRequired().HasColumnType("int");
            Property(x => x.AdGroupId).HasColumnName("AdGroupID").IsRequired().HasColumnType("int");
            Property(x => x.OptimizationModelId).HasColumnName("OptimizationModelID").IsRequired().HasColumnType("int");
            Property(x => x.Latitude).HasColumnName("Latitude").IsRequired().HasColumnType("decimal").HasPrecision(11,7);
            Property(x => x.Longitude).HasColumnName("Longitude").IsRequired().HasColumnType("decimal").HasPrecision(11,7);
            Property(x => x.RadiusInKm).HasColumnName("RadiusInKm").IsRequired().HasColumnType("decimal").HasPrecision(6,2);
            Property(x => x.LatitudeActual).HasColumnName("LatitudeActual").IsRequired().HasColumnType("decimal").HasPrecision(11,7);
            Property(x => x.LongitudeActual).HasColumnName("LongitudeActual").IsRequired().HasColumnType("decimal").HasPrecision(11,7);
            Property(x => x.UtcDate).HasColumnName("UtcDate").IsRequired().HasColumnType("date");
            Property(x => x.LocalDate).HasColumnName("LocalDate").IsRequired().HasColumnType("date");
            Property(x => x.UtcDateTime).HasColumnName("UtcDateTime").IsRequired().HasColumnType("datetime");
            Property(x => x.LocalDateTime).HasColumnName("LocalDateTime").IsRequired().HasColumnType("datetime");
            Property(x => x.Bids).HasColumnName("Bids").IsRequired().HasColumnType("bigint");
            Property(x => x.Impressions).HasColumnName("Impressions").IsRequired().HasColumnType("bigint");
            Property(x => x.Clicks).HasColumnName("Clicks").IsRequired().HasColumnType("bigint");
            Property(x => x.Conversions).HasColumnName("Conversions").IsRequired().HasColumnType("bigint");
            Property(x => x.PostViewConversions).HasColumnName("PostViewConversions").IsRequired().HasColumnType("bigint");
            Property(x => x.PostClickConversions).HasColumnName("PostClickConversions").IsRequired().HasColumnType("bigint");
            Property(x => x.MediaCostUsdMicros).HasColumnName("MediaCostUsdMicros").IsRequired().HasColumnType("bigint");
            Property(x => x.MediaCostLocalMicros).HasColumnName("MediaCostLocalMicros").IsRequired().HasColumnType("bigint");
            Property(x => x.DataCostLocalMicros).HasColumnName("DataCostLocalMicros").IsRequired().HasColumnType("bigint");
            Property(x => x.InvalidImpressions).HasColumnName("InvalidImpressions").IsOptional().HasColumnType("bigint");
            Property(x => x.InvalidClicks).HasColumnName("InvalidClicks").IsOptional().HasColumnType("bigint");
            Property(x => x.FeesUsdSuperMicros).HasColumnName("FeesUsdSuperMicros").IsOptional().HasColumnType("bigint");
            Property(x => x.FeesLocalSuperMicros).HasColumnName("FeesLocalSuperMicros").IsOptional().HasColumnType("bigint");
            Property(x => x.ReportId).HasColumnName("ReportID").IsRequired().HasColumnType("bigint");
            Property(x => x.AdSlotDurationInSeconds).HasColumnName("AdSlotDurationInSeconds").IsOptional().HasColumnType("bigint");
            Property(x => x.RawViews).HasColumnName("RawViews").IsOptional().HasColumnType("bigint");
            Property(x => x.IabViews).HasColumnName("IabViews").IsOptional().HasColumnType("bigint");
            Property(x => x.ViewDurationInSeconds).HasColumnName("ViewDurationInSeconds").IsOptional().HasColumnType("bigint");
            InitializePartial();
        }
        partial void InitializePartial();
    }

    // AdGroupGeoLocationPointRadiusReportID
    internal partial class AdGroupGeoLocationPointRadiusReportIdMap : EntityTypeConfiguration<AdGroupGeoLocationPointRadiusReportId>
    {
        public AdGroupGeoLocationPointRadiusReportIdMap()
            : this("analytics")
        {
        }
 
        public AdGroupGeoLocationPointRadiusReportIdMap(string schema)
        {
            ToTable(schema + ".AdGroupGeoLocationPointRadiusReportID");
            HasKey(x => new { x.BuyerAccountId, x.CampaignId, x.AdGroupId, x.OptimizationModelId, x.Latitude, x.Longitude, x.RadiusInKm, x.LatitudeActual, x.LongitudeActual, x.UtcDate, x.LocalDate, x.UtcDateTime, x.LocalDateTime, x.Bids, x.Impressions, x.Clicks, x.Conversions, x.PostViewConversions, x.PostClickConversions, x.MediaCostUsdMicros, x.MediaCostLocalMicros, x.DataCostLocalMicros, x.ReportId });

            Property(x => x.BuyerAccountId).HasColumnName("BuyerAccountID").IsRequired().HasColumnType("int");
            Property(x => x.CampaignId).HasColumnName("CampaignID").IsRequired().HasColumnType("int");
            Property(x => x.AdGroupId).HasColumnName("AdGroupID").IsRequired().HasColumnType("int");
            Property(x => x.OptimizationModelId).HasColumnName("OptimizationModelID").IsRequired().HasColumnType("int");
            Property(x => x.Latitude).HasColumnName("Latitude").IsRequired().HasColumnType("decimal").HasPrecision(11,7);
            Property(x => x.Longitude).HasColumnName("Longitude").IsRequired().HasColumnType("decimal").HasPrecision(11,7);
            Property(x => x.RadiusInKm).HasColumnName("RadiusInKm").IsRequired().HasColumnType("decimal").HasPrecision(6,2);
            Property(x => x.LatitudeActual).HasColumnName("LatitudeActual").IsRequired().HasColumnType("decimal").HasPrecision(11,7);
            Property(x => x.LongitudeActual).HasColumnName("LongitudeActual").IsRequired().HasColumnType("decimal").HasPrecision(11,7);
            Property(x => x.UtcDate).HasColumnName("UtcDate").IsRequired().HasColumnType("date");
            Property(x => x.LocalDate).HasColumnName("LocalDate").IsRequired().HasColumnType("date");
            Property(x => x.UtcDateTime).HasColumnName("UtcDateTime").IsRequired().HasColumnType("datetime");
            Property(x => x.LocalDateTime).HasColumnName("LocalDateTime").IsRequired().HasColumnType("datetime");
            Property(x => x.Bids).HasColumnName("Bids").IsRequired().HasColumnType("bigint");
            Property(x => x.Impressions).HasColumnName("Impressions").IsRequired().HasColumnType("bigint");
            Property(x => x.Clicks).HasColumnName("Clicks").IsRequired().HasColumnType("bigint");
            Property(x => x.Conversions).HasColumnName("Conversions").IsRequired().HasColumnType("bigint");
            Property(x => x.PostViewConversions).HasColumnName("PostViewConversions").IsRequired().HasColumnType("bigint");
            Property(x => x.PostClickConversions).HasColumnName("PostClickConversions").IsRequired().HasColumnType("bigint");
            Property(x => x.MediaCostUsdMicros).HasColumnName("MediaCostUsdMicros").IsRequired().HasColumnType("bigint");
            Property(x => x.MediaCostLocalMicros).HasColumnName("MediaCostLocalMicros").IsRequired().HasColumnType("bigint");
            Property(x => x.DataCostLocalMicros).HasColumnName("DataCostLocalMicros").IsRequired().HasColumnType("bigint");
            Property(x => x.InvalidImpressions).HasColumnName("InvalidImpressions").IsOptional().HasColumnType("bigint");
            Property(x => x.InvalidClicks).HasColumnName("InvalidClicks").IsOptional().HasColumnType("bigint");
            Property(x => x.FeesUsdSuperMicros).HasColumnName("FeesUsdSuperMicros").IsOptional().HasColumnType("bigint");
            Property(x => x.FeesLocalSuperMicros).HasColumnName("FeesLocalSuperMicros").IsOptional().HasColumnType("bigint");
            Property(x => x.ReportId).HasColumnName("ReportID").IsRequired().HasColumnType("bigint");
            Property(x => x.AdSlotDurationInSeconds).HasColumnName("AdSlotDurationInSeconds").IsOptional().HasColumnType("bigint");
            Property(x => x.RawViews).HasColumnName("RawViews").IsOptional().HasColumnType("bigint");
            Property(x => x.IabViews).HasColumnName("IabViews").IsOptional().HasColumnType("bigint");
            Property(x => x.ViewDurationInSeconds).HasColumnName("ViewDurationInSeconds").IsOptional().HasColumnType("bigint");
            InitializePartial();
        }
        partial void InitializePartial();
    }

    // AdGroupGeoLocationReportID
    internal partial class AdGroupGeoLocationReportIdMap : EntityTypeConfiguration<AdGroupGeoLocationReportId>
    {
        public AdGroupGeoLocationReportIdMap()
            : this("analytics")
        {
        }
 
        public AdGroupGeoLocationReportIdMap(string schema)
        {
            ToTable(schema + ".AdGroupGeoLocationReportID");
            HasKey(x => new { x.BuyerAccountId, x.CampaignId, x.AdGroupId, x.OptimizationModelId, x.GeoCountryId, x.GeoRegionId, x.GeoCityId, x.UtcDate, x.LocalDate, x.UtcDateTime, x.LocalDateTime, x.Bids, x.Impressions, x.Clicks, x.Conversions, x.PostViewConversions, x.PostClickConversions, x.MediaCostUsdMicros, x.MediaCostLocalMicros, x.DataCostLocalMicros, x.ReportId });

            Property(x => x.BuyerAccountId).HasColumnName("BuyerAccountID").IsRequired().HasColumnType("int");
            Property(x => x.CampaignId).HasColumnName("CampaignID").IsRequired().HasColumnType("int");
            Property(x => x.AdGroupId).HasColumnName("AdGroupID").IsRequired().HasColumnType("int");
            Property(x => x.OptimizationModelId).HasColumnName("OptimizationModelID").IsRequired().HasColumnType("int");
            Property(x => x.GeoCountryId).HasColumnName("GeoCountryID").IsRequired().HasColumnType("int");
            Property(x => x.GeoRegionId).HasColumnName("GeoRegionID").IsRequired().HasColumnType("int");
            Property(x => x.GeoCityId).HasColumnName("GeoCityID").IsRequired().HasColumnType("int");
            Property(x => x.UtcDate).HasColumnName("UtcDate").IsRequired().HasColumnType("date");
            Property(x => x.LocalDate).HasColumnName("LocalDate").IsRequired().HasColumnType("date");
            Property(x => x.UtcDateTime).HasColumnName("UtcDateTime").IsRequired().HasColumnType("datetime");
            Property(x => x.LocalDateTime).HasColumnName("LocalDateTime").IsRequired().HasColumnType("datetime");
            Property(x => x.Bids).HasColumnName("Bids").IsRequired().HasColumnType("bigint");
            Property(x => x.Impressions).HasColumnName("Impressions").IsRequired().HasColumnType("bigint");
            Property(x => x.Clicks).HasColumnName("Clicks").IsRequired().HasColumnType("bigint");
            Property(x => x.Conversions).HasColumnName("Conversions").IsRequired().HasColumnType("bigint");
            Property(x => x.PostViewConversions).HasColumnName("PostViewConversions").IsRequired().HasColumnType("bigint");
            Property(x => x.PostClickConversions).HasColumnName("PostClickConversions").IsRequired().HasColumnType("bigint");
            Property(x => x.MediaCostUsdMicros).HasColumnName("MediaCostUsdMicros").IsRequired().HasColumnType("bigint");
            Property(x => x.MediaCostLocalMicros).HasColumnName("MediaCostLocalMicros").IsRequired().HasColumnType("bigint");
            Property(x => x.DataCostLocalMicros).HasColumnName("DataCostLocalMicros").IsRequired().HasColumnType("bigint");
            Property(x => x.InvalidImpressions).HasColumnName("InvalidImpressions").IsOptional().HasColumnType("bigint");
            Property(x => x.InvalidClicks).HasColumnName("InvalidClicks").IsOptional().HasColumnType("bigint");
            Property(x => x.FeesUsdSuperMicros).HasColumnName("FeesUsdSuperMicros").IsOptional().HasColumnType("bigint");
            Property(x => x.FeesLocalSuperMicros).HasColumnName("FeesLocalSuperMicros").IsOptional().HasColumnType("bigint");
            Property(x => x.ReportId).HasColumnName("ReportID").IsRequired().HasColumnType("bigint");
            Property(x => x.AdSlotDurationInSeconds).HasColumnName("AdSlotDurationInSeconds").IsOptional().HasColumnType("bigint");
            Property(x => x.RawViews).HasColumnName("RawViews").IsOptional().HasColumnType("bigint");
            Property(x => x.IabViews).HasColumnName("IabViews").IsOptional().HasColumnType("bigint");
            Property(x => x.ViewDurationInSeconds).HasColumnName("ViewDurationInSeconds").IsOptional().HasColumnType("bigint");
            InitializePartial();
        }
        partial void InitializePartial();
    }

    // AdGroupGeoPostcode
    internal partial class AdGroupGeoPostcodeMap : EntityTypeConfiguration<AdGroupGeoPostcode>
    {
        public AdGroupGeoPostcodeMap()
            : this("analytics")
        {
        }
 
        public AdGroupGeoPostcodeMap(string schema)
        {
            ToTable(schema + ".AdGroupGeoPostcode");
            HasKey(x => new { x.BuyerAccountId, x.CampaignId, x.AdGroupId, x.OptimizationModelId, x.GeoCountryId, x.Postcode, x.UtcDate, x.LocalDate, x.UtcDateTime, x.LocalDateTime, x.Bids, x.Impressions, x.Clicks, x.Conversions, x.PostViewConversions, x.PostClickConversions, x.MediaCostUsdMicros, x.MediaCostLocalMicros, x.DataCostLocalMicros });

            Property(x => x.BuyerAccountId).HasColumnName("BuyerAccountID").IsRequired().HasColumnType("int");
            Property(x => x.CampaignId).HasColumnName("CampaignID").IsRequired().HasColumnType("int");
            Property(x => x.AdGroupId).HasColumnName("AdGroupID").IsRequired().HasColumnType("int");
            Property(x => x.OptimizationModelId).HasColumnName("OptimizationModelID").IsRequired().HasColumnType("int");
            Property(x => x.GeoCountryId).HasColumnName("GeoCountryID").IsRequired().HasColumnType("int");
            Property(x => x.Postcode).HasColumnName("Postcode").IsRequired().HasColumnType("nvarchar").HasMaxLength(25);
            Property(x => x.UtcDate).HasColumnName("UtcDate").IsRequired().HasColumnType("date");
            Property(x => x.LocalDate).HasColumnName("LocalDate").IsRequired().HasColumnType("date");
            Property(x => x.UtcDateTime).HasColumnName("UtcDateTime").IsRequired().HasColumnType("datetime");
            Property(x => x.LocalDateTime).HasColumnName("LocalDateTime").IsRequired().HasColumnType("datetime");
            Property(x => x.Bids).HasColumnName("Bids").IsRequired().HasColumnType("bigint");
            Property(x => x.Impressions).HasColumnName("Impressions").IsRequired().HasColumnType("bigint");
            Property(x => x.Clicks).HasColumnName("Clicks").IsRequired().HasColumnType("bigint");
            Property(x => x.Conversions).HasColumnName("Conversions").IsRequired().HasColumnType("bigint");
            Property(x => x.PostViewConversions).HasColumnName("PostViewConversions").IsRequired().HasColumnType("bigint");
            Property(x => x.PostClickConversions).HasColumnName("PostClickConversions").IsRequired().HasColumnType("bigint");
            Property(x => x.MediaCostUsdMicros).HasColumnName("MediaCostUsdMicros").IsRequired().HasColumnType("bigint");
            Property(x => x.MediaCostLocalMicros).HasColumnName("MediaCostLocalMicros").IsRequired().HasColumnType("bigint");
            Property(x => x.DataCostLocalMicros).HasColumnName("DataCostLocalMicros").IsRequired().HasColumnType("bigint");
            Property(x => x.InvalidImpressions).HasColumnName("InvalidImpressions").IsOptional().HasColumnType("bigint");
            Property(x => x.InvalidClicks).HasColumnName("InvalidClicks").IsOptional().HasColumnType("bigint");
            Property(x => x.FeesUsdSuperMicros).HasColumnName("FeesUsdSuperMicros").IsOptional().HasColumnType("bigint");
            Property(x => x.FeesLocalSuperMicros).HasColumnName("FeesLocalSuperMicros").IsOptional().HasColumnType("bigint");
            Property(x => x.AdSlotDurationInSeconds).HasColumnName("AdSlotDurationInSeconds").IsOptional().HasColumnType("bigint");
            Property(x => x.RawViews).HasColumnName("RawViews").IsOptional().HasColumnType("bigint");
            Property(x => x.IabViews).HasColumnName("IabViews").IsOptional().HasColumnType("bigint");
            Property(x => x.ViewDurationInSeconds).HasColumnName("ViewDurationInSeconds").IsOptional().HasColumnType("bigint");
            InitializePartial();
        }
        partial void InitializePartial();
    }

    // AdGroupGeoPostcodeAnalyticsReportID
    internal partial class AdGroupGeoPostcodeAnalyticsReportIdMap : EntityTypeConfiguration<AdGroupGeoPostcodeAnalyticsReportId>
    {
        public AdGroupGeoPostcodeAnalyticsReportIdMap()
            : this("dbo")
        {
        }
 
        public AdGroupGeoPostcodeAnalyticsReportIdMap(string schema)
        {
            ToTable(schema + ".AdGroupGeoPostcodeAnalyticsReportID");
            HasKey(x => new { x.BuyerAccountId, x.AdvertiserId, x.AdvertiserProductId, x.CampaignId, x.AdGroupId, x.OptimizationModelId, x.GeoCountryId, x.Postcode, x.LocalDate, x.Bids, x.Impressions, x.Conversions, x.PostViewConversions, x.PostClickConversions });

            Property(x => x.BuyerAccountId).HasColumnName("BuyerAccountID").IsRequired().HasColumnType("int");
            Property(x => x.AdvertiserId).HasColumnName("AdvertiserID").IsRequired().HasColumnType("int");
            Property(x => x.AdvertiserProductId).HasColumnName("AdvertiserProductID").IsRequired().HasColumnType("int");
            Property(x => x.CampaignId).HasColumnName("CampaignID").IsRequired().HasColumnType("int");
            Property(x => x.AdGroupId).HasColumnName("AdGroupID").IsRequired().HasColumnType("int");
            Property(x => x.OptimizationModelId).HasColumnName("OptimizationModelID").IsRequired().HasColumnType("int");
            Property(x => x.GeoCountryId).HasColumnName("GeoCountryID").IsRequired().HasColumnType("int");
            Property(x => x.GeoCountryName).HasColumnName("GeoCountryName").IsOptional().HasColumnType("nvarchar").HasMaxLength(50);
            Property(x => x.Postcode).HasColumnName("Postcode").IsRequired().HasColumnType("nvarchar").HasMaxLength(25);
            Property(x => x.LocalDate).HasColumnName("LocalDate").IsRequired().HasColumnType("date");
            Property(x => x.Bids).HasColumnName("Bids").IsRequired().HasColumnType("bigint");
            Property(x => x.Impressions).HasColumnName("Impressions").IsRequired().HasColumnType("bigint");
            Property(x => x.Clicks).HasColumnName("Clicks").IsOptional().HasColumnType("bigint");
            Property(x => x.UnfilteredClicks).HasColumnName("UnfilteredClicks").IsOptional().HasColumnType("bigint");
            Property(x => x.Conversions).HasColumnName("Conversions").IsRequired().HasColumnType("bigint");
            Property(x => x.PostViewConversions).HasColumnName("PostViewConversions").IsRequired().HasColumnType("bigint");
            Property(x => x.PostClickConversions).HasColumnName("PostClickConversions").IsRequired().HasColumnType("bigint");
            Property(x => x.SpendLocalMicros).HasColumnName("SpendLocalMicros").IsOptional().HasColumnType("bigint");
            Property(x => x.Spend).HasColumnName("Spend").IsOptional().HasColumnType("money").HasPrecision(19,4);
            Property(x => x.ClientCostLocalMicros).HasColumnName("ClientCostLocalMicros").IsOptional().HasColumnType("bigint");
            Property(x => x.ClientCostDollars).HasColumnName("ClientCostDollars").IsOptional().HasColumnType("money").HasPrecision(19,4);
            Property(x => x.MediaCostLocalMicros).HasColumnName("MediaCostLocalMicros").IsOptional().HasColumnType("bigint");
            Property(x => x.DataCostLocalMicros).HasColumnName("DataCostLocalMicros").IsOptional().HasColumnType("bigint");
            Property(x => x.MediaClientCostLocalMicros).HasColumnName("MediaClientCostLocalMicros").IsOptional().HasColumnType("bigint");
            Property(x => x.DataClientCostLocalMicros).HasColumnName("DataClientCostLocalMicros").IsOptional().HasColumnType("bigint");
            Property(x => x.AdSlotDurationInSeconds).HasColumnName("AdSlotDurationInSeconds").IsOptional().HasColumnType("bigint");
            Property(x => x.RawViews).HasColumnName("RawViews").IsOptional().HasColumnType("bigint");
            Property(x => x.IabViews).HasColumnName("IabViews").IsOptional().HasColumnType("bigint");
            Property(x => x.ViewDurationInSeconds).HasColumnName("ViewDurationInSeconds").IsOptional().HasColumnType("bigint");
            Property(x => x.Ctr).HasColumnName("CTR").IsOptional().HasColumnType("float");
            Property(x => x.Cpm).HasColumnName("CPM").IsOptional().HasColumnType("money").HasPrecision(19,4);
            Property(x => x.Cpc).HasColumnName("CPC").IsOptional().HasColumnType("money").HasPrecision(19,4);
            Property(x => x.Cpa).HasColumnName("CPA").IsOptional().HasColumnType("money").HasPrecision(19,4);
            Property(x => x.ClientCpm).HasColumnName("ClientCPM").IsOptional().HasColumnType("money").HasPrecision(19,4);
            Property(x => x.ClientCpc).HasColumnName("ClientCPC").IsOptional().HasColumnType("money").HasPrecision(19,4);
            Property(x => x.ClientCpa).HasColumnName("ClientCPA").IsOptional().HasColumnType("money").HasPrecision(19,4);
            Property(x => x.Cpms).HasColumnName("CPMs").IsOptional().HasColumnType("decimal").HasPrecision(38,14);
            Property(x => x.ClientCostCpms).HasColumnName("ClientCostCpms").IsOptional().HasColumnType("decimal").HasPrecision(38,14);
            Property(x => x.Cps).HasColumnName("CPS").IsOptional().HasColumnType("decimal").HasPrecision(38,14);
            Property(x => x.ClientCostCps).HasColumnName("ClientCostCps").IsOptional().HasColumnType("decimal").HasPrecision(38,14);
            Property(x => x.ViewableRatio).HasColumnName("ViewableRatio").IsOptional().HasColumnType("float");
            InitializePartial();
        }
        partial void InitializePartial();
    }

    // AdGroupGeoPostcodeCombined
    internal partial class AdGroupGeoPostcodeCombinedMap : EntityTypeConfiguration<AdGroupGeoPostcodeCombined>
    {
        public AdGroupGeoPostcodeCombinedMap()
            : this("analytics")
        {
        }
 
        public AdGroupGeoPostcodeCombinedMap(string schema)
        {
            ToTable(schema + ".AdGroupGeoPostcodeCombined");
            HasKey(x => new { x.BuyerAccountId, x.CampaignId, x.AdGroupId, x.OptimizationModelId, x.GeoCountryId, x.Postcode, x.UtcDate, x.LocalDate, x.UtcDateTime, x.LocalDateTime, x.Bids, x.Impressions, x.Clicks, x.Conversions, x.PostViewConversions, x.PostClickConversions, x.MediaCostUsdMicros, x.MediaCostLocalMicros, x.DataCostLocalMicros });

            Property(x => x.BuyerAccountId).HasColumnName("BuyerAccountID").IsRequired().HasColumnType("int");
            Property(x => x.CampaignId).HasColumnName("CampaignID").IsRequired().HasColumnType("int");
            Property(x => x.AdGroupId).HasColumnName("AdGroupID").IsRequired().HasColumnType("int");
            Property(x => x.OptimizationModelId).HasColumnName("OptimizationModelID").IsRequired().HasColumnType("int");
            Property(x => x.GeoCountryId).HasColumnName("GeoCountryID").IsRequired().HasColumnType("int");
            Property(x => x.Postcode).HasColumnName("Postcode").IsRequired().HasColumnType("nvarchar").HasMaxLength(25);
            Property(x => x.UtcDate).HasColumnName("UtcDate").IsRequired().HasColumnType("date");
            Property(x => x.LocalDate).HasColumnName("LocalDate").IsRequired().HasColumnType("date");
            Property(x => x.UtcDateTime).HasColumnName("UtcDateTime").IsRequired().HasColumnType("datetime");
            Property(x => x.LocalDateTime).HasColumnName("LocalDateTime").IsRequired().HasColumnType("datetime");
            Property(x => x.Bids).HasColumnName("Bids").IsRequired().HasColumnType("bigint");
            Property(x => x.Impressions).HasColumnName("Impressions").IsRequired().HasColumnType("bigint");
            Property(x => x.Clicks).HasColumnName("Clicks").IsRequired().HasColumnType("bigint");
            Property(x => x.Conversions).HasColumnName("Conversions").IsRequired().HasColumnType("bigint");
            Property(x => x.PostViewConversions).HasColumnName("PostViewConversions").IsRequired().HasColumnType("bigint");
            Property(x => x.PostClickConversions).HasColumnName("PostClickConversions").IsRequired().HasColumnType("bigint");
            Property(x => x.MediaCostUsdMicros).HasColumnName("MediaCostUsdMicros").IsRequired().HasColumnType("bigint");
            Property(x => x.MediaCostLocalMicros).HasColumnName("MediaCostLocalMicros").IsRequired().HasColumnType("bigint");
            Property(x => x.DataCostLocalMicros).HasColumnName("DataCostLocalMicros").IsRequired().HasColumnType("bigint");
            Property(x => x.InvalidImpressions).HasColumnName("InvalidImpressions").IsOptional().HasColumnType("bigint");
            Property(x => x.InvalidClicks).HasColumnName("InvalidClicks").IsOptional().HasColumnType("bigint");
            Property(x => x.FeesUsdSuperMicros).HasColumnName("FeesUsdSuperMicros").IsOptional().HasColumnType("bigint");
            Property(x => x.FeesLocalSuperMicros).HasColumnName("FeesLocalSuperMicros").IsOptional().HasColumnType("bigint");
            Property(x => x.AdSlotDurationInSeconds).HasColumnName("AdSlotDurationInSeconds").IsOptional().HasColumnType("bigint");
            Property(x => x.RawViews).HasColumnName("RawViews").IsOptional().HasColumnType("bigint");
            Property(x => x.IabViews).HasColumnName("IabViews").IsOptional().HasColumnType("bigint");
            Property(x => x.ViewDurationInSeconds).HasColumnName("ViewDurationInSeconds").IsOptional().HasColumnType("bigint");
            InitializePartial();
        }
        partial void InitializePartial();
    }

    // AdGroupGeoPostcodeException
    internal partial class AdGroupGeoPostcodeExceptionMap : EntityTypeConfiguration<AdGroupGeoPostcodeException>
    {
        public AdGroupGeoPostcodeExceptionMap()
            : this("analytics")
        {
        }
 
        public AdGroupGeoPostcodeExceptionMap(string schema)
        {
            ToTable(schema + ".AdGroupGeoPostcodeException");
            HasKey(x => new { x.BuyerAccountId, x.CampaignId, x.AdGroupId, x.OptimizationModelId, x.GeoCountryId, x.Postcode, x.UtcDate, x.LocalDate, x.UtcDateTime, x.LocalDateTime, x.Bids, x.Impressions, x.Clicks, x.Conversions, x.PostViewConversions, x.PostClickConversions, x.MediaCostUsdMicros, x.MediaCostLocalMicros, x.DataCostLocalMicros });

            Property(x => x.BuyerAccountId).HasColumnName("BuyerAccountID").IsRequired().HasColumnType("int");
            Property(x => x.CampaignId).HasColumnName("CampaignID").IsRequired().HasColumnType("int");
            Property(x => x.AdGroupId).HasColumnName("AdGroupID").IsRequired().HasColumnType("int");
            Property(x => x.OptimizationModelId).HasColumnName("OptimizationModelID").IsRequired().HasColumnType("int");
            Property(x => x.GeoCountryId).HasColumnName("GeoCountryID").IsRequired().HasColumnType("int");
            Property(x => x.Postcode).HasColumnName("Postcode").IsRequired().HasColumnType("nvarchar").HasMaxLength(25);
            Property(x => x.UtcDate).HasColumnName("UtcDate").IsRequired().HasColumnType("date");
            Property(x => x.LocalDate).HasColumnName("LocalDate").IsRequired().HasColumnType("date");
            Property(x => x.UtcDateTime).HasColumnName("UtcDateTime").IsRequired().HasColumnType("datetime");
            Property(x => x.LocalDateTime).HasColumnName("LocalDateTime").IsRequired().HasColumnType("datetime");
            Property(x => x.Bids).HasColumnName("Bids").IsRequired().HasColumnType("bigint");
            Property(x => x.Impressions).HasColumnName("Impressions").IsRequired().HasColumnType("bigint");
            Property(x => x.Clicks).HasColumnName("Clicks").IsRequired().HasColumnType("bigint");
            Property(x => x.Conversions).HasColumnName("Conversions").IsRequired().HasColumnType("bigint");
            Property(x => x.PostViewConversions).HasColumnName("PostViewConversions").IsRequired().HasColumnType("bigint");
            Property(x => x.PostClickConversions).HasColumnName("PostClickConversions").IsRequired().HasColumnType("bigint");
            Property(x => x.MediaCostUsdMicros).HasColumnName("MediaCostUsdMicros").IsRequired().HasColumnType("bigint");
            Property(x => x.MediaCostLocalMicros).HasColumnName("MediaCostLocalMicros").IsRequired().HasColumnType("bigint");
            Property(x => x.DataCostLocalMicros).HasColumnName("DataCostLocalMicros").IsRequired().HasColumnType("bigint");
            Property(x => x.InvalidImpressions).HasColumnName("InvalidImpressions").IsOptional().HasColumnType("bigint");
            Property(x => x.InvalidClicks).HasColumnName("InvalidClicks").IsOptional().HasColumnType("bigint");
            Property(x => x.FeesUsdSuperMicros).HasColumnName("FeesUsdSuperMicros").IsOptional().HasColumnType("bigint");
            Property(x => x.FeesLocalSuperMicros).HasColumnName("FeesLocalSuperMicros").IsOptional().HasColumnType("bigint");
            Property(x => x.AdSlotDurationInSeconds).HasColumnName("AdSlotDurationInSeconds").IsOptional().HasColumnType("bigint");
            Property(x => x.RawViews).HasColumnName("RawViews").IsOptional().HasColumnType("bigint");
            Property(x => x.IabViews).HasColumnName("IabViews").IsOptional().HasColumnType("bigint");
            Property(x => x.ViewDurationInSeconds).HasColumnName("ViewDurationInSeconds").IsOptional().HasColumnType("bigint");
            InitializePartial();
        }
        partial void InitializePartial();
    }

    // AdGroupGeoPostcodeImport
    internal partial class AdGroupGeoPostcodeImportMap : EntityTypeConfiguration<AdGroupGeoPostcodeImport>
    {
        public AdGroupGeoPostcodeImportMap()
            : this("analytics")
        {
        }
 
        public AdGroupGeoPostcodeImportMap(string schema)
        {
            ToTable(schema + ".AdGroupGeoPostcodeImport");
            HasKey(x => new { x.BuyerAccountId, x.CampaignId, x.AdGroupId, x.OptimizationModelId, x.GeoCountryId, x.Postcode, x.UtcDate, x.LocalDate, x.UtcDateTime, x.LocalDateTime, x.Bids, x.Impressions, x.Clicks, x.Conversions, x.PostViewConversions, x.PostClickConversions, x.MediaCostUsdMicros, x.MediaCostLocalMicros, x.DataCostLocalMicros });

            Property(x => x.BuyerAccountId).HasColumnName("BuyerAccountID").IsRequired().HasColumnType("int");
            Property(x => x.CampaignId).HasColumnName("CampaignID").IsRequired().HasColumnType("int");
            Property(x => x.AdGroupId).HasColumnName("AdGroupID").IsRequired().HasColumnType("int");
            Property(x => x.OptimizationModelId).HasColumnName("OptimizationModelID").IsRequired().HasColumnType("int");
            Property(x => x.GeoCountryId).HasColumnName("GeoCountryID").IsRequired().HasColumnType("int");
            Property(x => x.Postcode).HasColumnName("Postcode").IsRequired().HasColumnType("nvarchar").HasMaxLength(25);
            Property(x => x.UtcDate).HasColumnName("UtcDate").IsRequired().HasColumnType("date");
            Property(x => x.LocalDate).HasColumnName("LocalDate").IsRequired().HasColumnType("date");
            Property(x => x.UtcDateTime).HasColumnName("UtcDateTime").IsRequired().HasColumnType("datetime");
            Property(x => x.LocalDateTime).HasColumnName("LocalDateTime").IsRequired().HasColumnType("datetime");
            Property(x => x.Bids).HasColumnName("Bids").IsRequired().HasColumnType("bigint");
            Property(x => x.Impressions).HasColumnName("Impressions").IsRequired().HasColumnType("bigint");
            Property(x => x.Clicks).HasColumnName("Clicks").IsRequired().HasColumnType("bigint");
            Property(x => x.Conversions).HasColumnName("Conversions").IsRequired().HasColumnType("bigint");
            Property(x => x.PostViewConversions).HasColumnName("PostViewConversions").IsRequired().HasColumnType("bigint");
            Property(x => x.PostClickConversions).HasColumnName("PostClickConversions").IsRequired().HasColumnType("bigint");
            Property(x => x.MediaCostUsdMicros).HasColumnName("MediaCostUsdMicros").IsRequired().HasColumnType("bigint");
            Property(x => x.MediaCostLocalMicros).HasColumnName("MediaCostLocalMicros").IsRequired().HasColumnType("bigint");
            Property(x => x.DataCostLocalMicros).HasColumnName("DataCostLocalMicros").IsRequired().HasColumnType("bigint");
            Property(x => x.InvalidImpressions).HasColumnName("InvalidImpressions").IsOptional().HasColumnType("bigint");
            Property(x => x.InvalidClicks).HasColumnName("InvalidClicks").IsOptional().HasColumnType("bigint");
            Property(x => x.FeesUsdSuperMicros).HasColumnName("FeesUsdSuperMicros").IsOptional().HasColumnType("bigint");
            Property(x => x.FeesLocalSuperMicros).HasColumnName("FeesLocalSuperMicros").IsOptional().HasColumnType("bigint");
            Property(x => x.AdSlotDurationInSeconds).HasColumnName("AdSlotDurationInSeconds").IsOptional().HasColumnType("bigint");
            Property(x => x.RawViews).HasColumnName("RawViews").IsOptional().HasColumnType("bigint");
            Property(x => x.IabViews).HasColumnName("IabViews").IsOptional().HasColumnType("bigint");
            Property(x => x.ViewDurationInSeconds).HasColumnName("ViewDurationInSeconds").IsOptional().HasColumnType("bigint");
            InitializePartial();
        }
        partial void InitializePartial();
    }

    // AdGroupGeoPostcodeImportReportID
    internal partial class AdGroupGeoPostcodeImportReportIdMap : EntityTypeConfiguration<AdGroupGeoPostcodeImportReportId>
    {
        public AdGroupGeoPostcodeImportReportIdMap()
            : this("analytics")
        {
        }
 
        public AdGroupGeoPostcodeImportReportIdMap(string schema)
        {
            ToTable(schema + ".AdGroupGeoPostcodeImportReportID");
            HasKey(x => new { x.BuyerAccountId, x.CampaignId, x.AdGroupId, x.OptimizationModelId, x.GeoCountryId, x.Postcode, x.UtcDateTime, x.LocalDateTime, x.Bids, x.Impressions, x.Clicks, x.Conversions, x.PostViewConversions, x.PostClickConversions, x.MediaCostUsdMicros, x.MediaCostLocalMicros, x.DataCostLocalMicros, x.ReportId });

            Property(x => x.BuyerAccountId).HasColumnName("BuyerAccountID").IsRequired().HasColumnType("int");
            Property(x => x.CampaignId).HasColumnName("CampaignID").IsRequired().HasColumnType("int");
            Property(x => x.AdGroupId).HasColumnName("AdGroupID").IsRequired().HasColumnType("int");
            Property(x => x.OptimizationModelId).HasColumnName("OptimizationModelID").IsRequired().HasColumnType("int");
            Property(x => x.GeoCountryId).HasColumnName("GeoCountryID").IsRequired().HasColumnType("int");
            Property(x => x.Postcode).HasColumnName("Postcode").IsRequired().HasColumnType("nvarchar").HasMaxLength(25);
            Property(x => x.UtcDateTime).HasColumnName("UtcDateTime").IsRequired().HasColumnType("datetime");
            Property(x => x.LocalDateTime).HasColumnName("LocalDateTime").IsRequired().HasColumnType("datetime");
            Property(x => x.Bids).HasColumnName("Bids").IsRequired().HasColumnType("bigint");
            Property(x => x.Impressions).HasColumnName("Impressions").IsRequired().HasColumnType("bigint");
            Property(x => x.Clicks).HasColumnName("Clicks").IsRequired().HasColumnType("bigint");
            Property(x => x.Conversions).HasColumnName("Conversions").IsRequired().HasColumnType("bigint");
            Property(x => x.PostViewConversions).HasColumnName("PostViewConversions").IsRequired().HasColumnType("bigint");
            Property(x => x.PostClickConversions).HasColumnName("PostClickConversions").IsRequired().HasColumnType("bigint");
            Property(x => x.MediaCostUsdMicros).HasColumnName("MediaCostUsdMicros").IsRequired().HasColumnType("bigint");
            Property(x => x.MediaCostLocalMicros).HasColumnName("MediaCostLocalMicros").IsRequired().HasColumnType("bigint");
            Property(x => x.DataCostLocalMicros).HasColumnName("DataCostLocalMicros").IsRequired().HasColumnType("bigint");
            Property(x => x.InvalidImpressions).HasColumnName("InvalidImpressions").IsOptional().HasColumnType("bigint");
            Property(x => x.InvalidClicks).HasColumnName("InvalidClicks").IsOptional().HasColumnType("bigint");
            Property(x => x.FeesUsdSuperMicros).HasColumnName("FeesUsdSuperMicros").IsOptional().HasColumnType("bigint");
            Property(x => x.FeesLocalSuperMicros).HasColumnName("FeesLocalSuperMicros").IsOptional().HasColumnType("bigint");
            Property(x => x.ReportId).HasColumnName("ReportID").IsRequired().HasColumnType("bigint");
            Property(x => x.AdSlotDurationInSeconds).HasColumnName("AdSlotDurationInSeconds").IsOptional().HasColumnType("bigint");
            Property(x => x.RawViews).HasColumnName("RawViews").IsOptional().HasColumnType("bigint");
            Property(x => x.IabViews).HasColumnName("IabViews").IsOptional().HasColumnType("bigint");
            Property(x => x.ViewDurationInSeconds).HasColumnName("ViewDurationInSeconds").IsOptional().HasColumnType("bigint");
            InitializePartial();
        }
        partial void InitializePartial();
    }

    // AdGroupGeoPostcodeReportID
    internal partial class AdGroupGeoPostcodeReportIdMap : EntityTypeConfiguration<AdGroupGeoPostcodeReportId>
    {
        public AdGroupGeoPostcodeReportIdMap()
            : this("analytics")
        {
        }
 
        public AdGroupGeoPostcodeReportIdMap(string schema)
        {
            ToTable(schema + ".AdGroupGeoPostcodeReportID");
            HasKey(x => new { x.BuyerAccountId, x.CampaignId, x.AdGroupId, x.OptimizationModelId, x.GeoCountryId, x.Postcode, x.UtcDate, x.LocalDate, x.UtcDateTime, x.LocalDateTime, x.Bids, x.Impressions, x.Clicks, x.Conversions, x.PostViewConversions, x.PostClickConversions, x.MediaCostUsdMicros, x.MediaCostLocalMicros, x.DataCostLocalMicros, x.ReportId });

            Property(x => x.BuyerAccountId).HasColumnName("BuyerAccountID").IsRequired().HasColumnType("int");
            Property(x => x.CampaignId).HasColumnName("CampaignID").IsRequired().HasColumnType("int");
            Property(x => x.AdGroupId).HasColumnName("AdGroupID").IsRequired().HasColumnType("int");
            Property(x => x.OptimizationModelId).HasColumnName("OptimizationModelID").IsRequired().HasColumnType("int");
            Property(x => x.GeoCountryId).HasColumnName("GeoCountryID").IsRequired().HasColumnType("int");
            Property(x => x.Postcode).HasColumnName("Postcode").IsRequired().HasColumnType("nvarchar").HasMaxLength(25);
            Property(x => x.UtcDate).HasColumnName("UtcDate").IsRequired().HasColumnType("date");
            Property(x => x.LocalDate).HasColumnName("LocalDate").IsRequired().HasColumnType("date");
            Property(x => x.UtcDateTime).HasColumnName("UtcDateTime").IsRequired().HasColumnType("datetime");
            Property(x => x.LocalDateTime).HasColumnName("LocalDateTime").IsRequired().HasColumnType("datetime");
            Property(x => x.Bids).HasColumnName("Bids").IsRequired().HasColumnType("bigint");
            Property(x => x.Impressions).HasColumnName("Impressions").IsRequired().HasColumnType("bigint");
            Property(x => x.Clicks).HasColumnName("Clicks").IsRequired().HasColumnType("bigint");
            Property(x => x.Conversions).HasColumnName("Conversions").IsRequired().HasColumnType("bigint");
            Property(x => x.PostViewConversions).HasColumnName("PostViewConversions").IsRequired().HasColumnType("bigint");
            Property(x => x.PostClickConversions).HasColumnName("PostClickConversions").IsRequired().HasColumnType("bigint");
            Property(x => x.MediaCostUsdMicros).HasColumnName("MediaCostUsdMicros").IsRequired().HasColumnType("bigint");
            Property(x => x.MediaCostLocalMicros).HasColumnName("MediaCostLocalMicros").IsRequired().HasColumnType("bigint");
            Property(x => x.DataCostLocalMicros).HasColumnName("DataCostLocalMicros").IsRequired().HasColumnType("bigint");
            Property(x => x.InvalidImpressions).HasColumnName("InvalidImpressions").IsOptional().HasColumnType("bigint");
            Property(x => x.InvalidClicks).HasColumnName("InvalidClicks").IsOptional().HasColumnType("bigint");
            Property(x => x.FeesUsdSuperMicros).HasColumnName("FeesUsdSuperMicros").IsOptional().HasColumnType("bigint");
            Property(x => x.FeesLocalSuperMicros).HasColumnName("FeesLocalSuperMicros").IsOptional().HasColumnType("bigint");
            Property(x => x.ReportId).HasColumnName("ReportID").IsRequired().HasColumnType("bigint");
            Property(x => x.AdSlotDurationInSeconds).HasColumnName("AdSlotDurationInSeconds").IsOptional().HasColumnType("bigint");
            Property(x => x.RawViews).HasColumnName("RawViews").IsOptional().HasColumnType("bigint");
            Property(x => x.IabViews).HasColumnName("IabViews").IsOptional().HasColumnType("bigint");
            Property(x => x.ViewDurationInSeconds).HasColumnName("ViewDurationInSeconds").IsOptional().HasColumnType("bigint");
            InitializePartial();
        }
        partial void InitializePartial();
    }

    // AdGroupGeoPostcodeTargetingReportID
    internal partial class AdGroupGeoPostcodeTargetingReportIdMap : EntityTypeConfiguration<AdGroupGeoPostcodeTargetingReportId>
    {
        public AdGroupGeoPostcodeTargetingReportIdMap()
            : this("dbo")
        {
        }
 
        public AdGroupGeoPostcodeTargetingReportIdMap(string schema)
        {
            ToTable(schema + ".AdGroupGeoPostcodeTargetingReportID");
            HasKey(x => new { x.BuyerAccountId, x.CampaignId, x.AdGroupId, x.GeoCountryId, x.CountryName, x.Postcode, x.IsTargeted, x.PackageInstalled });

            Property(x => x.BuyerAccountId).HasColumnName("BuyerAccountID").IsRequired().HasColumnType("int");
            Property(x => x.CampaignId).HasColumnName("CampaignID").IsRequired().HasColumnType("int");
            Property(x => x.AdGroupId).HasColumnName("AdGroupID").IsRequired().HasColumnType("int");
            Property(x => x.GeoCountryId).HasColumnName("GeoCountryID").IsRequired().HasColumnType("int");
            Property(x => x.CountryName).HasColumnName("CountryName").IsRequired().HasColumnType("nvarchar").HasMaxLength(50);
            Property(x => x.Postcode).HasColumnName("Postcode").IsRequired().HasColumnType("nvarchar").HasMaxLength(25);
            Property(x => x.IsTargeted).HasColumnName("IsTargeted").IsRequired().HasColumnType("int");
            Property(x => x.PackageInstalled).HasColumnName("PackageInstalled").IsRequired().HasColumnType("int");
            Property(x => x.Bids).HasColumnName("Bids").IsOptional().HasColumnType("bigint");
            Property(x => x.Impressions).HasColumnName("Impressions").IsOptional().HasColumnType("bigint");
            Property(x => x.Clicks).HasColumnName("Clicks").IsOptional().HasColumnType("bigint");
            Property(x => x.Conversions).HasColumnName("Conversions").IsOptional().HasColumnType("bigint");
            Property(x => x.PostViewConversions).HasColumnName("PostViewConversions").IsOptional().HasColumnType("bigint");
            Property(x => x.PostClickConversions).HasColumnName("PostClickConversions").IsOptional().HasColumnType("bigint");
            Property(x => x.SpendLocalMicros).HasColumnName("SpendLocalMicros").IsOptional().HasColumnType("bigint");
            Property(x => x.Spend).HasColumnName("Spend").IsOptional().HasColumnType("money").HasPrecision(19,4);
            Property(x => x.ClientCostLocalMicros).HasColumnName("ClientCostLocalMicros").IsOptional().HasColumnType("decimal").HasPrecision(38,4);
            Property(x => x.ClientCostDollars).HasColumnName("ClientCostDollars").IsOptional().HasColumnType("money").HasPrecision(19,4);
            Property(x => x.MediaCostLocalMicros).HasColumnName("MediaCostLocalMicros").IsOptional().HasColumnType("bigint");
            Property(x => x.DataCostLocalMicros).HasColumnName("DataCostLocalMicros").IsOptional().HasColumnType("bigint");
            Property(x => x.MediaClientCostLocalMicros).HasColumnName("MediaClientCostLocalMicros").IsOptional().HasColumnType("decimal").HasPrecision(38,4);
            Property(x => x.DataClientCostLocalMicros).HasColumnName("DataClientCostLocalMicros").IsOptional().HasColumnType("decimal").HasPrecision(38,4);
            Property(x => x.AdSlotDurationInSeconds).HasColumnName("AdSlotDurationInSeconds").IsOptional().HasColumnType("bigint");
            Property(x => x.RawViews).HasColumnName("RawViews").IsOptional().HasColumnType("bigint");
            Property(x => x.IabViews).HasColumnName("IabViews").IsOptional().HasColumnType("bigint");
            Property(x => x.ViewDurationInSeconds).HasColumnName("ViewDurationInSeconds").IsOptional().HasColumnType("bigint");
            Property(x => x.Ctr).HasColumnName("CTR").IsOptional().HasColumnType("float");
            Property(x => x.Cpm).HasColumnName("CPM").IsOptional().HasColumnType("decimal").HasPrecision(19,4);
            Property(x => x.Cpc).HasColumnName("CPC").IsOptional().HasColumnType("decimal").HasPrecision(19,4);
            Property(x => x.Cpa).HasColumnName("CPA").IsOptional().HasColumnType("decimal").HasPrecision(19,4);
            Property(x => x.ClientCostCpm).HasColumnName("ClientCostCPM").IsOptional().HasColumnType("decimal").HasPrecision(19,4);
            Property(x => x.ClientCostCpc).HasColumnName("ClientCostCPC").IsOptional().HasColumnType("decimal").HasPrecision(19,4);
            Property(x => x.ClientCostCpa).HasColumnName("ClientCostCPA").IsOptional().HasColumnType("decimal").HasPrecision(19,4);
            Property(x => x.Cpms).HasColumnName("CPMs").IsOptional().HasColumnType("decimal").HasPrecision(38,14);
            Property(x => x.ClientCostCpms).HasColumnName("ClientCostCpms").IsOptional().HasColumnType("decimal").HasPrecision(38,14);
            Property(x => x.Cps).HasColumnName("CPS").IsOptional().HasColumnType("decimal").HasPrecision(38,14);
            Property(x => x.ClientCostCps).HasColumnName("ClientCostCps").IsOptional().HasColumnType("decimal").HasPrecision(38,14);
            Property(x => x.ViewableRatio).HasColumnName("ViewableRatio").IsOptional().HasColumnType("float");
            InitializePartial();
        }
        partial void InitializePartial();
    }

    // AdGroupIABVerticalImportReportID
    internal partial class AdGroupIabVerticalImportReportIdMap : EntityTypeConfiguration<AdGroupIabVerticalImportReportId>
    {
        public AdGroupIabVerticalImportReportIdMap()
            : this("analytics")
        {
        }
 
        public AdGroupIabVerticalImportReportIdMap(string schema)
        {
            ToTable(schema + ".AdGroupIABVerticalImportReportID");
            HasKey(x => new { x.BuyerAccountId, x.CampaignId, x.AdGroupId, x.OptimizationModelId, x.IabVertical, x.UtcDateTime, x.LocalDateTime, x.Bids, x.Impressions, x.InvalidImpressions, x.Clicks, x.InvalidClicks, x.Conversions, x.PostViewConversions, x.PostClickConversions, x.MediaCostUsdMicros, x.MediaCostLocalMicros, x.DataCostLocalMicros, x.FeesUsdSuperMicros, x.FeesLocalSuperMicros, x.ReportId });

            Property(x => x.BuyerAccountId).HasColumnName("BuyerAccountID").IsRequired().HasColumnType("int");
            Property(x => x.CampaignId).HasColumnName("CampaignID").IsRequired().HasColumnType("int");
            Property(x => x.AdGroupId).HasColumnName("AdGroupID").IsRequired().HasColumnType("int");
            Property(x => x.OptimizationModelId).HasColumnName("OptimizationModelID").IsRequired().HasColumnType("int");
            Property(x => x.IabVertical).HasColumnName("IABVertical").IsRequired().IsUnicode(false).HasColumnType("varchar").HasMaxLength(100);
            Property(x => x.UtcDateTime).HasColumnName("UtcDateTime").IsRequired().HasColumnType("datetime");
            Property(x => x.LocalDateTime).HasColumnName("LocalDateTime").IsRequired().HasColumnType("datetime");
            Property(x => x.Bids).HasColumnName("Bids").IsRequired().HasColumnType("bigint");
            Property(x => x.Impressions).HasColumnName("Impressions").IsRequired().HasColumnType("bigint");
            Property(x => x.InvalidImpressions).HasColumnName("InvalidImpressions").IsRequired().HasColumnType("bigint");
            Property(x => x.Clicks).HasColumnName("Clicks").IsRequired().HasColumnType("bigint");
            Property(x => x.InvalidClicks).HasColumnName("InvalidClicks").IsRequired().HasColumnType("bigint");
            Property(x => x.Conversions).HasColumnName("Conversions").IsRequired().HasColumnType("bigint");
            Property(x => x.PostViewConversions).HasColumnName("PostViewConversions").IsRequired().HasColumnType("bigint");
            Property(x => x.PostClickConversions).HasColumnName("PostClickConversions").IsRequired().HasColumnType("bigint");
            Property(x => x.MediaCostUsdMicros).HasColumnName("MediaCostUsdMicros").IsRequired().HasColumnType("bigint");
            Property(x => x.MediaCostLocalMicros).HasColumnName("MediaCostLocalMicros").IsRequired().HasColumnType("bigint");
            Property(x => x.DataCostLocalMicros).HasColumnName("DataCostLocalMicros").IsRequired().HasColumnType("bigint");
            Property(x => x.FeesUsdSuperMicros).HasColumnName("FeesUsdSuperMicros").IsRequired().HasColumnType("bigint");
            Property(x => x.FeesLocalSuperMicros).HasColumnName("FeesLocalSuperMicros").IsRequired().HasColumnType("bigint");
            Property(x => x.ReportId).HasColumnName("ReportID").IsRequired().HasColumnType("bigint");
            Property(x => x.AdSlotDurationInSeconds).HasColumnName("AdSlotDurationInSeconds").IsOptional().HasColumnType("bigint");
            Property(x => x.RawViews).HasColumnName("RawViews").IsOptional().HasColumnType("bigint");
            Property(x => x.IabViews).HasColumnName("IabViews").IsOptional().HasColumnType("bigint");
            Property(x => x.ViewDurationInSeconds).HasColumnName("ViewDurationInSeconds").IsOptional().HasColumnType("bigint");
            InitializePartial();
        }
        partial void InitializePartial();
    }

    // AdGroupLanguage
    internal partial class AdGroupLanguageMap : EntityTypeConfiguration<AdGroupLanguage>
    {
        public AdGroupLanguageMap()
            : this("analytics")
        {
        }
 
        public AdGroupLanguageMap(string schema)
        {
            ToTable(schema + ".AdGroupLanguage");
            HasKey(x => new { x.BuyerAccountId, x.CampaignId, x.AdGroupId, x.OptimizationModelId, x.LanguageId, x.UtcDate, x.LocalDate, x.UtcDateTime, x.LocalDateTime, x.Bids, x.Impressions, x.Clicks, x.Conversions, x.PostViewConversions, x.PostClickConversions, x.MediaCostUsdMicros, x.MediaCostLocalMicros, x.DataCostLocalMicros });

            Property(x => x.BuyerAccountId).HasColumnName("BuyerAccountID").IsRequired().HasColumnType("int");
            Property(x => x.CampaignId).HasColumnName("CampaignID").IsRequired().HasColumnType("int");
            Property(x => x.AdGroupId).HasColumnName("AdGroupID").IsRequired().HasColumnType("int");
            Property(x => x.OptimizationModelId).HasColumnName("OptimizationModelID").IsRequired().HasColumnType("int");
            Property(x => x.LanguageId).HasColumnName("LanguageID").IsRequired().HasColumnType("int");
            Property(x => x.UtcDate).HasColumnName("UtcDate").IsRequired().HasColumnType("date");
            Property(x => x.LocalDate).HasColumnName("LocalDate").IsRequired().HasColumnType("date");
            Property(x => x.UtcDateTime).HasColumnName("UtcDateTime").IsRequired().HasColumnType("datetime");
            Property(x => x.LocalDateTime).HasColumnName("LocalDateTime").IsRequired().HasColumnType("datetime");
            Property(x => x.Bids).HasColumnName("Bids").IsRequired().HasColumnType("bigint");
            Property(x => x.Impressions).HasColumnName("Impressions").IsRequired().HasColumnType("bigint");
            Property(x => x.Clicks).HasColumnName("Clicks").IsRequired().HasColumnType("bigint");
            Property(x => x.Conversions).HasColumnName("Conversions").IsRequired().HasColumnType("bigint");
            Property(x => x.PostViewConversions).HasColumnName("PostViewConversions").IsRequired().HasColumnType("bigint");
            Property(x => x.PostClickConversions).HasColumnName("PostClickConversions").IsRequired().HasColumnType("bigint");
            Property(x => x.MediaCostUsdMicros).HasColumnName("MediaCostUsdMicros").IsRequired().HasColumnType("bigint");
            Property(x => x.MediaCostLocalMicros).HasColumnName("MediaCostLocalMicros").IsRequired().HasColumnType("bigint");
            Property(x => x.DataCostLocalMicros).HasColumnName("DataCostLocalMicros").IsRequired().HasColumnType("bigint");
            Property(x => x.InvalidImpressions).HasColumnName("InvalidImpressions").IsOptional().HasColumnType("bigint");
            Property(x => x.InvalidClicks).HasColumnName("InvalidClicks").IsOptional().HasColumnType("bigint");
            Property(x => x.FeesUsdSuperMicros).HasColumnName("FeesUsdSuperMicros").IsOptional().HasColumnType("bigint");
            Property(x => x.FeesLocalSuperMicros).HasColumnName("FeesLocalSuperMicros").IsOptional().HasColumnType("bigint");
            Property(x => x.AdSlotDurationInSeconds).HasColumnName("AdSlotDurationInSeconds").IsOptional().HasColumnType("bigint");
            Property(x => x.RawViews).HasColumnName("RawViews").IsOptional().HasColumnType("bigint");
            Property(x => x.IabViews).HasColumnName("IabViews").IsOptional().HasColumnType("bigint");
            Property(x => x.ViewDurationInSeconds).HasColumnName("ViewDurationInSeconds").IsOptional().HasColumnType("bigint");
            InitializePartial();
        }
        partial void InitializePartial();
    }

    // AdGroupLanguageAnalyticsReportID
    internal partial class AdGroupLanguageAnalyticsReportIdMap : EntityTypeConfiguration<AdGroupLanguageAnalyticsReportId>
    {
        public AdGroupLanguageAnalyticsReportIdMap()
            : this("dbo")
        {
        }
 
        public AdGroupLanguageAnalyticsReportIdMap(string schema)
        {
            ToTable(schema + ".AdGroupLanguageAnalyticsReportID");
            HasKey(x => new { x.BuyerAccountId, x.AdvertiserId, x.AdvertiserProductId, x.CampaignId, x.AdGroupId, x.OptimizationModelId, x.LanguageId, x.LocalDate, x.Bids, x.Impressions, x.Conversions, x.PostViewConversions, x.PostClickConversions, x.MediaCostLocalMicros, x.DataCostLocalMicros });

            Property(x => x.BuyerAccountId).HasColumnName("BuyerAccountID").IsRequired().HasColumnType("int");
            Property(x => x.AdvertiserId).HasColumnName("AdvertiserID").IsRequired().HasColumnType("int");
            Property(x => x.AdvertiserProductId).HasColumnName("AdvertiserProductID").IsRequired().HasColumnType("int");
            Property(x => x.CampaignId).HasColumnName("CampaignID").IsRequired().HasColumnType("int");
            Property(x => x.AdGroupId).HasColumnName("AdGroupID").IsRequired().HasColumnType("int");
            Property(x => x.OptimizationModelId).HasColumnName("OptimizationModelID").IsRequired().HasColumnType("int");
            Property(x => x.LanguageId).HasColumnName("LanguageID").IsRequired().HasColumnType("int");
            Property(x => x.LanguageName).HasColumnName("LanguageName").IsOptional().HasColumnType("nvarchar").HasMaxLength(50);
            Property(x => x.LocalDate).HasColumnName("LocalDate").IsRequired().HasColumnType("date");
            Property(x => x.Bids).HasColumnName("Bids").IsRequired().HasColumnType("bigint");
            Property(x => x.Impressions).HasColumnName("Impressions").IsRequired().HasColumnType("bigint");
            Property(x => x.Clicks).HasColumnName("Clicks").IsOptional().HasColumnType("bigint");
            Property(x => x.UnfilteredClicks).HasColumnName("UnfilteredClicks").IsOptional().HasColumnType("bigint");
            Property(x => x.Conversions).HasColumnName("Conversions").IsRequired().HasColumnType("bigint");
            Property(x => x.PostViewConversions).HasColumnName("PostViewConversions").IsRequired().HasColumnType("bigint");
            Property(x => x.PostClickConversions).HasColumnName("PostClickConversions").IsRequired().HasColumnType("bigint");
            Property(x => x.SpendLocalMicros).HasColumnName("SpendLocalMicros").IsOptional().HasColumnType("bigint");
            Property(x => x.Spend).HasColumnName("Spend").IsOptional().HasColumnType("money").HasPrecision(19,4);
            Property(x => x.ClientCostLocalMicros).HasColumnName("ClientCostLocalMicros").IsOptional().HasColumnType("bigint");
            Property(x => x.ClientCostDollars).HasColumnName("ClientCostDollars").IsOptional().HasColumnType("money").HasPrecision(19,4);
            Property(x => x.MediaCostLocalMicros).HasColumnName("MediaCostLocalMicros").IsRequired().HasColumnType("bigint");
            Property(x => x.DataCostLocalMicros).HasColumnName("DataCostLocalMicros").IsRequired().HasColumnType("bigint");
            Property(x => x.MediaClientCostLocalMicros).HasColumnName("MediaClientCostLocalMicros").IsOptional().HasColumnType("bigint");
            Property(x => x.DataClientCostLocalMicros).HasColumnName("DataClientCostLocalMicros").IsOptional().HasColumnType("bigint");
            Property(x => x.AdSlotDurationInSeconds).HasColumnName("AdSlotDurationInSeconds").IsOptional().HasColumnType("bigint");
            Property(x => x.RawViews).HasColumnName("RawViews").IsOptional().HasColumnType("bigint");
            Property(x => x.IabViews).HasColumnName("IabViews").IsOptional().HasColumnType("bigint");
            Property(x => x.ViewDurationInSeconds).HasColumnName("ViewDurationInSeconds").IsOptional().HasColumnType("bigint");
            Property(x => x.Ctr).HasColumnName("CTR").IsOptional().HasColumnType("float");
            Property(x => x.Cpm).HasColumnName("CPM").IsOptional().HasColumnType("money").HasPrecision(19,4);
            Property(x => x.Cpc).HasColumnName("CPC").IsOptional().HasColumnType("money").HasPrecision(19,4);
            Property(x => x.Cpa).HasColumnName("CPA").IsOptional().HasColumnType("money").HasPrecision(19,4);
            Property(x => x.ClientCpm).HasColumnName("ClientCPM").IsOptional().HasColumnType("money").HasPrecision(19,4);
            Property(x => x.ClientCpc).HasColumnName("ClientCPC").IsOptional().HasColumnType("money").HasPrecision(19,4);
            Property(x => x.ClientCpa).HasColumnName("ClientCPA").IsOptional().HasColumnType("money").HasPrecision(19,4);
            Property(x => x.Cpms).HasColumnName("CPMs").IsOptional().HasColumnType("decimal").HasPrecision(38,14);
            Property(x => x.ClientCostCpms).HasColumnName("ClientCostCpms").IsOptional().HasColumnType("decimal").HasPrecision(38,14);
            Property(x => x.Cps).HasColumnName("CPS").IsOptional().HasColumnType("decimal").HasPrecision(38,14);
            Property(x => x.ClientCostCps).HasColumnName("ClientCostCps").IsOptional().HasColumnType("decimal").HasPrecision(38,14);
            Property(x => x.ViewableRatio).HasColumnName("ViewableRatio").IsOptional().HasColumnType("float");
            InitializePartial();
        }
        partial void InitializePartial();
    }

    // AdGroupLanguageCombined
    internal partial class AdGroupLanguageCombinedMap : EntityTypeConfiguration<AdGroupLanguageCombined>
    {
        public AdGroupLanguageCombinedMap()
            : this("analytics")
        {
        }
 
        public AdGroupLanguageCombinedMap(string schema)
        {
            ToTable(schema + ".AdGroupLanguageCombined");
            HasKey(x => new { x.BuyerAccountId, x.CampaignId, x.AdGroupId, x.OptimizationModelId, x.LanguageId, x.UtcDate, x.LocalDate, x.UtcDateTime, x.LocalDateTime, x.Bids, x.Impressions, x.Clicks, x.Conversions, x.PostViewConversions, x.PostClickConversions, x.MediaCostUsdMicros, x.MediaCostLocalMicros, x.DataCostLocalMicros });

            Property(x => x.BuyerAccountId).HasColumnName("BuyerAccountID").IsRequired().HasColumnType("int");
            Property(x => x.CampaignId).HasColumnName("CampaignID").IsRequired().HasColumnType("int");
            Property(x => x.AdGroupId).HasColumnName("AdGroupID").IsRequired().HasColumnType("int");
            Property(x => x.OptimizationModelId).HasColumnName("OptimizationModelID").IsRequired().HasColumnType("int");
            Property(x => x.LanguageId).HasColumnName("LanguageID").IsRequired().HasColumnType("int");
            Property(x => x.UtcDate).HasColumnName("UtcDate").IsRequired().HasColumnType("date");
            Property(x => x.LocalDate).HasColumnName("LocalDate").IsRequired().HasColumnType("date");
            Property(x => x.UtcDateTime).HasColumnName("UtcDateTime").IsRequired().HasColumnType("datetime");
            Property(x => x.LocalDateTime).HasColumnName("LocalDateTime").IsRequired().HasColumnType("datetime");
            Property(x => x.Bids).HasColumnName("Bids").IsRequired().HasColumnType("bigint");
            Property(x => x.Impressions).HasColumnName("Impressions").IsRequired().HasColumnType("bigint");
            Property(x => x.Clicks).HasColumnName("Clicks").IsRequired().HasColumnType("bigint");
            Property(x => x.Conversions).HasColumnName("Conversions").IsRequired().HasColumnType("bigint");
            Property(x => x.PostViewConversions).HasColumnName("PostViewConversions").IsRequired().HasColumnType("bigint");
            Property(x => x.PostClickConversions).HasColumnName("PostClickConversions").IsRequired().HasColumnType("bigint");
            Property(x => x.MediaCostUsdMicros).HasColumnName("MediaCostUsdMicros").IsRequired().HasColumnType("bigint");
            Property(x => x.MediaCostLocalMicros).HasColumnName("MediaCostLocalMicros").IsRequired().HasColumnType("bigint");
            Property(x => x.DataCostLocalMicros).HasColumnName("DataCostLocalMicros").IsRequired().HasColumnType("bigint");
            Property(x => x.InvalidImpressions).HasColumnName("InvalidImpressions").IsOptional().HasColumnType("bigint");
            Property(x => x.InvalidClicks).HasColumnName("InvalidClicks").IsOptional().HasColumnType("bigint");
            Property(x => x.FeesUsdSuperMicros).HasColumnName("FeesUsdSuperMicros").IsOptional().HasColumnType("bigint");
            Property(x => x.FeesLocalSuperMicros).HasColumnName("FeesLocalSuperMicros").IsOptional().HasColumnType("bigint");
            Property(x => x.AdSlotDurationInSeconds).HasColumnName("AdSlotDurationInSeconds").IsOptional().HasColumnType("bigint");
            Property(x => x.RawViews).HasColumnName("RawViews").IsOptional().HasColumnType("bigint");
            Property(x => x.IabViews).HasColumnName("IabViews").IsOptional().HasColumnType("bigint");
            Property(x => x.ViewDurationInSeconds).HasColumnName("ViewDurationInSeconds").IsOptional().HasColumnType("bigint");
            InitializePartial();
        }
        partial void InitializePartial();
    }

    // AdGroupLanguageException
    internal partial class AdGroupLanguageExceptionMap : EntityTypeConfiguration<AdGroupLanguageException>
    {
        public AdGroupLanguageExceptionMap()
            : this("analytics")
        {
        }
 
        public AdGroupLanguageExceptionMap(string schema)
        {
            ToTable(schema + ".AdGroupLanguageException");
            HasKey(x => new { x.BuyerAccountId, x.CampaignId, x.AdGroupId, x.OptimizationModelId, x.LanguageId, x.UtcDateTime, x.LocalDateTime, x.Bids, x.Impressions, x.InvalidImpressions, x.Clicks, x.InvalidClicks, x.Conversions, x.PostViewConversions, x.PostClickConversions, x.MediaCostUsdMicros, x.MediaCostLocalMicros, x.DataCostLocalMicros, x.FeesUsdSuperMicros, x.FeesLocalSuperMicros });

            Property(x => x.BuyerAccountId).HasColumnName("BuyerAccountID").IsRequired().HasColumnType("int");
            Property(x => x.CampaignId).HasColumnName("CampaignID").IsRequired().HasColumnType("int");
            Property(x => x.AdGroupId).HasColumnName("AdGroupID").IsRequired().HasColumnType("int");
            Property(x => x.OptimizationModelId).HasColumnName("OptimizationModelID").IsRequired().HasColumnType("int");
            Property(x => x.LanguageId).HasColumnName("LanguageID").IsRequired().HasColumnType("int");
            Property(x => x.UtcDateTime).HasColumnName("UtcDateTime").IsRequired().HasColumnType("datetime");
            Property(x => x.LocalDateTime).HasColumnName("LocalDateTime").IsRequired().HasColumnType("datetime");
            Property(x => x.Bids).HasColumnName("Bids").IsRequired().HasColumnType("bigint");
            Property(x => x.Impressions).HasColumnName("Impressions").IsRequired().HasColumnType("bigint");
            Property(x => x.InvalidImpressions).HasColumnName("InvalidImpressions").IsRequired().HasColumnType("bigint");
            Property(x => x.Clicks).HasColumnName("Clicks").IsRequired().HasColumnType("bigint");
            Property(x => x.InvalidClicks).HasColumnName("InvalidClicks").IsRequired().HasColumnType("bigint");
            Property(x => x.Conversions).HasColumnName("Conversions").IsRequired().HasColumnType("bigint");
            Property(x => x.PostViewConversions).HasColumnName("PostViewConversions").IsRequired().HasColumnType("bigint");
            Property(x => x.PostClickConversions).HasColumnName("PostClickConversions").IsRequired().HasColumnType("bigint");
            Property(x => x.MediaCostUsdMicros).HasColumnName("MediaCostUsdMicros").IsRequired().HasColumnType("bigint");
            Property(x => x.MediaCostLocalMicros).HasColumnName("MediaCostLocalMicros").IsRequired().HasColumnType("bigint");
            Property(x => x.DataCostLocalMicros).HasColumnName("DataCostLocalMicros").IsRequired().HasColumnType("bigint");
            Property(x => x.FeesUsdSuperMicros).HasColumnName("FeesUsdSuperMicros").IsRequired().HasColumnType("bigint");
            Property(x => x.FeesLocalSuperMicros).HasColumnName("FeesLocalSuperMicros").IsRequired().HasColumnType("bigint");
            Property(x => x.AdSlotDurationInSeconds).HasColumnName("AdSlotDurationInSeconds").IsOptional().HasColumnType("bigint");
            Property(x => x.RawViews).HasColumnName("RawViews").IsOptional().HasColumnType("bigint");
            Property(x => x.IabViews).HasColumnName("IabViews").IsOptional().HasColumnType("bigint");
            Property(x => x.ViewDurationInSeconds).HasColumnName("ViewDurationInSeconds").IsOptional().HasColumnType("bigint");
            InitializePartial();
        }
        partial void InitializePartial();
    }

    // AdGroupLanguageImport
    internal partial class AdGroupLanguageImportMap : EntityTypeConfiguration<AdGroupLanguageImport>
    {
        public AdGroupLanguageImportMap()
            : this("analytics")
        {
        }
 
        public AdGroupLanguageImportMap(string schema)
        {
            ToTable(schema + ".AdGroupLanguageImport");
            HasKey(x => new { x.BuyerAccountId, x.CampaignId, x.AdGroupId, x.OptimizationModelId, x.LanguageId, x.UtcDateTime, x.LocalDateTime, x.Bids, x.Impressions, x.InvalidImpressions, x.Clicks, x.InvalidClicks, x.Conversions, x.PostViewConversions, x.PostClickConversions, x.MediaCostUsdMicros, x.MediaCostLocalMicros, x.DataCostLocalMicros, x.FeesUsdSuperMicros, x.FeesLocalSuperMicros });

            Property(x => x.BuyerAccountId).HasColumnName("BuyerAccountID").IsRequired().HasColumnType("int");
            Property(x => x.CampaignId).HasColumnName("CampaignID").IsRequired().HasColumnType("int");
            Property(x => x.AdGroupId).HasColumnName("AdGroupID").IsRequired().HasColumnType("int");
            Property(x => x.OptimizationModelId).HasColumnName("OptimizationModelID").IsRequired().HasColumnType("int");
            Property(x => x.LanguageId).HasColumnName("LanguageID").IsRequired().HasColumnType("int");
            Property(x => x.UtcDateTime).HasColumnName("UtcDateTime").IsRequired().HasColumnType("datetime");
            Property(x => x.LocalDateTime).HasColumnName("LocalDateTime").IsRequired().HasColumnType("datetime");
            Property(x => x.Bids).HasColumnName("Bids").IsRequired().HasColumnType("bigint");
            Property(x => x.Impressions).HasColumnName("Impressions").IsRequired().HasColumnType("bigint");
            Property(x => x.InvalidImpressions).HasColumnName("InvalidImpressions").IsRequired().HasColumnType("bigint");
            Property(x => x.Clicks).HasColumnName("Clicks").IsRequired().HasColumnType("bigint");
            Property(x => x.InvalidClicks).HasColumnName("InvalidClicks").IsRequired().HasColumnType("bigint");
            Property(x => x.Conversions).HasColumnName("Conversions").IsRequired().HasColumnType("bigint");
            Property(x => x.PostViewConversions).HasColumnName("PostViewConversions").IsRequired().HasColumnType("bigint");
            Property(x => x.PostClickConversions).HasColumnName("PostClickConversions").IsRequired().HasColumnType("bigint");
            Property(x => x.MediaCostUsdMicros).HasColumnName("MediaCostUsdMicros").IsRequired().HasColumnType("bigint");
            Property(x => x.MediaCostLocalMicros).HasColumnName("MediaCostLocalMicros").IsRequired().HasColumnType("bigint");
            Property(x => x.DataCostLocalMicros).HasColumnName("DataCostLocalMicros").IsRequired().HasColumnType("bigint");
            Property(x => x.FeesUsdSuperMicros).HasColumnName("FeesUsdSuperMicros").IsRequired().HasColumnType("bigint");
            Property(x => x.FeesLocalSuperMicros).HasColumnName("FeesLocalSuperMicros").IsRequired().HasColumnType("bigint");
            Property(x => x.AdSlotDurationInSeconds).HasColumnName("AdSlotDurationInSeconds").IsOptional().HasColumnType("bigint");
            Property(x => x.RawViews).HasColumnName("RawViews").IsOptional().HasColumnType("bigint");
            Property(x => x.IabViews).HasColumnName("IabViews").IsOptional().HasColumnType("bigint");
            Property(x => x.ViewDurationInSeconds).HasColumnName("ViewDurationInSeconds").IsOptional().HasColumnType("bigint");
            InitializePartial();
        }
        partial void InitializePartial();
    }

    // AdGroupLanguageImportReportID
    internal partial class AdGroupLanguageImportReportIdMap : EntityTypeConfiguration<AdGroupLanguageImportReportId>
    {
        public AdGroupLanguageImportReportIdMap()
            : this("analytics")
        {
        }
 
        public AdGroupLanguageImportReportIdMap(string schema)
        {
            ToTable(schema + ".AdGroupLanguageImportReportID");
            HasKey(x => new { x.BuyerAccountId, x.CampaignId, x.AdGroupId, x.OptimizationModelId, x.LanguageId, x.UtcDateTime, x.LocalDateTime, x.Bids, x.Impressions, x.InvalidImpressions, x.Clicks, x.InvalidClicks, x.Conversions, x.PostViewConversions, x.PostClickConversions, x.MediaCostUsdMicros, x.MediaCostLocalMicros, x.DataCostLocalMicros, x.FeesUsdSuperMicros, x.FeesLocalSuperMicros, x.ReportId });

            Property(x => x.BuyerAccountId).HasColumnName("BuyerAccountID").IsRequired().HasColumnType("int");
            Property(x => x.CampaignId).HasColumnName("CampaignID").IsRequired().HasColumnType("int");
            Property(x => x.AdGroupId).HasColumnName("AdGroupID").IsRequired().HasColumnType("int");
            Property(x => x.OptimizationModelId).HasColumnName("OptimizationModelID").IsRequired().HasColumnType("int");
            Property(x => x.LanguageId).HasColumnName("LanguageID").IsRequired().HasColumnType("int");
            Property(x => x.UtcDateTime).HasColumnName("UtcDateTime").IsRequired().HasColumnType("datetime");
            Property(x => x.LocalDateTime).HasColumnName("LocalDateTime").IsRequired().HasColumnType("datetime");
            Property(x => x.Bids).HasColumnName("Bids").IsRequired().HasColumnType("bigint");
            Property(x => x.Impressions).HasColumnName("Impressions").IsRequired().HasColumnType("bigint");
            Property(x => x.InvalidImpressions).HasColumnName("InvalidImpressions").IsRequired().HasColumnType("bigint");
            Property(x => x.Clicks).HasColumnName("Clicks").IsRequired().HasColumnType("bigint");
            Property(x => x.InvalidClicks).HasColumnName("InvalidClicks").IsRequired().HasColumnType("bigint");
            Property(x => x.Conversions).HasColumnName("Conversions").IsRequired().HasColumnType("bigint");
            Property(x => x.PostViewConversions).HasColumnName("PostViewConversions").IsRequired().HasColumnType("bigint");
            Property(x => x.PostClickConversions).HasColumnName("PostClickConversions").IsRequired().HasColumnType("bigint");
            Property(x => x.MediaCostUsdMicros).HasColumnName("MediaCostUsdMicros").IsRequired().HasColumnType("bigint");
            Property(x => x.MediaCostLocalMicros).HasColumnName("MediaCostLocalMicros").IsRequired().HasColumnType("bigint");
            Property(x => x.DataCostLocalMicros).HasColumnName("DataCostLocalMicros").IsRequired().HasColumnType("bigint");
            Property(x => x.FeesUsdSuperMicros).HasColumnName("FeesUsdSuperMicros").IsRequired().HasColumnType("bigint");
            Property(x => x.FeesLocalSuperMicros).HasColumnName("FeesLocalSuperMicros").IsRequired().HasColumnType("bigint");
            Property(x => x.ReportId).HasColumnName("ReportID").IsRequired().HasColumnType("bigint");
            Property(x => x.AdSlotDurationInSeconds).HasColumnName("AdSlotDurationInSeconds").IsOptional().HasColumnType("bigint");
            Property(x => x.RawViews).HasColumnName("RawViews").IsOptional().HasColumnType("bigint");
            Property(x => x.IabViews).HasColumnName("IabViews").IsOptional().HasColumnType("bigint");
            Property(x => x.ViewDurationInSeconds).HasColumnName("ViewDurationInSeconds").IsOptional().HasColumnType("bigint");
            InitializePartial();
        }
        partial void InitializePartial();
    }

    // AdGroupLanguageReportID
    internal partial class AdGroupLanguageReportIdMap : EntityTypeConfiguration<AdGroupLanguageReportId>
    {
        public AdGroupLanguageReportIdMap()
            : this("analytics")
        {
        }
 
        public AdGroupLanguageReportIdMap(string schema)
        {
            ToTable(schema + ".AdGroupLanguageReportID");
            HasKey(x => new { x.BuyerAccountId, x.CampaignId, x.AdGroupId, x.OptimizationModelId, x.LanguageId, x.UtcDate, x.LocalDate, x.UtcDateTime, x.LocalDateTime, x.Bids, x.Impressions, x.Clicks, x.Conversions, x.PostViewConversions, x.PostClickConversions, x.MediaCostUsdMicros, x.MediaCostLocalMicros, x.DataCostLocalMicros, x.ReportId });

            Property(x => x.BuyerAccountId).HasColumnName("BuyerAccountID").IsRequired().HasColumnType("int");
            Property(x => x.CampaignId).HasColumnName("CampaignID").IsRequired().HasColumnType("int");
            Property(x => x.AdGroupId).HasColumnName("AdGroupID").IsRequired().HasColumnType("int");
            Property(x => x.OptimizationModelId).HasColumnName("OptimizationModelID").IsRequired().HasColumnType("int");
            Property(x => x.LanguageId).HasColumnName("LanguageID").IsRequired().HasColumnType("int");
            Property(x => x.UtcDate).HasColumnName("UtcDate").IsRequired().HasColumnType("date");
            Property(x => x.LocalDate).HasColumnName("LocalDate").IsRequired().HasColumnType("date");
            Property(x => x.UtcDateTime).HasColumnName("UtcDateTime").IsRequired().HasColumnType("datetime");
            Property(x => x.LocalDateTime).HasColumnName("LocalDateTime").IsRequired().HasColumnType("datetime");
            Property(x => x.Bids).HasColumnName("Bids").IsRequired().HasColumnType("bigint");
            Property(x => x.Impressions).HasColumnName("Impressions").IsRequired().HasColumnType("bigint");
            Property(x => x.Clicks).HasColumnName("Clicks").IsRequired().HasColumnType("bigint");
            Property(x => x.Conversions).HasColumnName("Conversions").IsRequired().HasColumnType("bigint");
            Property(x => x.PostViewConversions).HasColumnName("PostViewConversions").IsRequired().HasColumnType("bigint");
            Property(x => x.PostClickConversions).HasColumnName("PostClickConversions").IsRequired().HasColumnType("bigint");
            Property(x => x.MediaCostUsdMicros).HasColumnName("MediaCostUsdMicros").IsRequired().HasColumnType("bigint");
            Property(x => x.MediaCostLocalMicros).HasColumnName("MediaCostLocalMicros").IsRequired().HasColumnType("bigint");
            Property(x => x.DataCostLocalMicros).HasColumnName("DataCostLocalMicros").IsRequired().HasColumnType("bigint");
            Property(x => x.InvalidImpressions).HasColumnName("InvalidImpressions").IsOptional().HasColumnType("bigint");
            Property(x => x.InvalidClicks).HasColumnName("InvalidClicks").IsOptional().HasColumnType("bigint");
            Property(x => x.FeesUsdSuperMicros).HasColumnName("FeesUsdSuperMicros").IsOptional().HasColumnType("bigint");
            Property(x => x.FeesLocalSuperMicros).HasColumnName("FeesLocalSuperMicros").IsOptional().HasColumnType("bigint");
            Property(x => x.ReportId).HasColumnName("ReportID").IsRequired().HasColumnType("bigint");
            Property(x => x.AdSlotDurationInSeconds).HasColumnName("AdSlotDurationInSeconds").IsOptional().HasColumnType("bigint");
            Property(x => x.RawViews).HasColumnName("RawViews").IsOptional().HasColumnType("bigint");
            Property(x => x.IabViews).HasColumnName("IabViews").IsOptional().HasColumnType("bigint");
            Property(x => x.ViewDurationInSeconds).HasColumnName("ViewDurationInSeconds").IsOptional().HasColumnType("bigint");
            InitializePartial();
        }
        partial void InitializePartial();
    }

    // AdGroupLanguageTargetingReportID
    internal partial class AdGroupLanguageTargetingReportIdMap : EntityTypeConfiguration<AdGroupLanguageTargetingReportId>
    {
        public AdGroupLanguageTargetingReportIdMap()
            : this("dbo")
        {
        }
 
        public AdGroupLanguageTargetingReportIdMap(string schema)
        {
            ToTable(schema + ".AdGroupLanguageTargetingReportID");
            HasKey(x => new { x.LanguageId, x.IsTargeted, x.PackageInstalled });

            Property(x => x.BuyerAccountId).HasColumnName("BuyerAccountID").IsOptional().HasColumnType("int");
            Property(x => x.CampaignId).HasColumnName("CampaignID").IsOptional().HasColumnType("int");
            Property(x => x.AdGroupId).HasColumnName("AdGroupID").IsOptional().HasColumnType("int");
            Property(x => x.LanguageId).HasColumnName("LanguageID").IsRequired().HasColumnType("int");
            Property(x => x.LanguageName).HasColumnName("LanguageName").IsOptional().HasColumnType("nvarchar").HasMaxLength(50);
            Property(x => x.IsTargeted).HasColumnName("IsTargeted").IsRequired().HasColumnType("int");
            Property(x => x.PackageInstalled).HasColumnName("PackageInstalled").IsRequired().HasColumnType("int");
            Property(x => x.Bids).HasColumnName("Bids").IsOptional().HasColumnType("bigint");
            Property(x => x.Impressions).HasColumnName("Impressions").IsOptional().HasColumnType("bigint");
            Property(x => x.Clicks).HasColumnName("Clicks").IsOptional().HasColumnType("bigint");
            Property(x => x.Conversions).HasColumnName("Conversions").IsOptional().HasColumnType("bigint");
            Property(x => x.PostViewConversions).HasColumnName("PostViewConversions").IsOptional().HasColumnType("bigint");
            Property(x => x.PostClickConversions).HasColumnName("PostClickConversions").IsOptional().HasColumnType("bigint");
            Property(x => x.SpendLocalMicros).HasColumnName("SpendLocalMicros").IsOptional().HasColumnType("bigint");
            Property(x => x.Spend).HasColumnName("Spend").IsOptional().HasColumnType("money").HasPrecision(19,4);
            Property(x => x.ClientCostLocalMicros).HasColumnName("ClientCostLocalMicros").IsOptional().HasColumnType("decimal").HasPrecision(38,4);
            Property(x => x.ClientCostDollars).HasColumnName("ClientCostDollars").IsOptional().HasColumnType("money").HasPrecision(19,4);
            Property(x => x.MediaCostLocalMicros).HasColumnName("MediaCostLocalMicros").IsOptional().HasColumnType("bigint");
            Property(x => x.DataCostLocalMicros).HasColumnName("DataCostLocalMicros").IsOptional().HasColumnType("bigint");
            Property(x => x.MediaClientCostLocalMicros).HasColumnName("MediaClientCostLocalMicros").IsOptional().HasColumnType("decimal").HasPrecision(38,4);
            Property(x => x.DataClientCostLocalMicros).HasColumnName("DataClientCostLocalMicros").IsOptional().HasColumnType("decimal").HasPrecision(38,4);
            Property(x => x.AdSlotDurationInSeconds).HasColumnName("AdSlotDurationInSeconds").IsOptional().HasColumnType("bigint");
            Property(x => x.RawViews).HasColumnName("RawViews").IsOptional().HasColumnType("bigint");
            Property(x => x.IabViews).HasColumnName("IabViews").IsOptional().HasColumnType("bigint");
            Property(x => x.ViewDurationInSeconds).HasColumnName("ViewDurationInSeconds").IsOptional().HasColumnType("bigint");
            Property(x => x.Ctr).HasColumnName("CTR").IsOptional().HasColumnType("float");
            Property(x => x.Cpm).HasColumnName("CPM").IsOptional().HasColumnType("decimal").HasPrecision(19,4);
            Property(x => x.Cpc).HasColumnName("CPC").IsOptional().HasColumnType("decimal").HasPrecision(19,4);
            Property(x => x.Cpa).HasColumnName("CPA").IsOptional().HasColumnType("decimal").HasPrecision(19,4);
            Property(x => x.ClientCostCpm).HasColumnName("ClientCostCPM").IsOptional().HasColumnType("decimal").HasPrecision(19,4);
            Property(x => x.ClientCostCpc).HasColumnName("ClientCostCPC").IsOptional().HasColumnType("decimal").HasPrecision(19,4);
            Property(x => x.ClientCostCpa).HasColumnName("ClientCostCPA").IsOptional().HasColumnType("decimal").HasPrecision(19,4);
            Property(x => x.Cpms).HasColumnName("CPMs").IsOptional().HasColumnType("decimal").HasPrecision(38,14);
            Property(x => x.ClientCostCpms).HasColumnName("ClientCostCpms").IsOptional().HasColumnType("decimal").HasPrecision(38,14);
            Property(x => x.Cps).HasColumnName("CPS").IsOptional().HasColumnType("decimal").HasPrecision(38,14);
            Property(x => x.ClientCostCps).HasColumnName("ClientCostCps").IsOptional().HasColumnType("decimal").HasPrecision(38,14);
            Property(x => x.ViewableRatio).HasColumnName("ViewableRatio").IsOptional().HasColumnType("float");
            InitializePartial();
        }
        partial void InitializePartial();
    }

    // AdGroupLookup
    internal partial class AdGroupLookupMap : EntityTypeConfiguration<AdGroupLookup>
    {
        public AdGroupLookupMap()
            : this("analytics")
        {
        }
 
        public AdGroupLookupMap(string schema)
        {
            ToTable(schema + ".AdGroupLookup");
            HasKey(x => new { x.AdGroupId, x.AdGroupBudget, x.GoalTypeId, x.GoalTargetRate, x.CampaignId, x.AdvertiserProductId, x.ProductCategoryId, x.IndustryCategoryId, x.AdvertiserId, x.BuyerAccountId, x.CurrencyName, x.MinutesOffset });

            Property(x => x.AdGroupId).HasColumnName("AdGroupID").IsRequired().HasColumnType("int");
            Property(x => x.RtbAdGroupId).HasColumnName("RtbAdGroupID").IsOptional().IsUnicode(false).HasColumnType("varchar").HasMaxLength(24);
            Property(x => x.AdGroupName).HasColumnName("AdGroupName").IsOptional().HasColumnType("nvarchar").HasMaxLength(4000);
            Property(x => x.AdGroupBudget).HasColumnName("AdGroupBudget").IsRequired().HasColumnType("money").HasPrecision(19,4);
            Property(x => x.GoalTypeId).HasColumnName("GoalTypeID").IsRequired().HasColumnType("int");
            Property(x => x.GoalTargetRate).HasColumnName("GoalTargetRate").IsRequired().HasColumnType("money").HasPrecision(19,4);
            Property(x => x.CampaignId).HasColumnName("CampaignID").IsRequired().HasColumnType("int");
            Property(x => x.RtbCampaignId).HasColumnName("RtbCampaignID").IsOptional().IsUnicode(false).HasColumnType("varchar").HasMaxLength(24);
            Property(x => x.CampaignName).HasColumnName("CampaignName").IsOptional().HasColumnType("nvarchar").HasMaxLength(4000);
            Property(x => x.AgencyReference).HasColumnName("AgencyReference").IsOptional().HasColumnType("nvarchar").HasMaxLength(4000);
            Property(x => x.UtcStartDateTime).HasColumnName("UtcStartDateTime").IsOptional().HasColumnType("datetime");
            Property(x => x.UtcEndDateTime).HasColumnName("UtcEndDateTime").IsOptional().HasColumnType("datetime");
            Property(x => x.AdvertiserProductId).HasColumnName("AdvertiserProductID").IsRequired().HasColumnType("int");
            Property(x => x.ProductName).HasColumnName("ProductName").IsOptional().HasColumnType("nvarchar").HasMaxLength(4000);
            Property(x => x.ProductCategoryId).HasColumnName("ProductCategoryID").IsRequired().HasColumnType("int");
            Property(x => x.ProductCategoryName).HasColumnName("ProductCategoryName").IsOptional().HasColumnType("nvarchar").HasMaxLength(4000);
            Property(x => x.IndustryCategoryId).HasColumnName("IndustryCategoryID").IsRequired().HasColumnType("int");
            Property(x => x.IndustryCategoryName).HasColumnName("IndustryCategoryName").IsOptional().HasColumnType("nvarchar").HasMaxLength(4000);
            Property(x => x.AdvertiserId).HasColumnName("AdvertiserID").IsRequired().HasColumnType("int");
            Property(x => x.AdvertiserName).HasColumnName("AdvertiserName").IsOptional().HasColumnType("nvarchar").HasMaxLength(4000);
            Property(x => x.BuyerAccountId).HasColumnName("BuyerAccountID").IsRequired().HasColumnType("int");
            Property(x => x.CompanyName).HasColumnName("CompanyName").IsOptional().HasColumnType("nvarchar").HasMaxLength(4000);
            Property(x => x.BuyingGroupName).HasColumnName("BuyingGroupName").IsOptional().HasColumnType("nvarchar").HasMaxLength(4000);
            Property(x => x.CurrencyCode).HasColumnName("CurrencyCode").IsOptional().IsFixedLength().IsUnicode(false).HasColumnType("char").HasMaxLength(3);
            Property(x => x.CurrencyName).HasColumnName("CurrencyName").IsRequired().HasColumnType("nvarchar").HasMaxLength(50);
            Property(x => x.LocalToUsdRate).HasColumnName("LocalToUSDRate").IsOptional().HasColumnType("decimal").HasPrecision(18,6);
            Property(x => x.TimeZoneCode).HasColumnName("TimeZoneCode").IsOptional().HasColumnType("nvarchar").HasMaxLength(150);
            Property(x => x.MinutesOffset).HasColumnName("MinutesOffset").IsRequired().HasColumnType("int");
            InitializePartial();
        }
        partial void InitializePartial();
    }

    // AdGroupMobileCarrier
    internal partial class AdGroupMobileCarrierMap : EntityTypeConfiguration<AdGroupMobileCarrier>
    {
        public AdGroupMobileCarrierMap()
            : this("analytics")
        {
        }
 
        public AdGroupMobileCarrierMap(string schema)
        {
            ToTable(schema + ".AdGroupMobileCarrier");
            HasKey(x => new { x.BuyerAccountId, x.CampaignId, x.AdGroupId, x.OptimizationModelId, x.GeoCountryId, x.Mcc, x.Mnc, x.UtcDate, x.LocalDate, x.UtcDateTime, x.LocalDateTime, x.Bids, x.Impressions, x.Clicks, x.Conversions, x.PostViewConversions, x.PostClickConversions, x.MediaCostUsdMicros, x.MediaCostLocalMicros, x.DataCostLocalMicros });

            Property(x => x.BuyerAccountId).HasColumnName("BuyerAccountID").IsRequired().HasColumnType("int");
            Property(x => x.CampaignId).HasColumnName("CampaignID").IsRequired().HasColumnType("int");
            Property(x => x.AdGroupId).HasColumnName("AdGroupID").IsRequired().HasColumnType("int");
            Property(x => x.OptimizationModelId).HasColumnName("OptimizationModelID").IsRequired().HasColumnType("int");
            Property(x => x.GeoCountryId).HasColumnName("GeoCountryID").IsRequired().HasColumnType("int");
            Property(x => x.Mcc).HasColumnName("MCC").IsRequired().HasColumnType("int");
            Property(x => x.Mnc).HasColumnName("MNC").IsRequired().HasColumnType("int");
            Property(x => x.UtcDate).HasColumnName("UtcDate").IsRequired().HasColumnType("date");
            Property(x => x.LocalDate).HasColumnName("LocalDate").IsRequired().HasColumnType("date");
            Property(x => x.UtcDateTime).HasColumnName("UtcDateTime").IsRequired().HasColumnType("datetime");
            Property(x => x.LocalDateTime).HasColumnName("LocalDateTime").IsRequired().HasColumnType("datetime");
            Property(x => x.Bids).HasColumnName("Bids").IsRequired().HasColumnType("bigint");
            Property(x => x.Impressions).HasColumnName("Impressions").IsRequired().HasColumnType("bigint");
            Property(x => x.Clicks).HasColumnName("Clicks").IsRequired().HasColumnType("bigint");
            Property(x => x.Conversions).HasColumnName("Conversions").IsRequired().HasColumnType("bigint");
            Property(x => x.PostViewConversions).HasColumnName("PostViewConversions").IsRequired().HasColumnType("bigint");
            Property(x => x.PostClickConversions).HasColumnName("PostClickConversions").IsRequired().HasColumnType("bigint");
            Property(x => x.MediaCostUsdMicros).HasColumnName("MediaCostUsdMicros").IsRequired().HasColumnType("bigint");
            Property(x => x.MediaCostLocalMicros).HasColumnName("MediaCostLocalMicros").IsRequired().HasColumnType("bigint");
            Property(x => x.DataCostLocalMicros).HasColumnName("DataCostLocalMicros").IsRequired().HasColumnType("bigint");
            Property(x => x.InvalidImpressions).HasColumnName("InvalidImpressions").IsOptional().HasColumnType("bigint");
            Property(x => x.InvalidClicks).HasColumnName("InvalidClicks").IsOptional().HasColumnType("bigint");
            Property(x => x.FeesUsdSuperMicros).HasColumnName("FeesUsdSuperMicros").IsOptional().HasColumnType("bigint");
            Property(x => x.FeesLocalSuperMicros).HasColumnName("FeesLocalSuperMicros").IsOptional().HasColumnType("bigint");
            Property(x => x.AdSlotDurationInSeconds).HasColumnName("AdSlotDurationInSeconds").IsOptional().HasColumnType("bigint");
            Property(x => x.RawViews).HasColumnName("RawViews").IsOptional().HasColumnType("bigint");
            Property(x => x.IabViews).HasColumnName("IabViews").IsOptional().HasColumnType("bigint");
            Property(x => x.ViewDurationInSeconds).HasColumnName("ViewDurationInSeconds").IsOptional().HasColumnType("bigint");
            InitializePartial();
        }
        partial void InitializePartial();
    }

    // AdGroupMobileCarrierAnalyticsReportID
    internal partial class AdGroupMobileCarrierAnalyticsReportIdMap : EntityTypeConfiguration<AdGroupMobileCarrierAnalyticsReportId>
    {
        public AdGroupMobileCarrierAnalyticsReportIdMap()
            : this("dbo")
        {
        }
 
        public AdGroupMobileCarrierAnalyticsReportIdMap(string schema)
        {
            ToTable(schema + ".AdGroupMobileCarrierAnalyticsReportID");
            HasKey(x => new { x.BuyerAccountId, x.AdvertiserId, x.AdvertiserProductId, x.CampaignId, x.AdGroupId, x.OptimizationModelId, x.GeoCountryId, x.Mcc, x.Mnc, x.LocalDate, x.Bids, x.Impressions, x.Conversions, x.PostViewConversions, x.PostClickConversions });

            Property(x => x.BuyerAccountId).HasColumnName("BuyerAccountID").IsRequired().HasColumnType("int");
            Property(x => x.AdvertiserId).HasColumnName("AdvertiserID").IsRequired().HasColumnType("int");
            Property(x => x.AdvertiserProductId).HasColumnName("AdvertiserProductID").IsRequired().HasColumnType("int");
            Property(x => x.CampaignId).HasColumnName("CampaignID").IsRequired().HasColumnType("int");
            Property(x => x.AdGroupId).HasColumnName("AdGroupID").IsRequired().HasColumnType("int");
            Property(x => x.OptimizationModelId).HasColumnName("OptimizationModelID").IsRequired().HasColumnType("int");
            Property(x => x.GeoCountryId).HasColumnName("GeoCountryID").IsRequired().HasColumnType("int");
            Property(x => x.CountryName).HasColumnName("CountryName").IsOptional().HasColumnType("nvarchar").HasMaxLength(50);
            Property(x => x.MobileCarrierName).HasColumnName("MobileCarrierName").IsOptional().HasColumnType("nvarchar").HasMaxLength(250);
            Property(x => x.Mcc).HasColumnName("MCC").IsRequired().HasColumnType("int");
            Property(x => x.Mnc).HasColumnName("MNC").IsRequired().HasColumnType("int");
            Property(x => x.LocalDate).HasColumnName("LocalDate").IsRequired().HasColumnType("date");
            Property(x => x.Bids).HasColumnName("Bids").IsRequired().HasColumnType("bigint");
            Property(x => x.Impressions).HasColumnName("Impressions").IsRequired().HasColumnType("bigint");
            Property(x => x.Clicks).HasColumnName("Clicks").IsOptional().HasColumnType("bigint");
            Property(x => x.UnfilteredClicks).HasColumnName("UnfilteredClicks").IsOptional().HasColumnType("bigint");
            Property(x => x.Conversions).HasColumnName("Conversions").IsRequired().HasColumnType("bigint");
            Property(x => x.PostViewConversions).HasColumnName("PostViewConversions").IsRequired().HasColumnType("bigint");
            Property(x => x.PostClickConversions).HasColumnName("PostClickConversions").IsRequired().HasColumnType("bigint");
            Property(x => x.SpendLocalMicros).HasColumnName("SpendLocalMicros").IsOptional().HasColumnType("bigint");
            Property(x => x.Spend).HasColumnName("Spend").IsOptional().HasColumnType("money").HasPrecision(19,4);
            Property(x => x.ClientCostLocalMicros).HasColumnName("ClientCostLocalMicros").IsOptional().HasColumnType("bigint");
            Property(x => x.ClientCostDollars).HasColumnName("ClientCostDollars").IsOptional().HasColumnType("money").HasPrecision(19,4);
            Property(x => x.MediaCostLocalMicros).HasColumnName("MediaCostLocalMicros").IsOptional().HasColumnType("bigint");
            Property(x => x.DataCostLocalMicros).HasColumnName("DataCostLocalMicros").IsOptional().HasColumnType("bigint");
            Property(x => x.MediaClientCostLocalMicros).HasColumnName("MediaClientCostLocalMicros").IsOptional().HasColumnType("bigint");
            Property(x => x.DataClientCostLocalMicros).HasColumnName("DataClientCostLocalMicros").IsOptional().HasColumnType("bigint");
            Property(x => x.AdSlotDurationInSeconds).HasColumnName("AdSlotDurationInSeconds").IsOptional().HasColumnType("bigint");
            Property(x => x.RawViews).HasColumnName("RawViews").IsOptional().HasColumnType("bigint");
            Property(x => x.IabViews).HasColumnName("IabViews").IsOptional().HasColumnType("bigint");
            Property(x => x.ViewDurationInSeconds).HasColumnName("ViewDurationInSeconds").IsOptional().HasColumnType("bigint");
            Property(x => x.Ctr).HasColumnName("CTR").IsOptional().HasColumnType("float");
            Property(x => x.Cpm).HasColumnName("CPM").IsOptional().HasColumnType("money").HasPrecision(19,4);
            Property(x => x.Cpc).HasColumnName("CPC").IsOptional().HasColumnType("money").HasPrecision(19,4);
            Property(x => x.Cpa).HasColumnName("CPA").IsOptional().HasColumnType("money").HasPrecision(19,4);
            Property(x => x.ClientCpm).HasColumnName("ClientCPM").IsOptional().HasColumnType("money").HasPrecision(19,4);
            Property(x => x.ClientCpc).HasColumnName("ClientCPC").IsOptional().HasColumnType("money").HasPrecision(19,4);
            Property(x => x.ClientCpa).HasColumnName("ClientCPA").IsOptional().HasColumnType("money").HasPrecision(19,4);
            Property(x => x.Cpms).HasColumnName("CPMs").IsOptional().HasColumnType("decimal").HasPrecision(38,14);
            Property(x => x.ClientCostCpms).HasColumnName("ClientCostCpms").IsOptional().HasColumnType("decimal").HasPrecision(38,14);
            Property(x => x.Cps).HasColumnName("CPS").IsOptional().HasColumnType("decimal").HasPrecision(38,14);
            Property(x => x.ClientCostCps).HasColumnName("ClientCostCps").IsOptional().HasColumnType("decimal").HasPrecision(38,14);
            Property(x => x.ViewableRatio).HasColumnName("ViewableRatio").IsOptional().HasColumnType("float");
            InitializePartial();
        }
        partial void InitializePartial();
    }

    // AdGroupMobileCarrierCombined
    internal partial class AdGroupMobileCarrierCombinedMap : EntityTypeConfiguration<AdGroupMobileCarrierCombined>
    {
        public AdGroupMobileCarrierCombinedMap()
            : this("analytics")
        {
        }
 
        public AdGroupMobileCarrierCombinedMap(string schema)
        {
            ToTable(schema + ".AdGroupMobileCarrierCombined");
            HasKey(x => new { x.BuyerAccountId, x.CampaignId, x.AdGroupId, x.OptimizationModelId, x.GeoCountryId, x.Mcc, x.Mnc, x.UtcDate, x.LocalDate, x.UtcDateTime, x.LocalDateTime, x.Bids, x.Impressions, x.Clicks, x.Conversions, x.PostViewConversions, x.PostClickConversions, x.MediaCostUsdMicros, x.MediaCostLocalMicros, x.DataCostLocalMicros });

            Property(x => x.BuyerAccountId).HasColumnName("BuyerAccountID").IsRequired().HasColumnType("int");
            Property(x => x.CampaignId).HasColumnName("CampaignID").IsRequired().HasColumnType("int");
            Property(x => x.AdGroupId).HasColumnName("AdGroupID").IsRequired().HasColumnType("int");
            Property(x => x.OptimizationModelId).HasColumnName("OptimizationModelID").IsRequired().HasColumnType("int");
            Property(x => x.GeoCountryId).HasColumnName("GeoCountryID").IsRequired().HasColumnType("int");
            Property(x => x.Mcc).HasColumnName("MCC").IsRequired().HasColumnType("int");
            Property(x => x.Mnc).HasColumnName("MNC").IsRequired().HasColumnType("int");
            Property(x => x.UtcDate).HasColumnName("UtcDate").IsRequired().HasColumnType("date");
            Property(x => x.LocalDate).HasColumnName("LocalDate").IsRequired().HasColumnType("date");
            Property(x => x.UtcDateTime).HasColumnName("UtcDateTime").IsRequired().HasColumnType("datetime");
            Property(x => x.LocalDateTime).HasColumnName("LocalDateTime").IsRequired().HasColumnType("datetime");
            Property(x => x.Bids).HasColumnName("Bids").IsRequired().HasColumnType("bigint");
            Property(x => x.Impressions).HasColumnName("Impressions").IsRequired().HasColumnType("bigint");
            Property(x => x.Clicks).HasColumnName("Clicks").IsRequired().HasColumnType("bigint");
            Property(x => x.Conversions).HasColumnName("Conversions").IsRequired().HasColumnType("bigint");
            Property(x => x.PostViewConversions).HasColumnName("PostViewConversions").IsRequired().HasColumnType("bigint");
            Property(x => x.PostClickConversions).HasColumnName("PostClickConversions").IsRequired().HasColumnType("bigint");
            Property(x => x.MediaCostUsdMicros).HasColumnName("MediaCostUsdMicros").IsRequired().HasColumnType("bigint");
            Property(x => x.MediaCostLocalMicros).HasColumnName("MediaCostLocalMicros").IsRequired().HasColumnType("bigint");
            Property(x => x.DataCostLocalMicros).HasColumnName("DataCostLocalMicros").IsRequired().HasColumnType("bigint");
            Property(x => x.InvalidImpressions).HasColumnName("InvalidImpressions").IsOptional().HasColumnType("bigint");
            Property(x => x.InvalidClicks).HasColumnName("InvalidClicks").IsOptional().HasColumnType("bigint");
            Property(x => x.FeesUsdSuperMicros).HasColumnName("FeesUsdSuperMicros").IsOptional().HasColumnType("bigint");
            Property(x => x.FeesLocalSuperMicros).HasColumnName("FeesLocalSuperMicros").IsOptional().HasColumnType("bigint");
            Property(x => x.AdSlotDurationInSeconds).HasColumnName("AdSlotDurationInSeconds").IsOptional().HasColumnType("bigint");
            Property(x => x.RawViews).HasColumnName("RawViews").IsOptional().HasColumnType("bigint");
            Property(x => x.IabViews).HasColumnName("IabViews").IsOptional().HasColumnType("bigint");
            Property(x => x.ViewDurationInSeconds).HasColumnName("ViewDurationInSeconds").IsOptional().HasColumnType("bigint");
            InitializePartial();
        }
        partial void InitializePartial();
    }

    // AdGroupMobileCarrierException
    internal partial class AdGroupMobileCarrierExceptionMap : EntityTypeConfiguration<AdGroupMobileCarrierException>
    {
        public AdGroupMobileCarrierExceptionMap()
            : this("analytics")
        {
        }
 
        public AdGroupMobileCarrierExceptionMap(string schema)
        {
            ToTable(schema + ".AdGroupMobileCarrierException");
            HasKey(x => new { x.BuyerAccountId, x.CampaignId, x.AdGroupId, x.OptimizationModelId, x.GeoCountryId, x.Mcc, x.Mnc, x.UtcDate, x.LocalDate, x.UtcDateTime, x.LocalDateTime, x.Bids, x.Impressions, x.Clicks, x.Conversions, x.PostViewConversions, x.PostClickConversions, x.MediaCostUsdMicros, x.MediaCostLocalMicros, x.DataCostLocalMicros });

            Property(x => x.BuyerAccountId).HasColumnName("BuyerAccountID").IsRequired().HasColumnType("int");
            Property(x => x.CampaignId).HasColumnName("CampaignID").IsRequired().HasColumnType("int");
            Property(x => x.AdGroupId).HasColumnName("AdGroupID").IsRequired().HasColumnType("int");
            Property(x => x.OptimizationModelId).HasColumnName("OptimizationModelID").IsRequired().HasColumnType("int");
            Property(x => x.GeoCountryId).HasColumnName("GeoCountryID").IsRequired().HasColumnType("int");
            Property(x => x.Mcc).HasColumnName("MCC").IsRequired().HasColumnType("int");
            Property(x => x.Mnc).HasColumnName("MNC").IsRequired().HasColumnType("int");
            Property(x => x.UtcDate).HasColumnName("UtcDate").IsRequired().HasColumnType("date");
            Property(x => x.LocalDate).HasColumnName("LocalDate").IsRequired().HasColumnType("date");
            Property(x => x.UtcDateTime).HasColumnName("UtcDateTime").IsRequired().HasColumnType("datetime");
            Property(x => x.LocalDateTime).HasColumnName("LocalDateTime").IsRequired().HasColumnType("datetime");
            Property(x => x.Bids).HasColumnName("Bids").IsRequired().HasColumnType("bigint");
            Property(x => x.Impressions).HasColumnName("Impressions").IsRequired().HasColumnType("bigint");
            Property(x => x.Clicks).HasColumnName("Clicks").IsRequired().HasColumnType("bigint");
            Property(x => x.Conversions).HasColumnName("Conversions").IsRequired().HasColumnType("bigint");
            Property(x => x.PostViewConversions).HasColumnName("PostViewConversions").IsRequired().HasColumnType("bigint");
            Property(x => x.PostClickConversions).HasColumnName("PostClickConversions").IsRequired().HasColumnType("bigint");
            Property(x => x.MediaCostUsdMicros).HasColumnName("MediaCostUsdMicros").IsRequired().HasColumnType("bigint");
            Property(x => x.MediaCostLocalMicros).HasColumnName("MediaCostLocalMicros").IsRequired().HasColumnType("bigint");
            Property(x => x.DataCostLocalMicros).HasColumnName("DataCostLocalMicros").IsRequired().HasColumnType("bigint");
            Property(x => x.InvalidImpressions).HasColumnName("InvalidImpressions").IsOptional().HasColumnType("bigint");
            Property(x => x.InvalidClicks).HasColumnName("InvalidClicks").IsOptional().HasColumnType("bigint");
            Property(x => x.FeesUsdSuperMicros).HasColumnName("FeesUsdSuperMicros").IsOptional().HasColumnType("bigint");
            Property(x => x.FeesLocalSuperMicros).HasColumnName("FeesLocalSuperMicros").IsOptional().HasColumnType("bigint");
            Property(x => x.AdSlotDurationInSeconds).HasColumnName("AdSlotDurationInSeconds").IsOptional().HasColumnType("bigint");
            Property(x => x.RawViews).HasColumnName("RawViews").IsOptional().HasColumnType("bigint");
            Property(x => x.IabViews).HasColumnName("IabViews").IsOptional().HasColumnType("bigint");
            Property(x => x.ViewDurationInSeconds).HasColumnName("ViewDurationInSeconds").IsOptional().HasColumnType("bigint");
            InitializePartial();
        }
        partial void InitializePartial();
    }

    // AdGroupMobileCarrierImport
    internal partial class AdGroupMobileCarrierImportMap : EntityTypeConfiguration<AdGroupMobileCarrierImport>
    {
        public AdGroupMobileCarrierImportMap()
            : this("analytics")
        {
        }
 
        public AdGroupMobileCarrierImportMap(string schema)
        {
            ToTable(schema + ".AdGroupMobileCarrierImport");
            HasKey(x => new { x.BuyerAccountId, x.CampaignId, x.AdGroupId, x.OptimizationModelId, x.GeoCountryId, x.Mcc, x.Mnc, x.UtcDate, x.LocalDate, x.UtcDateTime, x.LocalDateTime, x.Bids, x.Impressions, x.InvalidImpressions, x.Clicks, x.InvalidClicks, x.Conversions, x.PostViewConversions, x.PostClickConversions, x.MediaCostUsdMicros, x.MediaCostLocalMicros, x.DataCostLocalMicros, x.FeesUsdSuperMicros, x.FeesLocalSuperMicros, x.ReportId });

            Property(x => x.BuyerAccountId).HasColumnName("BuyerAccountID").IsRequired().HasColumnType("int");
            Property(x => x.CampaignId).HasColumnName("CampaignID").IsRequired().HasColumnType("int");
            Property(x => x.AdGroupId).HasColumnName("AdGroupID").IsRequired().HasColumnType("int");
            Property(x => x.OptimizationModelId).HasColumnName("OptimizationModelID").IsRequired().HasColumnType("int");
            Property(x => x.GeoCountryId).HasColumnName("GeoCountryID").IsRequired().HasColumnType("int");
            Property(x => x.Mcc).HasColumnName("MCC").IsRequired().HasColumnType("int");
            Property(x => x.Mnc).HasColumnName("MNC").IsRequired().HasColumnType("int");
            Property(x => x.UtcDate).HasColumnName("UtcDate").IsRequired().HasColumnType("date");
            Property(x => x.LocalDate).HasColumnName("LocalDate").IsRequired().HasColumnType("date");
            Property(x => x.UtcDateTime).HasColumnName("UtcDateTime").IsRequired().HasColumnType("datetime");
            Property(x => x.LocalDateTime).HasColumnName("LocalDateTime").IsRequired().HasColumnType("datetime");
            Property(x => x.Bids).HasColumnName("Bids").IsRequired().HasColumnType("bigint");
            Property(x => x.Impressions).HasColumnName("Impressions").IsRequired().HasColumnType("bigint");
            Property(x => x.InvalidImpressions).HasColumnName("InvalidImpressions").IsRequired().HasColumnType("bigint");
            Property(x => x.Clicks).HasColumnName("Clicks").IsRequired().HasColumnType("bigint");
            Property(x => x.InvalidClicks).HasColumnName("InvalidClicks").IsRequired().HasColumnType("bigint");
            Property(x => x.Conversions).HasColumnName("Conversions").IsRequired().HasColumnType("bigint");
            Property(x => x.PostViewConversions).HasColumnName("PostViewConversions").IsRequired().HasColumnType("bigint");
            Property(x => x.PostClickConversions).HasColumnName("PostClickConversions").IsRequired().HasColumnType("bigint");
            Property(x => x.MediaCostUsdMicros).HasColumnName("MediaCostUsdMicros").IsRequired().HasColumnType("bigint");
            Property(x => x.MediaCostLocalMicros).HasColumnName("MediaCostLocalMicros").IsRequired().HasColumnType("bigint");
            Property(x => x.DataCostLocalMicros).HasColumnName("DataCostLocalMicros").IsRequired().HasColumnType("bigint");
            Property(x => x.FeesUsdSuperMicros).HasColumnName("FeesUsdSuperMicros").IsRequired().HasColumnType("bigint");
            Property(x => x.FeesLocalSuperMicros).HasColumnName("FeesLocalSuperMicros").IsRequired().HasColumnType("bigint");
            Property(x => x.ReportId).HasColumnName("ReportID").IsRequired().HasColumnType("bigint");
            Property(x => x.AdSlotDurationInSeconds).HasColumnName("AdSlotDurationInSeconds").IsOptional().HasColumnType("bigint");
            Property(x => x.RawViews).HasColumnName("RawViews").IsOptional().HasColumnType("bigint");
            Property(x => x.IabViews).HasColumnName("IabViews").IsOptional().HasColumnType("bigint");
            Property(x => x.ViewDurationInSeconds).HasColumnName("ViewDurationInSeconds").IsOptional().HasColumnType("bigint");
            InitializePartial();
        }
        partial void InitializePartial();
    }

    // AdGroupMobileCarrierImportReportID
    internal partial class AdGroupMobileCarrierImportReportIdMap : EntityTypeConfiguration<AdGroupMobileCarrierImportReportId>
    {
        public AdGroupMobileCarrierImportReportIdMap()
            : this("analytics")
        {
        }
 
        public AdGroupMobileCarrierImportReportIdMap(string schema)
        {
            ToTable(schema + ".AdGroupMobileCarrierImportReportID");
            HasKey(x => new { x.BuyerAccountId, x.CampaignId, x.AdGroupId, x.OptimizationModelId, x.GeoCountryId, x.Mcc, x.Mnc, x.UtcDateTime, x.LocalDateTime, x.Bids, x.Impressions, x.InvalidImpressions, x.Clicks, x.InvalidClicks, x.Conversions, x.PostViewConversions, x.PostClickConversions, x.MediaCostUsdMicros, x.MediaCostLocalMicros, x.DataCostLocalMicros, x.FeesUsdSuperMicros, x.FeesLocalSuperMicros, x.ReportId });

            Property(x => x.BuyerAccountId).HasColumnName("BuyerAccountID").IsRequired().HasColumnType("int");
            Property(x => x.CampaignId).HasColumnName("CampaignID").IsRequired().HasColumnType("int");
            Property(x => x.AdGroupId).HasColumnName("AdGroupID").IsRequired().HasColumnType("int");
            Property(x => x.OptimizationModelId).HasColumnName("OptimizationModelID").IsRequired().HasColumnType("int");
            Property(x => x.GeoCountryId).HasColumnName("GeoCountryID").IsRequired().HasColumnType("int");
            Property(x => x.Mcc).HasColumnName("MCC").IsRequired().HasColumnType("int");
            Property(x => x.Mnc).HasColumnName("MNC").IsRequired().HasColumnType("int");
            Property(x => x.UtcDateTime).HasColumnName("UtcDateTime").IsRequired().HasColumnType("datetime");
            Property(x => x.LocalDateTime).HasColumnName("LocalDateTime").IsRequired().HasColumnType("datetime");
            Property(x => x.Bids).HasColumnName("Bids").IsRequired().HasColumnType("bigint");
            Property(x => x.Impressions).HasColumnName("Impressions").IsRequired().HasColumnType("bigint");
            Property(x => x.InvalidImpressions).HasColumnName("InvalidImpressions").IsRequired().HasColumnType("bigint");
            Property(x => x.Clicks).HasColumnName("Clicks").IsRequired().HasColumnType("bigint");
            Property(x => x.InvalidClicks).HasColumnName("InvalidClicks").IsRequired().HasColumnType("bigint");
            Property(x => x.Conversions).HasColumnName("Conversions").IsRequired().HasColumnType("bigint");
            Property(x => x.PostViewConversions).HasColumnName("PostViewConversions").IsRequired().HasColumnType("bigint");
            Property(x => x.PostClickConversions).HasColumnName("PostClickConversions").IsRequired().HasColumnType("bigint");
            Property(x => x.MediaCostUsdMicros).HasColumnName("MediaCostUsdMicros").IsRequired().HasColumnType("bigint");
            Property(x => x.MediaCostLocalMicros).HasColumnName("MediaCostLocalMicros").IsRequired().HasColumnType("bigint");
            Property(x => x.DataCostLocalMicros).HasColumnName("DataCostLocalMicros").IsRequired().HasColumnType("bigint");
            Property(x => x.FeesUsdSuperMicros).HasColumnName("FeesUsdSuperMicros").IsRequired().HasColumnType("bigint");
            Property(x => x.FeesLocalSuperMicros).HasColumnName("FeesLocalSuperMicros").IsRequired().HasColumnType("bigint");
            Property(x => x.ReportId).HasColumnName("ReportID").IsRequired().HasColumnType("bigint");
            Property(x => x.AdSlotDurationInSeconds).HasColumnName("AdSlotDurationInSeconds").IsOptional().HasColumnType("bigint");
            Property(x => x.RawViews).HasColumnName("RawViews").IsOptional().HasColumnType("bigint");
            Property(x => x.IabViews).HasColumnName("IabViews").IsOptional().HasColumnType("bigint");
            Property(x => x.ViewDurationInSeconds).HasColumnName("ViewDurationInSeconds").IsOptional().HasColumnType("bigint");
            InitializePartial();
        }
        partial void InitializePartial();
    }

    // AdGroupMobileCarrierReportID
    internal partial class AdGroupMobileCarrierReportIdMap : EntityTypeConfiguration<AdGroupMobileCarrierReportId>
    {
        public AdGroupMobileCarrierReportIdMap()
            : this("analytics")
        {
        }
 
        public AdGroupMobileCarrierReportIdMap(string schema)
        {
            ToTable(schema + ".AdGroupMobileCarrierReportID");
            HasKey(x => new { x.BuyerAccountId, x.CampaignId, x.AdGroupId, x.OptimizationModelId, x.GeoCountryId, x.Mcc, x.Mnc, x.UtcDate, x.LocalDate, x.UtcDateTime, x.LocalDateTime, x.Bids, x.Impressions, x.Clicks, x.Conversions, x.PostViewConversions, x.PostClickConversions, x.MediaCostUsdMicros, x.MediaCostLocalMicros, x.DataCostLocalMicros, x.ReportId });

            Property(x => x.BuyerAccountId).HasColumnName("BuyerAccountID").IsRequired().HasColumnType("int");
            Property(x => x.CampaignId).HasColumnName("CampaignID").IsRequired().HasColumnType("int");
            Property(x => x.AdGroupId).HasColumnName("AdGroupID").IsRequired().HasColumnType("int");
            Property(x => x.OptimizationModelId).HasColumnName("OptimizationModelID").IsRequired().HasColumnType("int");
            Property(x => x.GeoCountryId).HasColumnName("GeoCountryID").IsRequired().HasColumnType("int");
            Property(x => x.Mcc).HasColumnName("MCC").IsRequired().HasColumnType("int");
            Property(x => x.Mnc).HasColumnName("MNC").IsRequired().HasColumnType("int");
            Property(x => x.UtcDate).HasColumnName("UtcDate").IsRequired().HasColumnType("date");
            Property(x => x.LocalDate).HasColumnName("LocalDate").IsRequired().HasColumnType("date");
            Property(x => x.UtcDateTime).HasColumnName("UtcDateTime").IsRequired().HasColumnType("datetime");
            Property(x => x.LocalDateTime).HasColumnName("LocalDateTime").IsRequired().HasColumnType("datetime");
            Property(x => x.Bids).HasColumnName("Bids").IsRequired().HasColumnType("bigint");
            Property(x => x.Impressions).HasColumnName("Impressions").IsRequired().HasColumnType("bigint");
            Property(x => x.Clicks).HasColumnName("Clicks").IsRequired().HasColumnType("bigint");
            Property(x => x.Conversions).HasColumnName("Conversions").IsRequired().HasColumnType("bigint");
            Property(x => x.PostViewConversions).HasColumnName("PostViewConversions").IsRequired().HasColumnType("bigint");
            Property(x => x.PostClickConversions).HasColumnName("PostClickConversions").IsRequired().HasColumnType("bigint");
            Property(x => x.MediaCostUsdMicros).HasColumnName("MediaCostUsdMicros").IsRequired().HasColumnType("bigint");
            Property(x => x.MediaCostLocalMicros).HasColumnName("MediaCostLocalMicros").IsRequired().HasColumnType("bigint");
            Property(x => x.DataCostLocalMicros).HasColumnName("DataCostLocalMicros").IsRequired().HasColumnType("bigint");
            Property(x => x.InvalidImpressions).HasColumnName("InvalidImpressions").IsOptional().HasColumnType("bigint");
            Property(x => x.InvalidClicks).HasColumnName("InvalidClicks").IsOptional().HasColumnType("bigint");
            Property(x => x.FeesUsdSuperMicros).HasColumnName("FeesUsdSuperMicros").IsOptional().HasColumnType("bigint");
            Property(x => x.FeesLocalSuperMicros).HasColumnName("FeesLocalSuperMicros").IsOptional().HasColumnType("bigint");
            Property(x => x.ReportId).HasColumnName("ReportID").IsRequired().HasColumnType("bigint");
            Property(x => x.AdSlotDurationInSeconds).HasColumnName("AdSlotDurationInSeconds").IsOptional().HasColumnType("bigint");
            Property(x => x.RawViews).HasColumnName("RawViews").IsOptional().HasColumnType("bigint");
            Property(x => x.IabViews).HasColumnName("IabViews").IsOptional().HasColumnType("bigint");
            Property(x => x.ViewDurationInSeconds).HasColumnName("ViewDurationInSeconds").IsOptional().HasColumnType("bigint");
            InitializePartial();
        }
        partial void InitializePartial();
    }

    // AdGroupMobileCarrierTargetingReportID
    internal partial class AdGroupMobileCarrierTargetingReportIdMap : EntityTypeConfiguration<AdGroupMobileCarrierTargetingReportId>
    {
        public AdGroupMobileCarrierTargetingReportIdMap()
            : this("dbo")
        {
        }
 
        public AdGroupMobileCarrierTargetingReportIdMap(string schema)
        {
            ToTable(schema + ".AdGroupMobileCarrierTargetingReportID");
            HasKey(x => new { x.GeoCountryId, x.CountryName, x.Mcc, x.Mnc, x.IsTargeted, x.PackageInstalled });

            Property(x => x.BuyerAccountId).HasColumnName("BuyerAccountID").IsOptional().HasColumnType("int");
            Property(x => x.CampaignId).HasColumnName("CampaignID").IsOptional().HasColumnType("int");
            Property(x => x.AdGroupId).HasColumnName("AdGroupID").IsOptional().HasColumnType("int");
            Property(x => x.GeoCountryId).HasColumnName("GeoCountryID").IsRequired().HasColumnType("int");
            Property(x => x.CountryName).HasColumnName("CountryName").IsRequired().HasColumnType("nvarchar").HasMaxLength(50);
            Property(x => x.MobileCarrierName).HasColumnName("MobileCarrierName").IsOptional().HasColumnType("nvarchar").HasMaxLength(250);
            Property(x => x.Mcc).HasColumnName("MCC").IsRequired().HasColumnType("int");
            Property(x => x.Mnc).HasColumnName("MNC").IsRequired().HasColumnType("int");
            Property(x => x.IsTargeted).HasColumnName("IsTargeted").IsRequired().HasColumnType("int");
            Property(x => x.PackageInstalled).HasColumnName("PackageInstalled").IsRequired().HasColumnType("int");
            Property(x => x.Bids).HasColumnName("Bids").IsOptional().HasColumnType("bigint");
            Property(x => x.Impressions).HasColumnName("Impressions").IsOptional().HasColumnType("bigint");
            Property(x => x.Clicks).HasColumnName("Clicks").IsOptional().HasColumnType("bigint");
            Property(x => x.Conversions).HasColumnName("Conversions").IsOptional().HasColumnType("bigint");
            Property(x => x.PostViewConversions).HasColumnName("PostViewConversions").IsOptional().HasColumnType("bigint");
            Property(x => x.PostClickConversions).HasColumnName("PostClickConversions").IsOptional().HasColumnType("bigint");
            Property(x => x.SpendLocalMicros).HasColumnName("SpendLocalMicros").IsOptional().HasColumnType("bigint");
            Property(x => x.Spend).HasColumnName("Spend").IsOptional().HasColumnType("money").HasPrecision(19,4);
            Property(x => x.ClientCostLocalMicros).HasColumnName("ClientCostLocalMicros").IsOptional().HasColumnType("decimal").HasPrecision(38,4);
            Property(x => x.ClientCostDollars).HasColumnName("ClientCostDollars").IsOptional().HasColumnType("money").HasPrecision(19,4);
            Property(x => x.MediaCostLocalMicros).HasColumnName("MediaCostLocalMicros").IsOptional().HasColumnType("bigint");
            Property(x => x.DataCostLocalMicros).HasColumnName("DataCostLocalMicros").IsOptional().HasColumnType("bigint");
            Property(x => x.MediaClientCostLocalMicros).HasColumnName("MediaClientCostLocalMicros").IsOptional().HasColumnType("decimal").HasPrecision(38,4);
            Property(x => x.DataClientCostLocalMicros).HasColumnName("DataClientCostLocalMicros").IsOptional().HasColumnType("decimal").HasPrecision(38,4);
            Property(x => x.AdSlotDurationInSeconds).HasColumnName("AdSlotDurationInSeconds").IsOptional().HasColumnType("bigint");
            Property(x => x.RawViews).HasColumnName("RawViews").IsOptional().HasColumnType("bigint");
            Property(x => x.IabViews).HasColumnName("IabViews").IsOptional().HasColumnType("bigint");
            Property(x => x.ViewDurationInSeconds).HasColumnName("ViewDurationInSeconds").IsOptional().HasColumnType("bigint");
            Property(x => x.Ctr).HasColumnName("CTR").IsOptional().HasColumnType("float");
            Property(x => x.Cpm).HasColumnName("CPM").IsOptional().HasColumnType("decimal").HasPrecision(19,4);
            Property(x => x.Cpc).HasColumnName("CPC").IsOptional().HasColumnType("decimal").HasPrecision(19,4);
            Property(x => x.Cpa).HasColumnName("CPA").IsOptional().HasColumnType("decimal").HasPrecision(19,4);
            Property(x => x.ClientCostCpm).HasColumnName("ClientCostCPM").IsOptional().HasColumnType("decimal").HasPrecision(19,4);
            Property(x => x.ClientCostCpc).HasColumnName("ClientCostCPC").IsOptional().HasColumnType("decimal").HasPrecision(19,4);
            Property(x => x.ClientCostCpa).HasColumnName("ClientCostCPA").IsOptional().HasColumnType("decimal").HasPrecision(19,4);
            Property(x => x.Cpms).HasColumnName("CPMs").IsOptional().HasColumnType("decimal").HasPrecision(38,14);
            Property(x => x.ClientCostCpms).HasColumnName("ClientCostCpms").IsOptional().HasColumnType("decimal").HasPrecision(38,14);
            Property(x => x.Cps).HasColumnName("CPS").IsOptional().HasColumnType("decimal").HasPrecision(38,14);
            Property(x => x.ClientCostCps).HasColumnName("ClientCostCps").IsOptional().HasColumnType("decimal").HasPrecision(38,14);
            Property(x => x.ViewableRatio).HasColumnName("ViewableRatio").IsOptional().HasColumnType("float");
            InitializePartial();
        }
        partial void InitializePartial();
    }

    // AdGroupPagePosition
    internal partial class AdGroupPagePositionMap : EntityTypeConfiguration<AdGroupPagePosition>
    {
        public AdGroupPagePositionMap()
            : this("analytics")
        {
        }
 
        public AdGroupPagePositionMap(string schema)
        {
            ToTable(schema + ".AdGroupPagePosition");
            HasKey(x => new { x.BuyerAccountId, x.CampaignId, x.AdGroupId, x.OptimizationModelId, x.PagePositionId, x.UtcDate, x.LocalDate, x.UtcDateTime, x.LocalDateTime, x.Bids, x.Impressions, x.Clicks, x.Conversions, x.PostViewConversions, x.PostClickConversions, x.MediaCostUsdMicros, x.MediaCostLocalMicros, x.DataCostLocalMicros });

            Property(x => x.BuyerAccountId).HasColumnName("BuyerAccountID").IsRequired().HasColumnType("int");
            Property(x => x.CampaignId).HasColumnName("CampaignID").IsRequired().HasColumnType("int");
            Property(x => x.AdGroupId).HasColumnName("AdGroupID").IsRequired().HasColumnType("int");
            Property(x => x.OptimizationModelId).HasColumnName("OptimizationModelID").IsRequired().HasColumnType("int");
            Property(x => x.PagePositionId).HasColumnName("PagePositionID").IsRequired().HasColumnType("int");
            Property(x => x.UtcDate).HasColumnName("UtcDate").IsRequired().HasColumnType("date");
            Property(x => x.LocalDate).HasColumnName("LocalDate").IsRequired().HasColumnType("date");
            Property(x => x.UtcDateTime).HasColumnName("UtcDateTime").IsRequired().HasColumnType("datetime");
            Property(x => x.LocalDateTime).HasColumnName("LocalDateTime").IsRequired().HasColumnType("datetime");
            Property(x => x.Bids).HasColumnName("Bids").IsRequired().HasColumnType("bigint");
            Property(x => x.Impressions).HasColumnName("Impressions").IsRequired().HasColumnType("bigint");
            Property(x => x.Clicks).HasColumnName("Clicks").IsRequired().HasColumnType("bigint");
            Property(x => x.Conversions).HasColumnName("Conversions").IsRequired().HasColumnType("bigint");
            Property(x => x.PostViewConversions).HasColumnName("PostViewConversions").IsRequired().HasColumnType("bigint");
            Property(x => x.PostClickConversions).HasColumnName("PostClickConversions").IsRequired().HasColumnType("bigint");
            Property(x => x.MediaCostUsdMicros).HasColumnName("MediaCostUsdMicros").IsRequired().HasColumnType("bigint");
            Property(x => x.MediaCostLocalMicros).HasColumnName("MediaCostLocalMicros").IsRequired().HasColumnType("bigint");
            Property(x => x.DataCostLocalMicros).HasColumnName("DataCostLocalMicros").IsRequired().HasColumnType("bigint");
            Property(x => x.InvalidImpressions).HasColumnName("InvalidImpressions").IsOptional().HasColumnType("bigint");
            Property(x => x.InvalidClicks).HasColumnName("InvalidClicks").IsOptional().HasColumnType("bigint");
            Property(x => x.FeesUsdSuperMicros).HasColumnName("FeesUsdSuperMicros").IsOptional().HasColumnType("bigint");
            Property(x => x.FeesLocalSuperMicros).HasColumnName("FeesLocalSuperMicros").IsOptional().HasColumnType("bigint");
            Property(x => x.AdSlotDurationInSeconds).HasColumnName("AdSlotDurationInSeconds").IsOptional().HasColumnType("bigint");
            Property(x => x.RawViews).HasColumnName("RawViews").IsOptional().HasColumnType("bigint");
            Property(x => x.IabViews).HasColumnName("IabViews").IsOptional().HasColumnType("bigint");
            Property(x => x.ViewDurationInSeconds).HasColumnName("ViewDurationInSeconds").IsOptional().HasColumnType("bigint");
            InitializePartial();
        }
        partial void InitializePartial();
    }

    // AdGroupPagePositionAnalyticsReportID
    internal partial class AdGroupPagePositionAnalyticsReportIdMap : EntityTypeConfiguration<AdGroupPagePositionAnalyticsReportId>
    {
        public AdGroupPagePositionAnalyticsReportIdMap()
            : this("dbo")
        {
        }
 
        public AdGroupPagePositionAnalyticsReportIdMap(string schema)
        {
            ToTable(schema + ".AdGroupPagePositionAnalyticsReportID");
            HasKey(x => new { x.BuyerAccountId, x.AdvertiserId, x.AdvertiserProductId, x.CampaignId, x.AdGroupId, x.OptimizationModelId, x.PagePositionId, x.PagePositionName, x.LocalDate, x.Bids, x.Impressions, x.Conversions, x.PostViewConversions, x.PostClickConversions, x.MediaCostLocalMicros, x.DataCostLocalMicros });

            Property(x => x.BuyerAccountId).HasColumnName("BuyerAccountID").IsRequired().HasColumnType("int");
            Property(x => x.AdvertiserId).HasColumnName("AdvertiserID").IsRequired().HasColumnType("int");
            Property(x => x.AdvertiserProductId).HasColumnName("AdvertiserProductID").IsRequired().HasColumnType("int");
            Property(x => x.CampaignId).HasColumnName("CampaignID").IsRequired().HasColumnType("int");
            Property(x => x.AdGroupId).HasColumnName("AdGroupID").IsRequired().HasColumnType("int");
            Property(x => x.OptimizationModelId).HasColumnName("OptimizationModelID").IsRequired().HasColumnType("int");
            Property(x => x.PagePositionId).HasColumnName("PagePositionID").IsRequired().HasColumnType("int");
            Property(x => x.PagePositionName).HasColumnName("PagePositionName").IsRequired().HasColumnType("nvarchar").HasMaxLength(50);
            Property(x => x.LocalDate).HasColumnName("LocalDate").IsRequired().HasColumnType("date");
            Property(x => x.Bids).HasColumnName("Bids").IsRequired().HasColumnType("bigint");
            Property(x => x.Impressions).HasColumnName("Impressions").IsRequired().HasColumnType("bigint");
            Property(x => x.Clicks).HasColumnName("Clicks").IsOptional().HasColumnType("bigint");
            Property(x => x.UnfilteredClicks).HasColumnName("UnfilteredClicks").IsOptional().HasColumnType("bigint");
            Property(x => x.Conversions).HasColumnName("Conversions").IsRequired().HasColumnType("bigint");
            Property(x => x.PostViewConversions).HasColumnName("PostViewConversions").IsRequired().HasColumnType("bigint");
            Property(x => x.PostClickConversions).HasColumnName("PostClickConversions").IsRequired().HasColumnType("bigint");
            Property(x => x.SpendLocalMicros).HasColumnName("SpendLocalMicros").IsOptional().HasColumnType("bigint");
            Property(x => x.Spend).HasColumnName("Spend").IsOptional().HasColumnType("money").HasPrecision(19,4);
            Property(x => x.ClientCostLocalMicros).HasColumnName("ClientCostLocalMicros").IsOptional().HasColumnType("bigint");
            Property(x => x.ClientCostDollars).HasColumnName("ClientCostDollars").IsOptional().HasColumnType("money").HasPrecision(19,4);
            Property(x => x.MediaCostLocalMicros).HasColumnName("MediaCostLocalMicros").IsRequired().HasColumnType("bigint");
            Property(x => x.DataCostLocalMicros).HasColumnName("DataCostLocalMicros").IsRequired().HasColumnType("bigint");
            Property(x => x.MediaClientCostLocalMicros).HasColumnName("MediaClientCostLocalMicros").IsOptional().HasColumnType("bigint");
            Property(x => x.DataClientCostLocalMicros).HasColumnName("DataClientCostLocalMicros").IsOptional().HasColumnType("bigint");
            Property(x => x.AdSlotDurationInSeconds).HasColumnName("AdSlotDurationInSeconds").IsOptional().HasColumnType("bigint");
            Property(x => x.RawViews).HasColumnName("RawViews").IsOptional().HasColumnType("bigint");
            Property(x => x.IabViews).HasColumnName("IabViews").IsOptional().HasColumnType("bigint");
            Property(x => x.ViewDurationInSeconds).HasColumnName("ViewDurationInSeconds").IsOptional().HasColumnType("bigint");
            Property(x => x.Ctr).HasColumnName("CTR").IsOptional().HasColumnType("float");
            Property(x => x.Cpm).HasColumnName("CPM").IsOptional().HasColumnType("money").HasPrecision(19,4);
            Property(x => x.Cpc).HasColumnName("CPC").IsOptional().HasColumnType("money").HasPrecision(19,4);
            Property(x => x.Cpa).HasColumnName("CPA").IsOptional().HasColumnType("money").HasPrecision(19,4);
            Property(x => x.ClientCpm).HasColumnName("ClientCPM").IsOptional().HasColumnType("money").HasPrecision(19,4);
            Property(x => x.ClientCpc).HasColumnName("ClientCPC").IsOptional().HasColumnType("money").HasPrecision(19,4);
            Property(x => x.ClientCpa).HasColumnName("ClientCPA").IsOptional().HasColumnType("money").HasPrecision(19,4);
            Property(x => x.Cpms).HasColumnName("CPMs").IsOptional().HasColumnType("decimal").HasPrecision(38,14);
            Property(x => x.ClientCostCpms).HasColumnName("ClientCostCpms").IsOptional().HasColumnType("decimal").HasPrecision(38,14);
            Property(x => x.Cps).HasColumnName("CPS").IsOptional().HasColumnType("decimal").HasPrecision(38,14);
            Property(x => x.ClientCostCps).HasColumnName("ClientCostCps").IsOptional().HasColumnType("decimal").HasPrecision(38,14);
            Property(x => x.ViewableRatio).HasColumnName("ViewableRatio").IsOptional().HasColumnType("float");
            InitializePartial();
        }
        partial void InitializePartial();
    }

    // AdGroupPagePositionCombined
    internal partial class AdGroupPagePositionCombinedMap : EntityTypeConfiguration<AdGroupPagePositionCombined>
    {
        public AdGroupPagePositionCombinedMap()
            : this("analytics")
        {
        }
 
        public AdGroupPagePositionCombinedMap(string schema)
        {
            ToTable(schema + ".AdGroupPagePositionCombined");
            HasKey(x => new { x.BuyerAccountId, x.CampaignId, x.AdGroupId, x.OptimizationModelId, x.PagePositionId, x.UtcDate, x.LocalDate, x.UtcDateTime, x.LocalDateTime, x.Bids, x.Impressions, x.Clicks, x.Conversions, x.PostViewConversions, x.PostClickConversions, x.MediaCostUsdMicros, x.MediaCostLocalMicros, x.DataCostLocalMicros });

            Property(x => x.BuyerAccountId).HasColumnName("BuyerAccountID").IsRequired().HasColumnType("int");
            Property(x => x.CampaignId).HasColumnName("CampaignID").IsRequired().HasColumnType("int");
            Property(x => x.AdGroupId).HasColumnName("AdGroupID").IsRequired().HasColumnType("int");
            Property(x => x.OptimizationModelId).HasColumnName("OptimizationModelID").IsRequired().HasColumnType("int");
            Property(x => x.PagePositionId).HasColumnName("PagePositionID").IsRequired().HasColumnType("int");
            Property(x => x.UtcDate).HasColumnName("UtcDate").IsRequired().HasColumnType("date");
            Property(x => x.LocalDate).HasColumnName("LocalDate").IsRequired().HasColumnType("date");
            Property(x => x.UtcDateTime).HasColumnName("UtcDateTime").IsRequired().HasColumnType("datetime");
            Property(x => x.LocalDateTime).HasColumnName("LocalDateTime").IsRequired().HasColumnType("datetime");
            Property(x => x.Bids).HasColumnName("Bids").IsRequired().HasColumnType("bigint");
            Property(x => x.Impressions).HasColumnName("Impressions").IsRequired().HasColumnType("bigint");
            Property(x => x.Clicks).HasColumnName("Clicks").IsRequired().HasColumnType("bigint");
            Property(x => x.Conversions).HasColumnName("Conversions").IsRequired().HasColumnType("bigint");
            Property(x => x.PostViewConversions).HasColumnName("PostViewConversions").IsRequired().HasColumnType("bigint");
            Property(x => x.PostClickConversions).HasColumnName("PostClickConversions").IsRequired().HasColumnType("bigint");
            Property(x => x.MediaCostUsdMicros).HasColumnName("MediaCostUsdMicros").IsRequired().HasColumnType("bigint");
            Property(x => x.MediaCostLocalMicros).HasColumnName("MediaCostLocalMicros").IsRequired().HasColumnType("bigint");
            Property(x => x.DataCostLocalMicros).HasColumnName("DataCostLocalMicros").IsRequired().HasColumnType("bigint");
            Property(x => x.InvalidImpressions).HasColumnName("InvalidImpressions").IsOptional().HasColumnType("bigint");
            Property(x => x.InvalidClicks).HasColumnName("InvalidClicks").IsOptional().HasColumnType("bigint");
            Property(x => x.FeesUsdSuperMicros).HasColumnName("FeesUsdSuperMicros").IsOptional().HasColumnType("bigint");
            Property(x => x.FeesLocalSuperMicros).HasColumnName("FeesLocalSuperMicros").IsOptional().HasColumnType("bigint");
            Property(x => x.AdSlotDurationInSeconds).HasColumnName("AdSlotDurationInSeconds").IsOptional().HasColumnType("bigint");
            Property(x => x.RawViews).HasColumnName("RawViews").IsOptional().HasColumnType("bigint");
            Property(x => x.IabViews).HasColumnName("IabViews").IsOptional().HasColumnType("bigint");
            Property(x => x.ViewDurationInSeconds).HasColumnName("ViewDurationInSeconds").IsOptional().HasColumnType("bigint");
            InitializePartial();
        }
        partial void InitializePartial();
    }

    // AdGroupPagePositionException
    internal partial class AdGroupPagePositionExceptionMap : EntityTypeConfiguration<AdGroupPagePositionException>
    {
        public AdGroupPagePositionExceptionMap()
            : this("analytics")
        {
        }
 
        public AdGroupPagePositionExceptionMap(string schema)
        {
            ToTable(schema + ".AdGroupPagePositionException");
            HasKey(x => new { x.BuyerAccountId, x.CampaignId, x.AdGroupId, x.OptimizationModelId, x.PagePositionId, x.UtcDateTime, x.LocalDateTime, x.Bids, x.Impressions, x.InvalidImpressions, x.Clicks, x.InvalidClicks, x.Conversions, x.PostViewConversions, x.PostClickConversions, x.MediaCostUsdMicros, x.MediaCostLocalMicros, x.DataCostLocalMicros, x.FeesUsdSuperMicros, x.FeesLocalSuperMicros });

            Property(x => x.BuyerAccountId).HasColumnName("BuyerAccountID").IsRequired().HasColumnType("int");
            Property(x => x.CampaignId).HasColumnName("CampaignID").IsRequired().HasColumnType("int");
            Property(x => x.AdGroupId).HasColumnName("AdGroupID").IsRequired().HasColumnType("int");
            Property(x => x.OptimizationModelId).HasColumnName("OptimizationModelID").IsRequired().HasColumnType("int");
            Property(x => x.PagePositionId).HasColumnName("PagePositionID").IsRequired().HasColumnType("int");
            Property(x => x.UtcDateTime).HasColumnName("UtcDateTime").IsRequired().HasColumnType("datetime");
            Property(x => x.LocalDateTime).HasColumnName("LocalDateTime").IsRequired().HasColumnType("datetime");
            Property(x => x.Bids).HasColumnName("Bids").IsRequired().HasColumnType("bigint");
            Property(x => x.Impressions).HasColumnName("Impressions").IsRequired().HasColumnType("bigint");
            Property(x => x.InvalidImpressions).HasColumnName("InvalidImpressions").IsRequired().HasColumnType("bigint");
            Property(x => x.Clicks).HasColumnName("Clicks").IsRequired().HasColumnType("bigint");
            Property(x => x.InvalidClicks).HasColumnName("InvalidClicks").IsRequired().HasColumnType("bigint");
            Property(x => x.Conversions).HasColumnName("Conversions").IsRequired().HasColumnType("bigint");
            Property(x => x.PostViewConversions).HasColumnName("PostViewConversions").IsRequired().HasColumnType("bigint");
            Property(x => x.PostClickConversions).HasColumnName("PostClickConversions").IsRequired().HasColumnType("bigint");
            Property(x => x.MediaCostUsdMicros).HasColumnName("MediaCostUsdMicros").IsRequired().HasColumnType("bigint");
            Property(x => x.MediaCostLocalMicros).HasColumnName("MediaCostLocalMicros").IsRequired().HasColumnType("bigint");
            Property(x => x.DataCostLocalMicros).HasColumnName("DataCostLocalMicros").IsRequired().HasColumnType("bigint");
            Property(x => x.FeesUsdSuperMicros).HasColumnName("FeesUsdSuperMicros").IsRequired().HasColumnType("bigint");
            Property(x => x.FeesLocalSuperMicros).HasColumnName("FeesLocalSuperMicros").IsRequired().HasColumnType("bigint");
            Property(x => x.AdSlotDurationInSeconds).HasColumnName("AdSlotDurationInSeconds").IsOptional().HasColumnType("bigint");
            Property(x => x.RawViews).HasColumnName("RawViews").IsOptional().HasColumnType("bigint");
            Property(x => x.IabViews).HasColumnName("IabViews").IsOptional().HasColumnType("bigint");
            Property(x => x.ViewDurationInSeconds).HasColumnName("ViewDurationInSeconds").IsOptional().HasColumnType("bigint");
            InitializePartial();
        }
        partial void InitializePartial();
    }

    // AdGroupPagePositionImport
    internal partial class AdGroupPagePositionImportMap : EntityTypeConfiguration<AdGroupPagePositionImport>
    {
        public AdGroupPagePositionImportMap()
            : this("analytics")
        {
        }
 
        public AdGroupPagePositionImportMap(string schema)
        {
            ToTable(schema + ".AdGroupPagePositionImport");
            HasKey(x => new { x.BuyerAccountId, x.CampaignId, x.AdGroupId, x.OptimizationModelId, x.PagePositionId, x.UtcDateTime, x.LocalDateTime, x.Bids, x.Impressions, x.InvalidImpressions, x.Clicks, x.InvalidClicks, x.Conversions, x.PostViewConversions, x.PostClickConversions, x.MediaCostUsdMicros, x.MediaCostLocalMicros, x.DataCostLocalMicros, x.FeesUsdSuperMicros, x.FeesLocalSuperMicros });

            Property(x => x.BuyerAccountId).HasColumnName("BuyerAccountID").IsRequired().HasColumnType("int");
            Property(x => x.CampaignId).HasColumnName("CampaignID").IsRequired().HasColumnType("int");
            Property(x => x.AdGroupId).HasColumnName("AdGroupID").IsRequired().HasColumnType("int");
            Property(x => x.OptimizationModelId).HasColumnName("OptimizationModelID").IsRequired().HasColumnType("int");
            Property(x => x.PagePositionId).HasColumnName("PagePositionID").IsRequired().HasColumnType("int");
            Property(x => x.UtcDateTime).HasColumnName("UtcDateTime").IsRequired().HasColumnType("datetime");
            Property(x => x.LocalDateTime).HasColumnName("LocalDateTime").IsRequired().HasColumnType("datetime");
            Property(x => x.Bids).HasColumnName("Bids").IsRequired().HasColumnType("bigint");
            Property(x => x.Impressions).HasColumnName("Impressions").IsRequired().HasColumnType("bigint");
            Property(x => x.InvalidImpressions).HasColumnName("InvalidImpressions").IsRequired().HasColumnType("bigint");
            Property(x => x.Clicks).HasColumnName("Clicks").IsRequired().HasColumnType("bigint");
            Property(x => x.InvalidClicks).HasColumnName("InvalidClicks").IsRequired().HasColumnType("bigint");
            Property(x => x.Conversions).HasColumnName("Conversions").IsRequired().HasColumnType("bigint");
            Property(x => x.PostViewConversions).HasColumnName("PostViewConversions").IsRequired().HasColumnType("bigint");
            Property(x => x.PostClickConversions).HasColumnName("PostClickConversions").IsRequired().HasColumnType("bigint");
            Property(x => x.MediaCostUsdMicros).HasColumnName("MediaCostUsdMicros").IsRequired().HasColumnType("bigint");
            Property(x => x.MediaCostLocalMicros).HasColumnName("MediaCostLocalMicros").IsRequired().HasColumnType("bigint");
            Property(x => x.DataCostLocalMicros).HasColumnName("DataCostLocalMicros").IsRequired().HasColumnType("bigint");
            Property(x => x.FeesUsdSuperMicros).HasColumnName("FeesUsdSuperMicros").IsRequired().HasColumnType("bigint");
            Property(x => x.FeesLocalSuperMicros).HasColumnName("FeesLocalSuperMicros").IsRequired().HasColumnType("bigint");
            Property(x => x.AdSlotDurationInSeconds).HasColumnName("AdSlotDurationInSeconds").IsOptional().HasColumnType("bigint");
            Property(x => x.RawViews).HasColumnName("RawViews").IsOptional().HasColumnType("bigint");
            Property(x => x.IabViews).HasColumnName("IabViews").IsOptional().HasColumnType("bigint");
            Property(x => x.ViewDurationInSeconds).HasColumnName("ViewDurationInSeconds").IsOptional().HasColumnType("bigint");
            InitializePartial();
        }
        partial void InitializePartial();
    }

    // AdGroupPagePositionImportReportID
    internal partial class AdGroupPagePositionImportReportIdMap : EntityTypeConfiguration<AdGroupPagePositionImportReportId>
    {
        public AdGroupPagePositionImportReportIdMap()
            : this("analytics")
        {
        }
 
        public AdGroupPagePositionImportReportIdMap(string schema)
        {
            ToTable(schema + ".AdGroupPagePositionImportReportID");
            HasKey(x => new { x.BuyerAccountId, x.CampaignId, x.AdGroupId, x.OptimizationModelId, x.PagePositionId, x.UtcDateTime, x.LocalDateTime, x.Bids, x.Impressions, x.InvalidImpressions, x.Clicks, x.InvalidClicks, x.Conversions, x.PostViewConversions, x.PostClickConversions, x.MediaCostUsdMicros, x.MediaCostLocalMicros, x.DataCostLocalMicros, x.FeesUsdSuperMicros, x.FeesLocalSuperMicros, x.ReportId });

            Property(x => x.BuyerAccountId).HasColumnName("BuyerAccountID").IsRequired().HasColumnType("int");
            Property(x => x.CampaignId).HasColumnName("CampaignID").IsRequired().HasColumnType("int");
            Property(x => x.AdGroupId).HasColumnName("AdGroupID").IsRequired().HasColumnType("int");
            Property(x => x.OptimizationModelId).HasColumnName("OptimizationModelID").IsRequired().HasColumnType("int");
            Property(x => x.PagePositionId).HasColumnName("PagePositionID").IsRequired().HasColumnType("int");
            Property(x => x.UtcDateTime).HasColumnName("UtcDateTime").IsRequired().HasColumnType("datetime");
            Property(x => x.LocalDateTime).HasColumnName("LocalDateTime").IsRequired().HasColumnType("datetime");
            Property(x => x.Bids).HasColumnName("Bids").IsRequired().HasColumnType("bigint");
            Property(x => x.Impressions).HasColumnName("Impressions").IsRequired().HasColumnType("bigint");
            Property(x => x.InvalidImpressions).HasColumnName("InvalidImpressions").IsRequired().HasColumnType("bigint");
            Property(x => x.Clicks).HasColumnName("Clicks").IsRequired().HasColumnType("bigint");
            Property(x => x.InvalidClicks).HasColumnName("InvalidClicks").IsRequired().HasColumnType("bigint");
            Property(x => x.Conversions).HasColumnName("Conversions").IsRequired().HasColumnType("bigint");
            Property(x => x.PostViewConversions).HasColumnName("PostViewConversions").IsRequired().HasColumnType("bigint");
            Property(x => x.PostClickConversions).HasColumnName("PostClickConversions").IsRequired().HasColumnType("bigint");
            Property(x => x.MediaCostUsdMicros).HasColumnName("MediaCostUsdMicros").IsRequired().HasColumnType("bigint");
            Property(x => x.MediaCostLocalMicros).HasColumnName("MediaCostLocalMicros").IsRequired().HasColumnType("bigint");
            Property(x => x.DataCostLocalMicros).HasColumnName("DataCostLocalMicros").IsRequired().HasColumnType("bigint");
            Property(x => x.FeesUsdSuperMicros).HasColumnName("FeesUsdSuperMicros").IsRequired().HasColumnType("bigint");
            Property(x => x.FeesLocalSuperMicros).HasColumnName("FeesLocalSuperMicros").IsRequired().HasColumnType("bigint");
            Property(x => x.ReportId).HasColumnName("ReportID").IsRequired().HasColumnType("bigint");
            Property(x => x.AdSlotDurationInSeconds).HasColumnName("AdSlotDurationInSeconds").IsOptional().HasColumnType("bigint");
            Property(x => x.RawViews).HasColumnName("RawViews").IsOptional().HasColumnType("bigint");
            Property(x => x.IabViews).HasColumnName("IabViews").IsOptional().HasColumnType("bigint");
            Property(x => x.ViewDurationInSeconds).HasColumnName("ViewDurationInSeconds").IsOptional().HasColumnType("bigint");
            InitializePartial();
        }
        partial void InitializePartial();
    }

    // AdGroupPagePositionReportID
    internal partial class AdGroupPagePositionReportIdMap : EntityTypeConfiguration<AdGroupPagePositionReportId>
    {
        public AdGroupPagePositionReportIdMap()
            : this("analytics")
        {
        }
 
        public AdGroupPagePositionReportIdMap(string schema)
        {
            ToTable(schema + ".AdGroupPagePositionReportID");
            HasKey(x => new { x.BuyerAccountId, x.CampaignId, x.AdGroupId, x.OptimizationModelId, x.PagePositionId, x.UtcDate, x.LocalDate, x.UtcDateTime, x.LocalDateTime, x.Bids, x.Impressions, x.Clicks, x.Conversions, x.PostViewConversions, x.PostClickConversions, x.MediaCostUsdMicros, x.MediaCostLocalMicros, x.DataCostLocalMicros, x.ReportId });

            Property(x => x.BuyerAccountId).HasColumnName("BuyerAccountID").IsRequired().HasColumnType("int");
            Property(x => x.CampaignId).HasColumnName("CampaignID").IsRequired().HasColumnType("int");
            Property(x => x.AdGroupId).HasColumnName("AdGroupID").IsRequired().HasColumnType("int");
            Property(x => x.OptimizationModelId).HasColumnName("OptimizationModelID").IsRequired().HasColumnType("int");
            Property(x => x.PagePositionId).HasColumnName("PagePositionID").IsRequired().HasColumnType("int");
            Property(x => x.UtcDate).HasColumnName("UtcDate").IsRequired().HasColumnType("date");
            Property(x => x.LocalDate).HasColumnName("LocalDate").IsRequired().HasColumnType("date");
            Property(x => x.UtcDateTime).HasColumnName("UtcDateTime").IsRequired().HasColumnType("datetime");
            Property(x => x.LocalDateTime).HasColumnName("LocalDateTime").IsRequired().HasColumnType("datetime");
            Property(x => x.Bids).HasColumnName("Bids").IsRequired().HasColumnType("bigint");
            Property(x => x.Impressions).HasColumnName("Impressions").IsRequired().HasColumnType("bigint");
            Property(x => x.Clicks).HasColumnName("Clicks").IsRequired().HasColumnType("bigint");
            Property(x => x.Conversions).HasColumnName("Conversions").IsRequired().HasColumnType("bigint");
            Property(x => x.PostViewConversions).HasColumnName("PostViewConversions").IsRequired().HasColumnType("bigint");
            Property(x => x.PostClickConversions).HasColumnName("PostClickConversions").IsRequired().HasColumnType("bigint");
            Property(x => x.MediaCostUsdMicros).HasColumnName("MediaCostUsdMicros").IsRequired().HasColumnType("bigint");
            Property(x => x.MediaCostLocalMicros).HasColumnName("MediaCostLocalMicros").IsRequired().HasColumnType("bigint");
            Property(x => x.DataCostLocalMicros).HasColumnName("DataCostLocalMicros").IsRequired().HasColumnType("bigint");
            Property(x => x.InvalidImpressions).HasColumnName("InvalidImpressions").IsOptional().HasColumnType("bigint");
            Property(x => x.InvalidClicks).HasColumnName("InvalidClicks").IsOptional().HasColumnType("bigint");
            Property(x => x.FeesUsdSuperMicros).HasColumnName("FeesUsdSuperMicros").IsOptional().HasColumnType("bigint");
            Property(x => x.FeesLocalSuperMicros).HasColumnName("FeesLocalSuperMicros").IsOptional().HasColumnType("bigint");
            Property(x => x.ReportId).HasColumnName("ReportID").IsRequired().HasColumnType("bigint");
            Property(x => x.AdSlotDurationInSeconds).HasColumnName("AdSlotDurationInSeconds").IsOptional().HasColumnType("bigint");
            Property(x => x.RawViews).HasColumnName("RawViews").IsOptional().HasColumnType("bigint");
            Property(x => x.IabViews).HasColumnName("IabViews").IsOptional().HasColumnType("bigint");
            Property(x => x.ViewDurationInSeconds).HasColumnName("ViewDurationInSeconds").IsOptional().HasColumnType("bigint");
            InitializePartial();
        }
        partial void InitializePartial();
    }

    // AdGroupPagePositionTargetingReportID
    internal partial class AdGroupPagePositionTargetingReportIdMap : EntityTypeConfiguration<AdGroupPagePositionTargetingReportId>
    {
        public AdGroupPagePositionTargetingReportIdMap()
            : this("dbo")
        {
        }
 
        public AdGroupPagePositionTargetingReportIdMap(string schema)
        {
            ToTable(schema + ".AdGroupPagePositionTargetingReportID");
            HasKey(x => new { x.PagePositionId, x.PagePositionName, x.IsTargeted, x.PackageInstalled });

            Property(x => x.BuyerAccountId).HasColumnName("BuyerAccountID").IsOptional().HasColumnType("int");
            Property(x => x.CampaignId).HasColumnName("CampaignID").IsOptional().HasColumnType("int");
            Property(x => x.AdGroupId).HasColumnName("AdGroupID").IsOptional().HasColumnType("int");
            Property(x => x.PagePositionId).HasColumnName("PagePositionID").IsRequired().HasColumnType("int");
            Property(x => x.PagePositionName).HasColumnName("PagePositionName").IsRequired().HasColumnType("nvarchar").HasMaxLength(50);
            Property(x => x.IsTargeted).HasColumnName("IsTargeted").IsRequired().HasColumnType("int");
            Property(x => x.PackageInstalled).HasColumnName("PackageInstalled").IsRequired().HasColumnType("int");
            Property(x => x.Bids).HasColumnName("Bids").IsOptional().HasColumnType("bigint");
            Property(x => x.Impressions).HasColumnName("Impressions").IsOptional().HasColumnType("bigint");
            Property(x => x.Clicks).HasColumnName("Clicks").IsOptional().HasColumnType("bigint");
            Property(x => x.Conversions).HasColumnName("Conversions").IsOptional().HasColumnType("bigint");
            Property(x => x.PostViewConversions).HasColumnName("PostViewConversions").IsOptional().HasColumnType("bigint");
            Property(x => x.PostClickConversions).HasColumnName("PostClickConversions").IsOptional().HasColumnType("bigint");
            Property(x => x.SpendLocalMicros).HasColumnName("SpendLocalMicros").IsOptional().HasColumnType("bigint");
            Property(x => x.Spend).HasColumnName("Spend").IsOptional().HasColumnType("money").HasPrecision(19,4);
            Property(x => x.ClientCostDollars).HasColumnName("ClientCostDollars").IsOptional().HasColumnType("money").HasPrecision(19,4);
            Property(x => x.ClientCostLocalMicros).HasColumnName("ClientCostLocalMicros").IsOptional().HasColumnType("decimal").HasPrecision(38,4);
            Property(x => x.MediaCostLocalMicros).HasColumnName("MediaCostLocalMicros").IsOptional().HasColumnType("bigint");
            Property(x => x.DataCostLocalMicros).HasColumnName("DataCostLocalMicros").IsOptional().HasColumnType("bigint");
            Property(x => x.MediaClientCostLocalMicros).HasColumnName("MediaClientCostLocalMicros").IsOptional().HasColumnType("decimal").HasPrecision(38,4);
            Property(x => x.DataClientCostLocalMicros).HasColumnName("DataClientCostLocalMicros").IsOptional().HasColumnType("decimal").HasPrecision(38,4);
            Property(x => x.AdSlotDurationInSeconds).HasColumnName("AdSlotDurationInSeconds").IsOptional().HasColumnType("bigint");
            Property(x => x.RawViews).HasColumnName("RawViews").IsOptional().HasColumnType("bigint");
            Property(x => x.IabViews).HasColumnName("IabViews").IsOptional().HasColumnType("bigint");
            Property(x => x.ViewDurationInSeconds).HasColumnName("ViewDurationInSeconds").IsOptional().HasColumnType("bigint");
            Property(x => x.Ctr).HasColumnName("CTR").IsOptional().HasColumnType("float");
            Property(x => x.Cpm).HasColumnName("CPM").IsOptional().HasColumnType("decimal").HasPrecision(19,4);
            Property(x => x.Cpc).HasColumnName("CPC").IsOptional().HasColumnType("decimal").HasPrecision(19,4);
            Property(x => x.Cpa).HasColumnName("CPA").IsOptional().HasColumnType("decimal").HasPrecision(19,4);
            Property(x => x.ClientCostCpm).HasColumnName("ClientCostCPM").IsOptional().HasColumnType("decimal").HasPrecision(19,4);
            Property(x => x.ClientCostCpc).HasColumnName("ClientCostCPC").IsOptional().HasColumnType("decimal").HasPrecision(19,4);
            Property(x => x.ClientCostCpa).HasColumnName("ClientCostCPA").IsOptional().HasColumnType("decimal").HasPrecision(19,4);
            Property(x => x.Cpms).HasColumnName("CPMs").IsOptional().HasColumnType("decimal").HasPrecision(38,14);
            Property(x => x.ClientCostCpms).HasColumnName("ClientCostCpms").IsOptional().HasColumnType("decimal").HasPrecision(38,14);
            Property(x => x.Cps).HasColumnName("CPS").IsOptional().HasColumnType("decimal").HasPrecision(38,14);
            Property(x => x.ClientCostCps).HasColumnName("ClientCostCps").IsOptional().HasColumnType("decimal").HasPrecision(38,14);
            Property(x => x.ViewableRatio).HasColumnName("ViewableRatio").IsOptional().HasColumnType("float");
            InitializePartial();
        }
        partial void InitializePartial();
    }

    // AdGroupPublisher
    internal partial class AdGroupPublisherMap : EntityTypeConfiguration<AdGroupPublisher>
    {
        public AdGroupPublisherMap()
            : this("analytics")
        {
        }
 
        public AdGroupPublisherMap(string schema)
        {
            ToTable(schema + ".AdGroupPublisher");
            HasKey(x => new { x.BuyerAccountId, x.CampaignId, x.AdGroupId, x.OptimizationModelId, x.PartnerId, x.PublisherId, x.UtcDate, x.LocalDate, x.UtcDateTime, x.LocalDateTime, x.Bids, x.Impressions, x.Clicks, x.Conversions, x.PostViewConversions, x.PostClickConversions, x.MediaCostUsdMicros, x.MediaCostLocalMicros, x.DataCostLocalMicros });

            Property(x => x.BuyerAccountId).HasColumnName("BuyerAccountID").IsRequired().HasColumnType("int");
            Property(x => x.CampaignId).HasColumnName("CampaignID").IsRequired().HasColumnType("int");
            Property(x => x.AdGroupId).HasColumnName("AdGroupID").IsRequired().HasColumnType("int");
            Property(x => x.OptimizationModelId).HasColumnName("OptimizationModelID").IsRequired().HasColumnType("int");
            Property(x => x.PartnerId).HasColumnName("PartnerID").IsRequired().HasColumnType("int");
            Property(x => x.PublisherId).HasColumnName("PublisherID").IsRequired().HasColumnType("int");
            Property(x => x.UtcDate).HasColumnName("UtcDate").IsRequired().HasColumnType("date");
            Property(x => x.LocalDate).HasColumnName("LocalDate").IsRequired().HasColumnType("date");
            Property(x => x.UtcDateTime).HasColumnName("UtcDateTime").IsRequired().HasColumnType("datetime");
            Property(x => x.LocalDateTime).HasColumnName("LocalDateTime").IsRequired().HasColumnType("datetime");
            Property(x => x.Bids).HasColumnName("Bids").IsRequired().HasColumnType("bigint");
            Property(x => x.Impressions).HasColumnName("Impressions").IsRequired().HasColumnType("bigint");
            Property(x => x.Clicks).HasColumnName("Clicks").IsRequired().HasColumnType("bigint");
            Property(x => x.Conversions).HasColumnName("Conversions").IsRequired().HasColumnType("bigint");
            Property(x => x.PostViewConversions).HasColumnName("PostViewConversions").IsRequired().HasColumnType("bigint");
            Property(x => x.PostClickConversions).HasColumnName("PostClickConversions").IsRequired().HasColumnType("bigint");
            Property(x => x.MediaCostUsdMicros).HasColumnName("MediaCostUsdMicros").IsRequired().HasColumnType("bigint");
            Property(x => x.MediaCostLocalMicros).HasColumnName("MediaCostLocalMicros").IsRequired().HasColumnType("bigint");
            Property(x => x.DataCostLocalMicros).HasColumnName("DataCostLocalMicros").IsRequired().HasColumnType("bigint");
            Property(x => x.InvalidImpressions).HasColumnName("InvalidImpressions").IsOptional().HasColumnType("bigint");
            Property(x => x.InvalidClicks).HasColumnName("InvalidClicks").IsOptional().HasColumnType("bigint");
            Property(x => x.FeesUsdSuperMicros).HasColumnName("FeesUsdSuperMicros").IsOptional().HasColumnType("bigint");
            Property(x => x.FeesLocalSuperMicros).HasColumnName("FeesLocalSuperMicros").IsOptional().HasColumnType("bigint");
            Property(x => x.AdSlotDurationInSeconds).HasColumnName("AdSlotDurationInSeconds").IsOptional().HasColumnType("bigint");
            Property(x => x.RawViews).HasColumnName("RawViews").IsOptional().HasColumnType("bigint");
            Property(x => x.IabViews).HasColumnName("IabViews").IsOptional().HasColumnType("bigint");
            Property(x => x.ViewDurationInSeconds).HasColumnName("ViewDurationInSeconds").IsOptional().HasColumnType("bigint");
            InitializePartial();
        }
        partial void InitializePartial();
    }

    // AdGroupPublisherAnalyticsReportID
    internal partial class AdGroupPublisherAnalyticsReportIdMap : EntityTypeConfiguration<AdGroupPublisherAnalyticsReportId>
    {
        public AdGroupPublisherAnalyticsReportIdMap()
            : this("dbo")
        {
        }
 
        public AdGroupPublisherAnalyticsReportIdMap(string schema)
        {
            ToTable(schema + ".AdGroupPublisherAnalyticsReportID");
            HasKey(x => new { x.BuyerAccountId, x.AdvertiserId, x.AdvertiserProductId, x.CampaignId, x.AdGroupId, x.OptimizationModelId, x.LocalDate, x.Bids, x.Impressions, x.Conversions, x.PostViewConversions, x.PostClickConversions, x.MediaCostLocalMicros, x.DataCostLocalMicros });

            Property(x => x.BuyerAccountId).HasColumnName("BuyerAccountID").IsRequired().HasColumnType("int");
            Property(x => x.AdvertiserId).HasColumnName("AdvertiserID").IsRequired().HasColumnType("int");
            Property(x => x.AdvertiserProductId).HasColumnName("AdvertiserProductID").IsRequired().HasColumnType("int");
            Property(x => x.CampaignId).HasColumnName("CampaignID").IsRequired().HasColumnType("int");
            Property(x => x.AdGroupId).HasColumnName("AdGroupID").IsRequired().HasColumnType("int");
            Property(x => x.OptimizationModelId).HasColumnName("OptimizationModelID").IsRequired().HasColumnType("int");
            Property(x => x.PartnerId).HasColumnName("PartnerID").IsOptional().HasColumnType("int");
            Property(x => x.PartnerName).HasColumnName("PartnerName").IsOptional().HasColumnType("nvarchar").HasMaxLength(50);
            Property(x => x.PublisherId).HasColumnName("PublisherID").IsOptional().HasColumnType("int");
            Property(x => x.PublisherName).HasColumnName("PublisherName").IsOptional().HasColumnType("nvarchar").HasMaxLength(255);
            Property(x => x.LocalDate).HasColumnName("LocalDate").IsRequired().HasColumnType("date");
            Property(x => x.Bids).HasColumnName("Bids").IsRequired().HasColumnType("bigint");
            Property(x => x.Impressions).HasColumnName("Impressions").IsRequired().HasColumnType("bigint");
            Property(x => x.Clicks).HasColumnName("Clicks").IsOptional().HasColumnType("bigint");
            Property(x => x.UnfilteredClicks).HasColumnName("UnfilteredClicks").IsOptional().HasColumnType("bigint");
            Property(x => x.Conversions).HasColumnName("Conversions").IsRequired().HasColumnType("bigint");
            Property(x => x.PostViewConversions).HasColumnName("PostViewConversions").IsRequired().HasColumnType("bigint");
            Property(x => x.PostClickConversions).HasColumnName("PostClickConversions").IsRequired().HasColumnType("bigint");
            Property(x => x.SpendLocalMicros).HasColumnName("SpendLocalMicros").IsOptional().HasColumnType("bigint");
            Property(x => x.Spend).HasColumnName("Spend").IsOptional().HasColumnType("money").HasPrecision(19,4);
            Property(x => x.ClientCostLocalMicros).HasColumnName("ClientCostLocalMicros").IsOptional().HasColumnType("bigint");
            Property(x => x.ClientCostDollars).HasColumnName("ClientCostDollars").IsOptional().HasColumnType("money").HasPrecision(19,4);
            Property(x => x.MediaCostLocalMicros).HasColumnName("MediaCostLocalMicros").IsRequired().HasColumnType("bigint");
            Property(x => x.DataCostLocalMicros).HasColumnName("DataCostLocalMicros").IsRequired().HasColumnType("bigint");
            Property(x => x.MediaClientCostLocalMicros).HasColumnName("MediaClientCostLocalMicros").IsOptional().HasColumnType("bigint");
            Property(x => x.DataClientCostLocalMicros).HasColumnName("DataClientCostLocalMicros").IsOptional().HasColumnType("bigint");
            Property(x => x.AdSlotDurationInSeconds).HasColumnName("AdSlotDurationInSeconds").IsOptional().HasColumnType("bigint");
            Property(x => x.RawViews).HasColumnName("RawViews").IsOptional().HasColumnType("bigint");
            Property(x => x.IabViews).HasColumnName("IabViews").IsOptional().HasColumnType("bigint");
            Property(x => x.ViewDurationInSeconds).HasColumnName("ViewDurationInSeconds").IsOptional().HasColumnType("bigint");
            Property(x => x.Ctr).HasColumnName("CTR").IsOptional().HasColumnType("float");
            Property(x => x.Cpm).HasColumnName("CPM").IsOptional().HasColumnType("money").HasPrecision(19,4);
            Property(x => x.Cpc).HasColumnName("CPC").IsOptional().HasColumnType("money").HasPrecision(19,4);
            Property(x => x.Cpa).HasColumnName("CPA").IsOptional().HasColumnType("money").HasPrecision(19,4);
            Property(x => x.ClientCpm).HasColumnName("ClientCPM").IsOptional().HasColumnType("money").HasPrecision(19,4);
            Property(x => x.ClientCpc).HasColumnName("ClientCPC").IsOptional().HasColumnType("money").HasPrecision(19,4);
            Property(x => x.ClientCpa).HasColumnName("ClientCPA").IsOptional().HasColumnType("money").HasPrecision(19,4);
            Property(x => x.Cpms).HasColumnName("CPMs").IsOptional().HasColumnType("decimal").HasPrecision(38,14);
            Property(x => x.ClientCostCpms).HasColumnName("ClientCostCpms").IsOptional().HasColumnType("decimal").HasPrecision(38,14);
            Property(x => x.Cps).HasColumnName("CPS").IsOptional().HasColumnType("decimal").HasPrecision(38,14);
            Property(x => x.ClientCostCps).HasColumnName("ClientCostCps").IsOptional().HasColumnType("decimal").HasPrecision(38,14);
            Property(x => x.ViewableRatio).HasColumnName("ViewableRatio").IsOptional().HasColumnType("float");
            InitializePartial();
        }
        partial void InitializePartial();
    }

    // AdGroupPublisherCombined
    internal partial class AdGroupPublisherCombinedMap : EntityTypeConfiguration<AdGroupPublisherCombined>
    {
        public AdGroupPublisherCombinedMap()
            : this("analytics")
        {
        }
 
        public AdGroupPublisherCombinedMap(string schema)
        {
            ToTable(schema + ".AdGroupPublisherCombined");
            HasKey(x => new { x.BuyerAccountId, x.CampaignId, x.AdGroupId, x.OptimizationModelId, x.PartnerId, x.PublisherId, x.UtcDate, x.LocalDate, x.UtcDateTime, x.LocalDateTime, x.Bids, x.Impressions, x.Clicks, x.Conversions, x.PostViewConversions, x.PostClickConversions, x.MediaCostUsdMicros, x.MediaCostLocalMicros, x.DataCostLocalMicros });

            Property(x => x.BuyerAccountId).HasColumnName("BuyerAccountID").IsRequired().HasColumnType("int");
            Property(x => x.CampaignId).HasColumnName("CampaignID").IsRequired().HasColumnType("int");
            Property(x => x.AdGroupId).HasColumnName("AdGroupID").IsRequired().HasColumnType("int");
            Property(x => x.OptimizationModelId).HasColumnName("OptimizationModelID").IsRequired().HasColumnType("int");
            Property(x => x.PartnerId).HasColumnName("PartnerID").IsRequired().HasColumnType("int");
            Property(x => x.PublisherId).HasColumnName("PublisherID").IsRequired().HasColumnType("int");
            Property(x => x.UtcDate).HasColumnName("UtcDate").IsRequired().HasColumnType("date");
            Property(x => x.LocalDate).HasColumnName("LocalDate").IsRequired().HasColumnType("date");
            Property(x => x.UtcDateTime).HasColumnName("UtcDateTime").IsRequired().HasColumnType("datetime");
            Property(x => x.LocalDateTime).HasColumnName("LocalDateTime").IsRequired().HasColumnType("datetime");
            Property(x => x.Bids).HasColumnName("Bids").IsRequired().HasColumnType("bigint");
            Property(x => x.Impressions).HasColumnName("Impressions").IsRequired().HasColumnType("bigint");
            Property(x => x.Clicks).HasColumnName("Clicks").IsRequired().HasColumnType("bigint");
            Property(x => x.Conversions).HasColumnName("Conversions").IsRequired().HasColumnType("bigint");
            Property(x => x.PostViewConversions).HasColumnName("PostViewConversions").IsRequired().HasColumnType("bigint");
            Property(x => x.PostClickConversions).HasColumnName("PostClickConversions").IsRequired().HasColumnType("bigint");
            Property(x => x.MediaCostUsdMicros).HasColumnName("MediaCostUsdMicros").IsRequired().HasColumnType("bigint");
            Property(x => x.MediaCostLocalMicros).HasColumnName("MediaCostLocalMicros").IsRequired().HasColumnType("bigint");
            Property(x => x.DataCostLocalMicros).HasColumnName("DataCostLocalMicros").IsRequired().HasColumnType("bigint");
            Property(x => x.InvalidImpressions).HasColumnName("InvalidImpressions").IsOptional().HasColumnType("bigint");
            Property(x => x.InvalidClicks).HasColumnName("InvalidClicks").IsOptional().HasColumnType("bigint");
            Property(x => x.FeesUsdSuperMicros).HasColumnName("FeesUsdSuperMicros").IsOptional().HasColumnType("bigint");
            Property(x => x.FeesLocalSuperMicros).HasColumnName("FeesLocalSuperMicros").IsOptional().HasColumnType("bigint");
            Property(x => x.AdSlotDurationInSeconds).HasColumnName("AdSlotDurationInSeconds").IsOptional().HasColumnType("bigint");
            Property(x => x.RawViews).HasColumnName("RawViews").IsOptional().HasColumnType("bigint");
            Property(x => x.IabViews).HasColumnName("IabViews").IsOptional().HasColumnType("bigint");
            Property(x => x.ViewDurationInSeconds).HasColumnName("ViewDurationInSeconds").IsOptional().HasColumnType("bigint");
            InitializePartial();
        }
        partial void InitializePartial();
    }

    // AdGroupPublisherException
    internal partial class AdGroupPublisherExceptionMap : EntityTypeConfiguration<AdGroupPublisherException>
    {
        public AdGroupPublisherExceptionMap()
            : this("analytics")
        {
        }
 
        public AdGroupPublisherExceptionMap(string schema)
        {
            ToTable(schema + ".AdGroupPublisherException");
            HasKey(x => new { x.BuyerAccountId, x.CampaignId, x.AdGroupId, x.OptimizationModelId, x.PartnerId, x.PublisherId, x.UtcDateTime, x.LocalDateTime, x.Bids, x.Impressions, x.InvalidImpressions, x.Clicks, x.InvalidClicks, x.Conversions, x.PostViewConversions, x.PostClickConversions, x.MediaCostUsdMicros, x.MediaCostLocalMicros, x.DataCostLocalMicros, x.FeesUsdSuperMicros, x.FeesLocalSuperMicros });

            Property(x => x.BuyerAccountId).HasColumnName("BuyerAccountID").IsRequired().HasColumnType("int");
            Property(x => x.CampaignId).HasColumnName("CampaignID").IsRequired().HasColumnType("int");
            Property(x => x.AdGroupId).HasColumnName("AdGroupID").IsRequired().HasColumnType("int");
            Property(x => x.OptimizationModelId).HasColumnName("OptimizationModelID").IsRequired().HasColumnType("int");
            Property(x => x.PartnerId).HasColumnName("PartnerID").IsRequired().HasColumnType("int");
            Property(x => x.PublisherId).HasColumnName("PublisherID").IsRequired().HasColumnType("int");
            Property(x => x.UtcDateTime).HasColumnName("UtcDateTime").IsRequired().HasColumnType("datetime");
            Property(x => x.LocalDateTime).HasColumnName("LocalDateTime").IsRequired().HasColumnType("datetime");
            Property(x => x.Bids).HasColumnName("Bids").IsRequired().HasColumnType("bigint");
            Property(x => x.Impressions).HasColumnName("Impressions").IsRequired().HasColumnType("bigint");
            Property(x => x.InvalidImpressions).HasColumnName("InvalidImpressions").IsRequired().HasColumnType("bigint");
            Property(x => x.Clicks).HasColumnName("Clicks").IsRequired().HasColumnType("bigint");
            Property(x => x.InvalidClicks).HasColumnName("InvalidClicks").IsRequired().HasColumnType("bigint");
            Property(x => x.Conversions).HasColumnName("Conversions").IsRequired().HasColumnType("bigint");
            Property(x => x.PostViewConversions).HasColumnName("PostViewConversions").IsRequired().HasColumnType("bigint");
            Property(x => x.PostClickConversions).HasColumnName("PostClickConversions").IsRequired().HasColumnType("bigint");
            Property(x => x.MediaCostUsdMicros).HasColumnName("MediaCostUsdMicros").IsRequired().HasColumnType("bigint");
            Property(x => x.MediaCostLocalMicros).HasColumnName("MediaCostLocalMicros").IsRequired().HasColumnType("bigint");
            Property(x => x.DataCostLocalMicros).HasColumnName("DataCostLocalMicros").IsRequired().HasColumnType("bigint");
            Property(x => x.FeesUsdSuperMicros).HasColumnName("FeesUsdSuperMicros").IsRequired().HasColumnType("bigint");
            Property(x => x.FeesLocalSuperMicros).HasColumnName("FeesLocalSuperMicros").IsRequired().HasColumnType("bigint");
            Property(x => x.AdSlotDurationInSeconds).HasColumnName("AdSlotDurationInSeconds").IsOptional().HasColumnType("bigint");
            Property(x => x.RawViews).HasColumnName("RawViews").IsOptional().HasColumnType("bigint");
            Property(x => x.IabViews).HasColumnName("IabViews").IsOptional().HasColumnType("bigint");
            Property(x => x.ViewDurationInSeconds).HasColumnName("ViewDurationInSeconds").IsOptional().HasColumnType("bigint");
            InitializePartial();
        }
        partial void InitializePartial();
    }

    // AdGroupPublisherImport
    internal partial class AdGroupPublisherImportMap : EntityTypeConfiguration<AdGroupPublisherImport>
    {
        public AdGroupPublisherImportMap()
            : this("analytics")
        {
        }
 
        public AdGroupPublisherImportMap(string schema)
        {
            ToTable(schema + ".AdGroupPublisherImport");
            HasKey(x => new { x.BuyerAccountId, x.CampaignId, x.AdGroupId, x.OptimizationModelId, x.PartnerId, x.PublisherId, x.UtcDateTime, x.LocalDateTime, x.Bids, x.Impressions, x.InvalidImpressions, x.Clicks, x.InvalidClicks, x.Conversions, x.PostViewConversions, x.PostClickConversions, x.MediaCostUsdMicros, x.MediaCostLocalMicros, x.DataCostLocalMicros, x.FeesUsdSuperMicros, x.FeesLocalSuperMicros });

            Property(x => x.BuyerAccountId).HasColumnName("BuyerAccountID").IsRequired().HasColumnType("int");
            Property(x => x.CampaignId).HasColumnName("CampaignID").IsRequired().HasColumnType("int");
            Property(x => x.AdGroupId).HasColumnName("AdGroupID").IsRequired().HasColumnType("int");
            Property(x => x.OptimizationModelId).HasColumnName("OptimizationModelID").IsRequired().HasColumnType("int");
            Property(x => x.PartnerId).HasColumnName("PartnerID").IsRequired().HasColumnType("int");
            Property(x => x.PublisherId).HasColumnName("PublisherID").IsRequired().HasColumnType("int");
            Property(x => x.UtcDateTime).HasColumnName("UtcDateTime").IsRequired().HasColumnType("datetime");
            Property(x => x.LocalDateTime).HasColumnName("LocalDateTime").IsRequired().HasColumnType("datetime");
            Property(x => x.Bids).HasColumnName("Bids").IsRequired().HasColumnType("bigint");
            Property(x => x.Impressions).HasColumnName("Impressions").IsRequired().HasColumnType("bigint");
            Property(x => x.InvalidImpressions).HasColumnName("InvalidImpressions").IsRequired().HasColumnType("bigint");
            Property(x => x.Clicks).HasColumnName("Clicks").IsRequired().HasColumnType("bigint");
            Property(x => x.InvalidClicks).HasColumnName("InvalidClicks").IsRequired().HasColumnType("bigint");
            Property(x => x.Conversions).HasColumnName("Conversions").IsRequired().HasColumnType("bigint");
            Property(x => x.PostViewConversions).HasColumnName("PostViewConversions").IsRequired().HasColumnType("bigint");
            Property(x => x.PostClickConversions).HasColumnName("PostClickConversions").IsRequired().HasColumnType("bigint");
            Property(x => x.MediaCostUsdMicros).HasColumnName("MediaCostUsdMicros").IsRequired().HasColumnType("bigint");
            Property(x => x.MediaCostLocalMicros).HasColumnName("MediaCostLocalMicros").IsRequired().HasColumnType("bigint");
            Property(x => x.DataCostLocalMicros).HasColumnName("DataCostLocalMicros").IsRequired().HasColumnType("bigint");
            Property(x => x.FeesUsdSuperMicros).HasColumnName("FeesUsdSuperMicros").IsRequired().HasColumnType("bigint");
            Property(x => x.FeesLocalSuperMicros).HasColumnName("FeesLocalSuperMicros").IsRequired().HasColumnType("bigint");
            Property(x => x.AdSlotDurationInSeconds).HasColumnName("AdSlotDurationInSeconds").IsOptional().HasColumnType("bigint");
            Property(x => x.RawViews).HasColumnName("RawViews").IsOptional().HasColumnType("bigint");
            Property(x => x.IabViews).HasColumnName("IabViews").IsOptional().HasColumnType("bigint");
            Property(x => x.ViewDurationInSeconds).HasColumnName("ViewDurationInSeconds").IsOptional().HasColumnType("bigint");
            InitializePartial();
        }
        partial void InitializePartial();
    }

    // AdGroupPublisherImportReportID
    internal partial class AdGroupPublisherImportReportIdMap : EntityTypeConfiguration<AdGroupPublisherImportReportId>
    {
        public AdGroupPublisherImportReportIdMap()
            : this("analytics")
        {
        }
 
        public AdGroupPublisherImportReportIdMap(string schema)
        {
            ToTable(schema + ".AdGroupPublisherImportReportID");
            HasKey(x => new { x.BuyerAccountId, x.CampaignId, x.AdGroupId, x.OptimizationModelId, x.PartnerId, x.PublisherId, x.UtcDateTime, x.LocalDateTime, x.Bids, x.Impressions, x.InvalidImpressions, x.Clicks, x.InvalidClicks, x.Conversions, x.PostViewConversions, x.PostClickConversions, x.MediaCostUsdMicros, x.MediaCostLocalMicros, x.DataCostLocalMicros, x.FeesUsdSuperMicros, x.FeesLocalSuperMicros, x.ReportId });

            Property(x => x.BuyerAccountId).HasColumnName("BuyerAccountID").IsRequired().HasColumnType("int");
            Property(x => x.CampaignId).HasColumnName("CampaignID").IsRequired().HasColumnType("int");
            Property(x => x.AdGroupId).HasColumnName("AdGroupID").IsRequired().HasColumnType("int");
            Property(x => x.OptimizationModelId).HasColumnName("OptimizationModelID").IsRequired().HasColumnType("int");
            Property(x => x.PartnerId).HasColumnName("PartnerID").IsRequired().HasColumnType("int");
            Property(x => x.PublisherId).HasColumnName("PublisherID").IsRequired().HasColumnType("int");
            Property(x => x.UtcDateTime).HasColumnName("UtcDateTime").IsRequired().HasColumnType("datetime");
            Property(x => x.LocalDateTime).HasColumnName("LocalDateTime").IsRequired().HasColumnType("datetime");
            Property(x => x.Bids).HasColumnName("Bids").IsRequired().HasColumnType("bigint");
            Property(x => x.Impressions).HasColumnName("Impressions").IsRequired().HasColumnType("bigint");
            Property(x => x.InvalidImpressions).HasColumnName("InvalidImpressions").IsRequired().HasColumnType("bigint");
            Property(x => x.Clicks).HasColumnName("Clicks").IsRequired().HasColumnType("bigint");
            Property(x => x.InvalidClicks).HasColumnName("InvalidClicks").IsRequired().HasColumnType("bigint");
            Property(x => x.Conversions).HasColumnName("Conversions").IsRequired().HasColumnType("bigint");
            Property(x => x.PostViewConversions).HasColumnName("PostViewConversions").IsRequired().HasColumnType("bigint");
            Property(x => x.PostClickConversions).HasColumnName("PostClickConversions").IsRequired().HasColumnType("bigint");
            Property(x => x.MediaCostUsdMicros).HasColumnName("MediaCostUsdMicros").IsRequired().HasColumnType("bigint");
            Property(x => x.MediaCostLocalMicros).HasColumnName("MediaCostLocalMicros").IsRequired().HasColumnType("bigint");
            Property(x => x.DataCostLocalMicros).HasColumnName("DataCostLocalMicros").IsRequired().HasColumnType("bigint");
            Property(x => x.FeesUsdSuperMicros).HasColumnName("FeesUsdSuperMicros").IsRequired().HasColumnType("bigint");
            Property(x => x.FeesLocalSuperMicros).HasColumnName("FeesLocalSuperMicros").IsRequired().HasColumnType("bigint");
            Property(x => x.ReportId).HasColumnName("ReportID").IsRequired().HasColumnType("bigint");
            Property(x => x.AdSlotDurationInSeconds).HasColumnName("AdSlotDurationInSeconds").IsOptional().HasColumnType("bigint");
            Property(x => x.RawViews).HasColumnName("RawViews").IsOptional().HasColumnType("bigint");
            Property(x => x.IabViews).HasColumnName("IabViews").IsOptional().HasColumnType("bigint");
            Property(x => x.ViewDurationInSeconds).HasColumnName("ViewDurationInSeconds").IsOptional().HasColumnType("bigint");
            InitializePartial();
        }
        partial void InitializePartial();
    }

    // AdGroupPublisherReportID
    internal partial class AdGroupPublisherReportIdMap : EntityTypeConfiguration<AdGroupPublisherReportId>
    {
        public AdGroupPublisherReportIdMap()
            : this("analytics")
        {
        }
 
        public AdGroupPublisherReportIdMap(string schema)
        {
            ToTable(schema + ".AdGroupPublisherReportID");
            HasKey(x => new { x.BuyerAccountId, x.CampaignId, x.AdGroupId, x.OptimizationModelId, x.PartnerId, x.PublisherId, x.UtcDate, x.LocalDate, x.UtcDateTime, x.LocalDateTime, x.Bids, x.Impressions, x.Clicks, x.Conversions, x.PostViewConversions, x.PostClickConversions, x.MediaCostUsdMicros, x.MediaCostLocalMicros, x.DataCostLocalMicros, x.ReportId });

            Property(x => x.BuyerAccountId).HasColumnName("BuyerAccountID").IsRequired().HasColumnType("int");
            Property(x => x.CampaignId).HasColumnName("CampaignID").IsRequired().HasColumnType("int");
            Property(x => x.AdGroupId).HasColumnName("AdGroupID").IsRequired().HasColumnType("int");
            Property(x => x.OptimizationModelId).HasColumnName("OptimizationModelID").IsRequired().HasColumnType("int");
            Property(x => x.PartnerId).HasColumnName("PartnerID").IsRequired().HasColumnType("int");
            Property(x => x.PublisherId).HasColumnName("PublisherID").IsRequired().HasColumnType("int");
            Property(x => x.UtcDate).HasColumnName("UtcDate").IsRequired().HasColumnType("date");
            Property(x => x.LocalDate).HasColumnName("LocalDate").IsRequired().HasColumnType("date");
            Property(x => x.UtcDateTime).HasColumnName("UtcDateTime").IsRequired().HasColumnType("datetime");
            Property(x => x.LocalDateTime).HasColumnName("LocalDateTime").IsRequired().HasColumnType("datetime");
            Property(x => x.Bids).HasColumnName("Bids").IsRequired().HasColumnType("bigint");
            Property(x => x.Impressions).HasColumnName("Impressions").IsRequired().HasColumnType("bigint");
            Property(x => x.Clicks).HasColumnName("Clicks").IsRequired().HasColumnType("bigint");
            Property(x => x.Conversions).HasColumnName("Conversions").IsRequired().HasColumnType("bigint");
            Property(x => x.PostViewConversions).HasColumnName("PostViewConversions").IsRequired().HasColumnType("bigint");
            Property(x => x.PostClickConversions).HasColumnName("PostClickConversions").IsRequired().HasColumnType("bigint");
            Property(x => x.MediaCostUsdMicros).HasColumnName("MediaCostUsdMicros").IsRequired().HasColumnType("bigint");
            Property(x => x.MediaCostLocalMicros).HasColumnName("MediaCostLocalMicros").IsRequired().HasColumnType("bigint");
            Property(x => x.DataCostLocalMicros).HasColumnName("DataCostLocalMicros").IsRequired().HasColumnType("bigint");
            Property(x => x.InvalidImpressions).HasColumnName("InvalidImpressions").IsOptional().HasColumnType("bigint");
            Property(x => x.InvalidClicks).HasColumnName("InvalidClicks").IsOptional().HasColumnType("bigint");
            Property(x => x.FeesUsdSuperMicros).HasColumnName("FeesUsdSuperMicros").IsOptional().HasColumnType("bigint");
            Property(x => x.FeesLocalSuperMicros).HasColumnName("FeesLocalSuperMicros").IsOptional().HasColumnType("bigint");
            Property(x => x.ReportId).HasColumnName("ReportID").IsRequired().HasColumnType("bigint");
            Property(x => x.AdSlotDurationInSeconds).HasColumnName("AdSlotDurationInSeconds").IsOptional().HasColumnType("bigint");
            Property(x => x.RawViews).HasColumnName("RawViews").IsOptional().HasColumnType("bigint");
            Property(x => x.IabViews).HasColumnName("IabViews").IsOptional().HasColumnType("bigint");
            Property(x => x.ViewDurationInSeconds).HasColumnName("ViewDurationInSeconds").IsOptional().HasColumnType("bigint");
            InitializePartial();
        }
        partial void InitializePartial();
    }

    // AdGroupPublisherTargetingReportID
    internal partial class AdGroupPublisherTargetingReportIdMap : EntityTypeConfiguration<AdGroupPublisherTargetingReportId>
    {
        public AdGroupPublisherTargetingReportIdMap()
            : this("dbo")
        {
        }
 
        public AdGroupPublisherTargetingReportIdMap(string schema)
        {
            ToTable(schema + ".AdGroupPublisherTargetingReportID");
            HasKey(x => new { x.BuyerAccountId, x.CampaignId, x.AdGroupId, x.IsTargeted, x.PackageInstalled });

            Property(x => x.BuyerAccountId).HasColumnName("BuyerAccountID").IsRequired().HasColumnType("int");
            Property(x => x.CampaignId).HasColumnName("CampaignID").IsRequired().HasColumnType("int");
            Property(x => x.AdGroupId).HasColumnName("AdGroupID").IsRequired().HasColumnType("int");
            Property(x => x.PartnerId).HasColumnName("PartnerID").IsOptional().HasColumnType("int");
            Property(x => x.PartnerName).HasColumnName("PartnerName").IsOptional().HasColumnType("nvarchar").HasMaxLength(50);
            Property(x => x.PublisherId).HasColumnName("PublisherID").IsOptional().HasColumnType("int");
            Property(x => x.PublisherName).HasColumnName("PublisherName").IsOptional().HasColumnType("nvarchar").HasMaxLength(255);
            Property(x => x.IsTargeted).HasColumnName("IsTargeted").IsRequired().HasColumnType("int");
            Property(x => x.PackageInstalled).HasColumnName("PackageInstalled").IsRequired().HasColumnType("int");
            Property(x => x.Bids).HasColumnName("Bids").IsOptional().HasColumnType("bigint");
            Property(x => x.Impressions).HasColumnName("Impressions").IsOptional().HasColumnType("bigint");
            Property(x => x.Clicks).HasColumnName("Clicks").IsOptional().HasColumnType("bigint");
            Property(x => x.Conversions).HasColumnName("Conversions").IsOptional().HasColumnType("bigint");
            Property(x => x.PostViewConversions).HasColumnName("PostViewConversions").IsOptional().HasColumnType("bigint");
            Property(x => x.PostClickConversions).HasColumnName("PostClickConversions").IsOptional().HasColumnType("bigint");
            Property(x => x.SpendLocalMicros).HasColumnName("SpendLocalMicros").IsOptional().HasColumnType("bigint");
            Property(x => x.Spend).HasColumnName("Spend").IsOptional().HasColumnType("money").HasPrecision(19,4);
            Property(x => x.ClientCostLocalMicros).HasColumnName("ClientCostLocalMicros").IsOptional().HasColumnType("decimal").HasPrecision(38,4);
            Property(x => x.ClientCostDollars).HasColumnName("ClientCostDollars").IsOptional().HasColumnType("money").HasPrecision(19,4);
            Property(x => x.MediaCostLocalMicros).HasColumnName("MediaCostLocalMicros").IsOptional().HasColumnType("bigint");
            Property(x => x.DataCostLocalMicros).HasColumnName("DataCostLocalMicros").IsOptional().HasColumnType("bigint");
            Property(x => x.MediaClientCostLocalMicros).HasColumnName("MediaClientCostLocalMicros").IsOptional().HasColumnType("decimal").HasPrecision(38,4);
            Property(x => x.DataClientCostLocalMicros).HasColumnName("DataClientCostLocalMicros").IsOptional().HasColumnType("decimal").HasPrecision(38,4);
            Property(x => x.AdSlotDurationInSeconds).HasColumnName("AdSlotDurationInSeconds").IsOptional().HasColumnType("bigint");
            Property(x => x.RawViews).HasColumnName("RawViews").IsOptional().HasColumnType("bigint");
            Property(x => x.IabViews).HasColumnName("IabViews").IsOptional().HasColumnType("bigint");
            Property(x => x.ViewDurationInSeconds).HasColumnName("ViewDurationInSeconds").IsOptional().HasColumnType("bigint");
            Property(x => x.Ctr).HasColumnName("CTR").IsOptional().HasColumnType("float");
            Property(x => x.Cpm).HasColumnName("CPM").IsOptional().HasColumnType("decimal").HasPrecision(19,4);
            Property(x => x.Cpc).HasColumnName("CPC").IsOptional().HasColumnType("decimal").HasPrecision(19,4);
            Property(x => x.Cpa).HasColumnName("CPA").IsOptional().HasColumnType("decimal").HasPrecision(19,4);
            Property(x => x.ClientCostCpm).HasColumnName("ClientCostCPM").IsOptional().HasColumnType("decimal").HasPrecision(19,4);
            Property(x => x.ClientCostCpc).HasColumnName("ClientCostCPC").IsOptional().HasColumnType("decimal").HasPrecision(19,4);
            Property(x => x.ClientCostCpa).HasColumnName("ClientCostCPA").IsOptional().HasColumnType("decimal").HasPrecision(19,4);
            Property(x => x.Cpms).HasColumnName("CPMs").IsOptional().HasColumnType("decimal").HasPrecision(38,14);
            Property(x => x.ClientCostCpms).HasColumnName("ClientCostCpms").IsOptional().HasColumnType("decimal").HasPrecision(38,14);
            Property(x => x.Cps).HasColumnName("CPS").IsOptional().HasColumnType("decimal").HasPrecision(38,14);
            Property(x => x.ClientCostCps).HasColumnName("ClientCostCps").IsOptional().HasColumnType("decimal").HasPrecision(38,14);
            Property(x => x.ViewableRatio).HasColumnName("ViewableRatio").IsOptional().HasColumnType("float");
            InitializePartial();
        }
        partial void InitializePartial();
    }

    // AdGroupRegionTargetingReportID
    internal partial class AdGroupRegionTargetingReportIdMap : EntityTypeConfiguration<AdGroupRegionTargetingReportId>
    {
        public AdGroupRegionTargetingReportIdMap()
            : this("dbo")
        {
        }
 
        public AdGroupRegionTargetingReportIdMap(string schema)
        {
            ToTable(schema + ".AdGroupRegionTargetingReportID");
            HasKey(x => new { x.BuyerAccountId, x.CampaignId, x.AdGroupId, x.RegionName, x.GeoCountryId, x.CountryName, x.IsTargeted, x.PackageInstalled });

            Property(x => x.BuyerAccountId).HasColumnName("BuyerAccountID").IsRequired().HasColumnType("int");
            Property(x => x.CampaignId).HasColumnName("CampaignID").IsRequired().HasColumnType("int");
            Property(x => x.AdGroupId).HasColumnName("AdGroupID").IsRequired().HasColumnType("int");
            Property(x => x.GeoRegionId).HasColumnName("GeoRegionID").IsOptional().HasColumnType("int");
            Property(x => x.RegionName).HasColumnName("RegionName").IsRequired().HasColumnType("nvarchar").HasMaxLength(50);
            Property(x => x.GeoCountryId).HasColumnName("GeoCountryID").IsRequired().HasColumnType("int");
            Property(x => x.CountryName).HasColumnName("CountryName").IsRequired().HasColumnType("nvarchar").HasMaxLength(50);
            Property(x => x.IsTargeted).HasColumnName("IsTargeted").IsRequired().HasColumnType("int");
            Property(x => x.PackageInstalled).HasColumnName("PackageInstalled").IsRequired().HasColumnType("int");
            Property(x => x.Bids).HasColumnName("Bids").IsOptional().HasColumnType("bigint");
            Property(x => x.Impressions).HasColumnName("Impressions").IsOptional().HasColumnType("bigint");
            Property(x => x.Clicks).HasColumnName("Clicks").IsOptional().HasColumnType("bigint");
            Property(x => x.Conversions).HasColumnName("Conversions").IsOptional().HasColumnType("bigint");
            Property(x => x.PostViewConversions).HasColumnName("PostViewConversions").IsOptional().HasColumnType("bigint");
            Property(x => x.PostClickConversions).HasColumnName("PostClickConversions").IsOptional().HasColumnType("bigint");
            Property(x => x.SpendLocalMicros).HasColumnName("SpendLocalMicros").IsOptional().HasColumnType("bigint");
            Property(x => x.Spend).HasColumnName("Spend").IsOptional().HasColumnType("money").HasPrecision(19,4);
            Property(x => x.ClientCostLocalMicros).HasColumnName("ClientCostLocalMicros").IsOptional().HasColumnType("decimal").HasPrecision(38,4);
            Property(x => x.ClientCostDollars).HasColumnName("ClientCostDollars").IsOptional().HasColumnType("money").HasPrecision(19,4);
            Property(x => x.MediaCostLocalMicros).HasColumnName("MediaCostLocalMicros").IsOptional().HasColumnType("bigint");
            Property(x => x.DataCostLocalMicros).HasColumnName("DataCostLocalMicros").IsOptional().HasColumnType("bigint");
            Property(x => x.MediaClientCostLocalMicros).HasColumnName("MediaClientCostLocalMicros").IsOptional().HasColumnType("decimal").HasPrecision(38,4);
            Property(x => x.DataClientCostLocalMicros).HasColumnName("DataClientCostLocalMicros").IsOptional().HasColumnType("decimal").HasPrecision(38,4);
            Property(x => x.AdSlotDurationInSeconds).HasColumnName("AdSlotDurationInSeconds").IsOptional().HasColumnType("bigint");
            Property(x => x.RawViews).HasColumnName("RawViews").IsOptional().HasColumnType("bigint");
            Property(x => x.IabViews).HasColumnName("IabViews").IsOptional().HasColumnType("bigint");
            Property(x => x.ViewDurationInSeconds).HasColumnName("ViewDurationInSeconds").IsOptional().HasColumnType("bigint");
            Property(x => x.Ctr).HasColumnName("CTR").IsOptional().HasColumnType("float");
            Property(x => x.Cpm).HasColumnName("CPM").IsOptional().HasColumnType("decimal").HasPrecision(19,4);
            Property(x => x.Cpc).HasColumnName("CPC").IsOptional().HasColumnType("decimal").HasPrecision(19,4);
            Property(x => x.Cpa).HasColumnName("CPA").IsOptional().HasColumnType("decimal").HasPrecision(19,4);
            Property(x => x.ClientCostCpm).HasColumnName("ClientCostCPM").IsOptional().HasColumnType("decimal").HasPrecision(19,4);
            Property(x => x.ClientCostCpc).HasColumnName("ClientCostCPC").IsOptional().HasColumnType("decimal").HasPrecision(19,4);
            Property(x => x.ClientCostCpa).HasColumnName("ClientCostCPA").IsOptional().HasColumnType("decimal").HasPrecision(19,4);
            Property(x => x.Cpms).HasColumnName("CPMs").IsOptional().HasColumnType("decimal").HasPrecision(38,14);
            Property(x => x.ClientCostCpms).HasColumnName("ClientCostCpms").IsOptional().HasColumnType("decimal").HasPrecision(38,14);
            Property(x => x.Cps).HasColumnName("CPS").IsOptional().HasColumnType("decimal").HasPrecision(38,14);
            Property(x => x.ClientCostCps).HasColumnName("ClientCostCps").IsOptional().HasColumnType("decimal").HasPrecision(38,14);
            Property(x => x.ViewableRatio).HasColumnName("ViewableRatio").IsOptional().HasColumnType("float");
            InitializePartial();
        }
        partial void InitializePartial();
    }

    // AdGroupSegment
    internal partial class AdGroupSegmentMap : EntityTypeConfiguration<AdGroupSegment>
    {
        public AdGroupSegmentMap()
            : this("analytics")
        {
        }
 
        public AdGroupSegmentMap(string schema)
        {
            ToTable(schema + ".AdGroupSegment");
            HasKey(x => new { x.BuyerAccountId, x.CampaignId, x.AdGroupId, x.OptimizationModelId, x.SegmentId, x.UtcDate, x.LocalDate, x.UtcDateTime, x.LocalDateTime, x.Bids, x.Impressions, x.Clicks, x.Conversions, x.PostViewConversions, x.PostClickConversions, x.MediaCostUsdMicros, x.MediaCostLocalMicros, x.DataCostLocalMicros });

            Property(x => x.BuyerAccountId).HasColumnName("BuyerAccountID").IsRequired().HasColumnType("int");
            Property(x => x.CampaignId).HasColumnName("CampaignID").IsRequired().HasColumnType("int");
            Property(x => x.AdGroupId).HasColumnName("AdGroupID").IsRequired().HasColumnType("int");
            Property(x => x.OptimizationModelId).HasColumnName("OptimizationModelID").IsRequired().HasColumnType("int");
            Property(x => x.SegmentId).HasColumnName("SegmentID").IsRequired().HasColumnType("int");
            Property(x => x.UtcDate).HasColumnName("UtcDate").IsRequired().HasColumnType("date");
            Property(x => x.LocalDate).HasColumnName("LocalDate").IsRequired().HasColumnType("date");
            Property(x => x.UtcDateTime).HasColumnName("UtcDateTime").IsRequired().HasColumnType("datetime");
            Property(x => x.LocalDateTime).HasColumnName("LocalDateTime").IsRequired().HasColumnType("datetime");
            Property(x => x.Bids).HasColumnName("Bids").IsRequired().HasColumnType("bigint");
            Property(x => x.Impressions).HasColumnName("Impressions").IsRequired().HasColumnType("bigint");
            Property(x => x.Clicks).HasColumnName("Clicks").IsRequired().HasColumnType("bigint");
            Property(x => x.Conversions).HasColumnName("Conversions").IsRequired().HasColumnType("bigint");
            Property(x => x.PostViewConversions).HasColumnName("PostViewConversions").IsRequired().HasColumnType("bigint");
            Property(x => x.PostClickConversions).HasColumnName("PostClickConversions").IsRequired().HasColumnType("bigint");
            Property(x => x.MediaCostUsdMicros).HasColumnName("MediaCostUsdMicros").IsRequired().HasColumnType("bigint");
            Property(x => x.MediaCostLocalMicros).HasColumnName("MediaCostLocalMicros").IsRequired().HasColumnType("bigint");
            Property(x => x.DataCostLocalMicros).HasColumnName("DataCostLocalMicros").IsRequired().HasColumnType("bigint");
            Property(x => x.InvalidImpressions).HasColumnName("InvalidImpressions").IsOptional().HasColumnType("bigint");
            Property(x => x.InvalidClicks).HasColumnName("InvalidClicks").IsOptional().HasColumnType("bigint");
            Property(x => x.FeesUsdSuperMicros).HasColumnName("FeesUsdSuperMicros").IsOptional().HasColumnType("bigint");
            Property(x => x.FeesLocalSuperMicros).HasColumnName("FeesLocalSuperMicros").IsOptional().HasColumnType("bigint");
            Property(x => x.AdSlotDurationInSeconds).HasColumnName("AdSlotDurationInSeconds").IsOptional().HasColumnType("bigint");
            Property(x => x.RawViews).HasColumnName("RawViews").IsOptional().HasColumnType("bigint");
            Property(x => x.IabViews).HasColumnName("IabViews").IsOptional().HasColumnType("bigint");
            Property(x => x.ViewDurationInSeconds).HasColumnName("ViewDurationInSeconds").IsOptional().HasColumnType("bigint");
            InitializePartial();
        }
        partial void InitializePartial();
    }

    // AdGroupSegmentAnalytics
    internal partial class AdGroupSegmentAnalyticMap : EntityTypeConfiguration<AdGroupSegmentAnalytic>
    {
        public AdGroupSegmentAnalyticMap()
            : this("dbo")
        {
        }
 
        public AdGroupSegmentAnalyticMap(string schema)
        {
            ToTable(schema + ".AdGroupSegmentAnalytics");
            HasKey(x => new { x.BuyerAccountId, x.AdvertiserProductId, x.AdvertiserId, x.CampaignId, x.AdGroupId, x.OptimizationModelId, x.SegmentId, x.LocalDate, x.Bids, x.Impressions, x.Clicks, x.Conversions, x.PostViewConversions, x.PostClickConversions, x.MediaCostLocalMicros, x.DataCostLocalMicros });

            Property(x => x.BuyerAccountId).HasColumnName("BuyerAccountID").IsRequired().HasColumnType("int");
            Property(x => x.AdvertiserProductId).HasColumnName("AdvertiserProductID").IsRequired().HasColumnType("int");
            Property(x => x.AdvertiserId).HasColumnName("AdvertiserID").IsRequired().HasColumnType("int");
            Property(x => x.CampaignId).HasColumnName("CampaignID").IsRequired().HasColumnType("int");
            Property(x => x.AdGroupId).HasColumnName("AdGroupID").IsRequired().HasColumnType("int");
            Property(x => x.OptimizationModelId).HasColumnName("OptimizationModelID").IsRequired().HasColumnType("int");
            Property(x => x.SegmentId).HasColumnName("SegmentID").IsRequired().HasColumnType("int");
            Property(x => x.SegmentName).HasColumnName("SegmentName").IsOptional().HasColumnType("nvarchar").HasMaxLength(500);
            Property(x => x.LocalDate).HasColumnName("LocalDate").IsRequired().HasColumnType("date");
            Property(x => x.Bids).HasColumnName("Bids").IsRequired().HasColumnType("bigint");
            Property(x => x.Impressions).HasColumnName("Impressions").IsRequired().HasColumnType("bigint");
            Property(x => x.Clicks).HasColumnName("Clicks").IsRequired().HasColumnType("bigint");
            Property(x => x.UnfilteredClicks).HasColumnName("UnfilteredClicks").IsOptional().HasColumnType("bigint");
            Property(x => x.Conversions).HasColumnName("Conversions").IsRequired().HasColumnType("bigint");
            Property(x => x.PostViewConversions).HasColumnName("PostViewConversions").IsRequired().HasColumnType("bigint");
            Property(x => x.PostClickConversions).HasColumnName("PostClickConversions").IsRequired().HasColumnType("bigint");
            Property(x => x.SpendLocalMicros).HasColumnName("SpendLocalMicros").IsOptional().HasColumnType("bigint");
            Property(x => x.Spend).HasColumnName("Spend").IsOptional().HasColumnType("money").HasPrecision(19,4);
            Property(x => x.ClientCostLocalMicros).HasColumnName("ClientCostLocalMicros").IsOptional().HasColumnType("bigint");
            Property(x => x.ClientCostDollars).HasColumnName("ClientCostDollars").IsOptional().HasColumnType("money").HasPrecision(19,4);
            Property(x => x.MediaCostLocalMicros).HasColumnName("MediaCostLocalMicros").IsRequired().HasColumnType("bigint");
            Property(x => x.DataCostLocalMicros).HasColumnName("DataCostLocalMicros").IsRequired().HasColumnType("bigint");
            Property(x => x.MediaClientCostLocalMicros).HasColumnName("MediaClientCostLocalMicros").IsOptional().HasColumnType("bigint");
            Property(x => x.DataClientCostLocalMicros).HasColumnName("DataClientCostLocalMicros").IsOptional().HasColumnType("bigint");
            Property(x => x.AdSlotDurationInSeconds).HasColumnName("AdSlotDurationInSeconds").IsOptional().HasColumnType("bigint");
            Property(x => x.RawViews).HasColumnName("RawViews").IsOptional().HasColumnType("bigint");
            Property(x => x.IabViews).HasColumnName("IabViews").IsOptional().HasColumnType("bigint");
            Property(x => x.ViewDurationInSeconds).HasColumnName("ViewDurationInSeconds").IsOptional().HasColumnType("bigint");
            Property(x => x.Ctr).HasColumnName("CTR").IsOptional().HasColumnType("float");
            Property(x => x.Cpm).HasColumnName("CPM").IsOptional().HasColumnType("money").HasPrecision(19,4);
            Property(x => x.Cpc).HasColumnName("CPC").IsOptional().HasColumnType("money").HasPrecision(19,4);
            Property(x => x.Cpa).HasColumnName("CPA").IsOptional().HasColumnType("money").HasPrecision(19,4);
            Property(x => x.ClientCpm).HasColumnName("ClientCPM").IsOptional().HasColumnType("money").HasPrecision(19,4);
            Property(x => x.ClientCpc).HasColumnName("ClientCPC").IsOptional().HasColumnType("money").HasPrecision(19,4);
            Property(x => x.ClientCpa).HasColumnName("ClientCPA").IsOptional().HasColumnType("money").HasPrecision(19,4);
            Property(x => x.Cpms).HasColumnName("CPMs").IsOptional().HasColumnType("decimal").HasPrecision(38,14);
            Property(x => x.ClientCostCpms).HasColumnName("ClientCostCpms").IsOptional().HasColumnType("decimal").HasPrecision(38,14);
            Property(x => x.Cps).HasColumnName("CPS").IsOptional().HasColumnType("decimal").HasPrecision(38,14);
            Property(x => x.ClientCostCps).HasColumnName("ClientCostCps").IsOptional().HasColumnType("decimal").HasPrecision(38,14);
            Property(x => x.ViewableRatio).HasColumnName("ViewableRatio").IsOptional().HasColumnType("float");
            InitializePartial();
        }
        partial void InitializePartial();
    }

    // AdGroupSegmentException
    internal partial class AdGroupSegmentExceptionMap : EntityTypeConfiguration<AdGroupSegmentException>
    {
        public AdGroupSegmentExceptionMap()
            : this("analytics")
        {
        }
 
        public AdGroupSegmentExceptionMap(string schema)
        {
            ToTable(schema + ".AdGroupSegmentException");
            HasKey(x => new { x.BuyerAccountId, x.CampaignId, x.AdGroupId, x.OptimizationModelId, x.SegmentId, x.UtcDateTime, x.LocalDateTime, x.Bids, x.Impressions, x.InvalidImpressions, x.Clicks, x.InvalidClicks, x.Conversions, x.PostViewConversions, x.PostClickConversions, x.MediaCostUsdMicros, x.MediaCostLocalMicros, x.DataCostLocalMicros, x.FeesUsdSuperMicros, x.FeesLocalSuperMicros });

            Property(x => x.BuyerAccountId).HasColumnName("BuyerAccountID").IsRequired().HasColumnType("int");
            Property(x => x.CampaignId).HasColumnName("CampaignID").IsRequired().HasColumnType("int");
            Property(x => x.AdGroupId).HasColumnName("AdGroupID").IsRequired().HasColumnType("int");
            Property(x => x.OptimizationModelId).HasColumnName("OptimizationModelID").IsRequired().HasColumnType("int");
            Property(x => x.SegmentId).HasColumnName("SegmentID").IsRequired().HasColumnType("int");
            Property(x => x.UtcDateTime).HasColumnName("UtcDateTime").IsRequired().HasColumnType("datetime");
            Property(x => x.LocalDateTime).HasColumnName("LocalDateTime").IsRequired().HasColumnType("datetime");
            Property(x => x.Bids).HasColumnName("Bids").IsRequired().HasColumnType("bigint");
            Property(x => x.Impressions).HasColumnName("Impressions").IsRequired().HasColumnType("bigint");
            Property(x => x.InvalidImpressions).HasColumnName("InvalidImpressions").IsRequired().HasColumnType("bigint");
            Property(x => x.Clicks).HasColumnName("Clicks").IsRequired().HasColumnType("bigint");
            Property(x => x.InvalidClicks).HasColumnName("InvalidClicks").IsRequired().HasColumnType("bigint");
            Property(x => x.Conversions).HasColumnName("Conversions").IsRequired().HasColumnType("bigint");
            Property(x => x.PostViewConversions).HasColumnName("PostViewConversions").IsRequired().HasColumnType("bigint");
            Property(x => x.PostClickConversions).HasColumnName("PostClickConversions").IsRequired().HasColumnType("bigint");
            Property(x => x.MediaCostUsdMicros).HasColumnName("MediaCostUsdMicros").IsRequired().HasColumnType("bigint");
            Property(x => x.MediaCostLocalMicros).HasColumnName("MediaCostLocalMicros").IsRequired().HasColumnType("bigint");
            Property(x => x.DataCostLocalMicros).HasColumnName("DataCostLocalMicros").IsRequired().HasColumnType("bigint");
            Property(x => x.FeesUsdSuperMicros).HasColumnName("FeesUsdSuperMicros").IsRequired().HasColumnType("bigint");
            Property(x => x.FeesLocalSuperMicros).HasColumnName("FeesLocalSuperMicros").IsRequired().HasColumnType("bigint");
            Property(x => x.AdSlotDurationInSeconds).HasColumnName("AdSlotDurationInSeconds").IsOptional().HasColumnType("bigint");
            Property(x => x.RawViews).HasColumnName("RawViews").IsOptional().HasColumnType("bigint");
            Property(x => x.IabViews).HasColumnName("IabViews").IsOptional().HasColumnType("bigint");
            Property(x => x.ViewDurationInSeconds).HasColumnName("ViewDurationInSeconds").IsOptional().HasColumnType("bigint");
            InitializePartial();
        }
        partial void InitializePartial();
    }

    // AdGroupSegmentImport
    internal partial class AdGroupSegmentImportMap : EntityTypeConfiguration<AdGroupSegmentImport>
    {
        public AdGroupSegmentImportMap()
            : this("analytics")
        {
        }
 
        public AdGroupSegmentImportMap(string schema)
        {
            ToTable(schema + ".AdGroupSegmentImport");
            HasKey(x => new { x.BuyerAccountId, x.CampaignId, x.AdGroupId, x.OptimizationModelId, x.SegmentId, x.UtcDateTime, x.LocalDateTime, x.Bids, x.Impressions, x.InvalidImpressions, x.Clicks, x.InvalidClicks, x.Conversions, x.PostViewConversions, x.PostClickConversions, x.MediaCostUsdMicros, x.MediaCostLocalMicros, x.DataCostLocalMicros, x.FeesUsdSuperMicros, x.FeesLocalSuperMicros });

            Property(x => x.BuyerAccountId).HasColumnName("BuyerAccountID").IsRequired().HasColumnType("int");
            Property(x => x.CampaignId).HasColumnName("CampaignID").IsRequired().HasColumnType("int");
            Property(x => x.AdGroupId).HasColumnName("AdGroupID").IsRequired().HasColumnType("int");
            Property(x => x.OptimizationModelId).HasColumnName("OptimizationModelID").IsRequired().HasColumnType("int");
            Property(x => x.SegmentId).HasColumnName("SegmentID").IsRequired().HasColumnType("int");
            Property(x => x.UtcDateTime).HasColumnName("UtcDateTime").IsRequired().HasColumnType("datetime");
            Property(x => x.LocalDateTime).HasColumnName("LocalDateTime").IsRequired().HasColumnType("datetime");
            Property(x => x.Bids).HasColumnName("Bids").IsRequired().HasColumnType("bigint");
            Property(x => x.Impressions).HasColumnName("Impressions").IsRequired().HasColumnType("bigint");
            Property(x => x.InvalidImpressions).HasColumnName("InvalidImpressions").IsRequired().HasColumnType("bigint");
            Property(x => x.Clicks).HasColumnName("Clicks").IsRequired().HasColumnType("bigint");
            Property(x => x.InvalidClicks).HasColumnName("InvalidClicks").IsRequired().HasColumnType("bigint");
            Property(x => x.Conversions).HasColumnName("Conversions").IsRequired().HasColumnType("bigint");
            Property(x => x.PostViewConversions).HasColumnName("PostViewConversions").IsRequired().HasColumnType("bigint");
            Property(x => x.PostClickConversions).HasColumnName("PostClickConversions").IsRequired().HasColumnType("bigint");
            Property(x => x.MediaCostUsdMicros).HasColumnName("MediaCostUsdMicros").IsRequired().HasColumnType("bigint");
            Property(x => x.MediaCostLocalMicros).HasColumnName("MediaCostLocalMicros").IsRequired().HasColumnType("bigint");
            Property(x => x.DataCostLocalMicros).HasColumnName("DataCostLocalMicros").IsRequired().HasColumnType("bigint");
            Property(x => x.FeesUsdSuperMicros).HasColumnName("FeesUsdSuperMicros").IsRequired().HasColumnType("bigint");
            Property(x => x.FeesLocalSuperMicros).HasColumnName("FeesLocalSuperMicros").IsRequired().HasColumnType("bigint");
            Property(x => x.AdSlotDurationInSeconds).HasColumnName("AdSlotDurationInSeconds").IsOptional().HasColumnType("bigint");
            Property(x => x.RawViews).HasColumnName("RawViews").IsOptional().HasColumnType("bigint");
            Property(x => x.IabViews).HasColumnName("IabViews").IsOptional().HasColumnType("bigint");
            Property(x => x.ViewDurationInSeconds).HasColumnName("ViewDurationInSeconds").IsOptional().HasColumnType("bigint");
            InitializePartial();
        }
        partial void InitializePartial();
    }

    // AdGroupSegmentTargeting
    internal partial class AdGroupSegmentTargetingMap : EntityTypeConfiguration<AdGroupSegmentTargeting>
    {
        public AdGroupSegmentTargetingMap()
            : this("dbo")
        {
        }
 
        public AdGroupSegmentTargetingMap(string schema)
        {
            ToTable(schema + ".AdGroupSegmentTargeting");
            HasKey(x => new { x.AdGroupId, x.SegmentId, x.SegmentStatusId, x.SegmentTypeId, x.RemarketingRecency, x.TargetingActionId, x.IsTargeted, x.PackageInstalled });

            Property(x => x.BuyerAccountId).HasColumnName("BuyerAccountID").IsOptional().HasColumnType("int");
            Property(x => x.CampaignId).HasColumnName("CampaignID").IsOptional().HasColumnType("int");
            Property(x => x.AdGroupId).HasColumnName("AdGroupID").IsRequired().HasColumnType("int");
            Property(x => x.SegmentId).HasColumnName("SegmentID").IsRequired().HasColumnType("int");
            Property(x => x.SegmentName).HasColumnName("SegmentName").IsOptional().HasColumnType("nvarchar").HasMaxLength(500);
            Property(x => x.SegmentStatusId).HasColumnName("SegmentStatusID").IsRequired().HasColumnType("int");
            Property(x => x.AdvertiserUuid).HasColumnName("AdvertiserUuid").IsOptional().HasColumnType("uniqueidentifier");
            Property(x => x.AdvertiserName).HasColumnName("AdvertiserName").IsOptional().HasColumnType("nvarchar").HasMaxLength(100);
            Property(x => x.SegmentTypeId).HasColumnName("SegmentTypeID").IsRequired().HasColumnType("int");
            Property(x => x.RemarketingRecency).HasColumnName("RemarketingRecency").IsRequired().HasColumnType("int");
            Property(x => x.Uniques).HasColumnName("Uniques").IsOptional().HasColumnType("int");
            Property(x => x.TargetingActionId).HasColumnName("TargetingActionID").IsRequired().HasColumnType("int");
            Property(x => x.ThirdPartyCampaignId).HasColumnName("ThirdPartyCampaignId").IsOptional().HasColumnType("int");
            Property(x => x.IsTargeted).HasColumnName("IsTargeted").IsRequired().HasColumnType("int");
            Property(x => x.PackageInstalled).HasColumnName("PackageInstalled").IsRequired().HasColumnType("int");
            Property(x => x.Bids).HasColumnName("Bids").IsOptional().HasColumnType("bigint");
            Property(x => x.Impressions).HasColumnName("Impressions").IsOptional().HasColumnType("bigint");
            Property(x => x.Clicks).HasColumnName("Clicks").IsOptional().HasColumnType("bigint");
            Property(x => x.Conversions).HasColumnName("Conversions").IsOptional().HasColumnType("bigint");
            Property(x => x.PostViewConversions).HasColumnName("PostViewConversions").IsOptional().HasColumnType("bigint");
            Property(x => x.PostClickConversions).HasColumnName("PostClickConversions").IsOptional().HasColumnType("bigint");
            Property(x => x.SpendLocalMicros).HasColumnName("SpendLocalMicros").IsOptional().HasColumnType("bigint");
            Property(x => x.Spend).HasColumnName("Spend").IsOptional().HasColumnType("money").HasPrecision(19,4);
            Property(x => x.ClientCostLocalMicros).HasColumnName("ClientCostLocalMicros").IsOptional().HasColumnType("bigint");
            Property(x => x.ClientCostDollars).HasColumnName("ClientCostDollars").IsOptional().HasColumnType("money").HasPrecision(19,4);
            Property(x => x.ThirdPartyCost).HasColumnName("ThirdPartyCost").IsOptional().HasColumnType("money").HasPrecision(19,4);
            Property(x => x.MediaCostLocalMicros).HasColumnName("MediaCostLocalMicros").IsOptional().HasColumnType("bigint");
            Property(x => x.DataCostLocalMicros).HasColumnName("DataCostLocalMicros").IsOptional().HasColumnType("bigint");
            Property(x => x.MediaClientCostLocalMicros).HasColumnName("MediaClientCostLocalMicros").IsOptional().HasColumnType("bigint");
            Property(x => x.DataClientCostLocalMicros).HasColumnName("DataClientCostLocalMicros").IsOptional().HasColumnType("bigint");
            Property(x => x.AdSlotDurationInSeconds).HasColumnName("AdSlotDurationInSeconds").IsOptional().HasColumnType("bigint");
            Property(x => x.RawViews).HasColumnName("RawViews").IsOptional().HasColumnType("bigint");
            Property(x => x.IabViews).HasColumnName("IabViews").IsOptional().HasColumnType("bigint");
            Property(x => x.ViewDurationInSeconds).HasColumnName("ViewDurationInSeconds").IsOptional().HasColumnType("bigint");
            Property(x => x.Ctr).HasColumnName("CTR").IsOptional().HasColumnType("float");
            Property(x => x.Cpm).HasColumnName("CPM").IsOptional().HasColumnType("decimal").HasPrecision(19,4);
            Property(x => x.Cpc).HasColumnName("CPC").IsOptional().HasColumnType("decimal").HasPrecision(19,4);
            Property(x => x.Cpa).HasColumnName("CPA").IsOptional().HasColumnType("decimal").HasPrecision(19,4);
            Property(x => x.ClientCostCpm).HasColumnName("ClientCostCPM").IsOptional().HasColumnType("decimal").HasPrecision(19,4);
            Property(x => x.ClientCostCpc).HasColumnName("ClientCostCPC").IsOptional().HasColumnType("decimal").HasPrecision(19,4);
            Property(x => x.ClientCostCpa).HasColumnName("ClientCostCPA").IsOptional().HasColumnType("decimal").HasPrecision(19,4);
            Property(x => x.Cpms).HasColumnName("CPMs").IsOptional().HasColumnType("decimal").HasPrecision(38,14);
            Property(x => x.ClientCostCpms).HasColumnName("ClientCostCpms").IsOptional().HasColumnType("decimal").HasPrecision(38,14);
            Property(x => x.Cps).HasColumnName("CPS").IsOptional().HasColumnType("decimal").HasPrecision(38,14);
            Property(x => x.ClientCostCps).HasColumnName("ClientCostCps").IsOptional().HasColumnType("decimal").HasPrecision(38,14);
            Property(x => x.ViewableRatio).HasColumnName("ViewableRatio").IsOptional().HasColumnType("float");
            InitializePartial();
        }
        partial void InitializePartial();
    }

    // AdGroupVertical
    internal partial class AdGroupVerticalMap : EntityTypeConfiguration<AdGroupVertical>
    {
        public AdGroupVerticalMap()
            : this("analytics")
        {
        }
 
        public AdGroupVerticalMap(string schema)
        {
            ToTable(schema + ".AdGroupVertical");
            HasKey(x => new { x.BuyerAccountId, x.CampaignId, x.AdGroupId, x.OptimizationModelId, x.Vertical1Id, x.Vertical2Id, x.Vertical3Id, x.UtcDate, x.LocalDate, x.UtcDateTime, x.LocalDateTime, x.Bids, x.Impressions, x.Clicks, x.Conversions, x.PostViewConversions, x.PostClickConversions, x.MediaCostUsdMicros, x.MediaCostLocalMicros, x.DataCostLocalMicros });

            Property(x => x.BuyerAccountId).HasColumnName("BuyerAccountID").IsRequired().HasColumnType("int");
            Property(x => x.CampaignId).HasColumnName("CampaignID").IsRequired().HasColumnType("int");
            Property(x => x.AdGroupId).HasColumnName("AdGroupID").IsRequired().HasColumnType("int");
            Property(x => x.OptimizationModelId).HasColumnName("OptimizationModelID").IsRequired().HasColumnType("int");
            Property(x => x.Vertical1Id).HasColumnName("Vertical1ID").IsRequired().HasColumnType("int");
            Property(x => x.Vertical2Id).HasColumnName("Vertical2ID").IsRequired().HasColumnType("int");
            Property(x => x.Vertical3Id).HasColumnName("Vertical3ID").IsRequired().HasColumnType("int");
            Property(x => x.UtcDate).HasColumnName("UtcDate").IsRequired().HasColumnType("date");
            Property(x => x.LocalDate).HasColumnName("LocalDate").IsRequired().HasColumnType("date");
            Property(x => x.UtcDateTime).HasColumnName("UtcDateTime").IsRequired().HasColumnType("datetime");
            Property(x => x.LocalDateTime).HasColumnName("LocalDateTime").IsRequired().HasColumnType("datetime");
            Property(x => x.Bids).HasColumnName("Bids").IsRequired().HasColumnType("bigint");
            Property(x => x.Impressions).HasColumnName("Impressions").IsRequired().HasColumnType("bigint");
            Property(x => x.Clicks).HasColumnName("Clicks").IsRequired().HasColumnType("bigint");
            Property(x => x.Conversions).HasColumnName("Conversions").IsRequired().HasColumnType("bigint");
            Property(x => x.PostViewConversions).HasColumnName("PostViewConversions").IsRequired().HasColumnType("bigint");
            Property(x => x.PostClickConversions).HasColumnName("PostClickConversions").IsRequired().HasColumnType("bigint");
            Property(x => x.MediaCostUsdMicros).HasColumnName("MediaCostUsdMicros").IsRequired().HasColumnType("bigint");
            Property(x => x.MediaCostLocalMicros).HasColumnName("MediaCostLocalMicros").IsRequired().HasColumnType("bigint");
            Property(x => x.DataCostLocalMicros).HasColumnName("DataCostLocalMicros").IsRequired().HasColumnType("bigint");
            Property(x => x.InvalidImpressions).HasColumnName("InvalidImpressions").IsOptional().HasColumnType("bigint");
            Property(x => x.InvalidClicks).HasColumnName("InvalidClicks").IsOptional().HasColumnType("bigint");
            Property(x => x.FeesUsdSuperMicros).HasColumnName("FeesUsdSuperMicros").IsOptional().HasColumnType("bigint");
            Property(x => x.FeesLocalSuperMicros).HasColumnName("FeesLocalSuperMicros").IsOptional().HasColumnType("bigint");
            Property(x => x.AdSlotDurationInSeconds).HasColumnName("AdSlotDurationInSeconds").IsOptional().HasColumnType("bigint");
            Property(x => x.RawViews).HasColumnName("RawViews").IsOptional().HasColumnType("bigint");
            Property(x => x.IabViews).HasColumnName("IabViews").IsOptional().HasColumnType("bigint");
            Property(x => x.ViewDurationInSeconds).HasColumnName("ViewDurationInSeconds").IsOptional().HasColumnType("bigint");
            InitializePartial();
        }
        partial void InitializePartial();
    }

    // AdGroupVertical1IABMappedTargetingReportID
    internal partial class AdGroupVertical1IabMappedTargetingReportIdMap : EntityTypeConfiguration<AdGroupVertical1IabMappedTargetingReportId>
    {
        public AdGroupVertical1IabMappedTargetingReportIdMap()
            : this("dbo")
        {
        }
 
        public AdGroupVertical1IabMappedTargetingReportIdMap(string schema)
        {
            ToTable(schema + ".AdGroupVertical1IABMappedTargetingReportID");
            HasKey(x => new { x.Vertical1Id, x.Vertical1Name, x.IsTargeted, x.PackageInstalled });

            Property(x => x.BuyerAccountId).HasColumnName("BuyerAccountID").IsOptional().HasColumnType("int");
            Property(x => x.CampaignId).HasColumnName("CampaignID").IsOptional().HasColumnType("int");
            Property(x => x.AdGroupId).HasColumnName("AdGroupID").IsOptional().HasColumnType("int");
            Property(x => x.Vertical1Id).HasColumnName("Vertical1ID").IsRequired().HasColumnType("int");
            Property(x => x.Vertical1Name).HasColumnName("Vertical1Name").IsRequired().HasColumnType("nvarchar").HasMaxLength(256);
            Property(x => x.IsTargeted).HasColumnName("IsTargeted").IsRequired().HasColumnType("int");
            Property(x => x.PackageInstalled).HasColumnName("PackageInstalled").IsRequired().HasColumnType("int");
            Property(x => x.Bids).HasColumnName("Bids").IsOptional().HasColumnType("bigint");
            Property(x => x.Impressions).HasColumnName("Impressions").IsOptional().HasColumnType("bigint");
            Property(x => x.Clicks).HasColumnName("Clicks").IsOptional().HasColumnType("bigint");
            Property(x => x.Conversions).HasColumnName("Conversions").IsOptional().HasColumnType("bigint");
            Property(x => x.PostViewConversions).HasColumnName("PostViewConversions").IsOptional().HasColumnType("bigint");
            Property(x => x.PostClickConversions).HasColumnName("PostClickConversions").IsOptional().HasColumnType("bigint");
            Property(x => x.SpendLocalMicros).HasColumnName("SpendLocalMicros").IsOptional().HasColumnType("bigint");
            Property(x => x.Spend).HasColumnName("Spend").IsOptional().HasColumnType("money").HasPrecision(19,4);
            Property(x => x.ClientCostLocalMicros).HasColumnName("ClientCostLocalMicros").IsOptional().HasColumnType("decimal").HasPrecision(38,4);
            Property(x => x.ClientCostDollars).HasColumnName("ClientCostDollars").IsOptional().HasColumnType("money").HasPrecision(19,4);
            Property(x => x.MediaCostLocalMicros).HasColumnName("MediaCostLocalMicros").IsOptional().HasColumnType("bigint");
            Property(x => x.DataCostLocalMicros).HasColumnName("DataCostLocalMicros").IsOptional().HasColumnType("bigint");
            Property(x => x.MediaClientCostLocalMicros).HasColumnName("MediaClientCostLocalMicros").IsOptional().HasColumnType("decimal").HasPrecision(38,4);
            Property(x => x.DataClientCostLocalMicros).HasColumnName("DataClientCostLocalMicros").IsOptional().HasColumnType("decimal").HasPrecision(38,4);
            Property(x => x.AdSlotDurationInSeconds).HasColumnName("AdSlotDurationInSeconds").IsOptional().HasColumnType("bigint");
            Property(x => x.RawViews).HasColumnName("RawViews").IsOptional().HasColumnType("bigint");
            Property(x => x.IabViews).HasColumnName("IabViews").IsOptional().HasColumnType("bigint");
            Property(x => x.ViewDurationInSeconds).HasColumnName("ViewDurationInSeconds").IsOptional().HasColumnType("bigint");
            Property(x => x.Ctr).HasColumnName("CTR").IsOptional().HasColumnType("float");
            Property(x => x.Cpm).HasColumnName("CPM").IsOptional().HasColumnType("decimal").HasPrecision(19,4);
            Property(x => x.Cpc).HasColumnName("CPC").IsOptional().HasColumnType("decimal").HasPrecision(19,4);
            Property(x => x.Cpa).HasColumnName("CPA").IsOptional().HasColumnType("decimal").HasPrecision(19,4);
            Property(x => x.ClientCostCpm).HasColumnName("ClientCostCPM").IsOptional().HasColumnType("decimal").HasPrecision(19,4);
            Property(x => x.ClientCostCpc).HasColumnName("ClientCostCPC").IsOptional().HasColumnType("decimal").HasPrecision(19,4);
            Property(x => x.ClientCostCpa).HasColumnName("ClientCostCPA").IsOptional().HasColumnType("decimal").HasPrecision(19,4);
            Property(x => x.Cpms).HasColumnName("CPMs").IsOptional().HasColumnType("decimal").HasPrecision(38,14);
            Property(x => x.ClientCostCpms).HasColumnName("ClientCostCpms").IsOptional().HasColumnType("decimal").HasPrecision(38,14);
            Property(x => x.Cps).HasColumnName("CPS").IsOptional().HasColumnType("decimal").HasPrecision(38,14);
            Property(x => x.ClientCostCps).HasColumnName("ClientCostCps").IsOptional().HasColumnType("decimal").HasPrecision(38,14);
            Property(x => x.ViewableRatio).HasColumnName("ViewableRatio").IsOptional().HasColumnType("float");
            InitializePartial();
        }
        partial void InitializePartial();
    }

    // AdGroupVertical1TargetingReportID
    internal partial class AdGroupVertical1TargetingReportIdMap : EntityTypeConfiguration<AdGroupVertical1TargetingReportId>
    {
        public AdGroupVertical1TargetingReportIdMap()
            : this("dbo")
        {
        }
 
        public AdGroupVertical1TargetingReportIdMap(string schema)
        {
            ToTable(schema + ".AdGroupVertical1TargetingReportID");
            HasKey(x => new { x.Vertical1Id, x.Vertical1Name, x.IsTargeted, x.PackageInstalled });

            Property(x => x.BuyerAccountId).HasColumnName("BuyerAccountID").IsOptional().HasColumnType("int");
            Property(x => x.CampaignId).HasColumnName("CampaignID").IsOptional().HasColumnType("int");
            Property(x => x.AdGroupId).HasColumnName("AdGroupID").IsOptional().HasColumnType("int");
            Property(x => x.Vertical1Id).HasColumnName("Vertical1ID").IsRequired().HasColumnType("int");
            Property(x => x.Vertical1Name).HasColumnName("Vertical1Name").IsRequired().HasColumnType("nvarchar").HasMaxLength(256);
            Property(x => x.IsTargeted).HasColumnName("IsTargeted").IsRequired().HasColumnType("int");
            Property(x => x.PackageInstalled).HasColumnName("PackageInstalled").IsRequired().HasColumnType("int");
            Property(x => x.Bids).HasColumnName("Bids").IsOptional().HasColumnType("bigint");
            Property(x => x.Impressions).HasColumnName("Impressions").IsOptional().HasColumnType("bigint");
            Property(x => x.Clicks).HasColumnName("Clicks").IsOptional().HasColumnType("bigint");
            Property(x => x.Conversions).HasColumnName("Conversions").IsOptional().HasColumnType("bigint");
            Property(x => x.PostViewConversions).HasColumnName("PostViewConversions").IsOptional().HasColumnType("bigint");
            Property(x => x.PostClickConversions).HasColumnName("PostClickConversions").IsOptional().HasColumnType("bigint");
            Property(x => x.SpendLocalMicros).HasColumnName("SpendLocalMicros").IsOptional().HasColumnType("bigint");
            Property(x => x.Spend).HasColumnName("Spend").IsOptional().HasColumnType("money").HasPrecision(19,4);
            Property(x => x.ClientCostLocalMicros).HasColumnName("ClientCostLocalMicros").IsOptional().HasColumnType("decimal").HasPrecision(38,4);
            Property(x => x.ClientCostDollars).HasColumnName("ClientCostDollars").IsOptional().HasColumnType("money").HasPrecision(19,4);
            Property(x => x.MediaCostLocalMicros).HasColumnName("MediaCostLocalMicros").IsOptional().HasColumnType("bigint");
            Property(x => x.DataCostLocalMicros).HasColumnName("DataCostLocalMicros").IsOptional().HasColumnType("bigint");
            Property(x => x.MediaClientCostLocalMicros).HasColumnName("MediaClientCostLocalMicros").IsOptional().HasColumnType("decimal").HasPrecision(38,4);
            Property(x => x.DataClientCostLocalMicros).HasColumnName("DataClientCostLocalMicros").IsOptional().HasColumnType("decimal").HasPrecision(38,4);
            Property(x => x.AdSlotDurationInSeconds).HasColumnName("AdSlotDurationInSeconds").IsOptional().HasColumnType("bigint");
            Property(x => x.RawViews).HasColumnName("RawViews").IsOptional().HasColumnType("bigint");
            Property(x => x.IabViews).HasColumnName("IabViews").IsOptional().HasColumnType("bigint");
            Property(x => x.ViewDurationInSeconds).HasColumnName("ViewDurationInSeconds").IsOptional().HasColumnType("bigint");
            Property(x => x.Ctr).HasColumnName("CTR").IsOptional().HasColumnType("float");
            Property(x => x.Cpm).HasColumnName("CPM").IsOptional().HasColumnType("decimal").HasPrecision(19,4);
            Property(x => x.Cpc).HasColumnName("CPC").IsOptional().HasColumnType("decimal").HasPrecision(19,4);
            Property(x => x.Cpa).HasColumnName("CPA").IsOptional().HasColumnType("decimal").HasPrecision(19,4);
            Property(x => x.ClientCostCpm).HasColumnName("ClientCostCPM").IsOptional().HasColumnType("decimal").HasPrecision(19,4);
            Property(x => x.ClientCostCpc).HasColumnName("ClientCostCPC").IsOptional().HasColumnType("decimal").HasPrecision(19,4);
            Property(x => x.ClientCostCpa).HasColumnName("ClientCostCPA").IsOptional().HasColumnType("decimal").HasPrecision(19,4);
            Property(x => x.Cpms).HasColumnName("CPMs").IsOptional().HasColumnType("decimal").HasPrecision(38,14);
            Property(x => x.ClientCostCpms).HasColumnName("ClientCostCpms").IsOptional().HasColumnType("decimal").HasPrecision(38,14);
            Property(x => x.Cps).HasColumnName("CPS").IsOptional().HasColumnType("decimal").HasPrecision(38,14);
            Property(x => x.ClientCostCps).HasColumnName("ClientCostCps").IsOptional().HasColumnType("decimal").HasPrecision(38,14);
            Property(x => x.ViewableRatio).HasColumnName("ViewableRatio").IsOptional().HasColumnType("float");
            InitializePartial();
        }
        partial void InitializePartial();
    }

    // AdGroupVertical2IABMappedTargetingReportID
    internal partial class AdGroupVertical2IabMappedTargetingReportIdMap : EntityTypeConfiguration<AdGroupVertical2IabMappedTargetingReportId>
    {
        public AdGroupVertical2IabMappedTargetingReportIdMap()
            : this("dbo")
        {
        }
 
        public AdGroupVertical2IabMappedTargetingReportIdMap(string schema)
        {
            ToTable(schema + ".AdGroupVertical2IABMappedTargetingReportID");
            HasKey(x => new { x.Vertical1Id, x.Vertical1Name, x.Vertical2Id, x.Vertical2Name, x.IsTargeted, x.PackageInstalled });

            Property(x => x.BuyerAccountId).HasColumnName("BuyerAccountID").IsOptional().HasColumnType("int");
            Property(x => x.CampaignId).HasColumnName("CampaignID").IsOptional().HasColumnType("int");
            Property(x => x.AdGroupId).HasColumnName("AdGroupID").IsOptional().HasColumnType("int");
            Property(x => x.Vertical1Id).HasColumnName("Vertical1ID").IsRequired().HasColumnType("int");
            Property(x => x.Vertical1Name).HasColumnName("Vertical1Name").IsRequired().HasColumnType("nvarchar").HasMaxLength(256);
            Property(x => x.Vertical2Id).HasColumnName("Vertical2ID").IsRequired().HasColumnType("int");
            Property(x => x.Vertical2Name).HasColumnName("Vertical2Name").IsRequired().HasColumnType("nvarchar").HasMaxLength(256);
            Property(x => x.IsTargeted).HasColumnName("IsTargeted").IsRequired().HasColumnType("int");
            Property(x => x.PackageInstalled).HasColumnName("PackageInstalled").IsRequired().HasColumnType("int");
            Property(x => x.Bids).HasColumnName("Bids").IsOptional().HasColumnType("bigint");
            Property(x => x.Impressions).HasColumnName("Impressions").IsOptional().HasColumnType("bigint");
            Property(x => x.Clicks).HasColumnName("Clicks").IsOptional().HasColumnType("bigint");
            Property(x => x.Conversions).HasColumnName("Conversions").IsOptional().HasColumnType("bigint");
            Property(x => x.PostViewConversions).HasColumnName("PostViewConversions").IsOptional().HasColumnType("bigint");
            Property(x => x.PostClickConversions).HasColumnName("PostClickConversions").IsOptional().HasColumnType("bigint");
            Property(x => x.SpendLocalMicros).HasColumnName("SpendLocalMicros").IsOptional().HasColumnType("bigint");
            Property(x => x.Spend).HasColumnName("Spend").IsOptional().HasColumnType("money").HasPrecision(19,4);
            Property(x => x.ClientCostLocalMicros).HasColumnName("ClientCostLocalMicros").IsOptional().HasColumnType("decimal").HasPrecision(38,4);
            Property(x => x.ClientCostDollars).HasColumnName("ClientCostDollars").IsOptional().HasColumnType("money").HasPrecision(19,4);
            Property(x => x.MediaCostLocalMicros).HasColumnName("MediaCostLocalMicros").IsOptional().HasColumnType("bigint");
            Property(x => x.DataCostLocalMicros).HasColumnName("DataCostLocalMicros").IsOptional().HasColumnType("bigint");
            Property(x => x.MediaClientCostLocalMicros).HasColumnName("MediaClientCostLocalMicros").IsOptional().HasColumnType("decimal").HasPrecision(38,4);
            Property(x => x.DataClientCostLocalMicros).HasColumnName("DataClientCostLocalMicros").IsOptional().HasColumnType("decimal").HasPrecision(38,4);
            Property(x => x.AdSlotDurationInSeconds).HasColumnName("AdSlotDurationInSeconds").IsOptional().HasColumnType("bigint");
            Property(x => x.RawViews).HasColumnName("RawViews").IsOptional().HasColumnType("bigint");
            Property(x => x.IabViews).HasColumnName("IabViews").IsOptional().HasColumnType("bigint");
            Property(x => x.ViewDurationInSeconds).HasColumnName("ViewDurationInSeconds").IsOptional().HasColumnType("bigint");
            Property(x => x.Ctr).HasColumnName("CTR").IsOptional().HasColumnType("float");
            Property(x => x.Cpm).HasColumnName("CPM").IsOptional().HasColumnType("decimal").HasPrecision(19,4);
            Property(x => x.Cpc).HasColumnName("CPC").IsOptional().HasColumnType("decimal").HasPrecision(19,4);
            Property(x => x.Cpa).HasColumnName("CPA").IsOptional().HasColumnType("decimal").HasPrecision(19,4);
            Property(x => x.ClientCostCpm).HasColumnName("ClientCostCPM").IsOptional().HasColumnType("decimal").HasPrecision(19,4);
            Property(x => x.ClientCostCpc).HasColumnName("ClientCostCPC").IsOptional().HasColumnType("decimal").HasPrecision(19,4);
            Property(x => x.ClientCostCpa).HasColumnName("ClientCostCPA").IsOptional().HasColumnType("decimal").HasPrecision(19,4);
            Property(x => x.Cpms).HasColumnName("CPMs").IsOptional().HasColumnType("decimal").HasPrecision(38,14);
            Property(x => x.ClientCostCpms).HasColumnName("ClientCostCpms").IsOptional().HasColumnType("decimal").HasPrecision(38,14);
            Property(x => x.Cps).HasColumnName("CPS").IsOptional().HasColumnType("decimal").HasPrecision(38,14);
            Property(x => x.ClientCostCps).HasColumnName("ClientCostCps").IsOptional().HasColumnType("decimal").HasPrecision(38,14);
            Property(x => x.ViewableRatio).HasColumnName("ViewableRatio").IsOptional().HasColumnType("float");
            InitializePartial();
        }
        partial void InitializePartial();
    }

    // AdGroupVertical2TargetingReportID
    internal partial class AdGroupVertical2TargetingReportIdMap : EntityTypeConfiguration<AdGroupVertical2TargetingReportId>
    {
        public AdGroupVertical2TargetingReportIdMap()
            : this("dbo")
        {
        }
 
        public AdGroupVertical2TargetingReportIdMap(string schema)
        {
            ToTable(schema + ".AdGroupVertical2TargetingReportID");
            HasKey(x => new { x.Vertical1Id, x.Vertical1Name, x.Vertical2Id, x.Vertical2Name, x.IsTargeted, x.PackageInstalled });

            Property(x => x.BuyerAccountId).HasColumnName("BuyerAccountID").IsOptional().HasColumnType("int");
            Property(x => x.CampaignId).HasColumnName("CampaignID").IsOptional().HasColumnType("int");
            Property(x => x.AdGroupId).HasColumnName("AdGroupID").IsOptional().HasColumnType("int");
            Property(x => x.Vertical1Id).HasColumnName("Vertical1ID").IsRequired().HasColumnType("int");
            Property(x => x.Vertical1Name).HasColumnName("Vertical1Name").IsRequired().HasColumnType("nvarchar").HasMaxLength(256);
            Property(x => x.Vertical2Id).HasColumnName("Vertical2ID").IsRequired().HasColumnType("int");
            Property(x => x.Vertical2Name).HasColumnName("Vertical2Name").IsRequired().HasColumnType("nvarchar").HasMaxLength(256);
            Property(x => x.IsTargeted).HasColumnName("IsTargeted").IsRequired().HasColumnType("int");
            Property(x => x.PackageInstalled).HasColumnName("PackageInstalled").IsRequired().HasColumnType("int");
            Property(x => x.Bids).HasColumnName("Bids").IsOptional().HasColumnType("bigint");
            Property(x => x.Impressions).HasColumnName("Impressions").IsOptional().HasColumnType("bigint");
            Property(x => x.Clicks).HasColumnName("Clicks").IsOptional().HasColumnType("bigint");
            Property(x => x.Conversions).HasColumnName("Conversions").IsOptional().HasColumnType("bigint");
            Property(x => x.PostViewConversions).HasColumnName("PostViewConversions").IsOptional().HasColumnType("bigint");
            Property(x => x.PostClickConversions).HasColumnName("PostClickConversions").IsOptional().HasColumnType("bigint");
            Property(x => x.SpendLocalMicros).HasColumnName("SpendLocalMicros").IsOptional().HasColumnType("bigint");
            Property(x => x.Spend).HasColumnName("Spend").IsOptional().HasColumnType("money").HasPrecision(19,4);
            Property(x => x.ClientCostLocalMicros).HasColumnName("ClientCostLocalMicros").IsOptional().HasColumnType("decimal").HasPrecision(38,4);
            Property(x => x.ClientCostDollars).HasColumnName("ClientCostDollars").IsOptional().HasColumnType("money").HasPrecision(19,4);
            Property(x => x.MediaCostLocalMicros).HasColumnName("MediaCostLocalMicros").IsOptional().HasColumnType("bigint");
            Property(x => x.DataCostLocalMicros).HasColumnName("DataCostLocalMicros").IsOptional().HasColumnType("bigint");
            Property(x => x.MediaClientCostLocalMicros).HasColumnName("MediaClientCostLocalMicros").IsOptional().HasColumnType("decimal").HasPrecision(38,4);
            Property(x => x.DataClientCostLocalMicros).HasColumnName("DataClientCostLocalMicros").IsOptional().HasColumnType("decimal").HasPrecision(38,4);
            Property(x => x.AdSlotDurationInSeconds).HasColumnName("AdSlotDurationInSeconds").IsOptional().HasColumnType("bigint");
            Property(x => x.RawViews).HasColumnName("RawViews").IsOptional().HasColumnType("bigint");
            Property(x => x.IabViews).HasColumnName("IabViews").IsOptional().HasColumnType("bigint");
            Property(x => x.ViewDurationInSeconds).HasColumnName("ViewDurationInSeconds").IsOptional().HasColumnType("bigint");
            Property(x => x.Ctr).HasColumnName("CTR").IsOptional().HasColumnType("float");
            Property(x => x.Cpm).HasColumnName("CPM").IsOptional().HasColumnType("decimal").HasPrecision(19,4);
            Property(x => x.Cpc).HasColumnName("CPC").IsOptional().HasColumnType("decimal").HasPrecision(19,4);
            Property(x => x.Cpa).HasColumnName("CPA").IsOptional().HasColumnType("decimal").HasPrecision(19,4);
            Property(x => x.ClientCostCpm).HasColumnName("ClientCostCPM").IsOptional().HasColumnType("decimal").HasPrecision(19,4);
            Property(x => x.ClientCostCpc).HasColumnName("ClientCostCPC").IsOptional().HasColumnType("decimal").HasPrecision(19,4);
            Property(x => x.ClientCostCpa).HasColumnName("ClientCostCPA").IsOptional().HasColumnType("decimal").HasPrecision(19,4);
            Property(x => x.Cpms).HasColumnName("CPMs").IsOptional().HasColumnType("decimal").HasPrecision(38,14);
            Property(x => x.ClientCostCpms).HasColumnName("ClientCostCpms").IsOptional().HasColumnType("decimal").HasPrecision(38,14);
            Property(x => x.Cps).HasColumnName("CPS").IsOptional().HasColumnType("decimal").HasPrecision(38,14);
            Property(x => x.ClientCostCps).HasColumnName("ClientCostCps").IsOptional().HasColumnType("decimal").HasPrecision(38,14);
            Property(x => x.ViewableRatio).HasColumnName("ViewableRatio").IsOptional().HasColumnType("float");
            InitializePartial();
        }
        partial void InitializePartial();
    }

    // AdGroupVertical3TargetingReportID
    internal partial class AdGroupVertical3TargetingReportIdMap : EntityTypeConfiguration<AdGroupVertical3TargetingReportId>
    {
        public AdGroupVertical3TargetingReportIdMap()
            : this("dbo")
        {
        }
 
        public AdGroupVertical3TargetingReportIdMap(string schema)
        {
            ToTable(schema + ".AdGroupVertical3TargetingReportID");
            HasKey(x => new { x.Vertical1Id, x.Vertical1Name, x.Vertical2Id, x.Vertical2Name, x.Vertical3Id, x.Vertical3Name, x.IsTargeted, x.PackageInstalled });

            Property(x => x.BuyerAccountId).HasColumnName("BuyerAccountID").IsOptional().HasColumnType("int");
            Property(x => x.CampaignId).HasColumnName("CampaignID").IsOptional().HasColumnType("int");
            Property(x => x.AdGroupId).HasColumnName("AdGroupID").IsOptional().HasColumnType("int");
            Property(x => x.Vertical1Id).HasColumnName("Vertical1ID").IsRequired().HasColumnType("int");
            Property(x => x.Vertical1Name).HasColumnName("Vertical1Name").IsRequired().HasColumnType("nvarchar").HasMaxLength(256);
            Property(x => x.Vertical2Id).HasColumnName("Vertical2ID").IsRequired().HasColumnType("int");
            Property(x => x.Vertical2Name).HasColumnName("Vertical2Name").IsRequired().HasColumnType("nvarchar").HasMaxLength(256);
            Property(x => x.Vertical3Id).HasColumnName("Vertical3ID").IsRequired().HasColumnType("int");
            Property(x => x.Vertical3Name).HasColumnName("Vertical3Name").IsRequired().HasColumnType("nvarchar").HasMaxLength(256);
            Property(x => x.IsTargeted).HasColumnName("IsTargeted").IsRequired().HasColumnType("int");
            Property(x => x.PackageInstalled).HasColumnName("PackageInstalled").IsRequired().HasColumnType("int");
            Property(x => x.Bids).HasColumnName("Bids").IsOptional().HasColumnType("bigint");
            Property(x => x.Impressions).HasColumnName("Impressions").IsOptional().HasColumnType("bigint");
            Property(x => x.Clicks).HasColumnName("Clicks").IsOptional().HasColumnType("bigint");
            Property(x => x.Conversions).HasColumnName("Conversions").IsOptional().HasColumnType("bigint");
            Property(x => x.PostViewConversions).HasColumnName("PostViewConversions").IsOptional().HasColumnType("bigint");
            Property(x => x.PostClickConversions).HasColumnName("PostClickConversions").IsOptional().HasColumnType("bigint");
            Property(x => x.SpendLocalMicros).HasColumnName("SpendLocalMicros").IsOptional().HasColumnType("bigint");
            Property(x => x.Spend).HasColumnName("Spend").IsOptional().HasColumnType("money").HasPrecision(19,4);
            Property(x => x.ClientCostLocalMicros).HasColumnName("ClientCostLocalMicros").IsOptional().HasColumnType("decimal").HasPrecision(38,4);
            Property(x => x.ClientCostDollars).HasColumnName("ClientCostDollars").IsOptional().HasColumnType("money").HasPrecision(19,4);
            Property(x => x.MediaCostLocalMicros).HasColumnName("MediaCostLocalMicros").IsOptional().HasColumnType("bigint");
            Property(x => x.DataCostLocalMicros).HasColumnName("DataCostLocalMicros").IsOptional().HasColumnType("bigint");
            Property(x => x.MediaClientCostLocalMicros).HasColumnName("MediaClientCostLocalMicros").IsOptional().HasColumnType("decimal").HasPrecision(38,4);
            Property(x => x.DataClientCostLocalMicros).HasColumnName("DataClientCostLocalMicros").IsOptional().HasColumnType("decimal").HasPrecision(38,4);
            Property(x => x.AdSlotDurationInSeconds).HasColumnName("AdSlotDurationInSeconds").IsOptional().HasColumnType("bigint");
            Property(x => x.RawViews).HasColumnName("RawViews").IsOptional().HasColumnType("bigint");
            Property(x => x.IabViews).HasColumnName("IabViews").IsOptional().HasColumnType("bigint");
            Property(x => x.ViewDurationInSeconds).HasColumnName("ViewDurationInSeconds").IsOptional().HasColumnType("bigint");
            Property(x => x.Ctr).HasColumnName("CTR").IsOptional().HasColumnType("float");
            Property(x => x.Cpm).HasColumnName("CPM").IsOptional().HasColumnType("decimal").HasPrecision(19,4);
            Property(x => x.Cpc).HasColumnName("CPC").IsOptional().HasColumnType("decimal").HasPrecision(19,4);
            Property(x => x.Cpa).HasColumnName("CPA").IsOptional().HasColumnType("decimal").HasPrecision(19,4);
            Property(x => x.ClientCostCpm).HasColumnName("ClientCostCPM").IsOptional().HasColumnType("decimal").HasPrecision(19,4);
            Property(x => x.ClientCostCpc).HasColumnName("ClientCostCPC").IsOptional().HasColumnType("decimal").HasPrecision(19,4);
            Property(x => x.ClientCostCpa).HasColumnName("ClientCostCPA").IsOptional().HasColumnType("decimal").HasPrecision(19,4);
            Property(x => x.Cpms).HasColumnName("CPMs").IsOptional().HasColumnType("decimal").HasPrecision(38,14);
            Property(x => x.ClientCostCpms).HasColumnName("ClientCostCpms").IsOptional().HasColumnType("decimal").HasPrecision(38,14);
            Property(x => x.Cps).HasColumnName("CPS").IsOptional().HasColumnType("decimal").HasPrecision(38,14);
            Property(x => x.ClientCostCps).HasColumnName("ClientCostCps").IsOptional().HasColumnType("decimal").HasPrecision(38,14);
            Property(x => x.ViewableRatio).HasColumnName("ViewableRatio").IsOptional().HasColumnType("float");
            InitializePartial();
        }
        partial void InitializePartial();
    }

    // AdGroupVerticalAnalyticsReportID
    internal partial class AdGroupVerticalAnalyticsReportIdMap : EntityTypeConfiguration<AdGroupVerticalAnalyticsReportId>
    {
        public AdGroupVerticalAnalyticsReportIdMap()
            : this("dbo")
        {
        }
 
        public AdGroupVerticalAnalyticsReportIdMap(string schema)
        {
            ToTable(schema + ".AdGroupVerticalAnalyticsReportID");
            HasKey(x => new { x.BuyerAccountId, x.AdvertiserId, x.AdvertiserProductId, x.CampaignId, x.AdGroupId, x.OptimizationModelId, x.Vertical1Id, x.Vertical1Name, x.Vertical2Id, x.Vertical2Name, x.Vertical3Id, x.Vertical3Name, x.LocalDate, x.Bids, x.Impressions, x.Clicks, x.Conversions, x.PostViewConversions, x.PostClickConversions, x.MediaCostLocalMicros, x.DataCostLocalMicros });

            Property(x => x.BuyerAccountId).HasColumnName("BuyerAccountID").IsRequired().HasColumnType("int");
            Property(x => x.AdvertiserId).HasColumnName("AdvertiserID").IsRequired().HasColumnType("int");
            Property(x => x.AdvertiserProductId).HasColumnName("AdvertiserProductID").IsRequired().HasColumnType("int");
            Property(x => x.CampaignId).HasColumnName("CampaignID").IsRequired().HasColumnType("int");
            Property(x => x.AdGroupId).HasColumnName("AdGroupID").IsRequired().HasColumnType("int");
            Property(x => x.OptimizationModelId).HasColumnName("OptimizationModelID").IsRequired().HasColumnType("int");
            Property(x => x.Vertical1Id).HasColumnName("Vertical1ID").IsRequired().HasColumnType("int");
            Property(x => x.Vertical1Name).HasColumnName("Vertical1Name").IsRequired().HasColumnType("nvarchar").HasMaxLength(256);
            Property(x => x.Vertical2Id).HasColumnName("Vertical2ID").IsRequired().HasColumnType("int");
            Property(x => x.Vertical2Name).HasColumnName("Vertical2Name").IsRequired().HasColumnType("nvarchar").HasMaxLength(256);
            Property(x => x.Vertical3Id).HasColumnName("Vertical3ID").IsRequired().HasColumnType("int");
            Property(x => x.Vertical3Name).HasColumnName("Vertical3Name").IsRequired().HasColumnType("nvarchar").HasMaxLength(256);
            Property(x => x.LocalDate).HasColumnName("LocalDate").IsRequired().HasColumnType("date");
            Property(x => x.Bids).HasColumnName("Bids").IsRequired().HasColumnType("bigint");
            Property(x => x.Impressions).HasColumnName("Impressions").IsRequired().HasColumnType("bigint");
            Property(x => x.Clicks).HasColumnName("Clicks").IsRequired().HasColumnType("bigint");
            Property(x => x.UnfilteredClicks).HasColumnName("UnfilteredClicks").IsOptional().HasColumnType("bigint");
            Property(x => x.Conversions).HasColumnName("Conversions").IsRequired().HasColumnType("bigint");
            Property(x => x.PostViewConversions).HasColumnName("PostViewConversions").IsRequired().HasColumnType("bigint");
            Property(x => x.PostClickConversions).HasColumnName("PostClickConversions").IsRequired().HasColumnType("bigint");
            Property(x => x.SpendLocalMicros).HasColumnName("SpendLocalMicros").IsOptional().HasColumnType("bigint");
            Property(x => x.Spend).HasColumnName("Spend").IsOptional().HasColumnType("money").HasPrecision(19,4);
            Property(x => x.ClientCostLocalMicros).HasColumnName("ClientCostLocalMicros").IsOptional().HasColumnType("bigint");
            Property(x => x.ClientCostDollars).HasColumnName("ClientCostDollars").IsOptional().HasColumnType("money").HasPrecision(19,4);
            Property(x => x.MediaCostLocalMicros).HasColumnName("MediaCostLocalMicros").IsRequired().HasColumnType("bigint");
            Property(x => x.DataCostLocalMicros).HasColumnName("DataCostLocalMicros").IsRequired().HasColumnType("bigint");
            Property(x => x.MediaClientCostLocalMicros).HasColumnName("MediaClientCostLocalMicros").IsOptional().HasColumnType("bigint");
            Property(x => x.DataClientCostLocalMicros).HasColumnName("DataClientCostLocalMicros").IsOptional().HasColumnType("bigint");
            Property(x => x.AdSlotDurationInSeconds).HasColumnName("AdSlotDurationInSeconds").IsOptional().HasColumnType("bigint");
            Property(x => x.RawViews).HasColumnName("RawViews").IsOptional().HasColumnType("bigint");
            Property(x => x.IabViews).HasColumnName("IabViews").IsOptional().HasColumnType("bigint");
            Property(x => x.ViewDurationInSeconds).HasColumnName("ViewDurationInSeconds").IsOptional().HasColumnType("bigint");
            Property(x => x.Ctr).HasColumnName("CTR").IsOptional().HasColumnType("float");
            Property(x => x.Cpm).HasColumnName("CPM").IsOptional().HasColumnType("money").HasPrecision(19,4);
            Property(x => x.Cpc).HasColumnName("CPC").IsOptional().HasColumnType("money").HasPrecision(19,4);
            Property(x => x.Cpa).HasColumnName("CPA").IsOptional().HasColumnType("money").HasPrecision(19,4);
            Property(x => x.ClientCpm).HasColumnName("ClientCPM").IsOptional().HasColumnType("money").HasPrecision(19,4);
            Property(x => x.ClientCpc).HasColumnName("ClientCPC").IsOptional().HasColumnType("money").HasPrecision(19,4);
            Property(x => x.ClientCpa).HasColumnName("ClientCPA").IsOptional().HasColumnType("money").HasPrecision(19,4);
            Property(x => x.Cpms).HasColumnName("CPMs").IsOptional().HasColumnType("decimal").HasPrecision(38,14);
            Property(x => x.ClientCostCpms).HasColumnName("ClientCostCpms").IsOptional().HasColumnType("decimal").HasPrecision(38,14);
            Property(x => x.Cps).HasColumnName("CPS").IsOptional().HasColumnType("decimal").HasPrecision(38,14);
            Property(x => x.ClientCostCps).HasColumnName("ClientCostCps").IsOptional().HasColumnType("decimal").HasPrecision(38,14);
            Property(x => x.ViewableRatio).HasColumnName("ViewableRatio").IsOptional().HasColumnType("float");
            InitializePartial();
        }
        partial void InitializePartial();
    }

    // AdGroupVerticalCombined
    internal partial class AdGroupVerticalCombinedMap : EntityTypeConfiguration<AdGroupVerticalCombined>
    {
        public AdGroupVerticalCombinedMap()
            : this("analytics")
        {
        }
 
        public AdGroupVerticalCombinedMap(string schema)
        {
            ToTable(schema + ".AdGroupVerticalCombined");
            HasKey(x => new { x.BuyerAccountId, x.CampaignId, x.AdGroupId, x.OptimizationModelId, x.Vertical1Id, x.Vertical2Id, x.Vertical3Id, x.UtcDate, x.LocalDate, x.UtcDateTime, x.LocalDateTime, x.Bids, x.Impressions, x.Clicks, x.Conversions, x.PostViewConversions, x.PostClickConversions, x.MediaCostUsdMicros, x.MediaCostLocalMicros, x.DataCostLocalMicros });

            Property(x => x.BuyerAccountId).HasColumnName("BuyerAccountID").IsRequired().HasColumnType("int");
            Property(x => x.CampaignId).HasColumnName("CampaignID").IsRequired().HasColumnType("int");
            Property(x => x.AdGroupId).HasColumnName("AdGroupID").IsRequired().HasColumnType("int");
            Property(x => x.OptimizationModelId).HasColumnName("OptimizationModelID").IsRequired().HasColumnType("int");
            Property(x => x.Vertical1Id).HasColumnName("Vertical1ID").IsRequired().HasColumnType("int");
            Property(x => x.Vertical2Id).HasColumnName("Vertical2ID").IsRequired().HasColumnType("int");
            Property(x => x.Vertical3Id).HasColumnName("Vertical3ID").IsRequired().HasColumnType("int");
            Property(x => x.UtcDate).HasColumnName("UtcDate").IsRequired().HasColumnType("date");
            Property(x => x.LocalDate).HasColumnName("LocalDate").IsRequired().HasColumnType("date");
            Property(x => x.UtcDateTime).HasColumnName("UtcDateTime").IsRequired().HasColumnType("datetime");
            Property(x => x.LocalDateTime).HasColumnName("LocalDateTime").IsRequired().HasColumnType("datetime");
            Property(x => x.Bids).HasColumnName("Bids").IsRequired().HasColumnType("bigint");
            Property(x => x.Impressions).HasColumnName("Impressions").IsRequired().HasColumnType("bigint");
            Property(x => x.Clicks).HasColumnName("Clicks").IsRequired().HasColumnType("bigint");
            Property(x => x.Conversions).HasColumnName("Conversions").IsRequired().HasColumnType("bigint");
            Property(x => x.PostViewConversions).HasColumnName("PostViewConversions").IsRequired().HasColumnType("bigint");
            Property(x => x.PostClickConversions).HasColumnName("PostClickConversions").IsRequired().HasColumnType("bigint");
            Property(x => x.MediaCostUsdMicros).HasColumnName("MediaCostUsdMicros").IsRequired().HasColumnType("bigint");
            Property(x => x.MediaCostLocalMicros).HasColumnName("MediaCostLocalMicros").IsRequired().HasColumnType("bigint");
            Property(x => x.DataCostLocalMicros).HasColumnName("DataCostLocalMicros").IsRequired().HasColumnType("bigint");
            Property(x => x.InvalidImpressions).HasColumnName("InvalidImpressions").IsOptional().HasColumnType("bigint");
            Property(x => x.InvalidClicks).HasColumnName("InvalidClicks").IsOptional().HasColumnType("bigint");
            Property(x => x.FeesUsdSuperMicros).HasColumnName("FeesUsdSuperMicros").IsOptional().HasColumnType("bigint");
            Property(x => x.FeesLocalSuperMicros).HasColumnName("FeesLocalSuperMicros").IsOptional().HasColumnType("bigint");
            Property(x => x.AdSlotDurationInSeconds).HasColumnName("AdSlotDurationInSeconds").IsOptional().HasColumnType("bigint");
            Property(x => x.RawViews).HasColumnName("RawViews").IsOptional().HasColumnType("bigint");
            Property(x => x.IabViews).HasColumnName("IabViews").IsOptional().HasColumnType("bigint");
            Property(x => x.ViewDurationInSeconds).HasColumnName("ViewDurationInSeconds").IsOptional().HasColumnType("bigint");
            InitializePartial();
        }
        partial void InitializePartial();
    }

    // AdGroupVerticalException
    internal partial class AdGroupVerticalExceptionMap : EntityTypeConfiguration<AdGroupVerticalException>
    {
        public AdGroupVerticalExceptionMap()
            : this("analytics")
        {
        }
 
        public AdGroupVerticalExceptionMap(string schema)
        {
            ToTable(schema + ".AdGroupVerticalException");
            HasKey(x => new { x.BuyerAccountId, x.CampaignId, x.AdGroupId, x.OptimizationModelId, x.Vertical1Id, x.Vertical2Id, x.Vertical3Id, x.UtcDateTime, x.LocalDateTime, x.Bids, x.Impressions, x.InvalidImpressions, x.Clicks, x.InvalidClicks, x.Conversions, x.PostViewConversions, x.PostClickConversions, x.MediaCostUsdMicros, x.MediaCostLocalMicros, x.DataCostLocalMicros, x.FeesUsdSuperMicros, x.FeesLocalSuperMicros });

            Property(x => x.BuyerAccountId).HasColumnName("BuyerAccountID").IsRequired().HasColumnType("int");
            Property(x => x.CampaignId).HasColumnName("CampaignID").IsRequired().HasColumnType("int");
            Property(x => x.AdGroupId).HasColumnName("AdGroupID").IsRequired().HasColumnType("int");
            Property(x => x.OptimizationModelId).HasColumnName("OptimizationModelID").IsRequired().HasColumnType("int");
            Property(x => x.Vertical1Id).HasColumnName("Vertical1ID").IsRequired().HasColumnType("int");
            Property(x => x.Vertical2Id).HasColumnName("Vertical2ID").IsRequired().HasColumnType("int");
            Property(x => x.Vertical3Id).HasColumnName("Vertical3ID").IsRequired().HasColumnType("int");
            Property(x => x.UtcDateTime).HasColumnName("UtcDateTime").IsRequired().HasColumnType("datetime");
            Property(x => x.LocalDateTime).HasColumnName("LocalDateTime").IsRequired().HasColumnType("datetime");
            Property(x => x.Bids).HasColumnName("Bids").IsRequired().HasColumnType("bigint");
            Property(x => x.Impressions).HasColumnName("Impressions").IsRequired().HasColumnType("bigint");
            Property(x => x.InvalidImpressions).HasColumnName("InvalidImpressions").IsRequired().HasColumnType("bigint");
            Property(x => x.Clicks).HasColumnName("Clicks").IsRequired().HasColumnType("bigint");
            Property(x => x.InvalidClicks).HasColumnName("InvalidClicks").IsRequired().HasColumnType("bigint");
            Property(x => x.Conversions).HasColumnName("Conversions").IsRequired().HasColumnType("bigint");
            Property(x => x.PostViewConversions).HasColumnName("PostViewConversions").IsRequired().HasColumnType("bigint");
            Property(x => x.PostClickConversions).HasColumnName("PostClickConversions").IsRequired().HasColumnType("bigint");
            Property(x => x.MediaCostUsdMicros).HasColumnName("MediaCostUsdMicros").IsRequired().HasColumnType("bigint");
            Property(x => x.MediaCostLocalMicros).HasColumnName("MediaCostLocalMicros").IsRequired().HasColumnType("bigint");
            Property(x => x.DataCostLocalMicros).HasColumnName("DataCostLocalMicros").IsRequired().HasColumnType("bigint");
            Property(x => x.FeesUsdSuperMicros).HasColumnName("FeesUsdSuperMicros").IsRequired().HasColumnType("bigint");
            Property(x => x.FeesLocalSuperMicros).HasColumnName("FeesLocalSuperMicros").IsRequired().HasColumnType("bigint");
            Property(x => x.AdSlotDurationInSeconds).HasColumnName("AdSlotDurationInSeconds").IsOptional().HasColumnType("bigint");
            Property(x => x.RawViews).HasColumnName("RawViews").IsOptional().HasColumnType("bigint");
            Property(x => x.IabViews).HasColumnName("IabViews").IsOptional().HasColumnType("bigint");
            Property(x => x.ViewDurationInSeconds).HasColumnName("ViewDurationInSeconds").IsOptional().HasColumnType("bigint");
            InitializePartial();
        }
        partial void InitializePartial();
    }

    // AdGroupVerticalIABMappedAnalyticsReportID
    internal partial class AdGroupVerticalIabMappedAnalyticsReportIdMap : EntityTypeConfiguration<AdGroupVerticalIabMappedAnalyticsReportId>
    {
        public AdGroupVerticalIabMappedAnalyticsReportIdMap()
            : this("dbo")
        {
        }
 
        public AdGroupVerticalIabMappedAnalyticsReportIdMap(string schema)
        {
            ToTable(schema + ".AdGroupVerticalIABMappedAnalyticsReportID");
            HasKey(x => new { x.BuyerAccountId, x.AdvertiserId, x.AdvertiserProductId, x.CampaignId, x.AdGroupId, x.OptimizationModelId, x.Vertical1Id, x.Vertical1Name, x.Vertical2Id, x.Vertical2Name, x.LocalDate, x.Bids, x.Impressions, x.Clicks, x.Conversions, x.PostViewConversions, x.PostClickConversions, x.MediaCostLocalMicros, x.DataCostLocalMicros });

            Property(x => x.BuyerAccountId).HasColumnName("BuyerAccountID").IsRequired().HasColumnType("int");
            Property(x => x.AdvertiserId).HasColumnName("AdvertiserID").IsRequired().HasColumnType("int");
            Property(x => x.AdvertiserProductId).HasColumnName("AdvertiserProductID").IsRequired().HasColumnType("int");
            Property(x => x.CampaignId).HasColumnName("CampaignID").IsRequired().HasColumnType("int");
            Property(x => x.AdGroupId).HasColumnName("AdGroupID").IsRequired().HasColumnType("int");
            Property(x => x.OptimizationModelId).HasColumnName("OptimizationModelID").IsRequired().HasColumnType("int");
            Property(x => x.Vertical1Id).HasColumnName("Vertical1ID").IsRequired().HasColumnType("int");
            Property(x => x.Vertical1Name).HasColumnName("Vertical1Name").IsRequired().HasColumnType("nvarchar").HasMaxLength(256);
            Property(x => x.Vertical2Id).HasColumnName("Vertical2ID").IsRequired().HasColumnType("int");
            Property(x => x.Vertical2Name).HasColumnName("Vertical2Name").IsRequired().HasColumnType("nvarchar").HasMaxLength(256);
            Property(x => x.LocalDate).HasColumnName("LocalDate").IsRequired().HasColumnType("date");
            Property(x => x.Bids).HasColumnName("Bids").IsRequired().HasColumnType("bigint");
            Property(x => x.Impressions).HasColumnName("Impressions").IsRequired().HasColumnType("bigint");
            Property(x => x.Clicks).HasColumnName("Clicks").IsRequired().HasColumnType("bigint");
            Property(x => x.UnfilteredClicks).HasColumnName("UnfilteredClicks").IsOptional().HasColumnType("bigint");
            Property(x => x.Conversions).HasColumnName("Conversions").IsRequired().HasColumnType("bigint");
            Property(x => x.PostViewConversions).HasColumnName("PostViewConversions").IsRequired().HasColumnType("bigint");
            Property(x => x.PostClickConversions).HasColumnName("PostClickConversions").IsRequired().HasColumnType("bigint");
            Property(x => x.SpendLocalMicros).HasColumnName("SpendLocalMicros").IsOptional().HasColumnType("bigint");
            Property(x => x.Spend).HasColumnName("Spend").IsOptional().HasColumnType("money").HasPrecision(19,4);
            Property(x => x.ClientCostLocalMicros).HasColumnName("ClientCostLocalMicros").IsOptional().HasColumnType("bigint");
            Property(x => x.ClientCostDollars).HasColumnName("ClientCostDollars").IsOptional().HasColumnType("money").HasPrecision(19,4);
            Property(x => x.MediaCostLocalMicros).HasColumnName("MediaCostLocalMicros").IsRequired().HasColumnType("bigint");
            Property(x => x.DataCostLocalMicros).HasColumnName("DataCostLocalMicros").IsRequired().HasColumnType("bigint");
            Property(x => x.MediaClientCostLocalMicros).HasColumnName("MediaClientCostLocalMicros").IsOptional().HasColumnType("bigint");
            Property(x => x.DataClientCostLocalMicros).HasColumnName("DataClientCostLocalMicros").IsOptional().HasColumnType("bigint");
            Property(x => x.AdSlotDurationInSeconds).HasColumnName("AdSlotDurationInSeconds").IsOptional().HasColumnType("bigint");
            Property(x => x.RawViews).HasColumnName("RawViews").IsOptional().HasColumnType("bigint");
            Property(x => x.IabViews).HasColumnName("IabViews").IsOptional().HasColumnType("bigint");
            Property(x => x.ViewDurationInSeconds).HasColumnName("ViewDurationInSeconds").IsOptional().HasColumnType("bigint");
            Property(x => x.Ctr).HasColumnName("CTR").IsOptional().HasColumnType("float");
            Property(x => x.Cpm).HasColumnName("CPM").IsOptional().HasColumnType("money").HasPrecision(19,4);
            Property(x => x.Cpc).HasColumnName("CPC").IsOptional().HasColumnType("money").HasPrecision(19,4);
            Property(x => x.Cpa).HasColumnName("CPA").IsOptional().HasColumnType("money").HasPrecision(19,4);
            Property(x => x.ClientCpm).HasColumnName("ClientCPM").IsOptional().HasColumnType("money").HasPrecision(19,4);
            Property(x => x.ClientCpc).HasColumnName("ClientCPC").IsOptional().HasColumnType("money").HasPrecision(19,4);
            Property(x => x.ClientCpa).HasColumnName("ClientCPA").IsOptional().HasColumnType("money").HasPrecision(19,4);
            Property(x => x.Cpms).HasColumnName("CPMs").IsOptional().HasColumnType("decimal").HasPrecision(38,14);
            Property(x => x.ClientCostCpms).HasColumnName("ClientCostCpms").IsOptional().HasColumnType("decimal").HasPrecision(38,14);
            Property(x => x.Cps).HasColumnName("CPS").IsOptional().HasColumnType("decimal").HasPrecision(38,14);
            Property(x => x.ClientCostCps).HasColumnName("ClientCostCps").IsOptional().HasColumnType("decimal").HasPrecision(38,14);
            Property(x => x.ViewableRatio).HasColumnName("ViewableRatio").IsOptional().HasColumnType("float");
            InitializePartial();
        }
        partial void InitializePartial();
    }

    // AdGroupVerticalIABMappedCombined
    internal partial class AdGroupVerticalIabMappedCombinedMap : EntityTypeConfiguration<AdGroupVerticalIabMappedCombined>
    {
        public AdGroupVerticalIabMappedCombinedMap()
            : this("analytics")
        {
        }
 
        public AdGroupVerticalIabMappedCombinedMap(string schema)
        {
            ToTable(schema + ".AdGroupVerticalIABMappedCombined");
            HasKey(x => new { x.BuyerAccountId, x.CampaignId, x.AdGroupId, x.OptimizationModelId, x.UtcDate, x.LocalDate, x.UtcDateTime, x.LocalDateTime, x.Bids, x.Impressions, x.Clicks, x.Conversions, x.PostViewConversions, x.PostClickConversions, x.MediaCostUsdMicros, x.MediaCostLocalMicros, x.DataCostLocalMicros });

            Property(x => x.BuyerAccountId).HasColumnName("BuyerAccountID").IsRequired().HasColumnType("int");
            Property(x => x.CampaignId).HasColumnName("CampaignID").IsRequired().HasColumnType("int");
            Property(x => x.AdGroupId).HasColumnName("AdGroupID").IsRequired().HasColumnType("int");
            Property(x => x.OptimizationModelId).HasColumnName("OptimizationModelID").IsRequired().HasColumnType("int");
            Property(x => x.Vertical1Id).HasColumnName("Vertical1ID").IsOptional().HasColumnType("int");
            Property(x => x.Vertical2Id).HasColumnName("Vertical2ID").IsOptional().HasColumnType("int");
            Property(x => x.Vertical3Id).HasColumnName("Vertical3ID").IsOptional().HasColumnType("int");
            Property(x => x.UtcDate).HasColumnName("UtcDate").IsRequired().HasColumnType("date");
            Property(x => x.LocalDate).HasColumnName("LocalDate").IsRequired().HasColumnType("date");
            Property(x => x.UtcDateTime).HasColumnName("UtcDateTime").IsRequired().HasColumnType("datetime");
            Property(x => x.LocalDateTime).HasColumnName("LocalDateTime").IsRequired().HasColumnType("datetime");
            Property(x => x.Bids).HasColumnName("Bids").IsRequired().HasColumnType("bigint");
            Property(x => x.Impressions).HasColumnName("Impressions").IsRequired().HasColumnType("bigint");
            Property(x => x.Clicks).HasColumnName("Clicks").IsRequired().HasColumnType("bigint");
            Property(x => x.Conversions).HasColumnName("Conversions").IsRequired().HasColumnType("bigint");
            Property(x => x.PostViewConversions).HasColumnName("PostViewConversions").IsRequired().HasColumnType("bigint");
            Property(x => x.PostClickConversions).HasColumnName("PostClickConversions").IsRequired().HasColumnType("bigint");
            Property(x => x.MediaCostUsdMicros).HasColumnName("MediaCostUsdMicros").IsRequired().HasColumnType("bigint");
            Property(x => x.MediaCostLocalMicros).HasColumnName("MediaCostLocalMicros").IsRequired().HasColumnType("bigint");
            Property(x => x.DataCostLocalMicros).HasColumnName("DataCostLocalMicros").IsRequired().HasColumnType("bigint");
            Property(x => x.InvalidImpressions).HasColumnName("InvalidImpressions").IsOptional().HasColumnType("bigint");
            Property(x => x.InvalidClicks).HasColumnName("InvalidClicks").IsOptional().HasColumnType("bigint");
            Property(x => x.FeesUsdSuperMicros).HasColumnName("FeesUsdSuperMicros").IsOptional().HasColumnType("bigint");
            Property(x => x.FeesLocalSuperMicros).HasColumnName("FeesLocalSuperMicros").IsOptional().HasColumnType("bigint");
            Property(x => x.AdSlotDurationInSeconds).HasColumnName("AdSlotDurationInSeconds").IsOptional().HasColumnType("bigint");
            Property(x => x.RawViews).HasColumnName("RawViews").IsOptional().HasColumnType("bigint");
            Property(x => x.IabViews).HasColumnName("IabViews").IsOptional().HasColumnType("bigint");
            Property(x => x.ViewDurationInSeconds).HasColumnName("ViewDurationInSeconds").IsOptional().HasColumnType("bigint");
            InitializePartial();
        }
        partial void InitializePartial();
    }

    // AdGroupVerticalImport
    internal partial class AdGroupVerticalImportMap : EntityTypeConfiguration<AdGroupVerticalImport>
    {
        public AdGroupVerticalImportMap()
            : this("analytics")
        {
        }
 
        public AdGroupVerticalImportMap(string schema)
        {
            ToTable(schema + ".AdGroupVerticalImport");
            HasKey(x => new { x.BuyerAccountId, x.CampaignId, x.AdGroupId, x.OptimizationModelId, x.Vertical1Id, x.Vertical2Id, x.Vertical3Id, x.UtcDateTime, x.LocalDateTime, x.Bids, x.Impressions, x.InvalidImpressions, x.Clicks, x.InvalidClicks, x.Conversions, x.PostViewConversions, x.PostClickConversions, x.MediaCostUsdMicros, x.MediaCostLocalMicros, x.DataCostLocalMicros, x.FeesUsdSuperMicros, x.FeesLocalSuperMicros });

            Property(x => x.BuyerAccountId).HasColumnName("BuyerAccountID").IsRequired().HasColumnType("int");
            Property(x => x.CampaignId).HasColumnName("CampaignID").IsRequired().HasColumnType("int");
            Property(x => x.AdGroupId).HasColumnName("AdGroupID").IsRequired().HasColumnType("int");
            Property(x => x.OptimizationModelId).HasColumnName("OptimizationModelID").IsRequired().HasColumnType("int");
            Property(x => x.Vertical1Id).HasColumnName("Vertical1ID").IsRequired().HasColumnType("int");
            Property(x => x.Vertical2Id).HasColumnName("Vertical2ID").IsRequired().HasColumnType("int");
            Property(x => x.Vertical3Id).HasColumnName("Vertical3ID").IsRequired().HasColumnType("int");
            Property(x => x.UtcDateTime).HasColumnName("UtcDateTime").IsRequired().HasColumnType("datetime");
            Property(x => x.LocalDateTime).HasColumnName("LocalDateTime").IsRequired().HasColumnType("datetime");
            Property(x => x.Bids).HasColumnName("Bids").IsRequired().HasColumnType("bigint");
            Property(x => x.Impressions).HasColumnName("Impressions").IsRequired().HasColumnType("bigint");
            Property(x => x.InvalidImpressions).HasColumnName("InvalidImpressions").IsRequired().HasColumnType("bigint");
            Property(x => x.Clicks).HasColumnName("Clicks").IsRequired().HasColumnType("bigint");
            Property(x => x.InvalidClicks).HasColumnName("InvalidClicks").IsRequired().HasColumnType("bigint");
            Property(x => x.Conversions).HasColumnName("Conversions").IsRequired().HasColumnType("bigint");
            Property(x => x.PostViewConversions).HasColumnName("PostViewConversions").IsRequired().HasColumnType("bigint");
            Property(x => x.PostClickConversions).HasColumnName("PostClickConversions").IsRequired().HasColumnType("bigint");
            Property(x => x.MediaCostUsdMicros).HasColumnName("MediaCostUsdMicros").IsRequired().HasColumnType("bigint");
            Property(x => x.MediaCostLocalMicros).HasColumnName("MediaCostLocalMicros").IsRequired().HasColumnType("bigint");
            Property(x => x.DataCostLocalMicros).HasColumnName("DataCostLocalMicros").IsRequired().HasColumnType("bigint");
            Property(x => x.FeesUsdSuperMicros).HasColumnName("FeesUsdSuperMicros").IsRequired().HasColumnType("bigint");
            Property(x => x.FeesLocalSuperMicros).HasColumnName("FeesLocalSuperMicros").IsRequired().HasColumnType("bigint");
            Property(x => x.AdSlotDurationInSeconds).HasColumnName("AdSlotDurationInSeconds").IsOptional().HasColumnType("bigint");
            Property(x => x.RawViews).HasColumnName("RawViews").IsOptional().HasColumnType("bigint");
            Property(x => x.IabViews).HasColumnName("IabViews").IsOptional().HasColumnType("bigint");
            Property(x => x.ViewDurationInSeconds).HasColumnName("ViewDurationInSeconds").IsOptional().HasColumnType("bigint");
            InitializePartial();
        }
        partial void InitializePartial();
    }

    // AdGroupVerticalImportReportID
    internal partial class AdGroupVerticalImportReportIdMap : EntityTypeConfiguration<AdGroupVerticalImportReportId>
    {
        public AdGroupVerticalImportReportIdMap()
            : this("analytics")
        {
        }
 
        public AdGroupVerticalImportReportIdMap(string schema)
        {
            ToTable(schema + ".AdGroupVerticalImportReportID");
            HasKey(x => new { x.BuyerAccountId, x.CampaignId, x.AdGroupId, x.OptimizationModelId, x.Vertical1Id, x.Vertical2Id, x.Vertical3Id, x.UtcDateTime, x.LocalDateTime, x.Bids, x.Impressions, x.InvalidImpressions, x.Clicks, x.InvalidClicks, x.Conversions, x.PostViewConversions, x.PostClickConversions, x.MediaCostUsdMicros, x.MediaCostLocalMicros, x.DataCostLocalMicros, x.FeesUsdSuperMicros, x.FeesLocalSuperMicros, x.ReportId });

            Property(x => x.BuyerAccountId).HasColumnName("BuyerAccountID").IsRequired().HasColumnType("int");
            Property(x => x.CampaignId).HasColumnName("CampaignID").IsRequired().HasColumnType("int");
            Property(x => x.AdGroupId).HasColumnName("AdGroupID").IsRequired().HasColumnType("int");
            Property(x => x.OptimizationModelId).HasColumnName("OptimizationModelID").IsRequired().HasColumnType("int");
            Property(x => x.Vertical1Id).HasColumnName("Vertical1ID").IsRequired().HasColumnType("int");
            Property(x => x.Vertical2Id).HasColumnName("Vertical2ID").IsRequired().HasColumnType("int");
            Property(x => x.Vertical3Id).HasColumnName("Vertical3ID").IsRequired().HasColumnType("int");
            Property(x => x.UtcDateTime).HasColumnName("UtcDateTime").IsRequired().HasColumnType("datetime");
            Property(x => x.LocalDateTime).HasColumnName("LocalDateTime").IsRequired().HasColumnType("datetime");
            Property(x => x.Bids).HasColumnName("Bids").IsRequired().HasColumnType("bigint");
            Property(x => x.Impressions).HasColumnName("Impressions").IsRequired().HasColumnType("bigint");
            Property(x => x.InvalidImpressions).HasColumnName("InvalidImpressions").IsRequired().HasColumnType("bigint");
            Property(x => x.Clicks).HasColumnName("Clicks").IsRequired().HasColumnType("bigint");
            Property(x => x.InvalidClicks).HasColumnName("InvalidClicks").IsRequired().HasColumnType("bigint");
            Property(x => x.Conversions).HasColumnName("Conversions").IsRequired().HasColumnType("bigint");
            Property(x => x.PostViewConversions).HasColumnName("PostViewConversions").IsRequired().HasColumnType("bigint");
            Property(x => x.PostClickConversions).HasColumnName("PostClickConversions").IsRequired().HasColumnType("bigint");
            Property(x => x.MediaCostUsdMicros).HasColumnName("MediaCostUsdMicros").IsRequired().HasColumnType("bigint");
            Property(x => x.MediaCostLocalMicros).HasColumnName("MediaCostLocalMicros").IsRequired().HasColumnType("bigint");
            Property(x => x.DataCostLocalMicros).HasColumnName("DataCostLocalMicros").IsRequired().HasColumnType("bigint");
            Property(x => x.FeesUsdSuperMicros).HasColumnName("FeesUsdSuperMicros").IsRequired().HasColumnType("bigint");
            Property(x => x.FeesLocalSuperMicros).HasColumnName("FeesLocalSuperMicros").IsRequired().HasColumnType("bigint");
            Property(x => x.ReportId).HasColumnName("ReportID").IsRequired().HasColumnType("bigint");
            Property(x => x.AdSlotDurationInSeconds).HasColumnName("AdSlotDurationInSeconds").IsOptional().HasColumnType("bigint");
            Property(x => x.RawViews).HasColumnName("RawViews").IsOptional().HasColumnType("bigint");
            Property(x => x.IabViews).HasColumnName("IabViews").IsOptional().HasColumnType("bigint");
            Property(x => x.ViewDurationInSeconds).HasColumnName("ViewDurationInSeconds").IsOptional().HasColumnType("bigint");
            InitializePartial();
        }
        partial void InitializePartial();
    }

    // AdGroupVerticalReportID
    internal partial class AdGroupVerticalReportIdMap : EntityTypeConfiguration<AdGroupVerticalReportId>
    {
        public AdGroupVerticalReportIdMap()
            : this("analytics")
        {
        }
 
        public AdGroupVerticalReportIdMap(string schema)
        {
            ToTable(schema + ".AdGroupVerticalReportID");
            HasKey(x => new { x.BuyerAccountId, x.CampaignId, x.AdGroupId, x.OptimizationModelId, x.Vertical1Id, x.Vertical2Id, x.Vertical3Id, x.UtcDate, x.LocalDate, x.UtcDateTime, x.LocalDateTime, x.Bids, x.Impressions, x.Clicks, x.Conversions, x.PostViewConversions, x.PostClickConversions, x.MediaCostUsdMicros, x.MediaCostLocalMicros, x.DataCostLocalMicros, x.ReportId });

            Property(x => x.BuyerAccountId).HasColumnName("BuyerAccountID").IsRequired().HasColumnType("int");
            Property(x => x.CampaignId).HasColumnName("CampaignID").IsRequired().HasColumnType("int");
            Property(x => x.AdGroupId).HasColumnName("AdGroupID").IsRequired().HasColumnType("int");
            Property(x => x.OptimizationModelId).HasColumnName("OptimizationModelID").IsRequired().HasColumnType("int");
            Property(x => x.Vertical1Id).HasColumnName("Vertical1ID").IsRequired().HasColumnType("int");
            Property(x => x.Vertical2Id).HasColumnName("Vertical2ID").IsRequired().HasColumnType("int");
            Property(x => x.Vertical3Id).HasColumnName("Vertical3ID").IsRequired().HasColumnType("int");
            Property(x => x.UtcDate).HasColumnName("UtcDate").IsRequired().HasColumnType("date");
            Property(x => x.LocalDate).HasColumnName("LocalDate").IsRequired().HasColumnType("date");
            Property(x => x.UtcDateTime).HasColumnName("UtcDateTime").IsRequired().HasColumnType("datetime");
            Property(x => x.LocalDateTime).HasColumnName("LocalDateTime").IsRequired().HasColumnType("datetime");
            Property(x => x.Bids).HasColumnName("Bids").IsRequired().HasColumnType("bigint");
            Property(x => x.Impressions).HasColumnName("Impressions").IsRequired().HasColumnType("bigint");
            Property(x => x.Clicks).HasColumnName("Clicks").IsRequired().HasColumnType("bigint");
            Property(x => x.Conversions).HasColumnName("Conversions").IsRequired().HasColumnType("bigint");
            Property(x => x.PostViewConversions).HasColumnName("PostViewConversions").IsRequired().HasColumnType("bigint");
            Property(x => x.PostClickConversions).HasColumnName("PostClickConversions").IsRequired().HasColumnType("bigint");
            Property(x => x.MediaCostUsdMicros).HasColumnName("MediaCostUsdMicros").IsRequired().HasColumnType("bigint");
            Property(x => x.MediaCostLocalMicros).HasColumnName("MediaCostLocalMicros").IsRequired().HasColumnType("bigint");
            Property(x => x.DataCostLocalMicros).HasColumnName("DataCostLocalMicros").IsRequired().HasColumnType("bigint");
            Property(x => x.InvalidImpressions).HasColumnName("InvalidImpressions").IsOptional().HasColumnType("bigint");
            Property(x => x.InvalidClicks).HasColumnName("InvalidClicks").IsOptional().HasColumnType("bigint");
            Property(x => x.FeesUsdSuperMicros).HasColumnName("FeesUsdSuperMicros").IsOptional().HasColumnType("bigint");
            Property(x => x.FeesLocalSuperMicros).HasColumnName("FeesLocalSuperMicros").IsOptional().HasColumnType("bigint");
            Property(x => x.ReportId).HasColumnName("ReportID").IsRequired().HasColumnType("bigint");
            Property(x => x.AdSlotDurationInSeconds).HasColumnName("AdSlotDurationInSeconds").IsOptional().HasColumnType("bigint");
            Property(x => x.RawViews).HasColumnName("RawViews").IsOptional().HasColumnType("bigint");
            Property(x => x.IabViews).HasColumnName("IabViews").IsOptional().HasColumnType("bigint");
            Property(x => x.ViewDurationInSeconds).HasColumnName("ViewDurationInSeconds").IsOptional().HasColumnType("bigint");
            InitializePartial();
        }
        partial void InitializePartial();
    }

    // AdGroupVideoActivity
    internal partial class AdGroupVideoActivityMap : EntityTypeConfiguration<AdGroupVideoActivity>
    {
        public AdGroupVideoActivityMap()
            : this("analytics")
        {
        }
 
        public AdGroupVideoActivityMap(string schema)
        {
            ToTable(schema + ".AdGroupVideoActivity");
            HasKey(x => new { x.PlacementId, x.PartnerId, x.UtcDateTime });

            Property(x => x.BuyerAccountId).HasColumnName("BuyerAccountID").IsRequired().HasColumnType("int");
            Property(x => x.AdvertiserId).HasColumnName("AdvertiserID").IsRequired().HasColumnType("int");
            Property(x => x.AdvertiserProductId).HasColumnName("AdvertiserProductID").IsRequired().HasColumnType("int");
            Property(x => x.CampaignId).HasColumnName("CampaignID").IsRequired().HasColumnType("int");
            Property(x => x.AdGroupId).HasColumnName("AdGroupID").IsRequired().HasColumnType("int");
            Property(x => x.PlacementId).HasColumnName("PlacementID").IsRequired().HasColumnType("int").HasDatabaseGeneratedOption(DatabaseGeneratedOption.None);
            Property(x => x.PartnerId).HasColumnName("PartnerID").IsRequired().HasColumnType("int").HasDatabaseGeneratedOption(DatabaseGeneratedOption.None);
            Property(x => x.UtcDate).HasColumnName("UtcDate").IsRequired().HasColumnType("date");
            Property(x => x.LocalDate).HasColumnName("LocalDate").IsRequired().HasColumnType("date");
            Property(x => x.UtcDateTime).HasColumnName("UtcDateTime").IsRequired().HasColumnType("datetime").HasDatabaseGeneratedOption(DatabaseGeneratedOption.None);
            Property(x => x.LocalDateTime).HasColumnName("LocalDateTime").IsRequired().HasColumnType("datetime");
            Property(x => x.CreativeView).HasColumnName("CreativeView").IsRequired().HasColumnType("bigint");
            Property(x => x.Start).HasColumnName("Start").IsRequired().HasColumnType("bigint");
            Property(x => x.Midpoint).HasColumnName("Midpoint").IsRequired().HasColumnType("bigint");
            Property(x => x.FirstQuartile).HasColumnName("FirstQuartile").IsRequired().HasColumnType("bigint");
            Property(x => x.ThirdQuartile).HasColumnName("ThirdQuartile").IsRequired().HasColumnType("bigint");
            Property(x => x.Complete).HasColumnName("Complete").IsRequired().HasColumnType("bigint");
            Property(x => x.Mute).HasColumnName("Mute").IsRequired().HasColumnType("bigint");
            Property(x => x.Unmute).HasColumnName("Unmute").IsRequired().HasColumnType("bigint");
            Property(x => x.Pause).HasColumnName("Pause").IsRequired().HasColumnType("bigint");
            Property(x => x.Rewind).HasColumnName("Rewind").IsRequired().HasColumnType("bigint");
            Property(x => x.Resume).HasColumnName("Resume").IsRequired().HasColumnType("bigint");
            Property(x => x.Fullscreen).HasColumnName("Fullscreen").IsRequired().HasColumnType("bigint");
            Property(x => x.Expand).HasColumnName("Expand").IsRequired().HasColumnType("bigint");
            Property(x => x.Collapse).HasColumnName("Collapse").IsRequired().HasColumnType("bigint");
            Property(x => x.AcceptInvitation).HasColumnName("AcceptInvitation").IsRequired().HasColumnType("bigint");
            Property(x => x.Close).HasColumnName("Close").IsRequired().HasColumnType("bigint");
            Property(x => x.AdSlotDurationInSeconds).HasColumnName("AdSlotDurationInSeconds").IsOptional().HasColumnType("bigint");
            Property(x => x.RawViews).HasColumnName("RawViews").IsOptional().HasColumnType("bigint");
            Property(x => x.IabViews).HasColumnName("IabViews").IsOptional().HasColumnType("bigint");
            Property(x => x.ViewDurationInSeconds).HasColumnName("ViewDurationInSeconds").IsOptional().HasColumnType("bigint");
            InitializePartial();
        }
        partial void InitializePartial();
    }

    // AdGroupVideoActivityCombined
    internal partial class AdGroupVideoActivityCombinedMap : EntityTypeConfiguration<AdGroupVideoActivityCombined>
    {
        public AdGroupVideoActivityCombinedMap()
            : this("analytics")
        {
        }
 
        public AdGroupVideoActivityCombinedMap(string schema)
        {
            ToTable(schema + ".AdGroupVideoActivityCombined");
            HasKey(x => new { x.BuyerAccountId, x.AdvertiserId, x.AdvertiserProductId, x.CampaignId, x.AdGroupId, x.PlacementId, x.PartnerId, x.UtcDate, x.LocalDate, x.UtcDateTime, x.LocalDateTime, x.CreativeView, x.Start, x.Midpoint, x.FirstQuartile, x.ThirdQuartile, x.Complete, x.Mute, x.Unmute, x.Pause, x.Rewind, x.Resume, x.Fullscreen, x.Expand, x.Collapse, x.AcceptInvitation, x.Close });

            Property(x => x.BuyerAccountId).HasColumnName("BuyerAccountID").IsRequired().HasColumnType("int");
            Property(x => x.AdvertiserId).HasColumnName("AdvertiserID").IsRequired().HasColumnType("int");
            Property(x => x.AdvertiserProductId).HasColumnName("AdvertiserProductID").IsRequired().HasColumnType("int");
            Property(x => x.CampaignId).HasColumnName("CampaignID").IsRequired().HasColumnType("int");
            Property(x => x.AdGroupId).HasColumnName("AdGroupID").IsRequired().HasColumnType("int");
            Property(x => x.PlacementId).HasColumnName("PlacementID").IsRequired().HasColumnType("int");
            Property(x => x.PartnerId).HasColumnName("PartnerID").IsRequired().HasColumnType("int");
            Property(x => x.UtcDate).HasColumnName("UtcDate").IsRequired().HasColumnType("date");
            Property(x => x.LocalDate).HasColumnName("LocalDate").IsRequired().HasColumnType("date");
            Property(x => x.UtcDateTime).HasColumnName("UtcDateTime").IsRequired().HasColumnType("datetime");
            Property(x => x.LocalDateTime).HasColumnName("LocalDateTime").IsRequired().HasColumnType("datetime");
            Property(x => x.CreativeView).HasColumnName("CreativeView").IsRequired().HasColumnType("bigint");
            Property(x => x.Start).HasColumnName("Start").IsRequired().HasColumnType("bigint");
            Property(x => x.Midpoint).HasColumnName("Midpoint").IsRequired().HasColumnType("bigint");
            Property(x => x.FirstQuartile).HasColumnName("FirstQuartile").IsRequired().HasColumnType("bigint");
            Property(x => x.ThirdQuartile).HasColumnName("ThirdQuartile").IsRequired().HasColumnType("bigint");
            Property(x => x.Complete).HasColumnName("Complete").IsRequired().HasColumnType("bigint");
            Property(x => x.Mute).HasColumnName("Mute").IsRequired().HasColumnType("bigint");
            Property(x => x.Unmute).HasColumnName("Unmute").IsRequired().HasColumnType("bigint");
            Property(x => x.Pause).HasColumnName("Pause").IsRequired().HasColumnType("bigint");
            Property(x => x.Rewind).HasColumnName("Rewind").IsRequired().HasColumnType("bigint");
            Property(x => x.Resume).HasColumnName("Resume").IsRequired().HasColumnType("bigint");
            Property(x => x.Fullscreen).HasColumnName("Fullscreen").IsRequired().HasColumnType("bigint");
            Property(x => x.Expand).HasColumnName("Expand").IsRequired().HasColumnType("bigint");
            Property(x => x.Collapse).HasColumnName("Collapse").IsRequired().HasColumnType("bigint");
            Property(x => x.AcceptInvitation).HasColumnName("AcceptInvitation").IsRequired().HasColumnType("bigint");
            Property(x => x.Close).HasColumnName("Close").IsRequired().HasColumnType("bigint");
            InitializePartial();
        }
        partial void InitializePartial();
    }

    // AdGroupVideoActivityException
    internal partial class AdGroupVideoActivityExceptionMap : EntityTypeConfiguration<AdGroupVideoActivityException>
    {
        public AdGroupVideoActivityExceptionMap()
            : this("analytics")
        {
        }
 
        public AdGroupVideoActivityExceptionMap(string schema)
        {
            ToTable(schema + ".AdGroupVideoActivityException");
            HasKey(x => new { x.BuyerAccountId, x.CampaignId, x.AdGroupId, x.PlacementId, x.PartnerId, x.UtcDateTime, x.LocalDateTime, x.ActivityTypeId, x.ActivityCount });

            Property(x => x.BuyerAccountId).HasColumnName("BuyerAccountID").IsRequired().HasColumnType("int");
            Property(x => x.CampaignId).HasColumnName("CampaignID").IsRequired().HasColumnType("int");
            Property(x => x.AdGroupId).HasColumnName("AdGroupID").IsRequired().HasColumnType("int");
            Property(x => x.PlacementId).HasColumnName("PlacementID").IsRequired().HasColumnType("int");
            Property(x => x.PartnerId).HasColumnName("PartnerID").IsRequired().HasColumnType("int");
            Property(x => x.UtcDateTime).HasColumnName("UtcDateTime").IsRequired().HasColumnType("datetime");
            Property(x => x.LocalDateTime).HasColumnName("LocalDateTime").IsRequired().HasColumnType("datetime");
            Property(x => x.ActivityTypeId).HasColumnName("ActivityTypeID").IsRequired().HasColumnType("int");
            Property(x => x.ActivityCount).HasColumnName("ActivityCount").IsRequired().HasColumnType("bigint");
            Property(x => x.AdSlotDurationInSeconds).HasColumnName("AdSlotDurationInSeconds").IsOptional().HasColumnType("bigint");
            Property(x => x.RawViews).HasColumnName("RawViews").IsOptional().HasColumnType("bigint");
            Property(x => x.IabViews).HasColumnName("IabViews").IsOptional().HasColumnType("bigint");
            Property(x => x.ViewDurationInSeconds).HasColumnName("ViewDurationInSeconds").IsOptional().HasColumnType("bigint");
            InitializePartial();
        }
        partial void InitializePartial();
    }

    // AdGroupVideoActivityExceptionReportID
    internal partial class AdGroupVideoActivityExceptionReportIdMap : EntityTypeConfiguration<AdGroupVideoActivityExceptionReportId>
    {
        public AdGroupVideoActivityExceptionReportIdMap()
            : this("analytics")
        {
        }
 
        public AdGroupVideoActivityExceptionReportIdMap(string schema)
        {
            ToTable(schema + ".AdGroupVideoActivityExceptionReportID");
            HasKey(x => new { x.BuyerAccountId, x.CampaignId, x.AdGroupId, x.PlacementId, x.PartnerId, x.UtcDateTime, x.LocalDateTime, x.ActivityTypeId, x.ActivityCount, x.ReportId });

            Property(x => x.BuyerAccountId).HasColumnName("BuyerAccountID").IsRequired().HasColumnType("int");
            Property(x => x.CampaignId).HasColumnName("CampaignID").IsRequired().HasColumnType("int");
            Property(x => x.AdGroupId).HasColumnName("AdGroupID").IsRequired().HasColumnType("int");
            Property(x => x.PlacementId).HasColumnName("PlacementID").IsRequired().HasColumnType("int");
            Property(x => x.PartnerId).HasColumnName("PartnerID").IsRequired().HasColumnType("int");
            Property(x => x.UtcDateTime).HasColumnName("UtcDateTime").IsRequired().HasColumnType("datetime");
            Property(x => x.LocalDateTime).HasColumnName("LocalDateTime").IsRequired().HasColumnType("datetime");
            Property(x => x.ActivityTypeId).HasColumnName("ActivityTypeID").IsRequired().HasColumnType("int");
            Property(x => x.ActivityCount).HasColumnName("ActivityCount").IsRequired().HasColumnType("bigint");
            Property(x => x.ReportId).HasColumnName("ReportID").IsRequired().HasColumnType("bigint");
            Property(x => x.AdSlotDurationInSeconds).HasColumnName("AdSlotDurationInSeconds").IsOptional().HasColumnType("bigint");
            Property(x => x.RawViews).HasColumnName("RawViews").IsOptional().HasColumnType("bigint");
            Property(x => x.IabViews).HasColumnName("IabViews").IsOptional().HasColumnType("bigint");
            Property(x => x.ViewDurationInSeconds).HasColumnName("ViewDurationInSeconds").IsOptional().HasColumnType("bigint");
            InitializePartial();
        }
        partial void InitializePartial();
    }

    // AdGroupVideoActivityImport
    internal partial class AdGroupVideoActivityImportMap : EntityTypeConfiguration<AdGroupVideoActivityImport>
    {
        public AdGroupVideoActivityImportMap()
            : this("analytics")
        {
        }
 
        public AdGroupVideoActivityImportMap(string schema)
        {
            ToTable(schema + ".AdGroupVideoActivityImport");
            HasKey(x => new { x.BuyerAccountId, x.CampaignId, x.AdGroupId, x.PlacementId, x.PartnerId, x.UtcDateTime, x.LocalDateTime, x.ActivityTypeId, x.ActivityCount });

            Property(x => x.BuyerAccountId).HasColumnName("BuyerAccountID").IsRequired().HasColumnType("int");
            Property(x => x.CampaignId).HasColumnName("CampaignID").IsRequired().HasColumnType("int");
            Property(x => x.AdGroupId).HasColumnName("AdGroupID").IsRequired().HasColumnType("int");
            Property(x => x.PlacementId).HasColumnName("PlacementID").IsRequired().HasColumnType("int");
            Property(x => x.PartnerId).HasColumnName("PartnerID").IsRequired().HasColumnType("int");
            Property(x => x.UtcDateTime).HasColumnName("UtcDateTime").IsRequired().HasColumnType("datetime");
            Property(x => x.LocalDateTime).HasColumnName("LocalDateTime").IsRequired().HasColumnType("datetime");
            Property(x => x.ActivityTypeId).HasColumnName("ActivityTypeID").IsRequired().HasColumnType("int");
            Property(x => x.ActivityCount).HasColumnName("ActivityCount").IsRequired().HasColumnType("bigint");
            Property(x => x.AdSlotDurationInSeconds).HasColumnName("AdSlotDurationInSeconds").IsOptional().HasColumnType("bigint");
            Property(x => x.RawViews).HasColumnName("RawViews").IsOptional().HasColumnType("bigint");
            Property(x => x.IabViews).HasColumnName("IabViews").IsOptional().HasColumnType("bigint");
            Property(x => x.ViewDurationInSeconds).HasColumnName("ViewDurationInSeconds").IsOptional().HasColumnType("bigint");
            InitializePartial();
        }
        partial void InitializePartial();
    }

    // AdGroupVideoActivityImportReportID
    internal partial class AdGroupVideoActivityImportReportIdMap : EntityTypeConfiguration<AdGroupVideoActivityImportReportId>
    {
        public AdGroupVideoActivityImportReportIdMap()
            : this("analytics")
        {
        }
 
        public AdGroupVideoActivityImportReportIdMap(string schema)
        {
            ToTable(schema + ".AdGroupVideoActivityImportReportID");
            HasKey(x => new { x.BuyerAccountId, x.CampaignId, x.AdGroupId, x.PlacementId, x.PartnerId, x.UtcDateTime, x.LocalDateTime, x.ActivityTypeId, x.ActivityCount, x.ReportId });

            Property(x => x.BuyerAccountId).HasColumnName("BuyerAccountID").IsRequired().HasColumnType("int");
            Property(x => x.CampaignId).HasColumnName("CampaignID").IsRequired().HasColumnType("int");
            Property(x => x.AdGroupId).HasColumnName("AdGroupID").IsRequired().HasColumnType("int");
            Property(x => x.PlacementId).HasColumnName("PlacementID").IsRequired().HasColumnType("int");
            Property(x => x.PartnerId).HasColumnName("PartnerID").IsRequired().HasColumnType("int");
            Property(x => x.UtcDateTime).HasColumnName("UtcDateTime").IsRequired().HasColumnType("datetime");
            Property(x => x.LocalDateTime).HasColumnName("LocalDateTime").IsRequired().HasColumnType("datetime");
            Property(x => x.ActivityTypeId).HasColumnName("ActivityTypeID").IsRequired().HasColumnType("int");
            Property(x => x.ActivityCount).HasColumnName("ActivityCount").IsRequired().HasColumnType("bigint");
            Property(x => x.ReportId).HasColumnName("ReportID").IsRequired().HasColumnType("bigint");
            Property(x => x.AdSlotDurationInSeconds).HasColumnName("AdSlotDurationInSeconds").IsOptional().HasColumnType("bigint");
            Property(x => x.RawViews).HasColumnName("RawViews").IsOptional().HasColumnType("bigint");
            Property(x => x.IabViews).HasColumnName("IabViews").IsOptional().HasColumnType("bigint");
            Property(x => x.ViewDurationInSeconds).HasColumnName("ViewDurationInSeconds").IsOptional().HasColumnType("bigint");
            InitializePartial();
        }
        partial void InitializePartial();
    }

    // AdGroupVideoActivityReportID
    internal partial class AdGroupVideoActivityReportIdMap : EntityTypeConfiguration<AdGroupVideoActivityReportId>
    {
        public AdGroupVideoActivityReportIdMap()
            : this("analytics")
        {
        }
 
        public AdGroupVideoActivityReportIdMap(string schema)
        {
            ToTable(schema + ".AdGroupVideoActivityReportID");
            HasKey(x => new { x.PlacementId, x.PartnerId, x.UtcDateTime });

            Property(x => x.BuyerAccountId).HasColumnName("BuyerAccountID").IsRequired().HasColumnType("int");
            Property(x => x.AdvertiserId).HasColumnName("AdvertiserID").IsRequired().HasColumnType("int");
            Property(x => x.AdvertiserProductId).HasColumnName("AdvertiserProductID").IsRequired().HasColumnType("int");
            Property(x => x.CampaignId).HasColumnName("CampaignID").IsRequired().HasColumnType("int");
            Property(x => x.AdGroupId).HasColumnName("AdGroupID").IsRequired().HasColumnType("int");
            Property(x => x.PlacementId).HasColumnName("PlacementID").IsRequired().HasColumnType("int").HasDatabaseGeneratedOption(DatabaseGeneratedOption.None);
            Property(x => x.PartnerId).HasColumnName("PartnerID").IsRequired().HasColumnType("int").HasDatabaseGeneratedOption(DatabaseGeneratedOption.None);
            Property(x => x.UtcDate).HasColumnName("UtcDate").IsRequired().HasColumnType("date");
            Property(x => x.LocalDate).HasColumnName("LocalDate").IsRequired().HasColumnType("date");
            Property(x => x.UtcDateTime).HasColumnName("UtcDateTime").IsRequired().HasColumnType("datetime").HasDatabaseGeneratedOption(DatabaseGeneratedOption.None);
            Property(x => x.LocalDateTime).HasColumnName("LocalDateTime").IsRequired().HasColumnType("datetime");
            Property(x => x.CreativeView).HasColumnName("CreativeView").IsRequired().HasColumnType("bigint");
            Property(x => x.Start).HasColumnName("Start").IsRequired().HasColumnType("bigint");
            Property(x => x.Midpoint).HasColumnName("Midpoint").IsRequired().HasColumnType("bigint");
            Property(x => x.FirstQuartile).HasColumnName("FirstQuartile").IsRequired().HasColumnType("bigint");
            Property(x => x.ThirdQuartile).HasColumnName("ThirdQuartile").IsRequired().HasColumnType("bigint");
            Property(x => x.Complete).HasColumnName("Complete").IsRequired().HasColumnType("bigint");
            Property(x => x.Mute).HasColumnName("Mute").IsRequired().HasColumnType("bigint");
            Property(x => x.Unmute).HasColumnName("Unmute").IsRequired().HasColumnType("bigint");
            Property(x => x.Pause).HasColumnName("Pause").IsRequired().HasColumnType("bigint");
            Property(x => x.Rewind).HasColumnName("Rewind").IsRequired().HasColumnType("bigint");
            Property(x => x.Resume).HasColumnName("Resume").IsRequired().HasColumnType("bigint");
            Property(x => x.Fullscreen).HasColumnName("Fullscreen").IsRequired().HasColumnType("bigint");
            Property(x => x.Expand).HasColumnName("Expand").IsRequired().HasColumnType("bigint");
            Property(x => x.Collapse).HasColumnName("Collapse").IsRequired().HasColumnType("bigint");
            Property(x => x.AcceptInvitation).HasColumnName("AcceptInvitation").IsRequired().HasColumnType("bigint");
            Property(x => x.Close).HasColumnName("Close").IsRequired().HasColumnType("bigint");
            Property(x => x.ReportId).HasColumnName("ReportID").IsRequired().HasColumnType("bigint");
            InitializePartial();
        }
        partial void InitializePartial();
    }

    // AdGroupWebsite
    internal partial class AdGroupWebsiteMap : EntityTypeConfiguration<AdGroupWebsite>
    {
        public AdGroupWebsiteMap()
            : this("analytics")
        {
        }
 
        public AdGroupWebsiteMap(string schema)
        {
            ToTable(schema + ".AdGroupWebsite");
            HasKey(x => new { x.BuyerAccountId, x.CampaignId, x.AdGroupId, x.InventoryId, x.UtcDate, x.Bids, x.Impressions, x.Clicks, x.Conversions, x.PostViewConversions, x.PostClickConversions, x.MediaCostUsdMicros, x.MediaCostLocalMicros, x.DataCostLocalMicros });

            Property(x => x.BuyerAccountId).HasColumnName("BuyerAccountID").IsRequired().HasColumnType("int");
            Property(x => x.CampaignId).HasColumnName("CampaignID").IsRequired().HasColumnType("int");
            Property(x => x.AdGroupId).HasColumnName("AdGroupID").IsRequired().HasColumnType("int");
            Property(x => x.InventoryId).HasColumnName("InventoryID").IsRequired().HasColumnType("bigint");
            Property(x => x.UtcDate).HasColumnName("UtcDate").IsRequired().HasColumnType("date");
            Property(x => x.Bids).HasColumnName("Bids").IsRequired().HasColumnType("bigint");
            Property(x => x.Impressions).HasColumnName("Impressions").IsRequired().HasColumnType("bigint");
            Property(x => x.Clicks).HasColumnName("Clicks").IsRequired().HasColumnType("bigint");
            Property(x => x.Conversions).HasColumnName("Conversions").IsRequired().HasColumnType("bigint");
            Property(x => x.PostViewConversions).HasColumnName("PostViewConversions").IsRequired().HasColumnType("bigint");
            Property(x => x.PostClickConversions).HasColumnName("PostClickConversions").IsRequired().HasColumnType("bigint");
            Property(x => x.MediaCostUsdMicros).HasColumnName("MediaCostUsdMicros").IsRequired().HasColumnType("bigint");
            Property(x => x.MediaCostLocalMicros).HasColumnName("MediaCostLocalMicros").IsRequired().HasColumnType("bigint");
            Property(x => x.DataCostLocalMicros).HasColumnName("DataCostLocalMicros").IsRequired().HasColumnType("bigint");
            Property(x => x.InvalidImpressions).HasColumnName("InvalidImpressions").IsOptional().HasColumnType("bigint");
            Property(x => x.InvalidClicks).HasColumnName("InvalidClicks").IsOptional().HasColumnType("bigint");
            Property(x => x.FeesUsdSuperMicros).HasColumnName("FeesUsdSuperMicros").IsOptional().HasColumnType("bigint");
            Property(x => x.FeesLocalSuperMicros).HasColumnName("FeesLocalSuperMicros").IsOptional().HasColumnType("bigint");
            Property(x => x.AdSlotDurationInSeconds).HasColumnName("AdSlotDurationInSeconds").IsOptional().HasColumnType("bigint");
            Property(x => x.RawViews).HasColumnName("RawViews").IsOptional().HasColumnType("bigint");
            Property(x => x.IabViews).HasColumnName("IabViews").IsOptional().HasColumnType("bigint");
            Property(x => x.ViewDurationInSeconds).HasColumnName("ViewDurationInSeconds").IsOptional().HasColumnType("bigint");
            InitializePartial();
        }
        partial void InitializePartial();
    }

    // AdGroupWebsiteAnalytics
    internal partial class AdGroupWebsiteAnalyticMap : EntityTypeConfiguration<AdGroupWebsiteAnalytic>
    {
        public AdGroupWebsiteAnalyticMap()
            : this("dbo")
        {
        }
 
        public AdGroupWebsiteAnalyticMap(string schema)
        {
            ToTable(schema + ".AdGroupWebsiteAnalytics");
            HasKey(x => new { x.BuyerAccountId, x.AdvertiserId, x.AdvertiserProductId, x.CampaignId, x.AdGroupId, x.OptimizationModelId, x.WebsiteId, x.LocalDate });

            Property(x => x.BuyerAccountId).HasColumnName("BuyerAccountID").IsRequired().HasColumnType("int");
            Property(x => x.AdvertiserId).HasColumnName("AdvertiserID").IsRequired().HasColumnType("int");
            Property(x => x.AdvertiserProductId).HasColumnName("AdvertiserProductID").IsRequired().HasColumnType("int");
            Property(x => x.CampaignId).HasColumnName("CampaignID").IsRequired().HasColumnType("int");
            Property(x => x.AdGroupId).HasColumnName("AdGroupID").IsRequired().HasColumnType("int");
            Property(x => x.OptimizationModelId).HasColumnName("OptimizationModelID").IsRequired().HasColumnType("int");
            Property(x => x.WebsiteId).HasColumnName("WebsiteID").IsRequired().HasColumnType("bigint");
            Property(x => x.WebsiteUrl).HasColumnName("WebsiteUrl").IsOptional().HasColumnType("nvarchar").HasMaxLength(450);
            Property(x => x.LocalDate).HasColumnName("LocalDate").IsRequired().IsUnicode(false).HasColumnType("varchar").HasMaxLength(10);
            Property(x => x.Bids).HasColumnName("Bids").IsOptional().HasColumnType("bigint");
            Property(x => x.Impressions).HasColumnName("Impressions").IsOptional().HasColumnType("bigint");
            Property(x => x.Clicks).HasColumnName("Clicks").IsOptional().HasColumnType("bigint");
            Property(x => x.UnfilteredClicks).HasColumnName("UnfilteredClicks").IsOptional().HasColumnType("bigint");
            Property(x => x.Conversions).HasColumnName("Conversions").IsOptional().HasColumnType("bigint");
            Property(x => x.PostViewConversions).HasColumnName("PostViewConversions").IsOptional().HasColumnType("bigint");
            Property(x => x.PostClickConversions).HasColumnName("PostClickConversions").IsOptional().HasColumnType("bigint");
            Property(x => x.SpendLocalMicros).HasColumnName("SpendLocalMicros").IsOptional().HasColumnType("bigint");
            Property(x => x.Spend).HasColumnName("Spend").IsOptional().HasColumnType("money").HasPrecision(19,4);
            Property(x => x.ClientCostLocalMicros).HasColumnName("ClientCostLocalMicros").IsOptional().HasColumnType("bigint");
            Property(x => x.ClientCostDollars).HasColumnName("ClientCostDollars").IsOptional().HasColumnType("money").HasPrecision(19,4);
            Property(x => x.MediaCostLocalMicros).HasColumnName("MediaCostLocalMicros").IsOptional().HasColumnType("bigint");
            Property(x => x.DataCostLocalMicros).HasColumnName("DataCostLocalMicros").IsOptional().HasColumnType("bigint");
            Property(x => x.MediaClientCostLocalMicros).HasColumnName("MediaClientCostLocalMicros").IsOptional().HasColumnType("bigint");
            Property(x => x.DataClientCostLocalMicros).HasColumnName("DataClientCostLocalMicros").IsOptional().HasColumnType("bigint");
            Property(x => x.AdSlotDurationInSeconds).HasColumnName("AdSlotDurationInSeconds").IsOptional().HasColumnType("bigint");
            Property(x => x.RawViews).HasColumnName("RawViews").IsOptional().HasColumnType("bigint");
            Property(x => x.IabViews).HasColumnName("IabViews").IsOptional().HasColumnType("bigint");
            Property(x => x.ViewDurationInSeconds).HasColumnName("ViewDurationInSeconds").IsOptional().HasColumnType("bigint");
            Property(x => x.Ctr).HasColumnName("CTR").IsOptional().HasColumnType("float");
            Property(x => x.Cpm).HasColumnName("CPM").IsOptional().HasColumnType("money").HasPrecision(19,4);
            Property(x => x.Cpc).HasColumnName("CPC").IsOptional().HasColumnType("money").HasPrecision(19,4);
            Property(x => x.Cpa).HasColumnName("CPA").IsOptional().HasColumnType("money").HasPrecision(19,4);
            Property(x => x.ClientCpm).HasColumnName("ClientCPM").IsOptional().HasColumnType("money").HasPrecision(19,4);
            Property(x => x.ClientCpc).HasColumnName("ClientCPC").IsOptional().HasColumnType("money").HasPrecision(19,4);
            Property(x => x.ClientCpa).HasColumnName("ClientCPA").IsOptional().HasColumnType("money").HasPrecision(19,4);
            Property(x => x.Cpms).HasColumnName("CPMs").IsOptional().HasColumnType("decimal").HasPrecision(38,14);
            Property(x => x.ClientCostCpms).HasColumnName("ClientCostCpms").IsOptional().HasColumnType("decimal").HasPrecision(38,14);
            Property(x => x.Cps).HasColumnName("CPS").IsOptional().HasColumnType("decimal").HasPrecision(38,14);
            Property(x => x.ClientCostCps).HasColumnName("ClientCostCps").IsOptional().HasColumnType("decimal").HasPrecision(38,14);
            Property(x => x.ViewableRatio).HasColumnName("ViewableRatio").IsOptional().HasColumnType("float");
            InitializePartial();
        }
        partial void InitializePartial();
    }

    // AdGroupWebsiteException
    internal partial class AdGroupWebsiteExceptionMap : EntityTypeConfiguration<AdGroupWebsiteException>
    {
        public AdGroupWebsiteExceptionMap()
            : this("analytics")
        {
        }
 
        public AdGroupWebsiteExceptionMap(string schema)
        {
            ToTable(schema + ".AdGroupWebsiteException");
            HasKey(x => new { x.BuyerAccountId, x.CampaignId, x.AdGroupId, x.InventoryId, x.UtcDate, x.Bids, x.Impressions, x.InvalidImpressions, x.Clicks, x.InvalidClicks, x.Conversions, x.PostViewConversions, x.PostClickConversions, x.MediaCostUsdMicros, x.MediaCostLocalMicros, x.DataCostLocalMicros, x.FeesUsdSuperMicros, x.FeesLocalSuperMicros });

            Property(x => x.BuyerAccountId).HasColumnName("BuyerAccountID").IsRequired().HasColumnType("int");
            Property(x => x.CampaignId).HasColumnName("CampaignID").IsRequired().HasColumnType("int");
            Property(x => x.AdGroupId).HasColumnName("AdGroupID").IsRequired().HasColumnType("int");
            Property(x => x.InventoryId).HasColumnName("InventoryID").IsRequired().HasColumnType("bigint");
            Property(x => x.UtcDate).HasColumnName("UtcDate").IsRequired().HasColumnType("date");
            Property(x => x.Bids).HasColumnName("Bids").IsRequired().HasColumnType("bigint");
            Property(x => x.Impressions).HasColumnName("Impressions").IsRequired().HasColumnType("bigint");
            Property(x => x.InvalidImpressions).HasColumnName("InvalidImpressions").IsRequired().HasColumnType("bigint");
            Property(x => x.Clicks).HasColumnName("Clicks").IsRequired().HasColumnType("bigint");
            Property(x => x.InvalidClicks).HasColumnName("InvalidClicks").IsRequired().HasColumnType("bigint");
            Property(x => x.Conversions).HasColumnName("Conversions").IsRequired().HasColumnType("bigint");
            Property(x => x.PostViewConversions).HasColumnName("PostViewConversions").IsRequired().HasColumnType("bigint");
            Property(x => x.PostClickConversions).HasColumnName("PostClickConversions").IsRequired().HasColumnType("bigint");
            Property(x => x.MediaCostUsdMicros).HasColumnName("MediaCostUsdMicros").IsRequired().HasColumnType("bigint");
            Property(x => x.MediaCostLocalMicros).HasColumnName("MediaCostLocalMicros").IsRequired().HasColumnType("bigint");
            Property(x => x.DataCostLocalMicros).HasColumnName("DataCostLocalMicros").IsRequired().HasColumnType("bigint");
            Property(x => x.FeesUsdSuperMicros).HasColumnName("FeesUsdSuperMicros").IsRequired().HasColumnType("bigint");
            Property(x => x.FeesLocalSuperMicros).HasColumnName("FeesLocalSuperMicros").IsRequired().HasColumnType("bigint");
            Property(x => x.AdSlotDurationInSeconds).HasColumnName("AdSlotDurationInSeconds").IsOptional().HasColumnType("bigint");
            Property(x => x.RawViews).HasColumnName("RawViews").IsOptional().HasColumnType("bigint");
            Property(x => x.IabViews).HasColumnName("IabViews").IsOptional().HasColumnType("bigint");
            Property(x => x.ViewDurationInSeconds).HasColumnName("ViewDurationInSeconds").IsOptional().HasColumnType("bigint");
            InitializePartial();
        }
        partial void InitializePartial();
    }

    // AdGroupWebsiteImport
    internal partial class AdGroupWebsiteImportMap : EntityTypeConfiguration<AdGroupWebsiteImport>
    {
        public AdGroupWebsiteImportMap()
            : this("analytics")
        {
        }
 
        public AdGroupWebsiteImportMap(string schema)
        {
            ToTable(schema + ".AdGroupWebsiteImport");
            HasKey(x => new { x.BuyerAccountId, x.CampaignId, x.AdGroupId, x.InventoryId, x.UtcDate, x.Bids, x.Impressions, x.InvalidImpressions, x.Clicks, x.InvalidClicks, x.Conversions, x.PostViewConversions, x.PostClickConversions, x.MediaCostUsdMicros, x.MediaCostLocalMicros, x.DataCostLocalMicros, x.FeesUsdSuperMicros, x.FeesLocalSuperMicros });

            Property(x => x.BuyerAccountId).HasColumnName("BuyerAccountID").IsRequired().HasColumnType("int");
            Property(x => x.CampaignId).HasColumnName("CampaignID").IsRequired().HasColumnType("int");
            Property(x => x.AdGroupId).HasColumnName("AdGroupID").IsRequired().HasColumnType("int");
            Property(x => x.InventoryId).HasColumnName("InventoryID").IsRequired().HasColumnType("bigint");
            Property(x => x.UtcDate).HasColumnName("UtcDate").IsRequired().HasColumnType("date");
            Property(x => x.Bids).HasColumnName("Bids").IsRequired().HasColumnType("bigint");
            Property(x => x.Impressions).HasColumnName("Impressions").IsRequired().HasColumnType("bigint");
            Property(x => x.InvalidImpressions).HasColumnName("InvalidImpressions").IsRequired().HasColumnType("bigint");
            Property(x => x.Clicks).HasColumnName("Clicks").IsRequired().HasColumnType("bigint");
            Property(x => x.InvalidClicks).HasColumnName("InvalidClicks").IsRequired().HasColumnType("bigint");
            Property(x => x.Conversions).HasColumnName("Conversions").IsRequired().HasColumnType("bigint");
            Property(x => x.PostViewConversions).HasColumnName("PostViewConversions").IsRequired().HasColumnType("bigint");
            Property(x => x.PostClickConversions).HasColumnName("PostClickConversions").IsRequired().HasColumnType("bigint");
            Property(x => x.MediaCostUsdMicros).HasColumnName("MediaCostUsdMicros").IsRequired().HasColumnType("bigint");
            Property(x => x.MediaCostLocalMicros).HasColumnName("MediaCostLocalMicros").IsRequired().HasColumnType("bigint");
            Property(x => x.DataCostLocalMicros).HasColumnName("DataCostLocalMicros").IsRequired().HasColumnType("bigint");
            Property(x => x.FeesUsdSuperMicros).HasColumnName("FeesUsdSuperMicros").IsRequired().HasColumnType("bigint");
            Property(x => x.FeesLocalSuperMicros).HasColumnName("FeesLocalSuperMicros").IsRequired().HasColumnType("bigint");
            Property(x => x.AdSlotDurationInSeconds).HasColumnName("AdSlotDurationInSeconds").IsOptional().HasColumnType("bigint");
            Property(x => x.RawViews).HasColumnName("RawViews").IsOptional().HasColumnType("bigint");
            Property(x => x.IabViews).HasColumnName("IabViews").IsOptional().HasColumnType("bigint");
            Property(x => x.ViewDurationInSeconds).HasColumnName("ViewDurationInSeconds").IsOptional().HasColumnType("bigint");
            InitializePartial();
        }
        partial void InitializePartial();
    }

    // AdGroupWebsiteInventoryOnly
    internal partial class AdGroupWebsiteInventoryOnlyMap : EntityTypeConfiguration<AdGroupWebsiteInventoryOnly>
    {
        public AdGroupWebsiteInventoryOnlyMap()
            : this("dbo")
        {
        }
 
        public AdGroupWebsiteInventoryOnlyMap(string schema)
        {
            ToTable(schema + ".AdGroupWebsiteInventoryOnly");
            HasKey(x => new { x.BuyerAccountId, x.CampaignId, x.AdGroupId, x.InventoryId, x.PartnerId, x.PublisherId, x.PublisherName, x.WebsiteId, x.IsTargeted, x.PackageInstalled, x.BinomialFiltered, x.BinomialFilterOverride, x.WhiteListedInSiteLevel });

            Property(x => x.BuyerAccountId).HasColumnName("BuyerAccountID").IsRequired().HasColumnType("int");
            Property(x => x.CampaignId).HasColumnName("CampaignID").IsRequired().HasColumnType("int");
            Property(x => x.AdGroupId).HasColumnName("AdGroupID").IsRequired().HasColumnType("int");
            Property(x => x.InventoryId).HasColumnName("InventoryID").IsRequired().HasColumnType("bigint");
            Property(x => x.PartnerId).HasColumnName("PartnerID").IsRequired().HasColumnType("int");
            Property(x => x.PartnerName).HasColumnName("PartnerName").IsOptional().HasColumnType("nvarchar").HasMaxLength(50);
            Property(x => x.PublisherId).HasColumnName("PublisherID").IsRequired().HasColumnType("int");
            Property(x => x.PublisherName).HasColumnName("PublisherName").IsRequired().HasColumnType("nvarchar").HasMaxLength(255);
            Property(x => x.WebsiteId).HasColumnName("WebsiteID").IsRequired().HasColumnType("bigint");
            Property(x => x.WebsiteUrl).HasColumnName("WebsiteUrl").IsOptional().HasColumnType("nvarchar").HasMaxLength(450);
            Property(x => x.IsTargeted).HasColumnName("IsTargeted").IsRequired().HasColumnType("int");
            Property(x => x.PackageInstalled).HasColumnName("PackageInstalled").IsRequired().HasColumnType("int");
            Property(x => x.BinomialFiltered).HasColumnName("BinomialFiltered").IsRequired().HasColumnType("int");
            Property(x => x.BinomialFilterOverride).HasColumnName("BinomialFilterOverride").IsRequired().HasColumnType("int");
            Property(x => x.WhiteListedInSiteLevel).HasColumnName("WhiteListedInSiteLevel").IsRequired().HasColumnType("int");
            Property(x => x.Bids).HasColumnName("Bids").IsOptional().HasColumnType("bigint");
            Property(x => x.Impressions).HasColumnName("Impressions").IsOptional().HasColumnType("bigint");
            Property(x => x.Clicks).HasColumnName("Clicks").IsOptional().HasColumnType("bigint");
            Property(x => x.Conversions).HasColumnName("Conversions").IsOptional().HasColumnType("bigint");
            Property(x => x.PostViewConversions).HasColumnName("PostViewConversions").IsOptional().HasColumnType("bigint");
            Property(x => x.PostClickConversions).HasColumnName("PostClickConversions").IsOptional().HasColumnType("bigint");
            Property(x => x.SpendLocalMicros).HasColumnName("SpendLocalMicros").IsOptional().HasColumnType("bigint");
            Property(x => x.Spend).HasColumnName("Spend").IsOptional().HasColumnType("money").HasPrecision(19,4);
            Property(x => x.ClientCostLocalMicros).HasColumnName("ClientCostLocalMicros").IsOptional().HasColumnType("bigint");
            Property(x => x.ClientCostDollars).HasColumnName("ClientCostDollars").IsOptional().HasColumnType("money").HasPrecision(19,4);
            Property(x => x.Ctr).HasColumnName("Ctr").IsOptional().HasColumnType("float");
            Property(x => x.Cpm).HasColumnName("Cpm").IsOptional().HasColumnType("money").HasPrecision(19,4);
            Property(x => x.Cpc).HasColumnName("Cpc").IsOptional().HasColumnType("money").HasPrecision(19,4);
            Property(x => x.Cpa).HasColumnName("Cpa").IsOptional().HasColumnType("money").HasPrecision(19,4);
            Property(x => x.ClientCostCpm).HasColumnName("ClientCostCpm").IsOptional().HasColumnType("decimal").HasPrecision(19,4);
            Property(x => x.ClientCostCpc).HasColumnName("ClientCostCpc").IsOptional().HasColumnType("decimal").HasPrecision(19,4);
            Property(x => x.ClientCostCpa).HasColumnName("ClientCostCpa").IsOptional().HasColumnType("decimal").HasPrecision(19,4);
            Property(x => x.MediaCostLocalMicros).HasColumnName("MediaCostLocalMicros").IsOptional().HasColumnType("bigint");
            Property(x => x.DataCostLocalMicros).HasColumnName("DataCostLocalMicros").IsOptional().HasColumnType("bigint");
            Property(x => x.MediaClientCostLocalMicros).HasColumnName("MediaClientCostLocalMicros").IsOptional().HasColumnType("bigint");
            Property(x => x.DataClientCostLocalMicros).HasColumnName("DataClientCostLocalMicros").IsOptional().HasColumnType("bigint");
            Property(x => x.AdSlotDurationInSeconds).HasColumnName("AdSlotDurationInSeconds").IsOptional().HasColumnType("bigint");
            Property(x => x.Cpms).HasColumnName("Cpms").IsOptional().HasColumnType("money").HasPrecision(19,4);
            Property(x => x.ClientCostCpms).HasColumnName("ClientCostCpms").IsOptional().HasColumnType("money").HasPrecision(19,4);
            Property(x => x.RawViews).HasColumnName("RawViews").IsOptional().HasColumnType("bigint");
            Property(x => x.IabViews).HasColumnName("IabViews").IsOptional().HasColumnType("bigint");
            Property(x => x.ViewDurationInSeconds).HasColumnName("ViewDurationInSeconds").IsOptional().HasColumnType("bigint");
            Property(x => x.Cps).HasColumnName("Cps").IsOptional().HasColumnType("money").HasPrecision(19,4);
            Property(x => x.ClientCostCps).HasColumnName("ClientCostCps").IsOptional().HasColumnType("money").HasPrecision(19,4);
            InitializePartial();
        }
        partial void InitializePartial();
    }

    // AdGroupWebsiteNew
    internal partial class AdGroupWebsiteNewMap : EntityTypeConfiguration<AdGroupWebsiteNew>
    {
        public AdGroupWebsiteNewMap()
            : this("analytics")
        {
        }
 
        public AdGroupWebsiteNewMap(string schema)
        {
            ToTable(schema + ".AdGroupWebsiteNew");
            HasKey(x => new { x.BuyerAccountId, x.CampaignId, x.AdGroupId, x.InventoryId, x.UtcDate, x.Bids, x.Impressions, x.Clicks, x.Conversions, x.PostViewConversions, x.PostClickConversions, x.MediaCostUsdMicros, x.MediaCostLocalMicros, x.DataCostLocalMicros });

            Property(x => x.BuyerAccountId).HasColumnName("BuyerAccountID").IsRequired().HasColumnType("int");
            Property(x => x.CampaignId).HasColumnName("CampaignID").IsRequired().HasColumnType("int");
            Property(x => x.AdGroupId).HasColumnName("AdGroupID").IsRequired().HasColumnType("int");
            Property(x => x.InventoryId).HasColumnName("InventoryID").IsRequired().HasColumnType("bigint");
            Property(x => x.UtcDate).HasColumnName("UtcDate").IsRequired().HasColumnType("date");
            Property(x => x.Bids).HasColumnName("Bids").IsRequired().HasColumnType("bigint");
            Property(x => x.Impressions).HasColumnName("Impressions").IsRequired().HasColumnType("bigint");
            Property(x => x.Clicks).HasColumnName("Clicks").IsRequired().HasColumnType("bigint");
            Property(x => x.Conversions).HasColumnName("Conversions").IsRequired().HasColumnType("bigint");
            Property(x => x.PostViewConversions).HasColumnName("PostViewConversions").IsRequired().HasColumnType("bigint");
            Property(x => x.PostClickConversions).HasColumnName("PostClickConversions").IsRequired().HasColumnType("bigint");
            Property(x => x.MediaCostUsdMicros).HasColumnName("MediaCostUsdMicros").IsRequired().HasColumnType("bigint");
            Property(x => x.MediaCostLocalMicros).HasColumnName("MediaCostLocalMicros").IsRequired().HasColumnType("bigint");
            Property(x => x.DataCostLocalMicros).HasColumnName("DataCostLocalMicros").IsRequired().HasColumnType("bigint");
            Property(x => x.InvalidImpressions).HasColumnName("InvalidImpressions").IsOptional().HasColumnType("bigint");
            Property(x => x.InvalidClicks).HasColumnName("InvalidClicks").IsOptional().HasColumnType("bigint");
            Property(x => x.FeesUsdSuperMicros).HasColumnName("FeesUsdSuperMicros").IsOptional().HasColumnType("bigint");
            Property(x => x.FeesLocalSuperMicros).HasColumnName("FeesLocalSuperMicros").IsOptional().HasColumnType("bigint");
            Property(x => x.AdSlotDurationInSeconds).HasColumnName("AdSlotDurationInSeconds").IsOptional().HasColumnType("bigint");
            Property(x => x.RawViews).HasColumnName("RawViews").IsOptional().HasColumnType("bigint");
            Property(x => x.IabViews).HasColumnName("IabViews").IsOptional().HasColumnType("bigint");
            Property(x => x.ViewDurationInSeconds).HasColumnName("ViewDurationInSeconds").IsOptional().HasColumnType("bigint");
            InitializePartial();
        }
        partial void InitializePartial();
    }

    // AdGroupWebsitePerformanceAndTargetingOnly
    internal partial class AdGroupWebsitePerformanceAndTargetingOnlyMap : EntityTypeConfiguration<AdGroupWebsitePerformanceAndTargetingOnly>
    {
        public AdGroupWebsitePerformanceAndTargetingOnlyMap()
            : this("dbo")
        {
        }
 
        public AdGroupWebsitePerformanceAndTargetingOnlyMap(string schema)
        {
            ToTable(schema + ".AdGroupWebsitePerformanceAndTargetingOnly");
            HasKey(x => new { x.BuyerAccountId, x.CampaignId, x.AdGroupId, x.InventoryId, x.PartnerId, x.PublisherId, x.WebsiteId, x.PackageInstalled, x.BinomialFiltered, x.BinomialFilterOverride, x.WhiteListedInSiteLevel, x.IsTargeted });

            Property(x => x.BuyerAccountId).HasColumnName("BuyerAccountID").IsRequired().HasColumnType("int");
            Property(x => x.CampaignId).HasColumnName("CampaignID").IsRequired().HasColumnType("int");
            Property(x => x.AdGroupId).HasColumnName("AdGroupID").IsRequired().HasColumnType("int");
            Property(x => x.InventoryId).HasColumnName("InventoryID").IsRequired().HasColumnType("bigint");
            Property(x => x.PartnerId).HasColumnName("PartnerID").IsRequired().HasColumnType("int");
            Property(x => x.PartnerName).HasColumnName("PartnerName").IsOptional().HasColumnType("nvarchar").HasMaxLength(50);
            Property(x => x.PublisherId).HasColumnName("PublisherID").IsRequired().HasColumnType("int");
            Property(x => x.PublisherName).HasColumnName("PublisherName").IsOptional().HasColumnType("nvarchar").HasMaxLength(255);
            Property(x => x.WebsiteId).HasColumnName("WebsiteID").IsRequired().HasColumnType("bigint");
            Property(x => x.WebsiteUrl).HasColumnName("WebsiteUrl").IsOptional().HasColumnType("nvarchar").HasMaxLength(450);
            Property(x => x.Bids).HasColumnName("Bids").IsOptional().HasColumnType("bigint");
            Property(x => x.Impressions).HasColumnName("Impressions").IsOptional().HasColumnType("bigint");
            Property(x => x.Clicks).HasColumnName("Clicks").IsOptional().HasColumnType("bigint");
            Property(x => x.Conversions).HasColumnName("Conversions").IsOptional().HasColumnType("bigint");
            Property(x => x.PostViewConversions).HasColumnName("PostViewConversions").IsOptional().HasColumnType("bigint");
            Property(x => x.PostClickConversions).HasColumnName("PostClickConversions").IsOptional().HasColumnType("bigint");
            Property(x => x.SpendLocalMicros).HasColumnName("SpendLocalMicros").IsOptional().HasColumnType("bigint");
            Property(x => x.Spend).HasColumnName("Spend").IsOptional().HasColumnType("money").HasPrecision(19,4);
            Property(x => x.ClientCostLocalMicros).HasColumnName("ClientCostLocalMicros").IsOptional().HasColumnType("bigint");
            Property(x => x.ClientCostDollars).HasColumnName("ClientCostDollars").IsOptional().HasColumnType("money").HasPrecision(19,4);
            Property(x => x.MediaCostLocalMicros).HasColumnName("MediaCostLocalMicros").IsOptional().HasColumnType("bigint");
            Property(x => x.DataCostLocalMicros).HasColumnName("DataCostLocalMicros").IsOptional().HasColumnType("bigint");
            Property(x => x.MediaClientCostLocalMicros).HasColumnName("MediaClientCostLocalMicros").IsOptional().HasColumnType("bigint");
            Property(x => x.DataClientCostLocalMicros).HasColumnName("DataClientCostLocalMicros").IsOptional().HasColumnType("bigint");
            Property(x => x.AdSlotDurationInSeconds).HasColumnName("AdSlotDurationInSeconds").IsOptional().HasColumnType("bigint");
            Property(x => x.RawViews).HasColumnName("RawViews").IsOptional().HasColumnType("bigint");
            Property(x => x.IabViews).HasColumnName("IabViews").IsOptional().HasColumnType("bigint");
            Property(x => x.ViewDurationInSeconds).HasColumnName("ViewDurationInSeconds").IsOptional().HasColumnType("bigint");
            Property(x => x.PackageInstalled).HasColumnName("PackageInstalled").IsRequired().HasColumnType("int");
            Property(x => x.BinomialFiltered).HasColumnName("BinomialFiltered").IsRequired().HasColumnType("int");
            Property(x => x.BinomialFilterOverride).HasColumnName("BinomialFilterOverride").IsRequired().HasColumnType("int");
            Property(x => x.WhiteListedInSiteLevel).HasColumnName("WhiteListedInSiteLevel").IsRequired().HasColumnType("int");
            Property(x => x.IsTargeted).HasColumnName("IsTargeted").IsRequired().HasColumnType("int");
            Property(x => x.Ctr).HasColumnName("CTR").IsOptional().HasColumnType("float");
            Property(x => x.Cpm).HasColumnName("CPM").IsOptional().HasColumnType("decimal").HasPrecision(19,4);
            Property(x => x.Cpc).HasColumnName("CPC").IsOptional().HasColumnType("decimal").HasPrecision(19,4);
            Property(x => x.Cpa).HasColumnName("CPA").IsOptional().HasColumnType("decimal").HasPrecision(19,4);
            Property(x => x.ClientCostCpm).HasColumnName("ClientCostCPM").IsOptional().HasColumnType("decimal").HasPrecision(19,4);
            Property(x => x.ClientCostCpc).HasColumnName("ClientCostCPC").IsOptional().HasColumnType("decimal").HasPrecision(19,4);
            Property(x => x.ClientCostCpa).HasColumnName("ClientCostCPA").IsOptional().HasColumnType("decimal").HasPrecision(19,4);
            Property(x => x.Cpms).HasColumnName("CPMs").IsOptional().HasColumnType("decimal").HasPrecision(38,14);
            Property(x => x.ClientCostCpms).HasColumnName("ClientCostCpms").IsOptional().HasColumnType("decimal").HasPrecision(38,14);
            Property(x => x.Cps).HasColumnName("CPS").IsOptional().HasColumnType("decimal").HasPrecision(38,14);
            Property(x => x.ClientCostCps).HasColumnName("ClientCostCps").IsOptional().HasColumnType("decimal").HasPrecision(38,14);
            Property(x => x.ViewableRatio).HasColumnName("ViewableRatio").IsOptional().HasColumnType("float");
            InitializePartial();
        }
        partial void InitializePartial();
    }

    // AdGroupWebsiteTargeting
    internal partial class AdGroupWebsiteTargetingMap : EntityTypeConfiguration<AdGroupWebsiteTargeting>
    {
        public AdGroupWebsiteTargetingMap()
            : this("dbo")
        {
        }
 
        public AdGroupWebsiteTargetingMap(string schema)
        {
            ToTable(schema + ".AdGroupWebsiteTargeting");
            HasKey(x => new { x.BuyerAccountId, x.CampaignId, x.AdGroupId, x.InventoryId, x.PartnerId, x.PublisherId, x.PublisherName, x.WebsiteId, x.WebsiteUrl, x.IsTargeted, x.PackageInstalled });

            Property(x => x.BuyerAccountId).HasColumnName("BuyerAccountID").IsRequired().HasColumnType("int");
            Property(x => x.CampaignId).HasColumnName("CampaignID").IsRequired().HasColumnType("int");
            Property(x => x.AdGroupId).HasColumnName("AdGroupID").IsRequired().HasColumnType("int");
            Property(x => x.InventoryId).HasColumnName("InventoryID").IsRequired().HasColumnType("bigint");
            Property(x => x.PartnerId).HasColumnName("PartnerID").IsRequired().HasColumnType("int");
            Property(x => x.PartnerName).HasColumnName("PartnerName").IsOptional().HasColumnType("nvarchar").HasMaxLength(50);
            Property(x => x.PublisherId).HasColumnName("PublisherID").IsRequired().HasColumnType("int");
            Property(x => x.PublisherName).HasColumnName("PublisherName").IsRequired().HasColumnType("nvarchar").HasMaxLength(255);
            Property(x => x.WebsiteId).HasColumnName("WebsiteID").IsRequired().HasColumnType("bigint");
            Property(x => x.WebsiteUrl).HasColumnName("WebsiteUrl").IsRequired().HasColumnType("nvarchar").HasMaxLength(450);
            Property(x => x.IsTargeted).HasColumnName("IsTargeted").IsRequired().HasColumnType("int");
            Property(x => x.PackageInstalled).HasColumnName("PackageInstalled").IsRequired().HasColumnType("int");
            Property(x => x.Bids).HasColumnName("Bids").IsOptional().HasColumnType("bigint");
            Property(x => x.Impressions).HasColumnName("Impressions").IsOptional().HasColumnType("bigint");
            Property(x => x.Clicks).HasColumnName("Clicks").IsOptional().HasColumnType("bigint");
            Property(x => x.Conversions).HasColumnName("Conversions").IsOptional().HasColumnType("bigint");
            Property(x => x.PostViewConversions).HasColumnName("PostViewConversions").IsOptional().HasColumnType("bigint");
            Property(x => x.PostClickConversions).HasColumnName("PostClickConversions").IsOptional().HasColumnType("bigint");
            Property(x => x.SpendLocalMicros).HasColumnName("SpendLocalMicros").IsOptional().HasColumnType("bigint");
            Property(x => x.Spend).HasColumnName("Spend").IsOptional().HasColumnType("money").HasPrecision(19,4);
            Property(x => x.ClientCostLocalMicros).HasColumnName("ClientCostLocalMicros").IsOptional().HasColumnType("decimal").HasPrecision(38,4);
            Property(x => x.ClientCostDollars).HasColumnName("ClientCostDollars").IsOptional().HasColumnType("money").HasPrecision(19,4);
            Property(x => x.MediaCostLocalMicros).HasColumnName("MediaCostLocalMicros").IsOptional().HasColumnType("bigint");
            Property(x => x.DataCostLocalMicros).HasColumnName("DataCostLocalMicros").IsOptional().HasColumnType("bigint");
            Property(x => x.MediaClientCostLocalMicros).HasColumnName("MediaClientCostLocalMicros").IsOptional().HasColumnType("decimal").HasPrecision(38,4);
            Property(x => x.DataClientCostLocalMicros).HasColumnName("DataClientCostLocalMicros").IsOptional().HasColumnType("decimal").HasPrecision(38,4);
            Property(x => x.AdSlotDurationInSeconds).HasColumnName("AdSlotDurationInSeconds").IsOptional().HasColumnType("bigint");
            Property(x => x.RawViews).HasColumnName("RawViews").IsOptional().HasColumnType("bigint");
            Property(x => x.IabViews).HasColumnName("IabViews").IsOptional().HasColumnType("bigint");
            Property(x => x.ViewDurationInSeconds).HasColumnName("ViewDurationInSeconds").IsOptional().HasColumnType("bigint");
            Property(x => x.Ctr).HasColumnName("CTR").IsOptional().HasColumnType("float");
            Property(x => x.Cpm).HasColumnName("CPM").IsOptional().HasColumnType("decimal").HasPrecision(19,4);
            Property(x => x.Cpc).HasColumnName("CPC").IsOptional().HasColumnType("decimal").HasPrecision(19,4);
            Property(x => x.Cpa).HasColumnName("CPA").IsOptional().HasColumnType("decimal").HasPrecision(19,4);
            Property(x => x.ClientCostCpm).HasColumnName("ClientCostCPM").IsOptional().HasColumnType("decimal").HasPrecision(19,4);
            Property(x => x.ClientCostCpc).HasColumnName("ClientCostCPC").IsOptional().HasColumnType("decimal").HasPrecision(19,4);
            Property(x => x.ClientCostCpa).HasColumnName("ClientCostCPA").IsOptional().HasColumnType("decimal").HasPrecision(19,4);
            Property(x => x.Cpms).HasColumnName("CPMs").IsOptional().HasColumnType("decimal").HasPrecision(38,14);
            Property(x => x.ClientCostCpms).HasColumnName("ClientCostCpms").IsOptional().HasColumnType("decimal").HasPrecision(38,14);
            Property(x => x.Cps).HasColumnName("CPS").IsOptional().HasColumnType("decimal").HasPrecision(38,14);
            Property(x => x.ClientCostCps).HasColumnName("ClientCostCps").IsOptional().HasColumnType("decimal").HasPrecision(38,14);
            Property(x => x.ViewableRatio).HasColumnName("ViewableRatio").IsOptional().HasColumnType("float");
            InitializePartial();
        }
        partial void InitializePartial();
    }

    // AdLookup
    internal partial class AdLookupMap : EntityTypeConfiguration<AdLookup>
    {
        public AdLookupMap()
            : this("analytics")
        {
        }
 
        public AdLookupMap(string schema)
        {
            ToTable(schema + ".AdLookup");
            HasKey(x => new { x.PlacementId, x.AdGroupId, x.AdGroupBudget, x.GoalTypeId, x.GoalTargetRate, x.CampaignId, x.AdvertiserProductId, x.ProductCategoryId, x.IndustryCategoryId, x.AdvertiserId, x.BuyerAccountId, x.CurrencyName, x.MinutesOffset, x.CampaignStatusName, x.CreativeId });

            Property(x => x.PlacementId).HasColumnName("PlacementID").IsRequired().HasColumnType("int");
            Property(x => x.RtbAdId).HasColumnName("RtbAdID").IsOptional().IsUnicode(false).HasColumnType("varchar").HasMaxLength(24);
            Property(x => x.AdName).HasColumnName("AdName").IsOptional().HasColumnType("nvarchar").HasMaxLength(4000);
            Property(x => x.DestinationUrl).HasColumnName("DestinationUrl").IsOptional().HasColumnType("nvarchar").HasMaxLength(4000);
            Property(x => x.Width).HasColumnName("Width").IsOptional().HasColumnType("int");
            Property(x => x.Height).HasColumnName("Height").IsOptional().HasColumnType("int");
            Property(x => x.AdGroupId).HasColumnName("AdGroupID").IsRequired().HasColumnType("int");
            Property(x => x.RtbAdGroupId).HasColumnName("RtbAdGroupID").IsOptional().IsUnicode(false).HasColumnType("varchar").HasMaxLength(24);
            Property(x => x.AdGroupName).HasColumnName("AdGroupName").IsOptional().HasColumnType("nvarchar").HasMaxLength(4000);
            Property(x => x.AdGroupBudget).HasColumnName("AdGroupBudget").IsRequired().HasColumnType("money").HasPrecision(19,4);
            Property(x => x.GoalTypeId).HasColumnName("GoalTypeID").IsRequired().HasColumnType("int");
            Property(x => x.GoalTargetRate).HasColumnName("GoalTargetRate").IsRequired().HasColumnType("money").HasPrecision(19,4);
            Property(x => x.CampaignId).HasColumnName("CampaignID").IsRequired().HasColumnType("int");
            Property(x => x.RtbCampaignId).HasColumnName("RtbCampaignID").IsOptional().IsUnicode(false).HasColumnType("varchar").HasMaxLength(24);
            Property(x => x.CampaignName).HasColumnName("CampaignName").IsOptional().HasColumnType("nvarchar").HasMaxLength(4000);
            Property(x => x.AgencyReference).HasColumnName("AgencyReference").IsOptional().HasColumnType("nvarchar").HasMaxLength(4000);
            Property(x => x.UtcStartDateTime).HasColumnName("UtcStartDateTime").IsOptional().HasColumnType("datetime");
            Property(x => x.UtcEndDateTime).HasColumnName("UtcEndDateTime").IsOptional().HasColumnType("datetime");
            Property(x => x.CampaignBudgetDouble).HasColumnName("CampaignBudgetDouble").IsOptional().HasColumnType("bigint");
            Property(x => x.AdvertiserProductId).HasColumnName("AdvertiserProductID").IsRequired().HasColumnType("int");
            Property(x => x.ProductName).HasColumnName("ProductName").IsOptional().HasColumnType("nvarchar").HasMaxLength(4000);
            Property(x => x.ProductCategoryId).HasColumnName("ProductCategoryID").IsRequired().HasColumnType("int");
            Property(x => x.ProductCategoryName).HasColumnName("ProductCategoryName").IsOptional().HasColumnType("nvarchar").HasMaxLength(4000);
            Property(x => x.IndustryCategoryId).HasColumnName("IndustryCategoryID").IsRequired().HasColumnType("int");
            Property(x => x.IndustryCategoryName).HasColumnName("IndustryCategoryName").IsOptional().HasColumnType("nvarchar").HasMaxLength(4000);
            Property(x => x.AdvertiserId).HasColumnName("AdvertiserID").IsRequired().HasColumnType("int");
            Property(x => x.AdvertiserName).HasColumnName("AdvertiserName").IsOptional().HasColumnType("nvarchar").HasMaxLength(4000);
            Property(x => x.BuyerAccountId).HasColumnName("BuyerAccountID").IsRequired().HasColumnType("int");
            Property(x => x.CompanyName).HasColumnName("CompanyName").IsOptional().HasColumnType("nvarchar").HasMaxLength(4000);
            Property(x => x.BuyingGroupName).HasColumnName("BuyingGroupName").IsOptional().HasColumnType("nvarchar").HasMaxLength(4000);
            Property(x => x.CurrencyCode).HasColumnName("CurrencyCode").IsOptional().IsFixedLength().IsUnicode(false).HasColumnType("char").HasMaxLength(3);
            Property(x => x.CurrencyName).HasColumnName("CurrencyName").IsRequired().HasColumnType("nvarchar").HasMaxLength(50);
            Property(x => x.LocalToUsdRate).HasColumnName("LocalToUSDRate").IsOptional().HasColumnType("decimal").HasPrecision(18,6);
            Property(x => x.TimeZoneCode).HasColumnName("TimeZoneCode").IsOptional().HasColumnType("nvarchar").HasMaxLength(150);
            Property(x => x.MinutesOffset).HasColumnName("MinutesOffset").IsRequired().HasColumnType("int");
            Property(x => x.CampaignStatusName).HasColumnName("CampaignStatusName").IsRequired().HasColumnType("nvarchar").HasMaxLength(50);
            Property(x => x.CreativeId).HasColumnName("CreativeID").IsRequired().HasColumnType("int");
            InitializePartial();
        }
        partial void InitializePartial();
    }

    // AdPartner
    internal partial class AdPartnerMap : EntityTypeConfiguration<AdPartner>
    {
        public AdPartnerMap()
            : this("analytics")
        {
        }
 
        public AdPartnerMap(string schema)
        {
            ToTable(schema + ".AdPartner");
            HasKey(x => new { x.BuyerAccountId, x.CampaignId, x.AdGroupId, x.PlacementId, x.PartnerId, x.UtcDate, x.LocalDate, x.UtcDateTime, x.LocalDateTime, x.Bids, x.Impressions, x.Clicks, x.Conversions, x.PostViewConversions, x.PostClickConversions, x.MediaCostUsdMicros, x.MediaCostLocalMicros, x.DataCostLocalMicros, x.IsBilled, x.FraudReasonId });

            Property(x => x.BuyerAccountId).HasColumnName("BuyerAccountID").IsRequired().HasColumnType("int");
            Property(x => x.CampaignId).HasColumnName("CampaignID").IsRequired().HasColumnType("int");
            Property(x => x.AdGroupId).HasColumnName("AdGroupID").IsRequired().HasColumnType("int");
            Property(x => x.PlacementId).HasColumnName("PlacementID").IsRequired().HasColumnType("int");
            Property(x => x.PartnerId).HasColumnName("PartnerID").IsRequired().HasColumnType("int");
            Property(x => x.UtcDate).HasColumnName("UtcDate").IsRequired().HasColumnType("date");
            Property(x => x.LocalDate).HasColumnName("LocalDate").IsRequired().HasColumnType("date");
            Property(x => x.UtcDateTime).HasColumnName("UtcDateTime").IsRequired().HasColumnType("datetime");
            Property(x => x.LocalDateTime).HasColumnName("LocalDateTime").IsRequired().HasColumnType("datetime");
            Property(x => x.Bids).HasColumnName("Bids").IsRequired().HasColumnType("bigint");
            Property(x => x.Impressions).HasColumnName("Impressions").IsRequired().HasColumnType("bigint");
            Property(x => x.Clicks).HasColumnName("Clicks").IsRequired().HasColumnType("bigint");
            Property(x => x.Conversions).HasColumnName("Conversions").IsRequired().HasColumnType("bigint");
            Property(x => x.PostViewConversions).HasColumnName("PostViewConversions").IsRequired().HasColumnType("bigint");
            Property(x => x.PostClickConversions).HasColumnName("PostClickConversions").IsRequired().HasColumnType("bigint");
            Property(x => x.MediaCostUsdMicros).HasColumnName("MediaCostUsdMicros").IsRequired().HasColumnType("bigint");
            Property(x => x.MediaCostLocalMicros).HasColumnName("MediaCostLocalMicros").IsRequired().HasColumnType("bigint");
            Property(x => x.DataCostLocalMicros).HasColumnName("DataCostLocalMicros").IsRequired().HasColumnType("bigint");
            Property(x => x.IsBilled).HasColumnName("IsBilled").IsRequired().HasColumnType("bit");
            Property(x => x.FraudReasonId).HasColumnName("FraudReasonID").IsRequired().HasColumnType("int");
            Property(x => x.FeesUsdSuperMicros).HasColumnName("FeesUsdSuperMicros").IsOptional().HasColumnType("bigint");
            Property(x => x.FeesLocalSuperMicros).HasColumnName("FeesLocalSuperMicros").IsOptional().HasColumnType("bigint");
            Property(x => x.AdSlotDurationInSeconds).HasColumnName("AdSlotDurationInSeconds").IsOptional().HasColumnType("bigint");
            Property(x => x.RawViews).HasColumnName("RawViews").IsOptional().HasColumnType("bigint");
            Property(x => x.IabViews).HasColumnName("IabViews").IsOptional().HasColumnType("bigint");
            Property(x => x.ViewDurationInSeconds).HasColumnName("ViewDurationInSeconds").IsOptional().HasColumnType("bigint");
            InitializePartial();
        }
        partial void InitializePartial();
    }

    // AdPartnerCombined
    internal partial class AdPartnerCombinedMap : EntityTypeConfiguration<AdPartnerCombined>
    {
        public AdPartnerCombinedMap()
            : this("analytics")
        {
        }
 
        public AdPartnerCombinedMap(string schema)
        {
            ToTable(schema + ".AdPartnerCombined");
            HasKey(x => new { x.BuyerAccountId, x.CampaignId, x.AdGroupId, x.PlacementId, x.PartnerId, x.UtcDate, x.LocalDate, x.UtcDateTime, x.LocalDateTime, x.Bids, x.Impressions, x.Clicks, x.Conversions, x.PostViewConversions, x.PostClickConversions, x.MediaCostUsdMicros, x.MediaCostLocalMicros, x.DataCostLocalMicros, x.IsBilled, x.FraudReasonId });

            Property(x => x.BuyerAccountId).HasColumnName("BuyerAccountID").IsRequired().HasColumnType("int");
            Property(x => x.CampaignId).HasColumnName("CampaignID").IsRequired().HasColumnType("int");
            Property(x => x.AdGroupId).HasColumnName("AdGroupID").IsRequired().HasColumnType("int");
            Property(x => x.PlacementId).HasColumnName("PlacementID").IsRequired().HasColumnType("int");
            Property(x => x.PartnerId).HasColumnName("PartnerID").IsRequired().HasColumnType("int");
            Property(x => x.UtcDate).HasColumnName("UtcDate").IsRequired().HasColumnType("date");
            Property(x => x.LocalDate).HasColumnName("LocalDate").IsRequired().HasColumnType("date");
            Property(x => x.UtcDateTime).HasColumnName("UtcDateTime").IsRequired().HasColumnType("datetime");
            Property(x => x.LocalDateTime).HasColumnName("LocalDateTime").IsRequired().HasColumnType("datetime");
            Property(x => x.Bids).HasColumnName("Bids").IsRequired().HasColumnType("bigint");
            Property(x => x.Impressions).HasColumnName("Impressions").IsRequired().HasColumnType("bigint");
            Property(x => x.Clicks).HasColumnName("Clicks").IsRequired().HasColumnType("bigint");
            Property(x => x.Conversions).HasColumnName("Conversions").IsRequired().HasColumnType("bigint");
            Property(x => x.PostViewConversions).HasColumnName("PostViewConversions").IsRequired().HasColumnType("bigint");
            Property(x => x.PostClickConversions).HasColumnName("PostClickConversions").IsRequired().HasColumnType("bigint");
            Property(x => x.MediaCostUsdMicros).HasColumnName("MediaCostUsdMicros").IsRequired().HasColumnType("bigint");
            Property(x => x.MediaCostLocalMicros).HasColumnName("MediaCostLocalMicros").IsRequired().HasColumnType("bigint");
            Property(x => x.DataCostLocalMicros).HasColumnName("DataCostLocalMicros").IsRequired().HasColumnType("bigint");
            Property(x => x.IsBilled).HasColumnName("IsBilled").IsRequired().HasColumnType("bit");
            Property(x => x.FraudReasonId).HasColumnName("FraudReasonID").IsRequired().HasColumnType("int");
            Property(x => x.FeesUsdSuperMicros).HasColumnName("FeesUsdSuperMicros").IsOptional().HasColumnType("bigint");
            Property(x => x.FeesLocalSuperMicros).HasColumnName("FeesLocalSuperMicros").IsOptional().HasColumnType("bigint");
            Property(x => x.AdSlotDurationInSeconds).HasColumnName("AdSlotDurationInSeconds").IsOptional().HasColumnType("bigint");
            Property(x => x.RawViews).HasColumnName("RawViews").IsOptional().HasColumnType("bigint");
            Property(x => x.IabViews).HasColumnName("IabViews").IsOptional().HasColumnType("bigint");
            Property(x => x.ViewDurationInSeconds).HasColumnName("ViewDurationInSeconds").IsOptional().HasColumnType("bigint");
            InitializePartial();
        }
        partial void InitializePartial();
    }

    // AdPartnerCombinedValidOnly
    internal partial class AdPartnerCombinedValidOnlyMap : EntityTypeConfiguration<AdPartnerCombinedValidOnly>
    {
        public AdPartnerCombinedValidOnlyMap()
            : this("analytics")
        {
        }
 
        public AdPartnerCombinedValidOnlyMap(string schema)
        {
            ToTable(schema + ".AdPartnerCombinedValidOnly");
            HasKey(x => new { x.BuyerAccountId, x.CampaignId, x.AdGroupId, x.PlacementId, x.PartnerId, x.UtcDate, x.LocalDate, x.UtcDateTime, x.LocalDateTime, x.Bids, x.Impressions, x.Clicks, x.Conversions, x.PostViewConversions, x.PostClickConversions, x.MediaCostUsdMicros, x.MediaCostLocalMicros, x.DataCostLocalMicros, x.IsBilled, x.FraudReasonId });

            Property(x => x.BuyerAccountId).HasColumnName("BuyerAccountID").IsRequired().HasColumnType("int");
            Property(x => x.CampaignId).HasColumnName("CampaignID").IsRequired().HasColumnType("int");
            Property(x => x.AdGroupId).HasColumnName("AdGroupID").IsRequired().HasColumnType("int");
            Property(x => x.PlacementId).HasColumnName("PlacementID").IsRequired().HasColumnType("int");
            Property(x => x.PartnerId).HasColumnName("PartnerID").IsRequired().HasColumnType("int");
            Property(x => x.UtcDate).HasColumnName("UtcDate").IsRequired().HasColumnType("date");
            Property(x => x.LocalDate).HasColumnName("LocalDate").IsRequired().HasColumnType("date");
            Property(x => x.UtcDateTime).HasColumnName("UtcDateTime").IsRequired().HasColumnType("datetime");
            Property(x => x.LocalDateTime).HasColumnName("LocalDateTime").IsRequired().HasColumnType("datetime");
            Property(x => x.Bids).HasColumnName("Bids").IsRequired().HasColumnType("bigint");
            Property(x => x.Impressions).HasColumnName("Impressions").IsRequired().HasColumnType("bigint");
            Property(x => x.Clicks).HasColumnName("Clicks").IsRequired().HasColumnType("bigint");
            Property(x => x.Conversions).HasColumnName("Conversions").IsRequired().HasColumnType("bigint");
            Property(x => x.PostViewConversions).HasColumnName("PostViewConversions").IsRequired().HasColumnType("bigint");
            Property(x => x.PostClickConversions).HasColumnName("PostClickConversions").IsRequired().HasColumnType("bigint");
            Property(x => x.MediaCostUsdMicros).HasColumnName("MediaCostUsdMicros").IsRequired().HasColumnType("bigint");
            Property(x => x.MediaCostLocalMicros).HasColumnName("MediaCostLocalMicros").IsRequired().HasColumnType("bigint");
            Property(x => x.DataCostLocalMicros).HasColumnName("DataCostLocalMicros").IsRequired().HasColumnType("bigint");
            Property(x => x.IsBilled).HasColumnName("IsBilled").IsRequired().HasColumnType("bit");
            Property(x => x.FraudReasonId).HasColumnName("FraudReasonID").IsRequired().HasColumnType("int");
            Property(x => x.FeesUsdSuperMicros).HasColumnName("FeesUsdSuperMicros").IsOptional().HasColumnType("bigint");
            Property(x => x.FeesLocalSuperMicros).HasColumnName("FeesLocalSuperMicros").IsOptional().HasColumnType("bigint");
            Property(x => x.AdSlotDurationInSeconds).HasColumnName("AdSlotDurationInSeconds").IsOptional().HasColumnType("bigint");
            Property(x => x.RawViews).HasColumnName("RawViews").IsOptional().HasColumnType("bigint");
            Property(x => x.IabViews).HasColumnName("IabViews").IsOptional().HasColumnType("bigint");
            Property(x => x.ViewDurationInSeconds).HasColumnName("ViewDurationInSeconds").IsOptional().HasColumnType("bigint");
            InitializePartial();
        }
        partial void InitializePartial();
    }

    // AdPartnerException
    internal partial class AdPartnerExceptionMap : EntityTypeConfiguration<AdPartnerException>
    {
        public AdPartnerExceptionMap()
            : this("analytics")
        {
        }
 
        public AdPartnerExceptionMap(string schema)
        {
            ToTable(schema + ".AdPartnerException");
            HasKey(x => new { x.BuyerAccountId, x.CampaignId, x.AdGroupId, x.PlacementId, x.PartnerId, x.UtcDateTime, x.LocalDateTime, x.FraudReasonId, x.Bids, x.Impressions, x.Clicks, x.Conversions, x.PostViewConversions, x.PostClickConversions, x.MediaCostUsdMicros, x.MediaCostLocalMicros, x.DataCostLocalMicros, x.FeesUsdSuperMicros, x.FeesLocalSuperMicros, x.IsBilled });

            Property(x => x.BuyerAccountId).HasColumnName("BuyerAccountID").IsRequired().HasColumnType("int");
            Property(x => x.CampaignId).HasColumnName("CampaignID").IsRequired().HasColumnType("int");
            Property(x => x.AdGroupId).HasColumnName("AdGroupID").IsRequired().HasColumnType("int");
            Property(x => x.PlacementId).HasColumnName("PlacementID").IsRequired().HasColumnType("int");
            Property(x => x.PartnerId).HasColumnName("PartnerID").IsRequired().HasColumnType("int");
            Property(x => x.UtcDateTime).HasColumnName("UtcDateTime").IsRequired().HasColumnType("datetime");
            Property(x => x.LocalDateTime).HasColumnName("LocalDateTime").IsRequired().HasColumnType("datetime");
            Property(x => x.FraudReasonId).HasColumnName("FraudReasonID").IsRequired().HasColumnType("int");
            Property(x => x.Bids).HasColumnName("Bids").IsRequired().HasColumnType("bigint");
            Property(x => x.Impressions).HasColumnName("Impressions").IsRequired().HasColumnType("bigint");
            Property(x => x.Clicks).HasColumnName("Clicks").IsRequired().HasColumnType("bigint");
            Property(x => x.Conversions).HasColumnName("Conversions").IsRequired().HasColumnType("bigint");
            Property(x => x.PostViewConversions).HasColumnName("PostViewConversions").IsRequired().HasColumnType("bigint");
            Property(x => x.PostClickConversions).HasColumnName("PostClickConversions").IsRequired().HasColumnType("bigint");
            Property(x => x.MediaCostUsdMicros).HasColumnName("MediaCostUsdMicros").IsRequired().HasColumnType("bigint");
            Property(x => x.MediaCostLocalMicros).HasColumnName("MediaCostLocalMicros").IsRequired().HasColumnType("bigint");
            Property(x => x.DataCostLocalMicros).HasColumnName("DataCostLocalMicros").IsRequired().HasColumnType("bigint");
            Property(x => x.FeesUsdSuperMicros).HasColumnName("FeesUsdSuperMicros").IsRequired().HasColumnType("bigint");
            Property(x => x.FeesLocalSuperMicros).HasColumnName("FeesLocalSuperMicros").IsRequired().HasColumnType("bigint");
            Property(x => x.IsBilled).HasColumnName("IsBilled").IsRequired().HasColumnType("bit");
            Property(x => x.AdSlotDurationInSeconds).HasColumnName("AdSlotDurationInSeconds").IsOptional().HasColumnType("bigint");
            Property(x => x.RawViews).HasColumnName("RawViews").IsOptional().HasColumnType("bigint");
            Property(x => x.IabViews).HasColumnName("IabViews").IsOptional().HasColumnType("bigint");
            Property(x => x.ViewDurationInSeconds).HasColumnName("ViewDurationInSeconds").IsOptional().HasColumnType("bigint");
            InitializePartial();
        }
        partial void InitializePartial();
    }

    // AdPartnerExceptionReportID
    internal partial class AdPartnerExceptionReportIdMap : EntityTypeConfiguration<AdPartnerExceptionReportId>
    {
        public AdPartnerExceptionReportIdMap()
            : this("analytics")
        {
        }
 
        public AdPartnerExceptionReportIdMap(string schema)
        {
            ToTable(schema + ".AdPartnerExceptionReportID");
            HasKey(x => new { x.BuyerAccountId, x.CampaignId, x.AdGroupId, x.PlacementId, x.PartnerId, x.UtcDateTime, x.LocalDateTime, x.FraudReasonId, x.Bids, x.Impressions, x.Clicks, x.Conversions, x.PostViewConversions, x.PostClickConversions, x.MediaCostUsdMicros, x.MediaCostLocalMicros, x.DataCostLocalMicros, x.FeesUsdSuperMicros, x.FeesLocalSuperMicros, x.IsBilled, x.ReportId });

            Property(x => x.BuyerAccountId).HasColumnName("BuyerAccountID").IsRequired().HasColumnType("int");
            Property(x => x.CampaignId).HasColumnName("CampaignID").IsRequired().HasColumnType("int");
            Property(x => x.AdGroupId).HasColumnName("AdGroupID").IsRequired().HasColumnType("int");
            Property(x => x.PlacementId).HasColumnName("PlacementID").IsRequired().HasColumnType("int");
            Property(x => x.PartnerId).HasColumnName("PartnerID").IsRequired().HasColumnType("int");
            Property(x => x.UtcDateTime).HasColumnName("UtcDateTime").IsRequired().HasColumnType("datetime");
            Property(x => x.LocalDateTime).HasColumnName("LocalDateTime").IsRequired().HasColumnType("datetime");
            Property(x => x.FraudReasonId).HasColumnName("FraudReasonID").IsRequired().HasColumnType("int");
            Property(x => x.Bids).HasColumnName("Bids").IsRequired().HasColumnType("bigint");
            Property(x => x.Impressions).HasColumnName("Impressions").IsRequired().HasColumnType("bigint");
            Property(x => x.Clicks).HasColumnName("Clicks").IsRequired().HasColumnType("bigint");
            Property(x => x.Conversions).HasColumnName("Conversions").IsRequired().HasColumnType("bigint");
            Property(x => x.PostViewConversions).HasColumnName("PostViewConversions").IsRequired().HasColumnType("bigint");
            Property(x => x.PostClickConversions).HasColumnName("PostClickConversions").IsRequired().HasColumnType("bigint");
            Property(x => x.MediaCostUsdMicros).HasColumnName("MediaCostUsdMicros").IsRequired().HasColumnType("bigint");
            Property(x => x.MediaCostLocalMicros).HasColumnName("MediaCostLocalMicros").IsRequired().HasColumnType("bigint");
            Property(x => x.DataCostLocalMicros).HasColumnName("DataCostLocalMicros").IsRequired().HasColumnType("bigint");
            Property(x => x.FeesUsdSuperMicros).HasColumnName("FeesUsdSuperMicros").IsRequired().HasColumnType("bigint");
            Property(x => x.FeesLocalSuperMicros).HasColumnName("FeesLocalSuperMicros").IsRequired().HasColumnType("bigint");
            Property(x => x.IsBilled).HasColumnName("IsBilled").IsRequired().HasColumnType("bit");
            Property(x => x.ReportId).HasColumnName("ReportID").IsRequired().HasColumnType("bigint");
            Property(x => x.AdSlotDurationInSeconds).HasColumnName("AdSlotDurationInSeconds").IsOptional().HasColumnType("bigint");
            Property(x => x.RawViews).HasColumnName("RawViews").IsOptional().HasColumnType("bigint");
            Property(x => x.IabViews).HasColumnName("IabViews").IsOptional().HasColumnType("bigint");
            Property(x => x.ViewDurationInSeconds).HasColumnName("ViewDurationInSeconds").IsOptional().HasColumnType("bigint");
            InitializePartial();
        }
        partial void InitializePartial();
    }

    // AdPartnerImport
    internal partial class AdPartnerImportMap : EntityTypeConfiguration<AdPartnerImport>
    {
        public AdPartnerImportMap()
            : this("analytics")
        {
        }
 
        public AdPartnerImportMap(string schema)
        {
            ToTable(schema + ".AdPartnerImport");
            HasKey(x => new { x.BuyerAccountId, x.CampaignId, x.AdGroupId, x.PlacementId, x.PartnerId, x.UtcDateTime, x.LocalDateTime, x.FraudReasonId, x.Bids, x.Impressions, x.Clicks, x.Conversions, x.PostViewConversions, x.PostClickConversions, x.MediaCostUsdMicros, x.MediaCostLocalMicros, x.DataCostLocalMicros, x.FeesUsdSuperMicros, x.FeesLocalSuperMicros, x.IsBilled });

            Property(x => x.BuyerAccountId).HasColumnName("BuyerAccountID").IsRequired().HasColumnType("int");
            Property(x => x.CampaignId).HasColumnName("CampaignID").IsRequired().HasColumnType("int");
            Property(x => x.AdGroupId).HasColumnName("AdGroupID").IsRequired().HasColumnType("int");
            Property(x => x.PlacementId).HasColumnName("PlacementID").IsRequired().HasColumnType("int");
            Property(x => x.PartnerId).HasColumnName("PartnerID").IsRequired().HasColumnType("int");
            Property(x => x.UtcDateTime).HasColumnName("UtcDateTime").IsRequired().HasColumnType("datetime");
            Property(x => x.LocalDateTime).HasColumnName("LocalDateTime").IsRequired().HasColumnType("datetime");
            Property(x => x.FraudReasonId).HasColumnName("FraudReasonID").IsRequired().HasColumnType("int");
            Property(x => x.Bids).HasColumnName("Bids").IsRequired().HasColumnType("bigint");
            Property(x => x.Impressions).HasColumnName("Impressions").IsRequired().HasColumnType("bigint");
            Property(x => x.Clicks).HasColumnName("Clicks").IsRequired().HasColumnType("bigint");
            Property(x => x.Conversions).HasColumnName("Conversions").IsRequired().HasColumnType("bigint");
            Property(x => x.PostViewConversions).HasColumnName("PostViewConversions").IsRequired().HasColumnType("bigint");
            Property(x => x.PostClickConversions).HasColumnName("PostClickConversions").IsRequired().HasColumnType("bigint");
            Property(x => x.MediaCostUsdMicros).HasColumnName("MediaCostUsdMicros").IsRequired().HasColumnType("bigint");
            Property(x => x.MediaCostLocalMicros).HasColumnName("MediaCostLocalMicros").IsRequired().HasColumnType("bigint");
            Property(x => x.DataCostLocalMicros).HasColumnName("DataCostLocalMicros").IsRequired().HasColumnType("bigint");
            Property(x => x.FeesUsdSuperMicros).HasColumnName("FeesUsdSuperMicros").IsRequired().HasColumnType("bigint");
            Property(x => x.FeesLocalSuperMicros).HasColumnName("FeesLocalSuperMicros").IsRequired().HasColumnType("bigint");
            Property(x => x.IsBilled).HasColumnName("IsBilled").IsRequired().HasColumnType("bit");
            Property(x => x.AdSlotDurationInSeconds).HasColumnName("AdSlotDurationInSeconds").IsOptional().HasColumnType("bigint");
            Property(x => x.RawViews).HasColumnName("RawViews").IsOptional().HasColumnType("bigint");
            Property(x => x.IabViews).HasColumnName("IabViews").IsOptional().HasColumnType("bigint");
            Property(x => x.ViewDurationInSeconds).HasColumnName("ViewDurationInSeconds").IsOptional().HasColumnType("bigint");
            InitializePartial();
        }
        partial void InitializePartial();
    }

    // AdPartnerImportReportID
    internal partial class AdPartnerImportReportIdMap : EntityTypeConfiguration<AdPartnerImportReportId>
    {
        public AdPartnerImportReportIdMap()
            : this("analytics")
        {
        }
 
        public AdPartnerImportReportIdMap(string schema)
        {
            ToTable(schema + ".AdPartnerImportReportID");
            HasKey(x => new { x.BuyerAccountId, x.CampaignId, x.AdGroupId, x.PlacementId, x.PartnerId, x.UtcDateTime, x.LocalDateTime, x.FraudReasonId, x.Bids, x.Impressions, x.Clicks, x.Conversions, x.PostViewConversions, x.PostClickConversions, x.MediaCostUsdMicros, x.MediaCostLocalMicros, x.DataCostLocalMicros, x.FeesUsdSuperMicros, x.FeesLocalSuperMicros, x.IsBilled, x.ReportId });

            Property(x => x.BuyerAccountId).HasColumnName("BuyerAccountID").IsRequired().HasColumnType("int");
            Property(x => x.CampaignId).HasColumnName("CampaignID").IsRequired().HasColumnType("int");
            Property(x => x.AdGroupId).HasColumnName("AdGroupID").IsRequired().HasColumnType("int");
            Property(x => x.PlacementId).HasColumnName("PlacementID").IsRequired().HasColumnType("int");
            Property(x => x.PartnerId).HasColumnName("PartnerID").IsRequired().HasColumnType("int");
            Property(x => x.UtcDateTime).HasColumnName("UtcDateTime").IsRequired().HasColumnType("datetime");
            Property(x => x.LocalDateTime).HasColumnName("LocalDateTime").IsRequired().HasColumnType("datetime");
            Property(x => x.FraudReasonId).HasColumnName("FraudReasonID").IsRequired().HasColumnType("int");
            Property(x => x.Bids).HasColumnName("Bids").IsRequired().HasColumnType("bigint");
            Property(x => x.Impressions).HasColumnName("Impressions").IsRequired().HasColumnType("bigint");
            Property(x => x.Clicks).HasColumnName("Clicks").IsRequired().HasColumnType("bigint");
            Property(x => x.Conversions).HasColumnName("Conversions").IsRequired().HasColumnType("bigint");
            Property(x => x.PostViewConversions).HasColumnName("PostViewConversions").IsRequired().HasColumnType("bigint");
            Property(x => x.PostClickConversions).HasColumnName("PostClickConversions").IsRequired().HasColumnType("bigint");
            Property(x => x.MediaCostUsdMicros).HasColumnName("MediaCostUsdMicros").IsRequired().HasColumnType("bigint");
            Property(x => x.MediaCostLocalMicros).HasColumnName("MediaCostLocalMicros").IsRequired().HasColumnType("bigint");
            Property(x => x.DataCostLocalMicros).HasColumnName("DataCostLocalMicros").IsRequired().HasColumnType("bigint");
            Property(x => x.FeesUsdSuperMicros).HasColumnName("FeesUsdSuperMicros").IsRequired().HasColumnType("bigint");
            Property(x => x.FeesLocalSuperMicros).HasColumnName("FeesLocalSuperMicros").IsRequired().HasColumnType("bigint");
            Property(x => x.IsBilled).HasColumnName("IsBilled").IsRequired().HasColumnType("bit");
            Property(x => x.ReportId).HasColumnName("ReportID").IsRequired().HasColumnType("bigint");
            Property(x => x.AdSlotDurationInSeconds).HasColumnName("AdSlotDurationInSeconds").IsOptional().HasColumnType("bigint");
            Property(x => x.RawViews).HasColumnName("RawViews").IsOptional().HasColumnType("bigint");
            Property(x => x.IabViews).HasColumnName("IabViews").IsOptional().HasColumnType("bigint");
            Property(x => x.ViewDurationInSeconds).HasColumnName("ViewDurationInSeconds").IsOptional().HasColumnType("bigint");
            InitializePartial();
        }
        partial void InitializePartial();
    }

    // AdPartnerPerformance
    internal partial class AdPartnerPerformanceMap : EntityTypeConfiguration<AdPartnerPerformance>
    {
        public AdPartnerPerformanceMap()
            : this("analytics")
        {
        }
 
        public AdPartnerPerformanceMap(string schema)
        {
            ToTable(schema + ".AdPartnerPerformance");
            HasKey(x => new { x.BuyerAccountId, x.CampaignId, x.AdGroupId, x.PlacementId, x.PartnerId, x.UtcDate, x.LocalDate, x.UtcDateTime, x.LocalDateTime, x.Bids, x.Impressions, x.Clicks, x.Conversions, x.PostViewConversions, x.PostClickConversions, x.MediaCostLocalMicros, x.DataCostLocalMicros, x.MediaCostUsdMicros, x.IsBilled, x.FraudReasonId });

            Property(x => x.BuyerAccountId).HasColumnName("BuyerAccountID").IsRequired().HasColumnType("int");
            Property(x => x.CampaignId).HasColumnName("CampaignID").IsRequired().HasColumnType("int");
            Property(x => x.AdGroupId).HasColumnName("AdGroupID").IsRequired().HasColumnType("int");
            Property(x => x.PlacementId).HasColumnName("PlacementID").IsRequired().HasColumnType("int");
            Property(x => x.PartnerId).HasColumnName("PartnerID").IsRequired().HasColumnType("int");
            Property(x => x.UtcDate).HasColumnName("UtcDate").IsRequired().HasColumnType("date");
            Property(x => x.LocalDate).HasColumnName("LocalDate").IsRequired().HasColumnType("date");
            Property(x => x.UtcDateTime).HasColumnName("UtcDateTime").IsRequired().HasColumnType("datetime");
            Property(x => x.LocalDateTime).HasColumnName("LocalDateTime").IsRequired().HasColumnType("datetime");
            Property(x => x.Bids).HasColumnName("Bids").IsRequired().HasColumnType("bigint");
            Property(x => x.Impressions).HasColumnName("Impressions").IsRequired().HasColumnType("bigint");
            Property(x => x.Clicks).HasColumnName("Clicks").IsRequired().HasColumnType("bigint");
            Property(x => x.Conversions).HasColumnName("Conversions").IsRequired().HasColumnType("bigint");
            Property(x => x.PostViewConversions).HasColumnName("PostViewConversions").IsRequired().HasColumnType("bigint");
            Property(x => x.PostClickConversions).HasColumnName("PostClickConversions").IsRequired().HasColumnType("bigint");
            Property(x => x.MediaCostLocalMicros).HasColumnName("MediaCostLocalMicros").IsRequired().HasColumnType("bigint");
            Property(x => x.DataCostLocalMicros).HasColumnName("DataCostLocalMicros").IsRequired().HasColumnType("bigint");
            Property(x => x.MediaCostUsdMicros).HasColumnName("MediaCostUsdMicros").IsRequired().HasColumnType("bigint");
            Property(x => x.IsBilled).HasColumnName("IsBilled").IsRequired().HasColumnType("bit");
            Property(x => x.FraudReasonId).HasColumnName("FraudReasonID").IsRequired().HasColumnType("int");
            Property(x => x.FeesUsdSuperMicros).HasColumnName("FeesUsdSuperMicros").IsOptional().HasColumnType("bigint");
            Property(x => x.FeesLocalSuperMicros).HasColumnName("FeesLocalSuperMicros").IsOptional().HasColumnType("bigint");
            Property(x => x.AdSlotDurationInSeconds).HasColumnName("AdSlotDurationInSeconds").IsOptional().HasColumnType("bigint");
            Property(x => x.RawViews).HasColumnName("RawViews").IsOptional().HasColumnType("bigint");
            Property(x => x.IabViews).HasColumnName("IabViews").IsOptional().HasColumnType("bigint");
            Property(x => x.ViewDurationInSeconds).HasColumnName("ViewDurationInSeconds").IsOptional().HasColumnType("bigint");
            InitializePartial();
        }
        partial void InitializePartial();
    }

    // AdPartnerReconciliation
    internal partial class AdPartnerReconciliationMap : EntityTypeConfiguration<AdPartnerReconciliation>
    {
        public AdPartnerReconciliationMap()
            : this("analytics")
        {
        }
 
        public AdPartnerReconciliationMap(string schema)
        {
            ToTable(schema + ".AdPartnerReconciliation");
            HasKey(x => new { x.BuyerAccountId, x.CampaignId, x.AdGroupId, x.PlacementId, x.PartnerId, x.UtcDate, x.LocalDate, x.UtcDateTime, x.LocalDateTime, x.Bids, x.Impressions, x.Clicks, x.Conversions, x.PostViewConversions, x.PostClickConversions, x.UsdSpend, x.MediaCostLocalMicros, x.DataCostLocalMicros, x.IsBilled });

            Property(x => x.BuyerAccountId).HasColumnName("BuyerAccountID").IsRequired().HasColumnType("int");
            Property(x => x.CampaignId).HasColumnName("CampaignID").IsRequired().HasColumnType("int");
            Property(x => x.AdGroupId).HasColumnName("AdGroupID").IsRequired().HasColumnType("int");
            Property(x => x.PlacementId).HasColumnName("PlacementID").IsRequired().HasColumnType("int");
            Property(x => x.PartnerId).HasColumnName("PartnerID").IsRequired().HasColumnType("int");
            Property(x => x.UtcDate).HasColumnName("UtcDate").IsRequired().HasColumnType("date");
            Property(x => x.LocalDate).HasColumnName("LocalDate").IsRequired().HasColumnType("date");
            Property(x => x.UtcDateTime).HasColumnName("UtcDateTime").IsRequired().HasColumnType("datetime");
            Property(x => x.LocalDateTime).HasColumnName("LocalDateTime").IsRequired().HasColumnType("datetime");
            Property(x => x.Bids).HasColumnName("Bids").IsRequired().HasColumnType("bigint");
            Property(x => x.Impressions).HasColumnName("Impressions").IsRequired().HasColumnType("bigint");
            Property(x => x.Clicks).HasColumnName("Clicks").IsRequired().HasColumnType("bigint");
            Property(x => x.Conversions).HasColumnName("Conversions").IsRequired().HasColumnType("bigint");
            Property(x => x.PostViewConversions).HasColumnName("PostViewConversions").IsRequired().HasColumnType("bigint");
            Property(x => x.PostClickConversions).HasColumnName("PostClickConversions").IsRequired().HasColumnType("bigint");
            Property(x => x.UsdSpend).HasColumnName("UsdSpend").IsRequired().HasColumnType("bigint");
            Property(x => x.MediaCostLocalMicros).HasColumnName("MediaCostLocalMicros").IsRequired().HasColumnType("bigint");
            Property(x => x.DataCostLocalMicros).HasColumnName("DataCostLocalMicros").IsRequired().HasColumnType("bigint");
            Property(x => x.IsBilled).HasColumnName("IsBilled").IsRequired().HasColumnType("bit");
            Property(x => x.AdSlotDurationInSeconds).HasColumnName("AdSlotDurationInSeconds").IsOptional().HasColumnType("bigint");
            Property(x => x.RawViews).HasColumnName("RawViews").IsOptional().HasColumnType("bigint");
            Property(x => x.IabViews).HasColumnName("IabViews").IsOptional().HasColumnType("bigint");
            Property(x => x.ViewDurationInSeconds).HasColumnName("ViewDurationInSeconds").IsOptional().HasColumnType("bigint");
            InitializePartial();
        }
        partial void InitializePartial();
    }

    // AdPartnerReportID
    internal partial class AdPartnerReportIdMap : EntityTypeConfiguration<AdPartnerReportId>
    {
        public AdPartnerReportIdMap()
            : this("analytics")
        {
        }
 
        public AdPartnerReportIdMap(string schema)
        {
            ToTable(schema + ".AdPartnerReportID");
            HasKey(x => new { x.BuyerAccountId, x.CampaignId, x.AdGroupId, x.PlacementId, x.PartnerId, x.UtcDate, x.LocalDate, x.UtcDateTime, x.LocalDateTime, x.Bids, x.Impressions, x.Clicks, x.Conversions, x.PostViewConversions, x.PostClickConversions, x.MediaCostUsdMicros, x.MediaCostLocalMicros, x.DataCostLocalMicros, x.IsBilled, x.FraudReasonId, x.ReportId });

            Property(x => x.BuyerAccountId).HasColumnName("BuyerAccountID").IsRequired().HasColumnType("int");
            Property(x => x.CampaignId).HasColumnName("CampaignID").IsRequired().HasColumnType("int");
            Property(x => x.AdGroupId).HasColumnName("AdGroupID").IsRequired().HasColumnType("int");
            Property(x => x.PlacementId).HasColumnName("PlacementID").IsRequired().HasColumnType("int");
            Property(x => x.PartnerId).HasColumnName("PartnerID").IsRequired().HasColumnType("int");
            Property(x => x.UtcDate).HasColumnName("UtcDate").IsRequired().HasColumnType("date");
            Property(x => x.LocalDate).HasColumnName("LocalDate").IsRequired().HasColumnType("date");
            Property(x => x.UtcDateTime).HasColumnName("UtcDateTime").IsRequired().HasColumnType("datetime");
            Property(x => x.LocalDateTime).HasColumnName("LocalDateTime").IsRequired().HasColumnType("datetime");
            Property(x => x.Bids).HasColumnName("Bids").IsRequired().HasColumnType("bigint");
            Property(x => x.Impressions).HasColumnName("Impressions").IsRequired().HasColumnType("bigint");
            Property(x => x.Clicks).HasColumnName("Clicks").IsRequired().HasColumnType("bigint");
            Property(x => x.Conversions).HasColumnName("Conversions").IsRequired().HasColumnType("bigint");
            Property(x => x.PostViewConversions).HasColumnName("PostViewConversions").IsRequired().HasColumnType("bigint");
            Property(x => x.PostClickConversions).HasColumnName("PostClickConversions").IsRequired().HasColumnType("bigint");
            Property(x => x.MediaCostUsdMicros).HasColumnName("MediaCostUsdMicros").IsRequired().HasColumnType("bigint");
            Property(x => x.MediaCostLocalMicros).HasColumnName("MediaCostLocalMicros").IsRequired().HasColumnType("bigint");
            Property(x => x.DataCostLocalMicros).HasColumnName("DataCostLocalMicros").IsRequired().HasColumnType("bigint");
            Property(x => x.IsBilled).HasColumnName("IsBilled").IsRequired().HasColumnType("bit");
            Property(x => x.FraudReasonId).HasColumnName("FraudReasonID").IsRequired().HasColumnType("int");
            Property(x => x.FeesUsdSuperMicros).HasColumnName("FeesUsdSuperMicros").IsOptional().HasColumnType("bigint");
            Property(x => x.FeesLocalSuperMicros).HasColumnName("FeesLocalSuperMicros").IsOptional().HasColumnType("bigint");
            Property(x => x.ReportId).HasColumnName("ReportID").IsRequired().HasColumnType("bigint");
            Property(x => x.AdSlotDurationInSeconds).HasColumnName("AdSlotDurationInSeconds").IsOptional().HasColumnType("bigint");
            Property(x => x.RawViews).HasColumnName("RawViews").IsOptional().HasColumnType("bigint");
            Property(x => x.IabViews).HasColumnName("IabViews").IsOptional().HasColumnType("bigint");
            Property(x => x.ViewDurationInSeconds).HasColumnName("ViewDurationInSeconds").IsOptional().HasColumnType("bigint");
            InitializePartial();
        }
        partial void InitializePartial();
    }

    // AdSlotLookup
    internal partial class AdSlotLookupMap : EntityTypeConfiguration<AdSlotLookup>
    {
        public AdSlotLookupMap()
            : this("analytics")
        {
        }
 
        public AdSlotLookupMap(string schema)
        {
            ToTable(schema + ".AdSlotLookup");
            HasKey(x => new { x.AdSlotId, x.DealKey, x.BuyerAccountId });

            Property(x => x.AdSlotId).HasColumnName("AdSlotID").IsRequired().HasColumnType("int");
            Property(x => x.DealKey).HasColumnName("DealKey").IsRequired().HasColumnType("nvarchar").HasMaxLength(50);
            Property(x => x.BuyerAccountId).HasColumnName("BuyerAccountID").IsRequired().HasColumnType("int");
            InitializePartial();
        }
        partial void InitializePartial();
    }

    // AdvertiserBILookup
    internal partial class AdvertiserBiLookupMap : EntityTypeConfiguration<AdvertiserBiLookup>
    {
        public AdvertiserBiLookupMap()
            : this("analytics")
        {
        }
 
        public AdvertiserBiLookupMap(string schema)
        {
            ToTable(schema + ".AdvertiserBILookup");
            HasKey(x => new { x.AdvertiserId, x.AdvertiserUuid, x.BuyerAccountId, x.AdvertiserName, x.IndustryCategoryId, x.AdTagServerId, x.PixelTagServerId, x.IsDeleted, x.UtcCreatedDateTime, x.UtcModifiedDateTime });

            Property(x => x.AdvertiserId).HasColumnName("AdvertiserID").IsRequired().HasColumnType("int").HasDatabaseGeneratedOption(DatabaseGeneratedOption.Identity);
            Property(x => x.AdvertiserUuid).HasColumnName("AdvertiserUuid").IsRequired().HasColumnType("uniqueidentifier");
            Property(x => x.BuyerAccountId).HasColumnName("BuyerAccountID").IsRequired().HasColumnType("int");
            Property(x => x.AdvertiserName).HasColumnName("AdvertiserName").IsRequired().HasColumnType("nvarchar").HasMaxLength(100);
            Property(x => x.AdvertiserHomepageUrl).HasColumnName("AdvertiserHomepageUrl").IsOptional().HasColumnType("nvarchar").HasMaxLength(200);
            Property(x => x.IndustryCategoryId).HasColumnName("IndustryCategoryID").IsRequired().HasColumnType("int");
            Property(x => x.AdTagServerId).HasColumnName("AdTagServerID").IsRequired().HasColumnType("int");
            Property(x => x.PixelTagServerId).HasColumnName("PixelTagServerID").IsRequired().HasColumnType("int");
            Property(x => x.IsDeleted).HasColumnName("IsDeleted").IsRequired().HasColumnType("bit");
            Property(x => x.UtcCreatedDateTime).HasColumnName("UtcCreatedDateTime").IsRequired().HasColumnType("datetime");
            Property(x => x.UtcModifiedDateTime).HasColumnName("UtcModifiedDateTime").IsRequired().HasColumnType("datetime");
            InitializePartial();
        }
        partial void InitializePartial();
    }

    // AdvertiserProductBILookup
    internal partial class AdvertiserProductBiLookupMap : EntityTypeConfiguration<AdvertiserProductBiLookup>
    {
        public AdvertiserProductBiLookupMap()
            : this("analytics")
        {
        }
 
        public AdvertiserProductBiLookupMap(string schema)
        {
            ToTable(schema + ".AdvertiserProductBILookup");
            HasKey(x => new { x.AdvertiserProductId, x.AdvertiserProductUuid, x.AdvertiserId, x.BuyerAccountId, x.IsDeleted, x.UtcCreatedDateTime, x.UtcModifiedDateTime, x.BrandSafetyModeId });

            Property(x => x.AdvertiserProductId).HasColumnName("AdvertiserProductID").IsRequired().HasColumnType("int").HasDatabaseGeneratedOption(DatabaseGeneratedOption.Identity);
            Property(x => x.AdvertiserProductUuid).HasColumnName("AdvertiserProductUuid").IsRequired().HasColumnType("uniqueidentifier");
            Property(x => x.AdvertiserId).HasColumnName("AdvertiserID").IsRequired().HasColumnType("int");
            Property(x => x.BuyerAccountId).HasColumnName("BuyerAccountID").IsRequired().HasColumnType("int");
            Property(x => x.ProductName).HasColumnName("ProductName").IsOptional().HasColumnType("nvarchar").HasMaxLength(100);
            Property(x => x.ProductCategoryId).HasColumnName("ProductCategoryID").IsOptional().HasColumnType("int");
            Property(x => x.AdvertiserProductHomepageUrl).HasColumnName("AdvertiserProductHomepageUrl").IsOptional().HasColumnType("nvarchar").HasMaxLength(200);
            Property(x => x.IsDeleted).HasColumnName("IsDeleted").IsRequired().HasColumnType("bit");
            Property(x => x.UtcCreatedDateTime).HasColumnName("UtcCreatedDateTime").IsRequired().HasColumnType("datetime");
            Property(x => x.UtcModifiedDateTime).HasColumnName("UtcModifiedDateTime").IsRequired().HasColumnType("datetime");
            Property(x => x.BrandSafetyModeId).HasColumnName("BrandSafetyModeID").IsRequired().HasColumnType("int");
            InitializePartial();
        }
        partial void InitializePartial();
    }

    // BrandSafetyLookup
    internal partial class BrandSafetyLookupMap : EntityTypeConfiguration<BrandSafetyLookup>
    {
        public BrandSafetyLookupMap()
            : this("analytics")
        {
        }
 
        public BrandSafetyLookupMap(string schema)
        {
            ToTable(schema + ".BrandSafetyLookup");
            HasKey(x => new { x.AdvertiserProductId, x.BrandSafetyTypeId, x.BrandSafetyLevelId });

            Property(x => x.AdvertiserProductId).HasColumnName("AdvertiserProductID").IsRequired().HasColumnType("int");
            Property(x => x.BrandSafetyTypeId).HasColumnName("BrandSafetyTypeID").IsRequired().HasColumnType("int");
            Property(x => x.BrandSafetyLevelId).HasColumnName("BrandSafetyLevelID").IsRequired().HasColumnType("int");
            InitializePartial();
        }
        partial void InitializePartial();
    }

    // BrandSafetySiteCounts
    internal partial class BrandSafetySiteCountMap : EntityTypeConfiguration<BrandSafetySiteCount>
    {
        public BrandSafetySiteCountMap()
            : this("analytics")
        {
        }
 
        public BrandSafetySiteCountMap(string schema)
        {
            ToTable(schema + ".BrandSafetySiteCounts");
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName("ID").IsRequired().HasColumnType("int").HasDatabaseGeneratedOption(DatabaseGeneratedOption.Identity);
            Property(x => x.AllSitesCount).HasColumnName("AllSitesCount").IsRequired().HasColumnType("bigint");
            Property(x => x.SystemBlackListedSitesCount).HasColumnName("SystemBlackListedSitesCount").IsRequired().HasColumnType("bigint");
            Property(x => x.SystemWhiteListedSitesCount).HasColumnName("SystemWhiteListedSitesCount").IsRequired().HasColumnType("bigint");
            InitializePartial();
        }
        partial void InitializePartial();
    }

    // BuyerAccountBILookup
    internal partial class BuyerAccountBiLookupMap : EntityTypeConfiguration<BuyerAccountBiLookup>
    {
        public BuyerAccountBiLookupMap()
            : this("analytics")
        {
        }
 
        public BuyerAccountBiLookupMap(string schema)
        {
            ToTable(schema + ".BuyerAccountBILookup");
            HasKey(x => new { x.BuyerAccountId, x.BuyerAccountUuid, x.GeoCountryId, x.IsAgent, x.CreditLimit, x.Brokerage, x.LanguageId, x.IsActive, x.IsDeleted, x.UtcCreatedDateTime, x.UtcModifiedDateTime, x.CompanyTypeId, x.IsApproved, x.BrandSafetyFee, x.ServiceFee });

            Property(x => x.BuyerAccountId).HasColumnName("BuyerAccountID").IsRequired().HasColumnType("int");
            Property(x => x.BuyerAccountUuid).HasColumnName("BuyerAccountUuid").IsRequired().HasColumnType("uniqueidentifier");
            Property(x => x.CompanyName).HasColumnName("CompanyName").IsOptional().HasColumnType("nvarchar").HasMaxLength(255);
            Property(x => x.BuyingGroupName).HasColumnName("BuyingGroupName").IsOptional().HasColumnType("nvarchar").HasMaxLength(255);
            Property(x => x.AddressLine1).HasColumnName("AddressLine1").IsOptional().HasColumnType("nvarchar").HasMaxLength(300);
            Property(x => x.AddressLine2).HasColumnName("AddressLine2").IsOptional().HasColumnType("nvarchar").HasMaxLength(300);
            Property(x => x.City).HasColumnName("City").IsOptional().HasColumnType("nvarchar").HasMaxLength(100);
            Property(x => x.StateProvince).HasColumnName("StateProvince").IsOptional().HasColumnType("nvarchar").HasMaxLength(50);
            Property(x => x.PostalCode).HasColumnName("PostalCode").IsOptional().HasColumnType("nvarchar").HasMaxLength(20);
            Property(x => x.GeoCountryId).HasColumnName("GeoCountryID").IsRequired().HasColumnType("int");
            Property(x => x.CurrencyId).HasColumnName("CurrencyID").IsOptional().HasColumnType("int");
            Property(x => x.TermsConditionsAgreedDate).HasColumnName("TermsConditionsAgreedDate").IsOptional().HasColumnType("datetime");
            Property(x => x.IsAgent).HasColumnName("IsAgent").IsRequired().HasColumnType("bit");
            Property(x => x.CreditLimit).HasColumnName("CreditLimit").IsRequired().HasColumnType("money").HasPrecision(19,4);
            Property(x => x.TrialEndDate).HasColumnName("TrialEndDate").IsOptional().HasColumnType("datetime");
            Property(x => x.BillingTypeId).HasColumnName("BillingTypeID").IsOptional().HasColumnType("int");
            Property(x => x.TimeZoneId).HasColumnName("TimeZoneID").IsOptional().HasColumnType("int");
            Property(x => x.CommercialContactUserId).HasColumnName("CommercialContactUserID").IsOptional().HasColumnType("uniqueidentifier");
            Property(x => x.PaymentTermsId).HasColumnName("PaymentTermsID").IsOptional().HasColumnType("int");
            Property(x => x.BillingCycleId).HasColumnName("BillingCycleID").IsOptional().HasColumnType("int");
            Property(x => x.Brokerage).HasColumnName("Brokerage").IsRequired().HasColumnType("decimal").HasPrecision(7,4);
            Property(x => x.LanguageId).HasColumnName("LanguageID").IsRequired().HasColumnType("int");
            Property(x => x.IsActive).HasColumnName("IsActive").IsRequired().HasColumnType("bit");
            Property(x => x.IsDeleted).HasColumnName("IsDeleted").IsRequired().HasColumnType("bit");
            Property(x => x.UtcCreatedDateTime).HasColumnName("UtcCreatedDateTime").IsRequired().HasColumnType("datetime");
            Property(x => x.UtcModifiedDateTime).HasColumnName("UtcModifiedDateTime").IsRequired().HasColumnType("datetime");
            Property(x => x.CompanyTypeId).HasColumnName("CompanyTypeID").IsRequired().HasColumnType("int");
            Property(x => x.IsApproved).HasColumnName("IsApproved").IsRequired().HasColumnType("bit");
            Property(x => x.BrandSafetyFee).HasColumnName("BrandSafetyFee").IsRequired().HasColumnType("decimal").HasPrecision(7,4);
            Property(x => x.ServiceFee).HasColumnName("ServiceFee").IsRequired().HasColumnType("decimal").HasPrecision(7,4);
            Property(x => x.ThemeId).HasColumnName("ThemeID").IsOptional().HasColumnType("bigint");
            Property(x => x.Website).HasColumnName("Website").IsOptional().HasColumnType("nvarchar").HasMaxLength(500);
            Property(x => x.MonthlyCreditId).HasColumnName("MonthlyCreditId").IsOptional().HasColumnType("int");
            Property(x => x.BillingContactEmail).HasColumnName("BillingContactEmail").IsOptional().HasColumnType("nvarchar").HasMaxLength(500);
            InitializePartial();
        }
        partial void InitializePartial();
    }

    // BuyerAccountCreditLimitLookup
    internal partial class BuyerAccountCreditLimitLookupMap : EntityTypeConfiguration<BuyerAccountCreditLimitLookup>
    {
        public BuyerAccountCreditLimitLookupMap()
            : this("analytics")
        {
        }
 
        public BuyerAccountCreditLimitLookupMap(string schema)
        {
            ToTable(schema + ".BuyerAccountCreditLimitLookup");
            HasKey(x => new { x.BuyerAccountId, x.CreditLimit });

            Property(x => x.BuyerAccountId).HasColumnName("BuyerAccountID").IsRequired().HasColumnType("int");
            Property(x => x.CompanyName).HasColumnName("CompanyName").IsOptional().HasColumnType("nvarchar").HasMaxLength(255);
            Property(x => x.CreditLimit).HasColumnName("CreditLimit").IsRequired().HasColumnType("money").HasPrecision(19,4);
            Property(x => x.Iso4217Code).HasColumnName("ISO4217Code").IsOptional().IsFixedLength().IsUnicode(false).HasColumnType("char").HasMaxLength(3);
            InitializePartial();
        }
        partial void InitializePartial();
    }

    // BuyerAccountLookup
    internal partial class BuyerAccountLookupMap : EntityTypeConfiguration<BuyerAccountLookup>
    {
        public BuyerAccountLookupMap()
            : this("analytics")
        {
        }
 
        public BuyerAccountLookupMap(string schema)
        {
            ToTable(schema + ".BuyerAccountLookup");
            HasKey(x => new { x.BuyerAccountId, x.BuyingGroupName, x.CurrencyName, x.MinutesOffset });

            Property(x => x.BuyerAccountId).HasColumnName("BuyerAccountID").IsRequired().HasColumnType("int");
            Property(x => x.CompanyName).HasColumnName("CompanyName").IsOptional().HasColumnType("nvarchar").HasMaxLength(255);
            Property(x => x.BuyingGroupName).HasColumnName("BuyingGroupName").IsRequired().HasColumnType("nvarchar").HasMaxLength(255);
            Property(x => x.CurrencyCode).HasColumnName("CurrencyCode").IsOptional().IsFixedLength().IsUnicode(false).HasColumnType("char").HasMaxLength(3);
            Property(x => x.CurrencyName).HasColumnName("CurrencyName").IsRequired().HasColumnType("nvarchar").HasMaxLength(50);
            Property(x => x.LocalToUsdRate).HasColumnName("LocalToUSDRate").IsOptional().HasColumnType("decimal").HasPrecision(18,6);
            Property(x => x.TimeZoneCode).HasColumnName("TimeZoneCode").IsOptional().HasColumnType("nvarchar").HasMaxLength(150);
            Property(x => x.MinutesOffset).HasColumnName("MinutesOffset").IsRequired().HasColumnType("int");
            InitializePartial();
        }
        partial void InitializePartial();
    }

    // BuyerAccountRecentAdGroupLookup
    internal partial class BuyerAccountRecentAdGroupLookupMap : EntityTypeConfiguration<BuyerAccountRecentAdGroupLookup>
    {
        public BuyerAccountRecentAdGroupLookupMap()
            : this("analytics")
        {
        }
 
        public BuyerAccountRecentAdGroupLookupMap(string schema)
        {
            ToTable(schema + ".BuyerAccountRecentAdGroupLookup");
            HasKey(x => x.BuyerAccountId);

            Property(x => x.BuyerAccountId).HasColumnName("BuyerAccountID").IsRequired().HasColumnType("int");
            Property(x => x.AdGroupLongId).HasColumnName("AdGroupLongID").IsOptional().IsUnicode(false).HasColumnType("varchar").HasMaxLength(24);
            InitializePartial();
        }
        partial void InitializePartial();
    }

    // BuyerAccountShardLookup
    internal partial class BuyerAccountShardLookupMap : EntityTypeConfiguration<BuyerAccountShardLookup>
    {
        public BuyerAccountShardLookupMap()
            : this("analytics")
        {
        }
 
        public BuyerAccountShardLookupMap(string schema)
        {
            ToTable(schema + ".BuyerAccountShardLookup");
            HasKey(x => new { x.BuyerAccountId, x.ShardId });

            Property(x => x.BuyerAccountId).HasColumnName("BuyerAccountID").IsRequired().HasColumnType("int").HasDatabaseGeneratedOption(DatabaseGeneratedOption.Identity);
            Property(x => x.ShardId).HasColumnName("ShardID").IsRequired().HasColumnType("int");
            InitializePartial();
        }
        partial void InitializePartial();
    }

    // CampaignBILookup
    internal partial class CampaignBiLookupMap : EntityTypeConfiguration<CampaignBiLookup>
    {
        public CampaignBiLookupMap()
            : this("analytics")
        {
        }
 
        public CampaignBiLookupMap(string schema)
        {
            ToTable(schema + ".CampaignBILookup");
            HasKey(x => new { x.CampaignId, x.CampaignUuid, x.BuyerAccountId, x.AdvertiserProductId, x.CampaignName, x.IsDeleted, x.UtcCreatedDateTime, x.UtcModifiedDateTime, x.Margin });

            Property(x => x.CampaignId).HasColumnName("CampaignID").IsRequired().HasColumnType("int").HasDatabaseGeneratedOption(DatabaseGeneratedOption.Identity);
            Property(x => x.CampaignUuid).HasColumnName("CampaignUuid").IsRequired().HasColumnType("uniqueidentifier");
            Property(x => x.BuyerAccountId).HasColumnName("BuyerAccountID").IsRequired().HasColumnType("int");
            Property(x => x.AdvertiserProductId).HasColumnName("AdvertiserProductID").IsRequired().HasColumnType("int");
            Property(x => x.CampaignName).HasColumnName("CampaignName").IsRequired().HasColumnType("nvarchar").HasMaxLength(200);
            Property(x => x.AgencyReference).HasColumnName("AgencyReference").IsOptional().HasColumnType("nvarchar").HasMaxLength(50);
            Property(x => x.IsDeleted).HasColumnName("IsDeleted").IsRequired().HasColumnType("bit");
            Property(x => x.UtcCreatedDateTime).HasColumnName("UtcCreatedDateTime").IsRequired().HasColumnType("datetime");
            Property(x => x.UtcModifiedDateTime).HasColumnName("UtcModifiedDateTime").IsRequired().HasColumnType("datetime");
            Property(x => x.CloneFromCampaignId).HasColumnName("CloneFromCampaignID").IsOptional().HasColumnType("int");
            Property(x => x.Margin).HasColumnName("Margin").IsRequired().HasColumnType("decimal").HasPrecision(7,4);
            InitializePartial();
        }
        partial void InitializePartial();
    }

    // CampaignLookup
    internal partial class CampaignLookupMap : EntityTypeConfiguration<CampaignLookup>
    {
        public CampaignLookupMap()
            : this("analytics")
        {
        }
 
        public CampaignLookupMap(string schema)
        {
            ToTable(schema + ".CampaignLookup");
            HasKey(x => new { x.CampaignId, x.AdvertiserProductId, x.ProductCategoryId, x.IndustryCategoryId, x.AdvertiserId, x.BuyerAccountId, x.CurrencyName, x.MinutesOffset });

            Property(x => x.CampaignId).HasColumnName("CampaignID").IsRequired().HasColumnType("int");
            Property(x => x.RtbCampaignId).HasColumnName("RtbCampaignID").IsOptional().IsUnicode(false).HasColumnType("varchar").HasMaxLength(24);
            Property(x => x.CampaignName).HasColumnName("CampaignName").IsOptional().HasColumnType("nvarchar").HasMaxLength(4000);
            Property(x => x.AgencyReference).HasColumnName("AgencyReference").IsOptional().HasColumnType("nvarchar").HasMaxLength(4000);
            Property(x => x.AdvertiserProductId).HasColumnName("AdvertiserProductID").IsRequired().HasColumnType("int");
            Property(x => x.ProductName).HasColumnName("ProductName").IsOptional().HasColumnType("nvarchar").HasMaxLength(4000);
            Property(x => x.ProductCategoryId).HasColumnName("ProductCategoryID").IsRequired().HasColumnType("int");
            Property(x => x.ProductCategoryName).HasColumnName("ProductCategoryName").IsOptional().HasColumnType("nvarchar").HasMaxLength(4000);
            Property(x => x.IndustryCategoryId).HasColumnName("IndustryCategoryID").IsRequired().HasColumnType("int");
            Property(x => x.IndustryCategoryName).HasColumnName("IndustryCategoryName").IsOptional().HasColumnType("nvarchar").HasMaxLength(4000);
            Property(x => x.AdvertiserId).HasColumnName("AdvertiserID").IsRequired().HasColumnType("int");
            Property(x => x.AdvertiserName).HasColumnName("AdvertiserName").IsOptional().HasColumnType("nvarchar").HasMaxLength(4000);
            Property(x => x.BuyerAccountId).HasColumnName("BuyerAccountID").IsRequired().HasColumnType("int");
            Property(x => x.CompanyName).HasColumnName("CompanyName").IsOptional().HasColumnType("nvarchar").HasMaxLength(4000);
            Property(x => x.BuyingGroupName).HasColumnName("BuyingGroupName").IsOptional().HasColumnType("nvarchar").HasMaxLength(4000);
            Property(x => x.CurrencyCode).HasColumnName("CurrencyCode").IsOptional().IsFixedLength().IsUnicode(false).HasColumnType("char").HasMaxLength(3);
            Property(x => x.CurrencyName).HasColumnName("CurrencyName").IsRequired().HasColumnType("nvarchar").HasMaxLength(50);
            Property(x => x.LocalToUsdRate).HasColumnName("LocalToUSDRate").IsOptional().HasColumnType("decimal").HasPrecision(18,6);
            Property(x => x.TimeZoneCode).HasColumnName("TimeZoneCode").IsOptional().HasColumnType("nvarchar").HasMaxLength(150);
            Property(x => x.MinutesOffset).HasColumnName("MinutesOffset").IsRequired().HasColumnType("int");
            InitializePartial();
        }
        partial void InitializePartial();
    }

    // Conversion
    internal partial class ConversionMap : EntityTypeConfiguration<Conversion>
    {
        public ConversionMap()
            : this("analytics")
        {
        }
 
        public ConversionMap(string schema)
        {
            ToTable(schema + ".Conversion");
            HasKey(x => new { x.UtcDateTime, x.LocalDateTime, x.BuyerAccountId, x.CampaignId, x.AdGroupId, x.AdvertiserId, x.PartnerId, x.SegmentId, x.Id, x.ClientIp, x.OrderId, x.ConversionQuantity, x.RevenueCurrency, x.RevenueToUsdRate, x.PostViewConversions, x.PostClickConversions, x.RevenueUsd });

            Property(x => x.UtcDateTime).HasColumnName("UtcDateTime").IsRequired().HasColumnType("datetime");
            Property(x => x.LocalDateTime).HasColumnName("LocalDateTime").IsRequired().HasColumnType("datetime");
            Property(x => x.BuyerAccountId).HasColumnName("BuyerAccountID").IsRequired().HasColumnType("int");
            Property(x => x.CampaignId).HasColumnName("CampaignID").IsRequired().HasColumnType("int");
            Property(x => x.AdGroupId).HasColumnName("AdGroupID").IsRequired().HasColumnType("int");
            Property(x => x.AdvertiserId).HasColumnName("AdvertiserID").IsRequired().HasColumnType("int");
            Property(x => x.PartnerId).HasColumnName("PartnerID").IsRequired().HasColumnType("int");
            Property(x => x.SegmentId).HasColumnName("SegmentID").IsRequired().HasColumnType("nvarchar").HasMaxLength(50);
            Property(x => x.Id).HasColumnName("ID").IsRequired().HasColumnType("nvarchar").HasMaxLength(50);
            Property(x => x.ClientIp).HasColumnName("ClientIp").IsRequired().HasColumnType("nvarchar").HasMaxLength(20);
            Property(x => x.OrderId).HasColumnName("OrderID").IsRequired().HasColumnType("nvarchar").HasMaxLength(256);
            Property(x => x.ConversionQuantity).HasColumnName("ConversionQuantity").IsRequired().HasColumnType("int");
            Property(x => x.RevenueCurrency).HasColumnName("RevenueCurrency").IsRequired().HasColumnType("nvarchar").HasMaxLength(50);
            Property(x => x.RevenueToUsdRate).HasColumnName("RevenueToUsdRate").IsRequired().HasColumnType("decimal").HasPrecision(18,4);
            Property(x => x.PostViewConversions).HasColumnName("PostViewConversions").IsRequired().HasColumnType("bigint");
            Property(x => x.PostClickConversions).HasColumnName("PostClickConversions").IsRequired().HasColumnType("bigint");
            Property(x => x.RevenueUsd).HasColumnName("RevenueUsd").IsRequired().HasColumnType("bigint");
            InitializePartial();
        }
        partial void InitializePartial();
    }

    // ConversionCombined
    internal partial class ConversionCombinedMap : EntityTypeConfiguration<ConversionCombined>
    {
        public ConversionCombinedMap()
            : this("analytics")
        {
        }
 
        public ConversionCombinedMap(string schema)
        {
            ToTable(schema + ".ConversionCombined");
            HasKey(x => new { x.UtcDateTime, x.LocalDateTime, x.BuyerAccountId, x.CampaignId, x.AdGroupId, x.AdvertiserId, x.PartnerId, x.SegmentId, x.Id, x.ClientIp, x.OrderId, x.ConversionQuantity, x.RevenueCurrency, x.RevenueToUsdRate, x.PostViewConversions, x.PostClickConversions, x.RevenueUsd });

            Property(x => x.UtcDateTime).HasColumnName("UtcDateTime").IsRequired().HasColumnType("datetime");
            Property(x => x.LocalDateTime).HasColumnName("LocalDateTime").IsRequired().HasColumnType("datetime");
            Property(x => x.BuyerAccountId).HasColumnName("BuyerAccountID").IsRequired().HasColumnType("int");
            Property(x => x.CampaignId).HasColumnName("CampaignID").IsRequired().HasColumnType("int");
            Property(x => x.AdGroupId).HasColumnName("AdGroupID").IsRequired().HasColumnType("int");
            Property(x => x.AdvertiserId).HasColumnName("AdvertiserID").IsRequired().HasColumnType("int");
            Property(x => x.PartnerId).HasColumnName("PartnerID").IsRequired().HasColumnType("int");
            Property(x => x.SegmentId).HasColumnName("SegmentID").IsRequired().HasColumnType("nvarchar").HasMaxLength(50);
            Property(x => x.Id).HasColumnName("ID").IsRequired().HasColumnType("nvarchar").HasMaxLength(50);
            Property(x => x.ClientIp).HasColumnName("ClientIp").IsRequired().HasColumnType("nvarchar").HasMaxLength(20);
            Property(x => x.OrderId).HasColumnName("OrderID").IsRequired().HasColumnType("nvarchar").HasMaxLength(256);
            Property(x => x.ConversionQuantity).HasColumnName("ConversionQuantity").IsRequired().HasColumnType("int");
            Property(x => x.RevenueCurrency).HasColumnName("RevenueCurrency").IsRequired().HasColumnType("nvarchar").HasMaxLength(50);
            Property(x => x.RevenueToUsdRate).HasColumnName("RevenueToUsdRate").IsRequired().HasColumnType("decimal").HasPrecision(18,4);
            Property(x => x.PostViewConversions).HasColumnName("PostViewConversions").IsRequired().HasColumnType("bigint");
            Property(x => x.PostClickConversions).HasColumnName("PostClickConversions").IsRequired().HasColumnType("bigint");
            Property(x => x.RevenueUsd).HasColumnName("RevenueUsd").IsRequired().HasColumnType("bigint");
            InitializePartial();
        }
        partial void InitializePartial();
    }

    // ConversionException
    internal partial class ConversionExceptionMap : EntityTypeConfiguration<ConversionException>
    {
        public ConversionExceptionMap()
            : this("analytics")
        {
        }
 
        public ConversionExceptionMap(string schema)
        {
            ToTable(schema + ".ConversionException");
            HasKey(x => new { x.UtcDateTime, x.LocalDateTime, x.BuyerAccountId, x.CampaignId, x.AdGroupId, x.AdvertiserId, x.PartnerId, x.SegmentId, x.Id, x.ClientIp, x.OrderId, x.ConversionQuantity, x.RevenueCurrency, x.RevenueToUsdRate, x.PostViewConversions, x.PostClickConversions, x.RevenueUsd });

            Property(x => x.UtcDateTime).HasColumnName("UtcDateTime").IsRequired().HasColumnType("datetime");
            Property(x => x.LocalDateTime).HasColumnName("LocalDateTime").IsRequired().HasColumnType("datetime");
            Property(x => x.BuyerAccountId).HasColumnName("BuyerAccountID").IsRequired().HasColumnType("int");
            Property(x => x.CampaignId).HasColumnName("CampaignID").IsRequired().HasColumnType("int");
            Property(x => x.AdGroupId).HasColumnName("AdGroupID").IsRequired().HasColumnType("int");
            Property(x => x.AdvertiserId).HasColumnName("AdvertiserID").IsRequired().HasColumnType("int");
            Property(x => x.PartnerId).HasColumnName("PartnerID").IsRequired().HasColumnType("int");
            Property(x => x.SegmentId).HasColumnName("SegmentID").IsRequired().HasColumnType("nvarchar").HasMaxLength(50);
            Property(x => x.Id).HasColumnName("ID").IsRequired().HasColumnType("nvarchar").HasMaxLength(50);
            Property(x => x.ClientIp).HasColumnName("ClientIp").IsRequired().HasColumnType("nvarchar").HasMaxLength(20);
            Property(x => x.OrderId).HasColumnName("OrderID").IsRequired().HasColumnType("nvarchar").HasMaxLength(256);
            Property(x => x.ConversionQuantity).HasColumnName("ConversionQuantity").IsRequired().HasColumnType("int");
            Property(x => x.RevenueCurrency).HasColumnName("RevenueCurrency").IsRequired().HasColumnType("nvarchar").HasMaxLength(50);
            Property(x => x.RevenueToUsdRate).HasColumnName("RevenueToUsdRate").IsRequired().HasColumnType("decimal").HasPrecision(18,4);
            Property(x => x.PostViewConversions).HasColumnName("PostViewConversions").IsRequired().HasColumnType("bigint");
            Property(x => x.PostClickConversions).HasColumnName("PostClickConversions").IsRequired().HasColumnType("bigint");
            Property(x => x.RevenueUsd).HasColumnName("RevenueUsd").IsRequired().HasColumnType("bigint");
            InitializePartial();
        }
        partial void InitializePartial();
    }

    // ConversionExceptionReportID
    internal partial class ConversionExceptionReportIdMap : EntityTypeConfiguration<ConversionExceptionReportId>
    {
        public ConversionExceptionReportIdMap()
            : this("analytics")
        {
        }
 
        public ConversionExceptionReportIdMap(string schema)
        {
            ToTable(schema + ".ConversionExceptionReportID");
            HasKey(x => new { x.UtcDateTime, x.LocalDateTime, x.BuyerAccountId, x.CampaignId, x.AdGroupId, x.AdvertiserId, x.PartnerId, x.SegmentId, x.Id, x.ClientIp, x.OrderId, x.ConversionQuantity, x.RevenueCurrency, x.RevenueToUsdRate, x.PostViewConversions, x.PostClickConversions, x.RevenueUsd, x.ReportId });

            Property(x => x.UtcDateTime).HasColumnName("UtcDateTime").IsRequired().HasColumnType("datetime");
            Property(x => x.LocalDateTime).HasColumnName("LocalDateTime").IsRequired().HasColumnType("datetime");
            Property(x => x.BuyerAccountId).HasColumnName("BuyerAccountID").IsRequired().HasColumnType("int");
            Property(x => x.CampaignId).HasColumnName("CampaignID").IsRequired().HasColumnType("int");
            Property(x => x.AdGroupId).HasColumnName("AdGroupID").IsRequired().HasColumnType("int");
            Property(x => x.AdvertiserId).HasColumnName("AdvertiserID").IsRequired().HasColumnType("int");
            Property(x => x.PartnerId).HasColumnName("PartnerID").IsRequired().HasColumnType("int");
            Property(x => x.SegmentId).HasColumnName("SegmentID").IsRequired().HasColumnType("nvarchar").HasMaxLength(50);
            Property(x => x.Id).HasColumnName("ID").IsRequired().HasColumnType("nvarchar").HasMaxLength(50);
            Property(x => x.ClientIp).HasColumnName("ClientIp").IsRequired().HasColumnType("nvarchar").HasMaxLength(20);
            Property(x => x.OrderId).HasColumnName("OrderID").IsRequired().HasColumnType("nvarchar").HasMaxLength(256);
            Property(x => x.ConversionQuantity).HasColumnName("ConversionQuantity").IsRequired().HasColumnType("int");
            Property(x => x.RevenueCurrency).HasColumnName("RevenueCurrency").IsRequired().HasColumnType("nvarchar").HasMaxLength(50);
            Property(x => x.RevenueToUsdRate).HasColumnName("RevenueToUsdRate").IsRequired().HasColumnType("decimal").HasPrecision(18,4);
            Property(x => x.PostViewConversions).HasColumnName("PostViewConversions").IsRequired().HasColumnType("bigint");
            Property(x => x.PostClickConversions).HasColumnName("PostClickConversions").IsRequired().HasColumnType("bigint");
            Property(x => x.RevenueUsd).HasColumnName("RevenueUsd").IsRequired().HasColumnType("bigint");
            Property(x => x.ReportId).HasColumnName("ReportID").IsRequired().HasColumnType("bigint");
            InitializePartial();
        }
        partial void InitializePartial();
    }

    // ConversionImport
    internal partial class ConversionImportMap : EntityTypeConfiguration<ConversionImport>
    {
        public ConversionImportMap()
            : this("analytics")
        {
        }
 
        public ConversionImportMap(string schema)
        {
            ToTable(schema + ".ConversionImport");
            HasKey(x => new { x.UtcDateTime, x.LocalDateTime, x.BuyerAccountId, x.CampaignId, x.AdGroupId, x.AdvertiserId, x.PartnerId, x.SegmentId, x.Id, x.ClientIp, x.OrderId, x.ConversionQuantity, x.RevenueCurrency, x.RevenueToUsdRate, x.PostViewConversions, x.PostClickConversions, x.RevenueUsd });

            Property(x => x.UtcDateTime).HasColumnName("UtcDateTime").IsRequired().HasColumnType("datetime");
            Property(x => x.LocalDateTime).HasColumnName("LocalDateTime").IsRequired().HasColumnType("datetime");
            Property(x => x.BuyerAccountId).HasColumnName("BuyerAccountID").IsRequired().HasColumnType("int");
            Property(x => x.CampaignId).HasColumnName("CampaignID").IsRequired().HasColumnType("int");
            Property(x => x.AdGroupId).HasColumnName("AdGroupID").IsRequired().HasColumnType("int");
            Property(x => x.AdvertiserId).HasColumnName("AdvertiserID").IsRequired().HasColumnType("int");
            Property(x => x.PartnerId).HasColumnName("PartnerID").IsRequired().HasColumnType("int");
            Property(x => x.SegmentId).HasColumnName("SegmentID").IsRequired().HasColumnType("nvarchar").HasMaxLength(50);
            Property(x => x.Id).HasColumnName("ID").IsRequired().HasColumnType("nvarchar").HasMaxLength(50);
            Property(x => x.ClientIp).HasColumnName("ClientIp").IsRequired().HasColumnType("nvarchar").HasMaxLength(20);
            Property(x => x.OrderId).HasColumnName("OrderID").IsRequired().HasColumnType("nvarchar").HasMaxLength(256);
            Property(x => x.ConversionQuantity).HasColumnName("ConversionQuantity").IsRequired().HasColumnType("int");
            Property(x => x.RevenueCurrency).HasColumnName("RevenueCurrency").IsRequired().HasColumnType("nvarchar").HasMaxLength(50);
            Property(x => x.RevenueToUsdRate).HasColumnName("RevenueToUsdRate").IsRequired().HasColumnType("decimal").HasPrecision(18,4);
            Property(x => x.PostViewConversions).HasColumnName("PostViewConversions").IsRequired().HasColumnType("bigint");
            Property(x => x.PostClickConversions).HasColumnName("PostClickConversions").IsRequired().HasColumnType("bigint");
            Property(x => x.RevenueUsd).HasColumnName("RevenueUsd").IsRequired().HasColumnType("bigint");
            InitializePartial();
        }
        partial void InitializePartial();
    }

    // ConversionImportReportID
    internal partial class ConversionImportReportIdMap : EntityTypeConfiguration<ConversionImportReportId>
    {
        public ConversionImportReportIdMap()
            : this("analytics")
        {
        }
 
        public ConversionImportReportIdMap(string schema)
        {
            ToTable(schema + ".ConversionImportReportID");
            HasKey(x => new { x.UtcDateTime, x.LocalDateTime, x.BuyerAccountId, x.CampaignId, x.AdGroupId, x.AdvertiserId, x.PartnerId, x.SegmentId, x.Id, x.ClientIp, x.OrderId, x.ConversionQuantity, x.RevenueCurrency, x.RevenueToUsdRate, x.PostViewConversions, x.PostClickConversions, x.RevenueUsd, x.ReportId });

            Property(x => x.UtcDateTime).HasColumnName("UtcDateTime").IsRequired().HasColumnType("datetime");
            Property(x => x.LocalDateTime).HasColumnName("LocalDateTime").IsRequired().HasColumnType("datetime");
            Property(x => x.BuyerAccountId).HasColumnName("BuyerAccountID").IsRequired().HasColumnType("int");
            Property(x => x.CampaignId).HasColumnName("CampaignID").IsRequired().HasColumnType("int");
            Property(x => x.AdGroupId).HasColumnName("AdGroupID").IsRequired().HasColumnType("int");
            Property(x => x.AdvertiserId).HasColumnName("AdvertiserID").IsRequired().HasColumnType("int");
            Property(x => x.PartnerId).HasColumnName("PartnerID").IsRequired().HasColumnType("int");
            Property(x => x.SegmentId).HasColumnName("SegmentID").IsRequired().HasColumnType("nvarchar").HasMaxLength(50);
            Property(x => x.Id).HasColumnName("ID").IsRequired().HasColumnType("nvarchar").HasMaxLength(50);
            Property(x => x.ClientIp).HasColumnName("ClientIp").IsRequired().HasColumnType("nvarchar").HasMaxLength(20);
            Property(x => x.OrderId).HasColumnName("OrderID").IsRequired().HasColumnType("nvarchar").HasMaxLength(256);
            Property(x => x.ConversionQuantity).HasColumnName("ConversionQuantity").IsRequired().HasColumnType("int");
            Property(x => x.RevenueCurrency).HasColumnName("RevenueCurrency").IsRequired().HasColumnType("nvarchar").HasMaxLength(50);
            Property(x => x.RevenueToUsdRate).HasColumnName("RevenueToUsdRate").IsRequired().HasColumnType("decimal").HasPrecision(18,4);
            Property(x => x.PostViewConversions).HasColumnName("PostViewConversions").IsRequired().HasColumnType("bigint");
            Property(x => x.PostClickConversions).HasColumnName("PostClickConversions").IsRequired().HasColumnType("bigint");
            Property(x => x.RevenueUsd).HasColumnName("RevenueUsd").IsRequired().HasColumnType("bigint");
            Property(x => x.ReportId).HasColumnName("ReportID").IsRequired().HasColumnType("bigint");
            InitializePartial();
        }
        partial void InitializePartial();
    }

    // ConversionReportID
    internal partial class ConversionReportIdMap : EntityTypeConfiguration<ConversionReportId>
    {
        public ConversionReportIdMap()
            : this("analytics")
        {
        }
 
        public ConversionReportIdMap(string schema)
        {
            ToTable(schema + ".ConversionReportID");
            HasKey(x => new { x.UtcDateTime, x.LocalDateTime, x.BuyerAccountId, x.CampaignId, x.AdGroupId, x.AdvertiserId, x.PartnerId, x.SegmentId, x.Id, x.ClientIp, x.OrderId, x.ConversionQuantity, x.RevenueCurrency, x.RevenueToUsdRate, x.PostViewConversions, x.PostClickConversions, x.RevenueUsd, x.ReportId });

            Property(x => x.UtcDateTime).HasColumnName("UtcDateTime").IsRequired().HasColumnType("datetime");
            Property(x => x.LocalDateTime).HasColumnName("LocalDateTime").IsRequired().HasColumnType("datetime");
            Property(x => x.BuyerAccountId).HasColumnName("BuyerAccountID").IsRequired().HasColumnType("int");
            Property(x => x.CampaignId).HasColumnName("CampaignID").IsRequired().HasColumnType("int");
            Property(x => x.AdGroupId).HasColumnName("AdGroupID").IsRequired().HasColumnType("int");
            Property(x => x.AdvertiserId).HasColumnName("AdvertiserID").IsRequired().HasColumnType("int");
            Property(x => x.PartnerId).HasColumnName("PartnerID").IsRequired().HasColumnType("int");
            Property(x => x.SegmentId).HasColumnName("SegmentID").IsRequired().HasColumnType("nvarchar").HasMaxLength(50);
            Property(x => x.Id).HasColumnName("ID").IsRequired().HasColumnType("nvarchar").HasMaxLength(50);
            Property(x => x.ClientIp).HasColumnName("ClientIp").IsRequired().HasColumnType("nvarchar").HasMaxLength(20);
            Property(x => x.OrderId).HasColumnName("OrderID").IsRequired().HasColumnType("nvarchar").HasMaxLength(256);
            Property(x => x.ConversionQuantity).HasColumnName("ConversionQuantity").IsRequired().HasColumnType("int");
            Property(x => x.RevenueCurrency).HasColumnName("RevenueCurrency").IsRequired().HasColumnType("nvarchar").HasMaxLength(50);
            Property(x => x.RevenueToUsdRate).HasColumnName("RevenueToUsdRate").IsRequired().HasColumnType("decimal").HasPrecision(18,4);
            Property(x => x.PostViewConversions).HasColumnName("PostViewConversions").IsRequired().HasColumnType("bigint");
            Property(x => x.PostClickConversions).HasColumnName("PostClickConversions").IsRequired().HasColumnType("bigint");
            Property(x => x.RevenueUsd).HasColumnName("RevenueUsd").IsRequired().HasColumnType("bigint");
            Property(x => x.ReportId).HasColumnName("ReportID").IsRequired().HasColumnType("bigint");
            InitializePartial();
        }
        partial void InitializePartial();
    }

    // CountrySalesRegionLookup
    internal partial class CountrySalesRegionLookupMap : EntityTypeConfiguration<CountrySalesRegionLookup>
    {
        public CountrySalesRegionLookupMap()
            : this("analytics")
        {
        }
 
        public CountrySalesRegionLookupMap(string schema)
        {
            ToTable(schema + ".CountrySalesRegionLookup");
            HasKey(x => new { x.GeoCountryId, x.SalesRegionId });

            Property(x => x.GeoCountryId).HasColumnName("GeoCountryID").IsRequired().HasColumnType("int");
            Property(x => x.SalesRegionId).HasColumnName("SalesRegionID").IsRequired().HasColumnType("int");
            InitializePartial();
        }
        partial void InitializePartial();
    }

    // CreativeBILookup
    internal partial class CreativeBiLookupMap : EntityTypeConfiguration<CreativeBiLookup>
    {
        public CreativeBiLookupMap()
            : this("analytics")
        {
        }
 
        public CreativeBiLookupMap(string schema)
        {
            ToTable(schema + ".CreativeBILookup");
            HasKey(x => new { x.CreativeId, x.CreativeUuid, x.BuyerAccountId, x.CreativeName, x.CreativeTypeId, x.CreativeSizeId, x.CreativeStatusId, x.IsDeleted, x.UtcCreatedDateTime, x.UtcModifiedDateTime, x.LanguageId, x.ExpandableDirectionId, x.AdvertiserProductId });

            Property(x => x.CreativeId).HasColumnName("CreativeID").IsRequired().HasColumnType("int").HasDatabaseGeneratedOption(DatabaseGeneratedOption.Identity);
            Property(x => x.CreativeUuid).HasColumnName("CreativeUuid").IsRequired().HasColumnType("uniqueidentifier");
            Property(x => x.BuyerAccountId).HasColumnName("BuyerAccountID").IsRequired().HasColumnType("int");
            Property(x => x.CreativeName).HasColumnName("CreativeName").IsRequired().HasColumnType("nvarchar").HasMaxLength(500);
            Property(x => x.CreativeTypeId).HasColumnName("CreativeTypeID").IsRequired().HasColumnType("int");
            Property(x => x.CreativeSizeId).HasColumnName("CreativeSizeID").IsRequired().HasColumnType("int");
            Property(x => x.CreativeFileId).HasColumnName("CreativeFileID").IsOptional().HasColumnType("int");
            Property(x => x.AdTagTemplateId).HasColumnName("AdTagTemplateID").IsOptional().HasColumnType("int");
            Property(x => x.ClickThroughUrl).HasColumnName("ClickThroughURL").IsOptional().HasColumnType("nvarchar").HasMaxLength(500);
            Property(x => x.ClickTrackerUrl).HasColumnName("ClickTrackerURL").IsOptional().HasColumnType("nvarchar").HasMaxLength(500);
            Property(x => x.BeaconUrl).HasColumnName("BeaconURL").IsOptional().HasColumnType("nvarchar").HasMaxLength(500);
            Property(x => x.CreativeStatusId).HasColumnName("CreativeStatusID").IsRequired().HasColumnType("int");
            Property(x => x.IsDeleted).HasColumnName("IsDeleted").IsRequired().HasColumnType("bit");
            Property(x => x.UtcCreatedDateTime).HasColumnName("UtcCreatedDateTime").IsRequired().HasColumnType("datetime");
            Property(x => x.UtcModifiedDateTime).HasColumnName("UtcModifiedDateTime").IsRequired().HasColumnType("datetime");
            Property(x => x.LanguageId).HasColumnName("LanguageID").IsRequired().HasColumnType("int");
            Property(x => x.CloneFromCreativeId).HasColumnName("CloneFromCreativeID").IsOptional().HasColumnType("int");
            Property(x => x.VideoSpecUrl).HasColumnName("VideoSpecUrl").IsOptional().HasColumnType("nvarchar").HasMaxLength(500);
            Property(x => x.UrlValidated).HasColumnName("UrlValidated").IsOptional().HasColumnType("bit");
            Property(x => x.ExpandableDirectionId).HasColumnName("ExpandableDirectionID").IsRequired().HasColumnType("int");
            Property(x => x.AdvertiserProductId).HasColumnName("AdvertiserProductID").IsRequired().HasColumnType("int");
            InitializePartial();
        }
        partial void InitializePartial();
    }

    // DateLookup
    internal partial class DateLookupMap : EntityTypeConfiguration<DateLookup>
    {
        public DateLookupMap()
            : this("dbo")
        {
        }
 
        public DateLookupMap(string schema)
        {
            ToTable(schema + ".DateLookup");
            HasKey(x => x.DayDate);

            Property(x => x.DayDate).HasColumnName("DayDate").IsRequired().HasColumnType("date").HasDatabaseGeneratedOption(DatabaseGeneratedOption.None);
            Property(x => x.YearDate).HasColumnName("YearDate").IsOptional().HasColumnType("date");
            Property(x => x.MonthDate).HasColumnName("MonthDate").IsOptional().HasColumnType("date");
            Property(x => x.WeekDate).HasColumnName("WeekDate").IsOptional().HasColumnType("date");
            Property(x => x.QuarterDate).HasColumnName("QuarterDate").IsOptional().HasColumnType("date");
            Property(x => x.MonthDay).HasColumnName("MonthDay").IsOptional().HasColumnType("int");
            Property(x => x.MonthDays).HasColumnName("MonthDays").IsOptional().HasColumnType("int");
            Property(x => x.MonthName).HasColumnName("MonthName").IsOptional().IsUnicode(false).HasColumnType("varchar").HasMaxLength(20);
            Property(x => x.MonthShortName).HasColumnName("MonthShortName").IsOptional().IsUnicode(false).HasColumnType("varchar").HasMaxLength(20);
            Property(x => x.CalendarYear).HasColumnName("CalendarYear").IsOptional().HasColumnType("int");
            Property(x => x.CalendarMonth).HasColumnName("CalendarMonth").IsOptional().HasColumnType("int");
            Property(x => x.CalendarWeek).HasColumnName("CalendarWeek").IsOptional().HasColumnType("int");
            Property(x => x.CalendarQuarter).HasColumnName("CalendarQuarter").IsOptional().HasColumnType("int");
            Property(x => x.LeapYear).HasColumnName("LeapYear").IsOptional().IsUnicode(false).HasColumnType("varchar").HasMaxLength(20);
            Property(x => x.MonthWeek).HasColumnName("MonthWeek").IsOptional().HasColumnType("int");
            Property(x => x.YearDay).HasColumnName("YearDay").IsOptional().HasColumnType("int");
            Property(x => x.WeekDay).HasColumnName("WeekDay").IsOptional().HasColumnType("int");
            Property(x => x.DayName).HasColumnName("DayName").IsOptional().IsUnicode(false).HasColumnType("varchar").HasMaxLength(20);
            Property(x => x.DayShortName).HasColumnName("DayShortName").IsOptional().IsUnicode(false).HasColumnType("varchar").HasMaxLength(20);
            Property(x => x.NorthSeason).HasColumnName("NorthSeason").IsOptional().IsUnicode(false).HasColumnType("varchar").HasMaxLength(20);
            Property(x => x.SouthSeason).HasColumnName("SouthSeason").IsOptional().IsUnicode(false).HasColumnType("varchar").HasMaxLength(20);
            Property(x => x.WeekNo).HasColumnName("WeekNo").IsOptional().HasColumnType("int");
            Property(x => x.MonthEndDate).HasColumnName("MonthEndDate").IsOptional().HasColumnType("date");
            InitializePartial();
        }
        partial void InitializePartial();
    }

    // DealBILookup
    internal partial class DealBiLookupMap : EntityTypeConfiguration<DealBiLookup>
    {
        public DealBiLookupMap()
            : this("analytics")
        {
        }
 
        public DealBiLookupMap(string schema)
        {
            ToTable(schema + ".DealBILookup");
            HasKey(x => new { x.DealId, x.DealKey, x.DealName, x.PublisherId, x.BuyerAccountId, x.DealTypeId, x.FloorPriceCents, x.CeilingPriceCents, x.UtcStartDateTime, x.UtcEndDateTime, x.DealStatusId, x.UtcCreatedDateTime });

            Property(x => x.DealId).HasColumnName("DealID").IsRequired().HasColumnType("int").HasDatabaseGeneratedOption(DatabaseGeneratedOption.Identity);
            Property(x => x.DealKey).HasColumnName("DealKey").IsRequired().HasColumnType("nvarchar").HasMaxLength(50);
            Property(x => x.DealName).HasColumnName("DealName").IsRequired().HasColumnType("nvarchar").HasMaxLength(500);
            Property(x => x.PublisherId).HasColumnName("PublisherID").IsRequired().HasColumnType("int");
            Property(x => x.BuyerAccountId).HasColumnName("BuyerAccountID").IsRequired().HasColumnType("int");
            Property(x => x.DealTypeId).HasColumnName("DealTypeID").IsRequired().HasColumnType("int");
            Property(x => x.FloorPriceCents).HasColumnName("FloorPriceCents").IsRequired().HasColumnType("int");
            Property(x => x.CeilingPriceCents).HasColumnName("CeilingPriceCents").IsRequired().HasColumnType("int");
            Property(x => x.UtcStartDateTime).HasColumnName("UtcStartDateTime").IsRequired().HasColumnType("datetime");
            Property(x => x.UtcEndDateTime).HasColumnName("UtcEndDateTime").IsRequired().HasColumnType("datetime");
            Property(x => x.DealStatusId).HasColumnName("DealStatusID").IsRequired().HasColumnType("int");
            Property(x => x.UtcCreatedDateTime).HasColumnName("UtcCreatedDateTime").IsRequired().HasColumnType("datetime");
            Property(x => x.UtcModifiedDateTime).HasColumnName("UtcModifiedDateTime").IsOptional().HasColumnType("datetime");
            InitializePartial();
        }
        partial void InitializePartial();
    }

    // DirectBuyDefaultImpression
    internal partial class DirectBuyDefaultImpressionMap : EntityTypeConfiguration<DirectBuyDefaultImpression>
    {
        public DirectBuyDefaultImpressionMap()
            : this("analytics")
        {
        }
 
        public DirectBuyDefaultImpressionMap(string schema)
        {
            ToTable(schema + ".DirectBuyDefaultImpression");
            HasKey(x => new { x.DealKey, x.AdSlotId, x.BuyerAccountId, x.DefaultImpressions, x.UtcDate, x.LocalDate, x.UtcDateTime, x.LocalDateTime, x.ReportId });

            Property(x => x.DealKey).HasColumnName("DealKey").IsRequired().HasColumnType("nvarchar").HasMaxLength(50);
            Property(x => x.AdSlotId).HasColumnName("AdSlotID").IsRequired().HasColumnType("int");
            Property(x => x.BuyerAccountId).HasColumnName("BuyerAccountID").IsRequired().HasColumnType("int");
            Property(x => x.DefaultImpressions).HasColumnName("DefaultImpressions").IsRequired().HasColumnType("bigint");
            Property(x => x.UtcDate).HasColumnName("UtcDate").IsRequired().HasColumnType("date");
            Property(x => x.LocalDate).HasColumnName("LocalDate").IsRequired().HasColumnType("date");
            Property(x => x.UtcDateTime).HasColumnName("UtcDateTime").IsRequired().HasColumnType("datetime");
            Property(x => x.LocalDateTime).HasColumnName("LocalDateTime").IsRequired().HasColumnType("datetime");
            Property(x => x.ReportId).HasColumnName("ReportID").IsRequired().HasColumnType("bigint");
            InitializePartial();
        }
        partial void InitializePartial();
    }

    // DirectBuyDefaultImpressionImport
    internal partial class DirectBuyDefaultImpressionImportMap : EntityTypeConfiguration<DirectBuyDefaultImpressionImport>
    {
        public DirectBuyDefaultImpressionImportMap()
            : this("analytics")
        {
        }
 
        public DirectBuyDefaultImpressionImportMap(string schema)
        {
            ToTable(schema + ".DirectBuyDefaultImpressionImport");
            HasKey(x => new { x.DealKey, x.AdSlotId, x.BuyerAccountId, x.DefaultImpressions, x.UtcDate, x.LocalDate, x.UtcDateTime, x.LocalDateTime, x.ReportId });

            Property(x => x.DealKey).HasColumnName("DealKey").IsRequired().HasColumnType("nvarchar").HasMaxLength(50);
            Property(x => x.AdSlotId).HasColumnName("AdSlotID").IsRequired().HasColumnType("int");
            Property(x => x.BuyerAccountId).HasColumnName("BuyerAccountID").IsRequired().HasColumnType("int");
            Property(x => x.DefaultImpressions).HasColumnName("DefaultImpressions").IsRequired().HasColumnType("bigint");
            Property(x => x.UtcDate).HasColumnName("UtcDate").IsRequired().HasColumnType("date");
            Property(x => x.LocalDate).HasColumnName("LocalDate").IsRequired().HasColumnType("date");
            Property(x => x.UtcDateTime).HasColumnName("UtcDateTime").IsRequired().HasColumnType("datetime");
            Property(x => x.LocalDateTime).HasColumnName("LocalDateTime").IsRequired().HasColumnType("datetime");
            Property(x => x.ReportId).HasColumnName("ReportID").IsRequired().HasColumnType("bigint");
            InitializePartial();
        }
        partial void InitializePartial();
    }

    // DirectBuyDefaultImpressionImportReportID
    internal partial class DirectBuyDefaultImpressionImportReportIdMap : EntityTypeConfiguration<DirectBuyDefaultImpressionImportReportId>
    {
        public DirectBuyDefaultImpressionImportReportIdMap()
            : this("analytics")
        {
        }
 
        public DirectBuyDefaultImpressionImportReportIdMap(string schema)
        {
            ToTable(schema + ".DirectBuyDefaultImpressionImportReportID");
            HasKey(x => new { x.DealKey, x.AdSlotId, x.BuyerAccountId, x.DefaultImpressions, x.UtcDate, x.LocalDate, x.UtcDateTime, x.LocalDateTime, x.ReportId });

            Property(x => x.DealKey).HasColumnName("DealKey").IsRequired().HasColumnType("nvarchar").HasMaxLength(50);
            Property(x => x.AdSlotId).HasColumnName("AdSlotID").IsRequired().HasColumnType("int");
            Property(x => x.BuyerAccountId).HasColumnName("BuyerAccountID").IsRequired().HasColumnType("int");
            Property(x => x.DefaultImpressions).HasColumnName("DefaultImpressions").IsRequired().HasColumnType("bigint");
            Property(x => x.UtcDate).HasColumnName("UtcDate").IsRequired().HasColumnType("date");
            Property(x => x.LocalDate).HasColumnName("LocalDate").IsRequired().HasColumnType("date");
            Property(x => x.UtcDateTime).HasColumnName("UtcDateTime").IsRequired().HasColumnType("datetime");
            Property(x => x.LocalDateTime).HasColumnName("LocalDateTime").IsRequired().HasColumnType("datetime");
            Property(x => x.ReportId).HasColumnName("ReportID").IsRequired().HasColumnType("bigint");
            InitializePartial();
        }
        partial void InitializePartial();
    }

    // DirectBuyDefaultImpressionReportID
    internal partial class DirectBuyDefaultImpressionReportIdMap : EntityTypeConfiguration<DirectBuyDefaultImpressionReportId>
    {
        public DirectBuyDefaultImpressionReportIdMap()
            : this("analytics")
        {
        }
 
        public DirectBuyDefaultImpressionReportIdMap(string schema)
        {
            ToTable(schema + ".DirectBuyDefaultImpressionReportID");
            HasKey(x => new { x.DealKey, x.AdSlotId, x.BuyerAccountId, x.DefaultImpressions, x.UtcDate, x.LocalDate, x.UtcDateTime, x.LocalDateTime, x.ReportId });

            Property(x => x.DealKey).HasColumnName("DealKey").IsRequired().HasColumnType("nvarchar").HasMaxLength(50);
            Property(x => x.AdSlotId).HasColumnName("AdSlotID").IsRequired().HasColumnType("int");
            Property(x => x.BuyerAccountId).HasColumnName("BuyerAccountID").IsRequired().HasColumnType("int");
            Property(x => x.DefaultImpressions).HasColumnName("DefaultImpressions").IsRequired().HasColumnType("bigint");
            Property(x => x.UtcDate).HasColumnName("UtcDate").IsRequired().HasColumnType("date");
            Property(x => x.LocalDate).HasColumnName("LocalDate").IsRequired().HasColumnType("date");
            Property(x => x.UtcDateTime).HasColumnName("UtcDateTime").IsRequired().HasColumnType("datetime");
            Property(x => x.LocalDateTime).HasColumnName("LocalDateTime").IsRequired().HasColumnType("datetime");
            Property(x => x.ReportId).HasColumnName("ReportID").IsRequired().HasColumnType("bigint");
            InitializePartial();
        }
        partial void InitializePartial();
    }

    // DomainStats
    internal partial class DomainStatMap : EntityTypeConfiguration<DomainStat>
    {
        public DomainStatMap()
            : this("dbo")
        {
        }
 
        public DomainStatMap(string schema)
        {
            ToTable(schema + ".DomainStats");
            HasKey(x => new { x.DomainName, x.GeoCountryId });

            Property(x => x.DomainName).HasColumnName("DomainName").IsRequired().IsUnicode(false).HasColumnType("varchar").HasMaxLength(64);
            Property(x => x.GeoCountryId).HasColumnName("GeoCountryID").IsRequired().HasColumnType("int");
            Property(x => x.Bids).HasColumnName("Bids").IsOptional().HasColumnType("bigint");
            Property(x => x.Cpm).HasColumnName("CPM").IsOptional().HasColumnType("decimal").HasPrecision(18,4);
            InitializePartial();
        }
        partial void InitializePartial();
    }

    // DomainStats_Alternate
    internal partial class DomainStatsAlternateMap : EntityTypeConfiguration<DomainStatsAlternate>
    {
        public DomainStatsAlternateMap()
            : this("dbo")
        {
        }
 
        public DomainStatsAlternateMap(string schema)
        {
            ToTable(schema + ".DomainStats_Alternate");
            HasKey(x => new { x.DomainName, x.GeoCountryId });

            Property(x => x.DomainName).HasColumnName("DomainName").IsRequired().IsUnicode(false).HasColumnType("varchar").HasMaxLength(64);
            Property(x => x.GeoCountryId).HasColumnName("GeoCountryID").IsRequired().HasColumnType("int");
            Property(x => x.Bids).HasColumnName("Bids").IsOptional().HasColumnType("bigint");
            Property(x => x.Cpm).HasColumnName("CPM").IsOptional().HasColumnType("decimal").HasPrecision(18,4);
            InitializePartial();
        }
        partial void InitializePartial();
    }

    // DomainStats_Import
    internal partial class DomainStatsImportMap : EntityTypeConfiguration<DomainStatsImport>
    {
        public DomainStatsImportMap()
            : this("dbo")
        {
        }
 
        public DomainStatsImportMap(string schema)
        {
            ToTable(schema + ".DomainStats_Import");
            HasKey(x => new { x.DomainName, x.GeoCountryId });

            Property(x => x.DomainName).HasColumnName("DomainName").IsRequired().IsUnicode(false).HasColumnType("varchar").HasMaxLength(64);
            Property(x => x.GeoCountryId).HasColumnName("GeoCountryID").IsRequired().HasColumnType("int");
            Property(x => x.Bids).HasColumnName("Bids").IsOptional().HasColumnType("bigint");
            Property(x => x.Cpm).HasColumnName("CPM").IsOptional().HasColumnType("decimal").HasPrecision(18,4);
            InitializePartial();
        }
        partial void InitializePartial();
    }

    // ExchangeSpendSummaryLookup
    internal partial class ExchangeSpendSummaryLookupMap : EntityTypeConfiguration<ExchangeSpendSummaryLookup>
    {
        public ExchangeSpendSummaryLookupMap()
            : this("analytics")
        {
        }
 
        public ExchangeSpendSummaryLookupMap(string schema)
        {
            ToTable(schema + ".ExchangeSpendSummaryLookup");
            HasKey(x => x.PartnerId);

            Property(x => x.PartnerId).HasColumnName("PartnerID").IsRequired().HasColumnType("int");
            Property(x => x.ReportingDate).HasColumnName("ReportingDate").IsOptional().HasColumnType("date");
            Property(x => x.Impressions).HasColumnName("Impressions").IsOptional().HasColumnType("bigint");
            Property(x => x.MediaCostUsd).HasColumnName("MediaCostUsd").IsOptional().HasColumnType("money").HasPrecision(19,4);
            InitializePartial();
        }
        partial void InitializePartial();
    }

    // GeoCityLookup
    internal partial class GeoCityLookupMap : EntityTypeConfiguration<GeoCityLookup>
    {
        public GeoCityLookupMap()
            : this("analytics")
        {
        }
 
        public GeoCityLookupMap(string schema)
        {
            ToTable(schema + ".GeoCityLookup");
            HasKey(x => new { x.GeoCityId, x.CityName, x.Latitude, x.Longitude, x.GeoMetroId, x.MetroName, x.GeoRegionId, x.RegionCode, x.RegionName, x.GeoCountryId, x.Iso3166Code, x.CountryName, x.IsGeoTarget });

            Property(x => x.GeoCityId).HasColumnName("GeoCityID").IsRequired().HasColumnType("int");
            Property(x => x.CityName).HasColumnName("CityName").IsRequired().HasColumnType("nvarchar").HasMaxLength(50);
            Property(x => x.Latitude).HasColumnName("Latitude").IsRequired().HasColumnType("float");
            Property(x => x.Longitude).HasColumnName("Longitude").IsRequired().HasColumnType("float");
            Property(x => x.GeoMetroId).HasColumnName("GeoMetroID").IsRequired().HasColumnType("int");
            Property(x => x.MetroName).HasColumnName("MetroName").IsRequired().HasColumnType("nvarchar").HasMaxLength(50);
            Property(x => x.GeoRegionId).HasColumnName("GeoRegionID").IsRequired().HasColumnType("int");
            Property(x => x.RegionCode).HasColumnName("RegionCode").IsRequired().HasColumnType("nvarchar").HasMaxLength(10);
            Property(x => x.RegionName).HasColumnName("RegionName").IsRequired().HasColumnType("nvarchar").HasMaxLength(50);
            Property(x => x.RegionShortName).HasColumnName("RegionShortName").IsOptional().HasColumnType("nvarchar").HasMaxLength(50);
            Property(x => x.GeoCountryId).HasColumnName("GeoCountryID").IsRequired().HasColumnType("int");
            Property(x => x.Iso3166Code).HasColumnName("ISO3166Code").IsRequired().IsFixedLength().IsUnicode(false).HasColumnType("char").HasMaxLength(3);
            Property(x => x.CountryName).HasColumnName("CountryName").IsRequired().HasColumnType("nvarchar").HasMaxLength(50);
            Property(x => x.IsGeoTarget).HasColumnName("IsGeoTarget").IsRequired().HasColumnType("bit");
            InitializePartial();
        }
        partial void InitializePartial();
    }

    // GeoCountryLookup
    internal partial class GeoCountryLookupMap : EntityTypeConfiguration<GeoCountryLookup>
    {
        public GeoCountryLookupMap()
            : this("analytics")
        {
        }
 
        public GeoCountryLookupMap(string schema)
        {
            ToTable(schema + ".GeoCountryLookup");
            HasKey(x => new { x.GeoCountryId, x.Iso3166Code, x.CountryName, x.IsGeoTarget });

            Property(x => x.GeoCountryId).HasColumnName("GeoCountryID").IsRequired().HasColumnType("int");
            Property(x => x.Iso3166Code).HasColumnName("ISO3166Code").IsRequired().IsFixedLength().IsUnicode(false).HasColumnType("char").HasMaxLength(3);
            Property(x => x.CountryName).HasColumnName("CountryName").IsRequired().HasColumnType("nvarchar").HasMaxLength(50);
            Property(x => x.IsGeoTarget).HasColumnName("IsGeoTarget").IsRequired().HasColumnType("bit");
            InitializePartial();
        }
        partial void InitializePartial();
    }

    // GeoMetroLookup
    internal partial class GeoMetroLookupMap : EntityTypeConfiguration<GeoMetroLookup>
    {
        public GeoMetroLookupMap()
            : this("analytics")
        {
        }
 
        public GeoMetroLookupMap(string schema)
        {
            ToTable(schema + ".GeoMetroLookup");
            HasKey(x => new { x.GeoMetroId, x.MetroName, x.GeoRegionId, x.RegionCode, x.RegionName, x.RegionShortName, x.GeoCountryId, x.Iso3166Code, x.CountryName, x.IsGeoTarget });

            Property(x => x.GeoMetroId).HasColumnName("GeoMetroID").IsRequired().HasColumnType("int");
            Property(x => x.MetroName).HasColumnName("MetroName").IsRequired().HasColumnType("nvarchar").HasMaxLength(50);
            Property(x => x.GeoRegionId).HasColumnName("GeoRegionID").IsRequired().HasColumnType("int");
            Property(x => x.RegionCode).HasColumnName("RegionCode").IsRequired().HasColumnType("nvarchar").HasMaxLength(10);
            Property(x => x.RegionName).HasColumnName("RegionName").IsRequired().HasColumnType("nvarchar").HasMaxLength(50);
            Property(x => x.RegionShortName).HasColumnName("RegionShortName").IsRequired().HasColumnType("nvarchar").HasMaxLength(50);
            Property(x => x.GeoCountryId).HasColumnName("GeoCountryID").IsRequired().HasColumnType("int");
            Property(x => x.Iso3166Code).HasColumnName("ISO3166Code").IsRequired().IsFixedLength().IsUnicode(false).HasColumnType("char").HasMaxLength(3);
            Property(x => x.CountryName).HasColumnName("CountryName").IsRequired().HasColumnType("nvarchar").HasMaxLength(50);
            Property(x => x.IsGeoTarget).HasColumnName("IsGeoTarget").IsRequired().HasColumnType("bit");
            InitializePartial();
        }
        partial void InitializePartial();
    }

    // GeoRegionLookup
    internal partial class GeoRegionLookupMap : EntityTypeConfiguration<GeoRegionLookup>
    {
        public GeoRegionLookupMap()
            : this("analytics")
        {
        }
 
        public GeoRegionLookupMap(string schema)
        {
            ToTable(schema + ".GeoRegionLookup");
            HasKey(x => new { x.GeoRegionId, x.RegionCode, x.RegionName, x.RegionShortName, x.GeoCountryId, x.Iso3166Code, x.CountryName, x.IsGeoTarget });

            Property(x => x.GeoRegionId).HasColumnName("GeoRegionID").IsRequired().HasColumnType("int");
            Property(x => x.RegionCode).HasColumnName("RegionCode").IsRequired().HasColumnType("nvarchar").HasMaxLength(10);
            Property(x => x.RegionName).HasColumnName("RegionName").IsRequired().HasColumnType("nvarchar").HasMaxLength(50);
            Property(x => x.RegionShortName).HasColumnName("RegionShortName").IsRequired().HasColumnType("nvarchar").HasMaxLength(50);
            Property(x => x.GeoCountryId).HasColumnName("GeoCountryID").IsRequired().HasColumnType("int");
            Property(x => x.Iso3166Code).HasColumnName("ISO3166Code").IsRequired().IsFixedLength().IsUnicode(false).HasColumnType("char").HasMaxLength(3);
            Property(x => x.CountryName).HasColumnName("CountryName").IsRequired().HasColumnType("nvarchar").HasMaxLength(50);
            Property(x => x.IsGeoTarget).HasColumnName("IsGeoTarget").IsRequired().HasColumnType("bit");
            InitializePartial();
        }
        partial void InitializePartial();
    }

    // ImportSummary
    internal partial class ImportSummaryMap : EntityTypeConfiguration<ImportSummary>
    {
        public ImportSummaryMap()
            : this("analytics")
        {
        }
 
        public ImportSummaryMap(string schema)
        {
            ToTable(schema + ".ImportSummary");
            HasKey(x => new { x.TableName, x.ProcessedUtcDateTime, x.UtcDateTime });

            Property(x => x.TableName).HasColumnName("TableName").IsRequired().HasColumnType("nvarchar").HasMaxLength(100).HasDatabaseGeneratedOption(DatabaseGeneratedOption.None);
            Property(x => x.ProcessedUtcDateTime).HasColumnName("ProcessedUtcDateTime").IsRequired().HasColumnType("datetime").HasDatabaseGeneratedOption(DatabaseGeneratedOption.None);
            Property(x => x.UtcDateTime).HasColumnName("UtcDateTime").IsRequired().HasColumnType("datetime").HasDatabaseGeneratedOption(DatabaseGeneratedOption.None);
            Property(x => x.UtcDate).HasColumnName("UtcDate").IsRequired().HasColumnType("date");
            Property(x => x.Bids).HasColumnName("Bids").IsRequired().HasColumnType("bigint");
            Property(x => x.Impressions).HasColumnName("Impressions").IsRequired().HasColumnType("bigint");
            Property(x => x.Clicks).HasColumnName("Clicks").IsRequired().HasColumnType("bigint");
            Property(x => x.Conversions).HasColumnName("Conversions").IsRequired().HasColumnType("bigint");
            Property(x => x.PostViewConversions).HasColumnName("PostViewConversions").IsRequired().HasColumnType("bigint");
            Property(x => x.PostClickConversions).HasColumnName("PostClickConversions").IsRequired().HasColumnType("bigint");
            Property(x => x.MediaCostUsdMicros).HasColumnName("MediaCostUsdMicros").IsRequired().HasColumnType("bigint");
            Property(x => x.MediaCostLocalMicros).HasColumnName("MediaCostLocalMicros").IsRequired().HasColumnType("bigint");
            Property(x => x.DataCostLocalMicros).HasColumnName("DataCostLocalMicros").IsRequired().HasColumnType("bigint");
            Property(x => x.InvalidImpressions).HasColumnName("InvalidImpressions").IsRequired().HasColumnType("bigint");
            Property(x => x.InvalidClicks).HasColumnName("InvalidClicks").IsRequired().HasColumnType("bigint");
            Property(x => x.FeesUsdSuperMicros).HasColumnName("FeesUsdSuperMicros").IsRequired().HasColumnType("bigint");
            Property(x => x.FeesLocalSuperMicros).HasColumnName("FeesLocalSuperMicros").IsRequired().HasColumnType("bigint");
            Property(x => x.AdSlotDurationInSeconds).HasColumnName("AdSlotDurationInSeconds").IsOptional().HasColumnType("bigint");
            Property(x => x.RawViews).HasColumnName("RawViews").IsOptional().HasColumnType("bigint");
            Property(x => x.IabViews).HasColumnName("IabViews").IsOptional().HasColumnType("bigint");
            Property(x => x.ViewDurationInSeconds).HasColumnName("ViewDurationInSeconds").IsOptional().HasColumnType("bigint");
            InitializePartial();
        }
        partial void InitializePartial();
    }

    // ImportSummaryReportID
    internal partial class ImportSummaryReportIdMap : EntityTypeConfiguration<ImportSummaryReportId>
    {
        public ImportSummaryReportIdMap()
            : this("analytics")
        {
        }
 
        public ImportSummaryReportIdMap(string schema)
        {
            ToTable(schema + ".ImportSummaryReportID");
            HasKey(x => new { x.TableName, x.ProcessedUtcDateTime, x.ReportId, x.UtcDateTime });

            Property(x => x.TableName).HasColumnName("TableName").IsRequired().HasColumnType("nvarchar").HasMaxLength(100).HasDatabaseGeneratedOption(DatabaseGeneratedOption.None);
            Property(x => x.ProcessedUtcDateTime).HasColumnName("ProcessedUtcDateTime").IsRequired().HasColumnType("datetime").HasDatabaseGeneratedOption(DatabaseGeneratedOption.None);
            Property(x => x.ReportId).HasColumnName("ReportID").IsRequired().HasColumnType("bigint").HasDatabaseGeneratedOption(DatabaseGeneratedOption.None);
            Property(x => x.UtcDateTime).HasColumnName("UtcDateTime").IsRequired().HasColumnType("datetime").HasDatabaseGeneratedOption(DatabaseGeneratedOption.None);
            Property(x => x.UtcDate).HasColumnName("UtcDate").IsRequired().HasColumnType("date");
            Property(x => x.Bids).HasColumnName("Bids").IsRequired().HasColumnType("bigint");
            Property(x => x.Impressions).HasColumnName("Impressions").IsRequired().HasColumnType("bigint");
            Property(x => x.Clicks).HasColumnName("Clicks").IsRequired().HasColumnType("bigint");
            Property(x => x.Conversions).HasColumnName("Conversions").IsRequired().HasColumnType("bigint");
            Property(x => x.PostViewConversions).HasColumnName("PostViewConversions").IsRequired().HasColumnType("bigint");
            Property(x => x.PostClickConversions).HasColumnName("PostClickConversions").IsRequired().HasColumnType("bigint");
            Property(x => x.MediaCostUsdMicros).HasColumnName("MediaCostUsdMicros").IsRequired().HasColumnType("bigint");
            Property(x => x.MediaCostLocalMicros).HasColumnName("MediaCostLocalMicros").IsRequired().HasColumnType("bigint");
            Property(x => x.DataCostLocalMicros).HasColumnName("DataCostLocalMicros").IsRequired().HasColumnType("bigint");
            Property(x => x.InvalidImpressions).HasColumnName("InvalidImpressions").IsRequired().HasColumnType("bigint");
            Property(x => x.InvalidClicks).HasColumnName("InvalidClicks").IsRequired().HasColumnType("bigint");
            Property(x => x.FeesUsdSuperMicros).HasColumnName("FeesUsdSuperMicros").IsRequired().HasColumnType("bigint");
            Property(x => x.FeesLocalSuperMicros).HasColumnName("FeesLocalSuperMicros").IsRequired().HasColumnType("bigint");
            Property(x => x.AdSlotDurationInSeconds).HasColumnName("AdSlotDurationInSeconds").IsOptional().HasColumnType("bigint");
            Property(x => x.RawViews).HasColumnName("RawViews").IsOptional().HasColumnType("bigint");
            Property(x => x.IabViews).HasColumnName("IabViews").IsOptional().HasColumnType("bigint");
            Property(x => x.ViewDurationInSeconds).HasColumnName("ViewDurationInSeconds").IsOptional().HasColumnType("bigint");
            InitializePartial();
        }
        partial void InitializePartial();
    }

    // InventoryLookup
    internal partial class InventoryLookupMap : EntityTypeConfiguration<InventoryLookup>
    {
        public InventoryLookupMap()
            : this("analytics")
        {
        }
 
        public InventoryLookupMap(string schema)
        {
            ToTable(schema + ".InventoryLookup");
            HasKey(x => x.InventoryId);

            Property(x => x.InventoryId).HasColumnName("InventoryID").IsRequired().HasColumnType("bigint").HasDatabaseGeneratedOption(DatabaseGeneratedOption.None);
            Property(x => x.PartnerId).HasColumnName("PartnerID").IsRequired().HasColumnType("int");
            Property(x => x.PublisherId).HasColumnName("PublisherID").IsRequired().HasColumnType("int");
            Property(x => x.WebsiteId).HasColumnName("WebsiteID").IsRequired().HasColumnType("bigint");
            Property(x => x.WebsiteUrl).HasColumnName("WebsiteUrl").IsRequired().HasColumnType("nvarchar").HasMaxLength(450);
            InitializePartial();
        }
        partial void InitializePartial();
    }

    // InventoryLookupException
    internal partial class InventoryLookupExceptionMap : EntityTypeConfiguration<InventoryLookupException>
    {
        public InventoryLookupExceptionMap()
            : this("analytics")
        {
        }
 
        public InventoryLookupExceptionMap(string schema)
        {
            ToTable(schema + ".InventoryLookupException");
            HasKey(x => new { x.InventoryId, x.PartnerId, x.PublisherId, x.WebsiteId, x.WebsiteUrl });

            Property(x => x.InventoryId).HasColumnName("InventoryID").IsRequired().HasColumnType("bigint");
            Property(x => x.PartnerId).HasColumnName("PartnerID").IsRequired().HasColumnType("int");
            Property(x => x.PublisherId).HasColumnName("PublisherID").IsRequired().HasColumnType("int");
            Property(x => x.WebsiteId).HasColumnName("WebsiteID").IsRequired().HasColumnType("bigint");
            Property(x => x.WebsiteUrl).HasColumnName("WebsiteUrl").IsRequired().HasColumnType("nvarchar").HasMaxLength(450);
            InitializePartial();
        }
        partial void InitializePartial();
    }

    // InventoryLookupImport
    internal partial class InventoryLookupImportMap : EntityTypeConfiguration<InventoryLookupImport>
    {
        public InventoryLookupImportMap()
            : this("analytics")
        {
        }
 
        public InventoryLookupImportMap(string schema)
        {
            ToTable(schema + ".InventoryLookupImport");
            HasKey(x => new { x.InventoryId, x.PartnerId, x.PublisherId, x.WebsiteId });

            Property(x => x.InventoryId).HasColumnName("InventoryID").IsRequired().HasColumnType("bigint");
            Property(x => x.PartnerId).HasColumnName("PartnerID").IsRequired().HasColumnType("int");
            Property(x => x.PublisherId).HasColumnName("PublisherID").IsRequired().HasColumnType("int");
            Property(x => x.WebsiteId).HasColumnName("WebsiteID").IsRequired().HasColumnType("bigint");
            Property(x => x.WebsiteUrl).HasColumnName("WebsiteUrl").IsOptional().HasColumnType("nvarchar").HasMaxLength(450);
            InitializePartial();
        }
        partial void InitializePartial();
    }

    // JobHistory
    internal partial class JobHistoryMap : EntityTypeConfiguration<JobHistory>
    {
        public JobHistoryMap()
            : this("analytics")
        {
        }
 
        public JobHistoryMap(string schema)
        {
            ToTable(schema + ".JobHistory");
            HasKey(x => new { x.JobId, x.UtcDateTime });

            Property(x => x.JobId).HasColumnName("JobID").IsRequired().IsUnicode(false).HasColumnType("varchar").HasMaxLength(500);
            Property(x => x.UtcDateTime).HasColumnName("UtcDateTime").IsRequired().HasColumnType("datetime");
            InitializePartial();
        }
        partial void InitializePartial();
    }

    // LanguageLookup
    internal partial class LanguageLookupMap : EntityTypeConfiguration<LanguageLookup>
    {
        public LanguageLookupMap()
            : this("analytics")
        {
        }
 
        public LanguageLookupMap(string schema)
        {
            ToTable(schema + ".LanguageLookup");
            HasKey(x => x.LanguageId);

            Property(x => x.LanguageId).HasColumnName("LanguageID").IsRequired().HasColumnType("int").HasDatabaseGeneratedOption(DatabaseGeneratedOption.Identity);
            Property(x => x.LanguageCode).HasColumnName("LanguageCode").IsOptional().HasColumnType("nvarchar").HasMaxLength(50);
            Property(x => x.LanguageName).HasColumnName("LanguageName").IsOptional().HasColumnType("nvarchar").HasMaxLength(50);
            InitializePartial();
        }
        partial void InitializePartial();
    }

    // PacingAndPricingHealth
    internal partial class PacingAndPricingHealthMap : EntityTypeConfiguration<PacingAndPricingHealth>
    {
        public PacingAndPricingHealthMap()
            : this("analytics")
        {
        }
 
        public PacingAndPricingHealthMap(string schema)
        {
            ToTable(schema + ".PacingAndPricingHealth");
            HasKey(x => new { x.AdGroupId, x.PricingHealth, x.PacingHealth });

            Property(x => x.AdGroupId).HasColumnName("AdGroupID").IsRequired().HasColumnType("int");
            Property(x => x.Impressions).HasColumnName("Impressions").IsOptional().HasColumnType("bigint");
            Property(x => x.Clicks).HasColumnName("Clicks").IsOptional().HasColumnType("bigint");
            Property(x => x.Conversions).HasColumnName("Conversions").IsOptional().HasColumnType("bigint");
            Property(x => x.Spend).HasColumnName("Spend").IsOptional().HasColumnType("decimal").HasPrecision(19,4);
            Property(x => x.Cpm).HasColumnName("Cpm").IsOptional().HasColumnType("decimal").HasPrecision(19,4);
            Property(x => x.Cpc).HasColumnName("Cpc").IsOptional().HasColumnType("decimal").HasPrecision(19,4);
            Property(x => x.Cpa).HasColumnName("Cpa").IsOptional().HasColumnType("decimal").HasPrecision(19,4);
            Property(x => x.ImpressionsLast7Days).HasColumnName("ImpressionsLast7Days").IsOptional().HasColumnType("bigint");
            Property(x => x.ClicksLast7Days).HasColumnName("ClicksLast7Days").IsOptional().HasColumnType("bigint");
            Property(x => x.ConversionsLast7Days).HasColumnName("ConversionsLast7Days").IsOptional().HasColumnType("bigint");
            Property(x => x.SpendLast7Days).HasColumnName("SpendLast7Days").IsOptional().HasColumnType("decimal").HasPrecision(19,4);
            Property(x => x.CpmLast7Days).HasColumnName("CpmLast7Days").IsOptional().HasColumnType("decimal").HasPrecision(19,4);
            Property(x => x.CpcLast7Days).HasColumnName("CpcLast7Days").IsOptional().HasColumnType("decimal").HasPrecision(19,4);
            Property(x => x.CpaLast7Days).HasColumnName("CpaLast7Days").IsOptional().HasColumnType("decimal").HasPrecision(19,4);
            Property(x => x.ImpressionsLast30Days).HasColumnName("ImpressionsLast30Days").IsOptional().HasColumnType("bigint");
            Property(x => x.ClicksLast30Days).HasColumnName("ClicksLast30Days").IsOptional().HasColumnType("bigint");
            Property(x => x.ConversionsLast30Days).HasColumnName("ConversionsLast30Days").IsOptional().HasColumnType("bigint");
            Property(x => x.SpendLast30Days).HasColumnName("SpendLast30Days").IsOptional().HasColumnType("decimal").HasPrecision(19,4);
            Property(x => x.CpmLast30Days).HasColumnName("CpmLast30Days").IsOptional().HasColumnType("decimal").HasPrecision(19,4);
            Property(x => x.CpcLast30Days).HasColumnName("CpcLast30Days").IsOptional().HasColumnType("decimal").HasPrecision(19,4);
            Property(x => x.CpaLast30Days).HasColumnName("CpaLast30Days").IsOptional().HasColumnType("decimal").HasPrecision(19,4);
            Property(x => x.Tpi).HasColumnName("TPI").IsOptional().HasColumnType("decimal").HasPrecision(38,19);
            Property(x => x.Spi).HasColumnName("SPI").IsOptional().HasColumnType("float");
            Property(x => x.PricingHealth).HasColumnName("PricingHealth").IsRequired().HasColumnType("int");
            Property(x => x.PacingHealth).HasColumnName("PacingHealth").IsRequired().HasColumnType("int");
            InitializePartial();
        }
        partial void InitializePartial();
    }

    // PartnerBILookup
    internal partial class PartnerBiLookupMap : EntityTypeConfiguration<PartnerBiLookup>
    {
        public PartnerBiLookupMap()
            : this("analytics")
        {
        }
 
        public PartnerBiLookupMap(string schema)
        {
            ToTable(schema + ".PartnerBILookup");
            HasKey(x => new { x.PartnerId, x.IsExchangeTarget });

            Property(x => x.PartnerId).HasColumnName("PartnerID").IsRequired().HasColumnType("int");
            Property(x => x.PartnerName).HasColumnName("PartnerName").IsOptional().HasColumnType("nvarchar").HasMaxLength(50);
            Property(x => x.IsExchangeTarget).HasColumnName("IsExchangeTarget").IsRequired().HasColumnType("bit");
            Property(x => x.TimeZoneId).HasColumnName("TimeZoneID").IsOptional().HasColumnType("int");
            InitializePartial();
        }
        partial void InitializePartial();
    }

    // PartnerLookup
    internal partial class PartnerLookupMap : EntityTypeConfiguration<PartnerLookup>
    {
        public PartnerLookupMap()
            : this("analytics")
        {
        }
 
        public PartnerLookupMap(string schema)
        {
            ToTable(schema + ".PartnerLookup");
            HasKey(x => x.PartnerId);

            Property(x => x.PartnerId).HasColumnName("PartnerID").IsRequired().HasColumnType("int");
            Property(x => x.PartnerName).HasColumnName("PartnerName").IsOptional().HasColumnType("nvarchar").HasMaxLength(50);
            InitializePartial();
        }
        partial void InitializePartial();
    }

    // PlacementBILookup
    internal partial class PlacementBiLookupMap : EntityTypeConfiguration<PlacementBiLookup>
    {
        public PlacementBiLookupMap()
            : this("analytics")
        {
        }
 
        public PlacementBiLookupMap(string schema)
        {
            ToTable(schema + ".PlacementBILookup");
            HasKey(x => new { x.PlacementId, x.AdGroupId, x.CreativeId, x.BuyerAccountId, x.PlacementStatusId, x.IsDeleted, x.UtcCreatedDateTime, x.UtcModifiedDateTime, x.PlacementUuid });

            Property(x => x.PlacementId).HasColumnName("PlacementID").IsRequired().HasColumnType("int").HasDatabaseGeneratedOption(DatabaseGeneratedOption.Identity);
            Property(x => x.AdGroupId).HasColumnName("AdGroupID").IsRequired().HasColumnType("int");
            Property(x => x.CreativeId).HasColumnName("CreativeID").IsRequired().HasColumnType("int");
            Property(x => x.BuyerAccountId).HasColumnName("BuyerAccountID").IsRequired().HasColumnType("int");
            Property(x => x.PlacementStatusId).HasColumnName("PlacementStatusID").IsRequired().HasColumnType("int");
            Property(x => x.IsDeleted).HasColumnName("IsDeleted").IsRequired().HasColumnType("bit");
            Property(x => x.UtcCreatedDateTime).HasColumnName("UtcCreatedDateTime").IsRequired().HasColumnType("datetime");
            Property(x => x.UtcModifiedDateTime).HasColumnName("UtcModifiedDateTime").IsRequired().HasColumnType("datetime");
            Property(x => x.PlacementUuid).HasColumnName("PlacementUuid").IsRequired().HasColumnType("uniqueidentifier");
            Property(x => x.CloneFromPlacementId).HasColumnName("CloneFromPlacementID").IsOptional().HasColumnType("int");
            InitializePartial();
        }
        partial void InitializePartial();
    }

    // PublisherBILookup
    internal partial class PublisherBiLookupMap : EntityTypeConfiguration<PublisherBiLookup>
    {
        public PublisherBiLookupMap()
            : this("analytics")
        {
        }
 
        public PublisherBiLookupMap(string schema)
        {
            ToTable(schema + ".PublisherBILookup");
            HasKey(x => new { x.PublisherId, x.PublisherUuid, x.PublisherName, x.PartnerId, x.PartnerKey, x.PrivateMarketModeId, x.IsActive });

            Property(x => x.PublisherId).HasColumnName("PublisherID").IsRequired().HasColumnType("int");
            Property(x => x.PublisherUuid).HasColumnName("PublisherUuid").IsRequired().HasColumnType("uniqueidentifier");
            Property(x => x.PublisherName).HasColumnName("PublisherName").IsRequired().HasColumnType("nvarchar").HasMaxLength(255);
            Property(x => x.PartnerId).HasColumnName("PartnerID").IsRequired().HasColumnType("int");
            Property(x => x.PartnerKey).HasColumnName("PartnerKey").IsRequired().HasColumnType("nvarchar").HasMaxLength(255);
            Property(x => x.PrivateMarketModeId).HasColumnName("PrivateMarketModeID").IsRequired().HasColumnType("int");
            Property(x => x.IsActive).HasColumnName("IsActive").IsRequired().HasColumnType("bit");
            InitializePartial();
        }
        partial void InitializePartial();
    }

    // PublisherLookup
    internal partial class PublisherLookupMap : EntityTypeConfiguration<PublisherLookup>
    {
        public PublisherLookupMap()
            : this("analytics")
        {
        }
 
        public PublisherLookupMap(string schema)
        {
            ToTable(schema + ".PublisherLookup");
            HasKey(x => new { x.PublisherId, x.PublisherName, x.PartnerId });

            Property(x => x.PublisherId).HasColumnName("PublisherID").IsRequired().HasColumnType("int");
            Property(x => x.PublisherName).HasColumnName("PublisherName").IsRequired().HasColumnType("nvarchar").HasMaxLength(255);
            Property(x => x.PartnerId).HasColumnName("PartnerID").IsRequired().HasColumnType("int");
            InitializePartial();
        }
        partial void InitializePartial();
    }

    // SalesRegionLookup
    internal partial class SalesRegionLookupMap : EntityTypeConfiguration<SalesRegionLookup>
    {
        public SalesRegionLookupMap()
            : this("analytics")
        {
        }
 
        public SalesRegionLookupMap(string schema)
        {
            ToTable(schema + ".SalesRegionLookup");
            HasKey(x => new { x.SalesRegionId, x.SalesRegionName });

            Property(x => x.SalesRegionId).HasColumnName("SalesRegionID").IsRequired().HasColumnType("int");
            Property(x => x.SalesRegionName).HasColumnName("SalesRegionName").IsRequired().HasColumnType("nvarchar").HasMaxLength(500);
            InitializePartial();
        }
        partial void InitializePartial();
    }

    // SchemaMigration
    internal partial class SchemaMigrationMap : EntityTypeConfiguration<SchemaMigration>
    {
        public SchemaMigrationMap()
            : this("dbo")
        {
        }
 
        public SchemaMigrationMap(string schema)
        {
            ToTable(schema + ".SchemaMigration");
            HasKey(x => x.SchemaVersion);

            Property(x => x.SchemaVersion).HasColumnName("SchemaVersion").IsRequired().HasColumnType("int").HasDatabaseGeneratedOption(DatabaseGeneratedOption.None);
            Property(x => x.DateApplied).HasColumnName("DateApplied").IsOptional().HasColumnType("datetime");
            InitializePartial();
        }
        partial void InitializePartial();
    }

    // Segment
    internal partial class SegmentMap : EntityTypeConfiguration<Segment>
    {
        public SegmentMap()
            : this("analytics")
        {
        }
 
        public SegmentMap(string schema)
        {
            ToTable(schema + ".Segment");
            HasKey(x => new { x.RtbSegmentId, x.UtcDate, x.LocalDate, x.UtcDateTime, x.LocalDateTime });

            Property(x => x.RtbSegmentId).HasColumnName("RtbSegmentID").IsRequired().HasColumnType("nvarchar").HasMaxLength(2000);
            Property(x => x.UtcDate).HasColumnName("UtcDate").IsRequired().HasColumnType("date");
            Property(x => x.LocalDate).HasColumnName("LocalDate").IsRequired().HasColumnType("date");
            Property(x => x.UtcDateTime).HasColumnName("UtcDateTime").IsRequired().HasColumnType("datetime");
            Property(x => x.LocalDateTime).HasColumnName("LocalDateTime").IsRequired().HasColumnType("datetime");
            Property(x => x.MemberCount).HasColumnName("MemberCount").IsOptional().HasColumnType("int");
            InitializePartial();
        }
        partial void InitializePartial();
    }

    // SegmentCombined
    internal partial class SegmentCombinedMap : EntityTypeConfiguration<SegmentCombined>
    {
        public SegmentCombinedMap()
            : this("analytics")
        {
        }
 
        public SegmentCombinedMap(string schema)
        {
            ToTable(schema + ".SegmentCombined");
            HasKey(x => new { x.RtbSegmentId, x.UtcDate, x.LocalDate, x.UtcDateTime, x.LocalDateTime });

            Property(x => x.RtbSegmentId).HasColumnName("RtbSegmentID").IsRequired().HasColumnType("nvarchar").HasMaxLength(2000);
            Property(x => x.UtcDate).HasColumnName("UtcDate").IsRequired().HasColumnType("date");
            Property(x => x.LocalDate).HasColumnName("LocalDate").IsRequired().HasColumnType("date");
            Property(x => x.UtcDateTime).HasColumnName("UtcDateTime").IsRequired().HasColumnType("datetime");
            Property(x => x.LocalDateTime).HasColumnName("LocalDateTime").IsRequired().HasColumnType("datetime");
            Property(x => x.MemberCount).HasColumnName("MemberCount").IsOptional().HasColumnType("int");
            InitializePartial();
        }
        partial void InitializePartial();
    }

    // SegmentExceptionReportID
    internal partial class SegmentExceptionReportIdMap : EntityTypeConfiguration<SegmentExceptionReportId>
    {
        public SegmentExceptionReportIdMap()
            : this("analytics")
        {
        }
 
        public SegmentExceptionReportIdMap(string schema)
        {
            ToTable(schema + ".SegmentExceptionReportID");
            HasKey(x => x.ReportId);

            Property(x => x.RtbSegmentId).HasColumnName("RtbSegmentID").IsOptional().HasColumnType("nvarchar").HasMaxLength(2000);
            Property(x => x.UtcDate).HasColumnName("UtcDate").IsOptional().HasColumnType("date");
            Property(x => x.UtcHour).HasColumnName("UtcHour").IsOptional().HasColumnType("int");
            Property(x => x.MemberCount).HasColumnName("MemberCount").IsOptional().HasColumnType("int");
            Property(x => x.ReportId).HasColumnName("ReportID").IsRequired().HasColumnType("bigint");
            InitializePartial();
        }
        partial void InitializePartial();
    }

    // SegmentImport
    internal partial class SegmentImportMap : EntityTypeConfiguration<SegmentImport>
    {
        public SegmentImportMap()
            : this("analytics")
        {
        }
 
        public SegmentImportMap(string schema)
        {
            ToTable(schema + ".SegmentImport");
            HasKey(x => new { x.RtbSegmentId, x.UtcDate, x.UtcHour, x.MemberCount });

            Property(x => x.RtbSegmentId).HasColumnName("RtbSegmentID").IsRequired().HasColumnType("nvarchar").HasMaxLength(2000);
            Property(x => x.UtcDate).HasColumnName("UtcDate").IsRequired().HasColumnType("date");
            Property(x => x.UtcHour).HasColumnName("UtcHour").IsRequired().HasColumnType("int");
            Property(x => x.MemberCount).HasColumnName("MemberCount").IsRequired().HasColumnType("int");
            InitializePartial();
        }
        partial void InitializePartial();
    }

    // SegmentImportReportID
    internal partial class SegmentImportReportIdMap : EntityTypeConfiguration<SegmentImportReportId>
    {
        public SegmentImportReportIdMap()
            : this("analytics")
        {
        }
 
        public SegmentImportReportIdMap(string schema)
        {
            ToTable(schema + ".SegmentImportReportID");
            HasKey(x => new { x.RtbSegmentId, x.UtcDate, x.UtcHour, x.MemberCount, x.ReportId });

            Property(x => x.RtbSegmentId).HasColumnName("RtbSegmentID").IsRequired().HasColumnType("nvarchar").HasMaxLength(2000);
            Property(x => x.UtcDate).HasColumnName("UtcDate").IsRequired().HasColumnType("date");
            Property(x => x.UtcHour).HasColumnName("UtcHour").IsRequired().HasColumnType("int");
            Property(x => x.MemberCount).HasColumnName("MemberCount").IsRequired().HasColumnType("int");
            Property(x => x.ReportId).HasColumnName("ReportID").IsRequired().HasColumnType("bigint");
            InitializePartial();
        }
        partial void InitializePartial();
    }

    // SegmentLookup
    internal partial class SegmentLookupMap : EntityTypeConfiguration<SegmentLookup>
    {
        public SegmentLookupMap()
            : this("analytics")
        {
        }
 
        public SegmentLookupMap(string schema)
        {
            ToTable(schema + ".SegmentLookup");
            HasKey(x => new { x.SegmentId, x.RtbSegmentId, x.SegmentTypeId, x.AttributionWindowInMinutes, x.RecencyInMinutes, x.PostViewLifeTimeInMinutes, x.PostClickLifeTimeInMinutes, x.LastActivityTimestamp, x.SegmentStatusId });

            Property(x => x.SegmentId).HasColumnName("SegmentID").IsRequired().HasColumnType("int");
            Property(x => x.RtbSegmentId).HasColumnName("RtbSegmentID").IsRequired().HasColumnType("nvarchar").HasMaxLength(40);
            Property(x => x.ThirdPartyUtcStartDate).HasColumnName("ThirdPartyUtcStartDate").IsOptional().HasColumnType("datetime");
            Property(x => x.ThirdPartyUtcEndDate).HasColumnName("ThirdPartyUtcEndDate").IsOptional().HasColumnType("datetime");
            Property(x => x.BuyerAccountId).HasColumnName("BuyerAccountID").IsOptional().HasColumnType("int");
            Property(x => x.CompanyName).HasColumnName("CompanyName").IsOptional().HasColumnType("nvarchar").HasMaxLength(255);
            Property(x => x.SegmentName).HasColumnName("SegmentName").IsOptional().HasColumnType("nvarchar").HasMaxLength(4000);
            Property(x => x.SegmentTypeId).HasColumnName("SegmentTypeID").IsRequired().HasColumnType("int");
            Property(x => x.Uniques).HasColumnName("Uniques").IsOptional().HasColumnType("int");
            Property(x => x.AttributionWindowInMinutes).HasColumnName("AttributionWindowInMinutes").IsRequired().HasColumnType("int");
            Property(x => x.RecencyInDays).HasColumnName("RecencyInDays").IsOptional().HasColumnType("int");
            Property(x => x.RecencyInMinutes).HasColumnName("RecencyInMinutes").IsRequired().HasColumnType("int");
            Property(x => x.PostViewLifeTimeInMinutes).HasColumnName("PostViewLifeTimeInMinutes").IsRequired().HasColumnType("int");
            Property(x => x.PostClickLifeTimeInMinutes).HasColumnName("PostClickLifeTimeInMinutes").IsRequired().HasColumnType("int");
            Property(x => x.LastActivityTimestamp).HasColumnName("LastActivityTimestamp").IsRequired().IsUnicode(false).HasColumnType("varchar").HasMaxLength(1);
            Property(x => x.SegmentStatusId).HasColumnName("SegmentStatusID").IsRequired().HasColumnType("int");
            Property(x => x.TimeZoneId).HasColumnName("TimeZoneID").IsOptional().HasColumnType("int");
            Property(x => x.MinutesOffset).HasColumnName("MinutesOffset").IsOptional().HasColumnType("int");
            Property(x => x.HourOffset).HasColumnName("HourOffset").IsOptional().HasColumnType("int");
            InitializePartial();
        }
        partial void InitializePartial();
    }

    // SegmentLookup_new
    internal partial class SegmentLookupNewMap : EntityTypeConfiguration<SegmentLookupNew>
    {
        public SegmentLookupNewMap()
            : this("analytics")
        {
        }
 
        public SegmentLookupNewMap(string schema)
        {
            ToTable(schema + ".SegmentLookup_new");
            HasKey(x => new { x.RtbSegmentId, x.ShortSegmentId, x.AttribWindowMins, x.ViewWindowMins, x.ClickWindowMins });

            Property(x => x.RtbSegmentId).HasColumnName("RtbSegmentID").IsRequired().HasColumnType("nvarchar").HasMaxLength(40);
            Property(x => x.ShortSegmentId).HasColumnName("short_segment_id").IsRequired().HasColumnType("int");
            Property(x => x.SegmentName).HasColumnName("segment_name").IsOptional().HasColumnType("nvarchar").HasMaxLength(4000);
            Property(x => x.BuyerId).HasColumnName("buyer_id").IsOptional().HasColumnType("int");
            Property(x => x.BuyerName).HasColumnName("buyer_name").IsOptional().HasColumnType("nvarchar").HasMaxLength(255);
            Property(x => x.AttribWindowMins).HasColumnName("attrib_window_mins").IsRequired().HasColumnType("int");
            Property(x => x.ViewWindowMins).HasColumnName("view_window_mins").IsRequired().HasColumnType("int");
            Property(x => x.ClickWindowMins).HasColumnName("click_window_mins").IsRequired().HasColumnType("int");
            InitializePartial();
        }
        partial void InitializePartial();
    }

    // SegmentReportID
    internal partial class SegmentReportIdMap : EntityTypeConfiguration<SegmentReportId>
    {
        public SegmentReportIdMap()
            : this("analytics")
        {
        }
 
        public SegmentReportIdMap(string schema)
        {
            ToTable(schema + ".SegmentReportID");
            HasKey(x => new { x.RtbSegmentId, x.UtcDate, x.LocalDate, x.UtcDateTime, x.LocalDateTime, x.ReportId });

            Property(x => x.RtbSegmentId).HasColumnName("RtbSegmentID").IsRequired().HasColumnType("nvarchar").HasMaxLength(2000);
            Property(x => x.UtcDate).HasColumnName("UtcDate").IsRequired().HasColumnType("date");
            Property(x => x.LocalDate).HasColumnName("LocalDate").IsRequired().HasColumnType("date");
            Property(x => x.UtcDateTime).HasColumnName("UtcDateTime").IsRequired().HasColumnType("datetime");
            Property(x => x.LocalDateTime).HasColumnName("LocalDateTime").IsRequired().HasColumnType("datetime");
            Property(x => x.MemberCount).HasColumnName("MemberCount").IsOptional().HasColumnType("int");
            Property(x => x.ReportId).HasColumnName("ReportID").IsRequired().HasColumnType("bigint");
            InitializePartial();
        }
        partial void InitializePartial();
    }

    // ThirdPartyPlacementLookup
    internal partial class ThirdPartyPlacementLookupMap : EntityTypeConfiguration<ThirdPartyPlacementLookup>
    {
        public ThirdPartyPlacementLookupMap()
            : this("analytics")
        {
        }
 
        public ThirdPartyPlacementLookupMap(string schema)
        {
            ToTable(schema + ".ThirdPartyPlacementLookup");
            HasKey(x => new { x.PlacementId, x.ThirdPartyPlacementId });

            Property(x => x.PlacementId).HasColumnName("PlacementID").IsRequired().HasColumnType("int");
            Property(x => x.ThirdPartyPlacementId).HasColumnName("ThirdPartyPlacementID").IsRequired().HasColumnType("nvarchar").HasMaxLength(2000);
            InitializePartial();
        }
        partial void InitializePartial();
    }

    // VideoCreativeAnalyticsReportID
    internal partial class VideoCreativeAnalyticsReportIdMap : EntityTypeConfiguration<VideoCreativeAnalyticsReportId>
    {
        public VideoCreativeAnalyticsReportIdMap()
            : this("dbo")
        {
        }
 
        public VideoCreativeAnalyticsReportIdMap(string schema)
        {
            ToTable(schema + ".VideoCreativeAnalyticsReportID");
            HasKey(x => new { x.AdvertiserId, x.BuyerAccountId, x.AdvertiserProductId, x.CampaignId, x.AdGroupId, x.CampaignStatusName, x.PlacementId, x.PartnerId, x.UtcDate, x.UtcDateTime, x.LocalDate, x.LocalDateTime, x.Bids, x.Impressions, x.Clicks, x.UnfilteredClicks, x.Conversions, x.PostViewConversions, x.PostClickConversions, x.MediaCostLocalMicros, x.DataCostLocalMicros });

            Property(x => x.AdvertiserId).HasColumnName("AdvertiserID").IsRequired().HasColumnType("int");
            Property(x => x.AdvertiserName).HasColumnName("AdvertiserName").IsOptional().HasColumnType("nvarchar").HasMaxLength(4000);
            Property(x => x.BuyerAccountId).HasColumnName("BuyerAccountID").IsRequired().HasColumnType("int");
            Property(x => x.CompanyName).HasColumnName("CompanyName").IsOptional().HasColumnType("nvarchar").HasMaxLength(4000);
            Property(x => x.AdvertiserProductId).HasColumnName("AdvertiserProductID").IsRequired().HasColumnType("int");
            Property(x => x.ProductName).HasColumnName("ProductName").IsOptional().HasColumnType("nvarchar").HasMaxLength(4000);
            Property(x => x.CampaignId).HasColumnName("CampaignID").IsRequired().HasColumnType("int");
            Property(x => x.CampaignName).HasColumnName("CampaignName").IsOptional().HasColumnType("nvarchar").HasMaxLength(4000);
            Property(x => x.AdGroupId).HasColumnName("AdGroupID").IsRequired().HasColumnType("int");
            Property(x => x.CampaignStatusName).HasColumnName("CampaignStatusName").IsRequired().HasColumnType("nvarchar").HasMaxLength(50);
            Property(x => x.RtbAdGroupId).HasColumnName("RtbAdGroupID").IsOptional().IsUnicode(false).HasColumnType("varchar").HasMaxLength(24);
            Property(x => x.AdGroupName).HasColumnName("AdGroupName").IsOptional().HasColumnType("nvarchar").HasMaxLength(4000);
            Property(x => x.PlacementId).HasColumnName("PlacementID").IsRequired().HasColumnType("int");
            Property(x => x.PartnerId).HasColumnName("PartnerID").IsRequired().HasColumnType("int");
            Property(x => x.AdName).HasColumnName("AdName").IsOptional().HasColumnType("nvarchar").HasMaxLength(4000);
            Property(x => x.Height).HasColumnName("Height").IsOptional().HasColumnType("int");
            Property(x => x.Width).HasColumnName("Width").IsOptional().HasColumnType("int");
            Property(x => x.UtcDate).HasColumnName("UtcDate").IsRequired().HasColumnType("date");
            Property(x => x.UtcDateTime).HasColumnName("UtcDateTime").IsRequired().HasColumnType("datetime");
            Property(x => x.LocalDate).HasColumnName("LocalDate").IsRequired().HasColumnType("date");
            Property(x => x.LocalDateTime).HasColumnName("LocalDateTime").IsRequired().HasColumnType("datetime");
            Property(x => x.Bids).HasColumnName("Bids").IsRequired().HasColumnType("bigint");
            Property(x => x.Impressions).HasColumnName("Impressions").IsRequired().HasColumnType("bigint");
            Property(x => x.Clicks).HasColumnName("Clicks").IsRequired().HasColumnType("bigint");
            Property(x => x.UnfilteredClicks).HasColumnName("UnfilteredClicks").IsRequired().HasColumnType("bigint");
            Property(x => x.Conversions).HasColumnName("Conversions").IsRequired().HasColumnType("bigint");
            Property(x => x.PostViewConversions).HasColumnName("PostViewConversions").IsRequired().HasColumnType("bigint");
            Property(x => x.PostClickConversions).HasColumnName("PostClickConversions").IsRequired().HasColumnType("bigint");
            Property(x => x.SpendLocalMicros).HasColumnName("SpendLocalMicros").IsOptional().HasColumnType("bigint");
            Property(x => x.Spend).HasColumnName("Spend").IsOptional().HasColumnType("money").HasPrecision(19,4);
            Property(x => x.ClientCostLocalMicros).HasColumnName("ClientCostLocalMicros").IsOptional().HasColumnType("bigint");
            Property(x => x.ClientCostDollars).HasColumnName("ClientCostDollars").IsOptional().HasColumnType("money").HasPrecision(19,4);
            Property(x => x.MediaCostLocalMicros).HasColumnName("MediaCostLocalMicros").IsRequired().HasColumnType("bigint");
            Property(x => x.DataCostLocalMicros).HasColumnName("DataCostLocalMicros").IsRequired().HasColumnType("bigint");
            Property(x => x.MediaClientCostLocalMicros).HasColumnName("MediaClientCostLocalMicros").IsOptional().HasColumnType("bigint");
            Property(x => x.DataClientCostLocalMicros).HasColumnName("DataClientCostLocalMicros").IsOptional().HasColumnType("bigint");
            Property(x => x.AdSlotDurationInSeconds).HasColumnName("AdSlotDurationInSeconds").IsOptional().HasColumnType("bigint");
            Property(x => x.RawViews).HasColumnName("RawViews").IsOptional().HasColumnType("bigint");
            Property(x => x.IabViews).HasColumnName("IabViews").IsOptional().HasColumnType("bigint");
            Property(x => x.ViewDurationInSeconds).HasColumnName("ViewDurationInSeconds").IsOptional().HasColumnType("bigint");
            Property(x => x.Ctr).HasColumnName("CTR").IsOptional().HasColumnType("float");
            Property(x => x.Cpm).HasColumnName("CPM").IsOptional().HasColumnType("decimal").HasPrecision(38,14);
            Property(x => x.Cpc).HasColumnName("CPC").IsOptional().HasColumnType("decimal").HasPrecision(38,23);
            Property(x => x.Cpa).HasColumnName("CPA").IsOptional().HasColumnType("decimal").HasPrecision(38,23);
            Property(x => x.ClientCostCpm).HasColumnName("ClientCostCpm").IsOptional().HasColumnType("decimal").HasPrecision(38,14);
            Property(x => x.ClientCostCpc).HasColumnName("ClientCostCpc").IsOptional().HasColumnType("decimal").HasPrecision(38,23);
            Property(x => x.ClientCostCpa).HasColumnName("ClientCostCpa").IsOptional().HasColumnType("decimal").HasPrecision(38,23);
            Property(x => x.Cpms).HasColumnName("CPMs").IsOptional().HasColumnType("decimal").HasPrecision(38,14);
            Property(x => x.ClientCostCpms).HasColumnName("ClientCostCpms").IsOptional().HasColumnType("decimal").HasPrecision(38,14);
            Property(x => x.Cps).HasColumnName("CPS").IsOptional().HasColumnType("decimal").HasPrecision(38,14);
            Property(x => x.ClientCostCps).HasColumnName("ClientCostCps").IsOptional().HasColumnType("decimal").HasPrecision(38,14);
            Property(x => x.ViewableRatio).HasColumnName("ViewableRatio").IsOptional().HasColumnType("float");
            Property(x => x.AgencyReference).HasColumnName("AgencyReference").IsOptional().HasColumnType("nvarchar").HasMaxLength(50);
            Property(x => x.CreativeView).HasColumnName("CreativeView").IsOptional().HasColumnType("bigint");
            Property(x => x.Start).HasColumnName("Start").IsOptional().HasColumnType("bigint");
            Property(x => x.Midpoint).HasColumnName("Midpoint").IsOptional().HasColumnType("bigint");
            Property(x => x.FirstQuartile).HasColumnName("FirstQuartile").IsOptional().HasColumnType("bigint");
            Property(x => x.ThirdQuartile).HasColumnName("ThirdQuartile").IsOptional().HasColumnType("bigint");
            Property(x => x.Complete).HasColumnName("Complete").IsOptional().HasColumnType("bigint");
            Property(x => x.Mute).HasColumnName("Mute").IsOptional().HasColumnType("bigint");
            Property(x => x.Unmute).HasColumnName("Unmute").IsOptional().HasColumnType("bigint");
            Property(x => x.Pause).HasColumnName("Pause").IsOptional().HasColumnType("bigint");
            Property(x => x.Rewind).HasColumnName("Rewind").IsOptional().HasColumnType("bigint");
            Property(x => x.Resume).HasColumnName("Resume").IsOptional().HasColumnType("bigint");
            Property(x => x.Fullscreen).HasColumnName("Fullscreen").IsOptional().HasColumnType("bigint");
            Property(x => x.Expand).HasColumnName("Expand").IsOptional().HasColumnType("bigint");
            Property(x => x.Collapse).HasColumnName("Collapse").IsOptional().HasColumnType("bigint");
            Property(x => x.AcceptInvitation).HasColumnName("AcceptInvitation").IsOptional().HasColumnType("bigint");
            Property(x => x.Close).HasColumnName("Close").IsOptional().HasColumnType("bigint");
            InitializePartial();
        }
        partial void InitializePartial();
    }

    // WebsiteLookup
    internal partial class WebsiteLookupMap : EntityTypeConfiguration<WebsiteLookup>
    {
        public WebsiteLookupMap()
            : this("analytics")
        {
        }
 
        public WebsiteLookupMap(string schema)
        {
            ToTable(schema + ".WebsiteLookup");
            HasKey(x => x.Websiteid);

            Property(x => x.Websiteid).HasColumnName("websiteid").IsRequired().HasColumnType("bigint");
            Property(x => x.Websiteurl).HasColumnName("websiteurl").IsOptional().HasColumnType("nvarchar").HasMaxLength(4000);
            InitializePartial();
        }
        partial void InitializePartial();
    }

    // WeeklyLocationBids
    internal partial class WeeklyLocationBidMap : EntityTypeConfiguration<WeeklyLocationBid>
    {
        public WeeklyLocationBidMap()
            : this("analytics")
        {
        }
 
        public WeeklyLocationBidMap(string schema)
        {
            ToTable(schema + ".WeeklyLocationBids");
            HasKey(x => x.FullTextKeyId);

            Property(x => x.CountryId).HasColumnName("CountryID").IsOptional().HasColumnType("int");
            Property(x => x.WebsiteId).HasColumnName("WebsiteID").IsOptional().HasColumnType("int");
            Property(x => x.Bids).HasColumnName("Bids").IsOptional().HasColumnType("bigint");
            Property(x => x.WebsiteUrl).HasColumnName("WebsiteUrl").IsOptional().HasColumnType("nvarchar").HasMaxLength(450);
            Property(x => x.FullTextKeyId).HasColumnName("FullTextKeyID").IsRequired().HasColumnType("int").HasDatabaseGeneratedOption(DatabaseGeneratedOption.Identity);
            InitializePartial();
        }
        partial void InitializePartial();
    }

    // WeeklyLocationBidsAlternate
    internal partial class WeeklyLocationBidsAlternateMap : EntityTypeConfiguration<WeeklyLocationBidsAlternate>
    {
        public WeeklyLocationBidsAlternateMap()
            : this("analytics")
        {
        }
 
        public WeeklyLocationBidsAlternateMap(string schema)
        {
            ToTable(schema + ".WeeklyLocationBidsAlternate");
            HasKey(x => x.FullTextKeyId);

            Property(x => x.CountryId).HasColumnName("CountryID").IsOptional().HasColumnType("int");
            Property(x => x.WebsiteId).HasColumnName("WebsiteID").IsOptional().HasColumnType("int");
            Property(x => x.Bids).HasColumnName("Bids").IsOptional().HasColumnType("bigint");
            Property(x => x.WebsiteUrl).HasColumnName("WebsiteUrl").IsOptional().HasColumnType("nvarchar").HasMaxLength(450);
            Property(x => x.FullTextKeyId).HasColumnName("FullTextKeyID").IsRequired().HasColumnType("int").HasDatabaseGeneratedOption(DatabaseGeneratedOption.Identity);
            InitializePartial();
        }
        partial void InitializePartial();
    }

    // WhiteListForecast
    internal partial class WhiteListForecastMap : EntityTypeConfiguration<WhiteListForecast>
    {
        public WhiteListForecastMap()
            : this("analytics")
        {
        }
 
        public WhiteListForecastMap(string schema)
        {
            ToTable(schema + ".WhiteListForecast");
            HasKey(x => x.CustomWhiteListId);

            Property(x => x.CustomWhiteListId).HasColumnName("CustomWhiteListID").IsRequired().HasColumnType("int");
            Property(x => x.CountryId).HasColumnName("CountryID").IsOptional().HasColumnType("int");
            Property(x => x.TotalBids).HasColumnName("TotalBids").IsOptional().HasColumnType("bigint");
            InitializePartial();
        }
        partial void InitializePartial();
    }


    // ************************************************************************
    // Stored procedure return models

    public partial class GetAnalyticsDataSegmentsTotalReturnModel
    {
        public Int32? BuyerAccountID { get; set; }
        public Int32 SegmentID { get; set; }
        public String SegmentName { get; set; }
        public Int32 SegmentTypeID { get; set; }
        public Int32? RecencyInDays { get; set; }
        public String RtbSegmentID { get; set; }
        public DateTime? LastActivityTimestamp { get; set; }
        public Int32? DeliveredUniques { get; set; }
    }

    public partial class GetAnalyticsSummaryTopLevelReturnModel
    {
        public DateTime? LocalDateTime { get; set; }
        public Int64? DeliveredBids { get; set; }
        public Int64? DeliveredImpressions { get; set; }
        public Int64? DeliveredClicks { get; set; }
        public Int64? PostViewConversions { get; set; }
        public Int64? PostClickConversions { get; set; }
        public Int64? DeliveredConversions { get; set; }
        public Decimal? BudgetConsumed { get; set; }
    }

    public partial class GetAnalyticsSummaryTopLevelByAdvertiserReturnModel
    {
        public String CompanyName { get; set; }
        public String AdvertiserName { get; set; }
        public DateTime? LocalDateTime { get; set; }
        public Int64? DeliveredBids { get; set; }
        public Int64? DeliveredImpressions { get; set; }
        public Int64? DeliveredClicks { get; set; }
        public Int64? PostViewConversions { get; set; }
        public Int64? PostClickConversions { get; set; }
        public Int64? DeliveredConversions { get; set; }
        public Decimal? BudgetConsumed { get; set; }
    }

    public partial class GetConversionReportReturnModel
    {
        public DateTime LocalDate { get; set; }
        public Int32 BuyerAccountID { get; set; }
        public Int32 CampaignID { get; set; }
        public String CampaignName { get; set; }
        public Int32 AdGroupID { get; set; }
        public String AdGroupName { get; set; }
        public String RtbSegmentID { get; set; }
        public String SegmentName { get; set; }
        public Int32 ConversionQuantity { get; set; }
        public Int64 PostViewConversions { get; set; }
        public Int64 PostClickConversions { get; set; }
        public String ClientIp { get; set; }
        public String OrderID { get; set; }
        public Int64 RevenueUsdMicros { get; set; }
        public Decimal? RevenueLocalMicros { get; set; }
        public String RevenueCurrency { get; set; }
    }

    public partial class GetConversionReportReportIdReturnModel
    {
        public DateTime LocalDate { get; set; }
        public Int32 BuyerAccountID { get; set; }
        public Int32 CampaignID { get; set; }
        public String CampaignName { get; set; }
        public Int32 AdGroupID { get; set; }
        public String AdGroupName { get; set; }
        public String RtbSegmentID { get; set; }
        public String SegmentName { get; set; }
        public Int32 ConversionQuantity { get; set; }
        public Int64 PostViewConversions { get; set; }
        public Int64 PostClickConversions { get; set; }
        public String ClientIp { get; set; }
        public String OrderID { get; set; }
        public Int64 RevenueUsdMicros { get; set; }
        public Decimal? RevenueLocalMicros { get; set; }
        public String RevenueCurrency { get; set; }
    }

    public partial class GetLiveStrategiesReportReturnModel
    {
        public Int32 BuyerAccountID { get; set; }
        public String CompanyName { get; set; }
        public Int32 AdvertiserID { get; set; }
        public String AdvertiserName { get; set; }
        public Int32 CampaignID { get; set; }
        public String CampaignName { get; set; }
        public Decimal Margin { get; set; }
        public Int32 AdGroupID { get; set; }
        public String AdGroupName { get; set; }
        public DateTime? UtcStartDateTime { get; set; }
        public DateTime? UtcEndDateTime { get; set; }
        public Int64? Impressions { get; set; }
        public Int64? Clicks { get; set; }
        public Int64? Conversions { get; set; }
        public Decimal BudgetAmount { get; set; }
        public Int64? SpendLocalMicros { get; set; }
        public Int64? ClientcostLocalMicros { get; set; }
        public Int32? HoursRemaining { get; set; }
        public Int32? DaysRemaining { get; set; }
        public Int64? SpendTodayLocalMicros { get; set; }
        public Int64? ClientCostTodayLocalMicros { get; set; }
        public Int64? SpendYesterdayLocalMicros { get; set; }
        public Int64? ClientCostYesterdayLocalMicros { get; set; }
        public Int64? Spend2DaysAgoLocalMicros { get; set; }
        public Int64? ClientCost2DaysAgoLocalMicros { get; set; }
        public Int64? Spend3DaysAgoLocalMicros { get; set; }
        public Int64? ClientCost3DaysAgoLocalMicros { get; set; }
        public Int64? Spend4DaysAgoLocalMicros { get; set; }
        public Int64? ClientCost4DaysAgoLocalMicros { get; set; }
        public Int64? Spend5DaysAgoLocalMicros { get; set; }
        public Int64? ClientCost5DaysAgoLocalMicros { get; set; }
        public Int64? AdSlotDurationInSeconds { get; set; }
        public Int64? RawViews { get; set; }
        public Int64? IabViews { get; set; }
        public Int64? ViewDurationInSeconds { get; set; }
    }

    public partial class GetPrivateMarketsPublishersTotalReturnModel
    {
        public Int32 BuyerAccountID { get; set; }
        public Int32 PublisherID { get; set; }
        public String PublisherName { get; set; }
        public Decimal? SpendCurrentMonth { get; set; }
        public Decimal? Spend1MonthAgo { get; set; }
        public Decimal? Spend2MonthsAgo { get; set; }
        public Decimal? Spend3MonthsAgo { get; set; }
        public Decimal? SpendCurrentYear { get; set; }
        public Decimal? Spend1YearAgo { get; set; }
        public Decimal? SpendOverall { get; set; }
    }

    public partial class PromoteAdGroupWebsiteReturnModel
    {
        public DateTime? UtcNow { get; set; }
        public DateTime? MinAge { get; set; }
        public Int64? RowsPromoted { get; set; }
    }

    public partial class RefreshDateIndexesReturnModel
    {
        public Int32? DayMode { get; set; }
        public DateTime? UtcNowDay { get; set; }
        public DateTime? UtcLookbackDay { get; set; }
        public String DropStatement { get; set; }
        public String CreateStatement { get; set; }
    }

    public partial class RefreshSystemSpendLimitReturnModel
    {
        public Int32 CurrentHour { get; set; }
        public Int64 MaxSpendLimitUsdMicros { get; set; }
        public Int64 MinSpendLimitUsdMicros { get; set; }
    }

    public partial class RollAdAnalyticsReportsHourlyToDailyReportIdReturnModel
    {
        public Int32? Column1 { get; set; }
    }

    public partial class RollAdAnalyticsReportsReportIdReturnModel
    {
        public Int32? Column1 { get; set; }
    }

    public partial class RollAdDirectBuyReportsReportIdReturnModel
    {
        public Int32? Column1 { get; set; }
    }

    public partial class RollAdGroupAnalyticsReportsHourlyToDailyReportIdReturnModel
    {
        public Int32? Column1 { get; set; }
    }

    public partial class RollAdGroupAnalyticsReportsReportIdReturnModel
    {
        public Int32? Column1 { get; set; }
    }

    public partial class RollAdGroupDealReportsHourlyToDailyReportIdReturnModel
    {
        public Int32? Column1 { get; set; }
    }

    public partial class RollAdGroupDealReportsReportIdReturnModel
    {
        public Int32? Column1 { get; set; }
    }

    public partial class RollAdGroupVideoActivityReportsReportIdReturnModel
    {
        public Int32? Column1 { get; set; }
    }

    public partial class RollConversionReportsReportIdReturnModel
    {
        public Int32? Column1 { get; set; }
    }

    public partial class RollDirectBuyDefaultImpressionReportsReportIdReturnModel
    {
        public Int32? Column1 { get; set; }
    }

    public partial class RollInventoryLookupReturnModel
    {
        public Int32? Column1 { get; set; }
    }

    public partial class RollReconciliationAnalyticsReportsReturnModel
    {
        public Int32? Column1 { get; set; }
    }

    public partial class RollSegmentAnalyticsReportsReportIdReturnModel
    {
        public Int32? Column1 { get; set; }
    }

    public partial class RunBillingReturnModel
    {
        public Int32 BuyerAccountID { get; set; }
        public Int32? CampaignID { get; set; }
        public Decimal MediaCostLocalMicros { get; set; }
        public Decimal DataCostLocalMicros { get; set; }
        public Int64? Impressions { get; set; }
    }

    public partial class SafetyCheckHourlyIntegrityCheckReturnModel
    {
        public DateTime? UtcDateTime { get; set; }
        public Int32? MaxEdition { get; set; }
        public Int32? TableCount { get; set; }
        public Int64? Bids { get; set; }
        public Int64? Impressions { get; set; }
        public Int64? Clicks { get; set; }
        public Int64? Conversions { get; set; }
        public Int64? PostViewConversions { get; set; }
        public Int64? PostClickConversions { get; set; }
        public Int64? MediaCostUsdMicros { get; set; }
        public Int64? MediaCostLocalMicros { get; set; }
        public Int64? DataCostLocalMicros { get; set; }
        public Int64? FeesUsdSuperMicros { get; set; }
        public Int64? FeesLocalSuperMicros { get; set; }
        public Int64? AdSlotDurationInSeconds { get; set; }
        public Int64? RawViews { get; set; }
        public Int64? IabViews { get; set; }
        public Int64? ViewDurationInSeconds { get; set; }
        public Boolean? BidsMatch { get; set; }
        public Boolean? ImpressionsMatch { get; set; }
        public Boolean? ClicksMatch { get; set; }
        public Boolean? ConversionsMatch { get; set; }
        public Boolean? PostViewConversionsMatch { get; set; }
        public Boolean? PostClickConversionsMatch { get; set; }
        public Boolean? MediaCostUsdMicrosMatch { get; set; }
        public Boolean? MediaCostLocalMicrosMatch { get; set; }
        public Boolean? DataCostLocalMicrosMatch { get; set; }
        public Boolean? FeesUsdSuperMicrosMatch { get; set; }
        public Boolean? FeesLocalSuperMicrosMatch { get; set; }
        public Boolean? AdSlotDurationInSecondsMatch { get; set; }
        public Boolean? RawViewsMatch { get; set; }
        public Boolean? IabViewsMatch { get; set; }
        public Boolean? ViewDurationInSecondsMatch { get; set; }
    }

    public partial class SafetyCheckReportIdDailyDealIntegrityCheckReturnModel
    {
        public DateTime? UtcDate { get; set; }
        public Int32? TotalHours { get; set; }
        public Int64? Bids { get; set; }
        public Int64? Impressions { get; set; }
        public Int64? Clicks { get; set; }
        public Int64? Conversions { get; set; }
        public Int64? PostViewConversions { get; set; }
        public Int64? PostClickConversions { get; set; }
        public Int64? MediaCostUsdMicros { get; set; }
        public Int64? MediaCostLocalMicros { get; set; }
        public Int64? DataCostLocalMicros { get; set; }
        public Int64? FeesUsdSuperMicros { get; set; }
        public Int64? FeesLocalSuperMicros { get; set; }
        public Int64? AdSlotDurationInSeconds { get; set; }
        public Int64? RawViews { get; set; }
        public Int64? IabViews { get; set; }
        public Int64? ViewDurationInSeconds { get; set; }
        public Boolean? TotalHoursMatch { get; set; }
        public Boolean? BidsMatch { get; set; }
        public Boolean? ImpressionsMatch { get; set; }
        public Boolean? ClicksMatch { get; set; }
        public Boolean? ConversionsMatch { get; set; }
        public Boolean? PostViewConversionsMatch { get; set; }
        public Boolean? PostClickConversionsMatch { get; set; }
        public Boolean? MediaCostUsdMicrosMatch { get; set; }
        public Boolean? MediaCostLocalMicrosMatch { get; set; }
        public Boolean? DataCostLocalMicrosMatch { get; set; }
        public Boolean? FeesUsdSuperMicrosMatch { get; set; }
        public Boolean? FeesLocalSuperMicrosMatch { get; set; }
        public Boolean? AdSlotDurationInSecondsMatch { get; set; }
        public Boolean? RawViewsMatch { get; set; }
        public Boolean? IabViewsMatch { get; set; }
        public Boolean? ViewDurationInSecondsMatch { get; set; }
    }

    public partial class SafetyCheckReportIdDailyIntegrityCheckReturnModel
    {
        public DateTime? UtcDate { get; set; }
        public Int32? TotalHours { get; set; }
        public Int64? Bids { get; set; }
        public Int64? Impressions { get; set; }
        public Int64? Clicks { get; set; }
        public Int64? Conversions { get; set; }
        public Int64? PostViewConversions { get; set; }
        public Int64? PostClickConversions { get; set; }
        public Int64? MediaCostUsdMicros { get; set; }
        public Int64? MediaCostLocalMicros { get; set; }
        public Int64? DataCostLocalMicros { get; set; }
        public Int64? FeesUsdSuperMicros { get; set; }
        public Int64? FeesLocalSuperMicros { get; set; }
        public Int64? AdSlotDurationInSeconds { get; set; }
        public Int64? RawViews { get; set; }
        public Int64? IabViews { get; set; }
        public Int64? ViewDurationInSeconds { get; set; }
        public Boolean? TotalHoursMatch { get; set; }
        public Boolean? BidsMatch { get; set; }
        public Boolean? ImpressionsMatch { get; set; }
        public Boolean? ClicksMatch { get; set; }
        public Boolean? ConversionsMatch { get; set; }
        public Boolean? PostViewConversionsMatch { get; set; }
        public Boolean? PostClickConversionsMatch { get; set; }
        public Boolean? MediaCostUsdMicrosMatch { get; set; }
        public Boolean? MediaCostLocalMicrosMatch { get; set; }
        public Boolean? DataCostLocalMicrosMatch { get; set; }
        public Boolean? FeesUsdSuperMicrosMatch { get; set; }
        public Boolean? FeesLocalSuperMicrosMatch { get; set; }
        public Boolean? AdSlotDurationInSecondsMatch { get; set; }
        public Boolean? RawViewsMatch { get; set; }
        public Boolean? IabViewsMatch { get; set; }
        public Boolean? ViewDurationInSecondsMatch { get; set; }
    }

    public partial class SafetyCheckReportIdDirectBuyHourlyIntegrityCheckReturnModel
    {
        public DateTime? UtcDateTime { get; set; }
        public Int32? MaxEdition { get; set; }
        public Int32? TableCount { get; set; }
        public Int64? Bids { get; set; }
        public Int64? Impressions { get; set; }
        public Int64? Clicks { get; set; }
        public Int64? Conversions { get; set; }
        public Int64? PostViewConversions { get; set; }
        public Int64? PostClickConversions { get; set; }
        public Int64? MediaCostUsdMicros { get; set; }
        public Int64? MediaCostLocalMicros { get; set; }
        public Int64? DataCostLocalMicros { get; set; }
        public Int64? FeesUsdSuperMicros { get; set; }
        public Int64? FeesLocalSuperMicros { get; set; }
        public Int64? AdSlotDurationInSeconds { get; set; }
        public Int64? RawViews { get; set; }
        public Int64? IabViews { get; set; }
        public Int64? ViewDurationInSeconds { get; set; }
        public Boolean? BidsMatch { get; set; }
        public Boolean? ImpressionsMatch { get; set; }
        public Boolean? ClicksMatch { get; set; }
        public Boolean? ConversionsMatch { get; set; }
        public Boolean? PostViewConversionsMatch { get; set; }
        public Boolean? PostClickConversionsMatch { get; set; }
        public Boolean? MediaCostUsdMicrosMatch { get; set; }
        public Boolean? MediaCostLocalMicrosMatch { get; set; }
        public Boolean? DataCostLocalMicrosMatch { get; set; }
        public Boolean? FeesUsdSuperMicrosMatch { get; set; }
        public Boolean? FeesLocalSuperMicrosMatch { get; set; }
        public Boolean? AdSlotDurationInSecondsMatch { get; set; }
        public Boolean? RawViewsMatch { get; set; }
        public Boolean? IabViewsMatch { get; set; }
        public Boolean? ViewDurationInSecondsMatch { get; set; }
    }

    public partial class SafetyCheckReportIdDomainDailyIntegrityCheckReturnModel
    {
        public DateTime? UtcDate { get; set; }
        public Int32? TableCount { get; set; }
        public Int32? TotalHours { get; set; }
        public Int64? Bids { get; set; }
        public Int64? Impressions { get; set; }
        public Int64? Clicks { get; set; }
        public Int64? Conversions { get; set; }
        public Int64? PostViewConversions { get; set; }
        public Int64? PostClickConversions { get; set; }
        public Int64? MediaCostUsdMicros { get; set; }
        public Int64? MediaCostLocalMicros { get; set; }
        public Int64? DataCostLocalMicros { get; set; }
        public Int64? FeesUsdSuperMicros { get; set; }
        public Int64? FeesLocalSuperMicros { get; set; }
        public Int64? AdSlotDurationInSeconds { get; set; }
        public Int64? RawViews { get; set; }
        public Int64? IabViews { get; set; }
        public Int64? ViewDurationInSeconds { get; set; }
        public Boolean? TotalHoursMatch { get; set; }
        public Boolean? BidsMatch { get; set; }
        public Boolean? ImpressionsMatch { get; set; }
        public Boolean? ClicksMatch { get; set; }
        public Boolean? ConversionsMatch { get; set; }
        public Boolean? PostViewConversionsMatch { get; set; }
        public Boolean? PostClickConversionsMatch { get; set; }
        public Boolean? MediaCostUsdMicrosMatch { get; set; }
        public Boolean? MediaCostLocalMicrosMatch { get; set; }
        public Boolean? DataCostLocalMicrosMatch { get; set; }
        public Boolean? FeesUsdSuperMicrosMatch { get; set; }
        public Boolean? FeesLocalSuperMicrosMatch { get; set; }
        public Boolean? AdSlotDurationInSecondsMatch { get; set; }
        public Boolean? RawViewsMatch { get; set; }
        public Boolean? IabViewsMatch { get; set; }
        public Boolean? ViewDurationInSecondsMatch { get; set; }
    }

    public partial class SafetyCheckReportIdHourlyDirectBuyIntegrityCheckReturnModel
    {
        public DateTime? UtcDateTime { get; set; }
        public Int32? MaxEdition { get; set; }
        public Int32? TableCount { get; set; }
        public Int64? Bids { get; set; }
        public Int64? Impressions { get; set; }
        public Int64? Clicks { get; set; }
        public Int64? Conversions { get; set; }
        public Int64? PostViewConversions { get; set; }
        public Int64? PostClickConversions { get; set; }
        public Int64? MediaCostUsdMicros { get; set; }
        public Int64? MediaCostLocalMicros { get; set; }
        public Int64? DataCostLocalMicros { get; set; }
        public Int64? FeesUsdSuperMicros { get; set; }
        public Int64? FeesLocalSuperMicros { get; set; }
        public Int64? AdSlotDurationInSeconds { get; set; }
        public Int64? RawViews { get; set; }
        public Int64? IabViews { get; set; }
        public Int64? ViewDurationInSeconds { get; set; }
        public Boolean? BidsMatch { get; set; }
        public Boolean? ImpressionsMatch { get; set; }
        public Boolean? ClicksMatch { get; set; }
        public Boolean? ConversionsMatch { get; set; }
        public Boolean? PostViewConversionsMatch { get; set; }
        public Boolean? PostClickConversionsMatch { get; set; }
        public Boolean? MediaCostUsdMicrosMatch { get; set; }
        public Boolean? MediaCostLocalMicrosMatch { get; set; }
        public Boolean? DataCostLocalMicrosMatch { get; set; }
        public Boolean? FeesUsdSuperMicrosMatch { get; set; }
        public Boolean? FeesLocalSuperMicrosMatch { get; set; }
        public Boolean? AdSlotDurationInSecondsMatch { get; set; }
        public Boolean? RawViewsMatch { get; set; }
        public Boolean? IabViewsMatch { get; set; }
        public Boolean? ViewDurationInSecondsMatch { get; set; }
    }

    public partial class SafetyCheckReportIdHourlyIntegrityCheckReturnModel
    {
        public DateTime? UtcDateTime { get; set; }
        public Int32? MaxEdition { get; set; }
        public Int32? TableCount { get; set; }
        public Int64? Bids { get; set; }
        public Int64? Impressions { get; set; }
        public Int64? Clicks { get; set; }
        public Int64? Conversions { get; set; }
        public Int64? PostViewConversions { get; set; }
        public Int64? PostClickConversions { get; set; }
        public Int64? MediaCostUsdMicros { get; set; }
        public Int64? MediaCostLocalMicros { get; set; }
        public Int64? DataCostLocalMicros { get; set; }
        public Int64? FeesUsdSuperMicros { get; set; }
        public Int64? FeesLocalSuperMicros { get; set; }
        public Int64? AdSlotDurationInSeconds { get; set; }
        public Int64? RawViews { get; set; }
        public Int64? IabViews { get; set; }
        public Int64? ViewDurationInSeconds { get; set; }
        public Boolean? BidsMatch { get; set; }
        public Boolean? ImpressionsMatch { get; set; }
        public Boolean? ClicksMatch { get; set; }
        public Boolean? ConversionsMatch { get; set; }
        public Boolean? PostViewConversionsMatch { get; set; }
        public Boolean? PostClickConversionsMatch { get; set; }
        public Boolean? MediaCostUsdMicrosMatch { get; set; }
        public Boolean? MediaCostLocalMicrosMatch { get; set; }
        public Boolean? DataCostLocalMicrosMatch { get; set; }
        public Boolean? FeesUsdSuperMicrosMatch { get; set; }
        public Boolean? FeesLocalSuperMicrosMatch { get; set; }
        public Boolean? AdSlotDurationInSecondsMatch { get; set; }
        public Boolean? RawViewsMatch { get; set; }
        public Boolean? IabViewsMatch { get; set; }
        public Boolean? ViewDurationInSecondsMatch { get; set; }
    }

    public partial class SafetyCheckReportIdIntegrityCheckReturnModel
    {
        public Int64 ReportID { get; set; }
        public Int32? MaxEdition { get; set; }
        public Int32? TableCount { get; set; }
        public Int64? Bids { get; set; }
        public Int64? Impressions { get; set; }
        public Int64? Clicks { get; set; }
        public Int64? Conversions { get; set; }
        public Int64? PostViewConversions { get; set; }
        public Int64? PostClickConversions { get; set; }
        public Int64? MediaCostUsdMicros { get; set; }
        public Int64? MediaCostLocalMicros { get; set; }
        public Int64? DataCostLocalMicros { get; set; }
        public Int64? FeesUsdSuperMicros { get; set; }
        public Int64? FeesLocalSuperMicros { get; set; }
        public Int64? AdSlotDurationInSeconds { get; set; }
        public Int64? RawViews { get; set; }
        public Int64? IabViews { get; set; }
        public Int64? ViewDurationInSeconds { get; set; }
        public Boolean? BidsMatch { get; set; }
        public Boolean? ImpressionsMatch { get; set; }
        public Boolean? ClicksMatch { get; set; }
        public Boolean? ConversionsMatch { get; set; }
        public Boolean? PostViewConversionsMatch { get; set; }
        public Boolean? PostClickConversionsMatch { get; set; }
        public Boolean? MediaCostUsdMicrosMatch { get; set; }
        public Boolean? MediaCostLocalMicrosMatch { get; set; }
        public Boolean? DataCostLocalMicrosMatch { get; set; }
        public Boolean? FeesUsdSuperMicrosMatch { get; set; }
        public Boolean? FeesLocalSuperMicrosMatch { get; set; }
        public Boolean? AdSlotDurationInSecondsMatch { get; set; }
        public Boolean? RawViewsMatch { get; set; }
        public Boolean? IabViewsMatch { get; set; }
        public Boolean? ViewDurationInSecondsMatch { get; set; }
    }

    public partial class CheckImpressionAndSpendRatioForDealsReturnModel
    {
        public DateTime? RefDateTime { get; set; }
        public Int64? ImpressionsBefore { get; set; }
        public Int64? ImpressionsAfter { get; set; }
        public Int64? SpendLocalMicrosBefore { get; set; }
        public Int64? SpendLocalMicrosAfter { get; set; }
        public Decimal? ImpressionsRatio { get; set; }
        public Decimal? SpendLocalMicrosRatio { get; set; }
    }

}

